{"version":3,"sources":["components/Header.js","cbn.png","components/Menu.js","components/Footer.js","components/Dashboard.js","services/auth.service.js","components/Login.js","components/Landing.js","components/ViewSurvey.js","components/FormContext.js","components/FormElements/TextInput.js","components/FormElements/SelectOption.js","components/FormElement.js","components/FormElementCategory.js","components/CheckSurveyTypeResponse.js","components/SurveyAttachment.js","components/CompleteSurvey.js","components/CreateNewUser.js","components/AddField.js","components/EditTemplate.js","components/Surveys.js","components/AvailableSurvey.js","components/Demobar.js","components/variables.js","components/CategoryView.js","components/ListResponses.js","components/ResponseTable.js","components/UserProfile.js","components/ResponseByUser.js","components/Deploy.js","components/ReviewRespondent.js","components/ListToApprove.js","components/ApproveTemplate.js","components/ApproveResponse.js","components/ValidateResponse.js","components/RespondentList.js","components/ApproveSurvey.js","components/TemplateToApprove.js","components/ApprovedSurvey.js","components/ApprovedTemplate.js","components/RejectedTemplate.js","components/RejectedSurvey.js","components/RespondentInfo.js","components/Notifications.js","components/SurveyToDeploy.js","components/DeploySurvey.js","components/SurveyRejected.js","components/SurveyApproved.js","components/TemplateApproved.js","components/TemplateRejected.js","components/ApproveThisTemplate.js","components/ApproveThisSurvey.js","components/ViewNotification.js","components/UploadSupporting.js","components/ReviewResponder.js","components/ApproveResponder.js","components/SearchRecurrent.js","components/RecurrentCapitalExpenditure.js","components/COFOGreport.js","components/SearchCOFOG.js","components/SearchSSGFF.js","components/SSGFFreport.js","components/SearchPensiondeduction.js","components/PensiondeductionReport.js","components/LGEONSPWReport.js","components/SearchLGEONSPW.js","components/Allsurveys.js","components/FormElements/InputRes.js","components/FormElements/InputResAccounting.js","components/FormElementRes.js","components/FormElementCatRes.js","components/ResponseEdit.js","components/PensionSurvey.js","components/PensiondeductionSurveyList.js","components/CompletePensiondeduction.js","components/PensionPending.js","components/ApprovedPension.js","components/RejectedPension.js","components/ApprovePensionSurvey.js","components/ListToApprovePension.js","components/SurveyToUpdate.js","components/PendingResponsesResponder.js","components/Content.js","app.js","serviceWorker.js","index.js"],"names":["Header","props","routeChange","setState","navigate","window","location","bind","logOut","state","message","token","JSON","parse","localStorage","getItem","axios","get","headers","then","res","data","setItem","stringify","notification","length","clear","className","data-widget","to","role","this","data-slide","onClick","Component","Menu","Group1_Branch","Group2","Respondent","Approver","Data_Management_team","current_User","undefined","BranchDataChecker","HqDataChecker","FinalDataChecker","BsOfficer","HqDataChecker2","SuperAdmin","NewUser","myloading","user","profile","user_groups","includes","ApprovedSurveys","approved_surveys","RejectedSurveys","rejected_surveys","ApprovedTemplate","approved_template_surveys","Pendingdeployement","pending_deployed_surveys","PendingApprovalSurvey","pending_approval_surveys","PendingApprovalTemplate","pending_template_approval_surveys","RejectedTemplate","rejected_template_surveys","Group2RejectedSurveys","approver_rejected_surveys","Group2Approved","approver_approved_surveys","Group2ApprovedTemplate","approver_approved_template_surveys","Group2PendingApprovalTemplate","approver_pending_template_approval_surveys","Group2RejectedTemplate","approver_rejected_template_surveys","Group2PendingDeployedSurvey","approver_pending_deployed_surveys","Group2PendingSurvey","approver_pending_surveys","ResponderApprovedResponses","approved_responses","ResponderPendingApprovedResponses","pending_approval_responses","ResponderRejectedResponses","rejected_responses","ResponderAvailableSurveys","available_surveys","ResponderUnapprovedResponses","un_approved_responses","warningLoad","Check","user_type","lga","AvailableSurvey","src","Logo","height","alt","data-accordion","class","Footer","Dashboard","useEffect","username","password","post","response","first_name","last_name","email","phone_number","group_pk","designation_pk","formData","FormData","append","title","description","status","start_date","due_date","category","origin","pk","required","value","Login","handleLogin","onChangeUsername","onChangePassword","loading","ViewTemplateloading","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","AuthService","login","error","resMessage","non_field_errors","toString","onSubmit","ref","c","type","name","placeholder","onChange","validations","disabled","style","display","Landing","script","document","createElement","script1","script2","script3","script4","script5","script7","script0","async","body","appendChild","href","rel","color-on-scroll","id","data-toggle","aria-expanded","aria-label","data-parallax","backgroundImage","ViewSurvey","SurveyList","EditTemplate","authService","getCurrentUser","Temple_pk","Spinner","animation","variant","map","surveys","i","created_by","created","width","FormContext","createContext","TextInput","input_type","field_value","handleChange","useContext","onKeyDown","evt","key","step","min","event","SelectOption","FormElement","field","FormElementCategory","field_category","CheckSurveyTypeResponse","onChangeState","onChangeLga","statee","statesGov","lgasGov","othersGov","TargetResponse","TargetUser","check","survey_type","console","log","removeItem","state_pk","lga_pk","List_Of_States","List_Of_lgas","SurveyAttachment","handleFileTitleChangeSmart","Filetitle","handleInfoChangeSmart","FileInfo","checkMimeType","files","err","types","x","every","z","toast","maxSelectFile","warn","checkFileSize","size","onChangeHandler","selectedFile","loaded","onClickHandler","uploadPercentage","uploadFilePercentage","file","loadingFile","Formdata","survey_response_pk","onUploadProgress","ProgressEvent","total","success","catch","AdoptSurveyloading","Progress","max","color","Math","round","CompleteSurvey","useRef","useState","Get_Survey_Details","Set_Survey_Details","successful","setSuccessful","setMessage","setLoading","singleSurveyPks","Surveydetails","Call_Survey_Details","checkUser","Provider","newElements","arr","n","push","j","fields","h","sub_categories","SubCategory","minHeight","current","SurveydetailsPk","to_Send","I_to_Send","Object","values","checkUserpk","Responsebody","survey_pk","detail","survey_title","toUpperCase","quarter","year","state_title","lga_title","myfield","economic_code","heading","subCategory","get_next_survey","singleSurveyPk","backgroundColor","CreateNewUser","handleRegister","onChangeFirstName","onChangeLastName","onChangeLG","onChangeEmail","onChangePhoneNumber","onChangeDesignation","onChangeuser_type","states","Lgaloading","params","List_Of_State","BranchList","DesignationList","GroupList","prevProps","prevState","statepk","Lgas","createNewUser","Designation","List_Of_Lga","AddField","forwardRef","inputList","setInputList","handleInputChange","index","list","handleAddClick","useImperativeHandle","handleSave","ExtractTemplatePk","fullTemplate","fieldsList","MyCategoryName","result","find","modifiedObj","filter","item","fieldsObj","concat","last_element","final","my_category","survey_template_pk","splice","handleRemoveClick","selectSurvey","setSelectSurvey","childRef","SingleTemplate","SingleTemplateCategories","TemplateTitle","Templatefields","fontStyle","SubCategoryfields","survey","Surveys","data-card-widget","get_response_count","aria-valuenow","aria-valuemin","aria-valuemax","progress","loadingModal","borderRadius","textAlign","border","padding","as","aria-hidden","Fill_Survey","Demobar","_onSubmit","AdoptSurveymessage","AdoptSurveysuccessful","ExtractTemplate","twist_result","onChangeSurvey","previewVisible","shortPreviewVisible","roPreviewVisible","update","_onChange","ElementStore","subscribe","ApprovedSurveyToUser","modalClass","shortModalClass","roModalClass","margin","marginRight","showPreview","download_path","back_action","back_name","answer_data","action_name","form_action","form_method","variables","data-dismiss","closePreview","read_only","hide_actions","display_short","React","JOHN","CategoryView","handleSubmit","meloading","response_data","get_form","singleCategory","ListResponses","handlePageClick","selectedPage","selected","offset","perPage","currentPage","loadMoreData","tableData","orgtableData","slice","pageCount","ceil","Get_State_Data","tdata","tableDataForState","aria-describedby","tabIndex","aria-controls","rowSpan","colSpan","filled_by","get_entries","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","ResponseTable","Response","economic","fontWeight","number","field_total_sum","table","filename","sheet","buttonText","UserProfile","onChangeAddress","onChangeDob","address","dob","htmlFor","defaultValue","ResponseByUser","scriptdashboard","lookup","text","Deploy","dataValue","onChangeTitle","onChangeQuarter","onChangeStatus","onChangeSurveyType","onChangeStartDate","onChangeDueDate","onChangeYear","onChangeLgas","AdoptSurvey","onChangehalfyear","lgas","halfyear","jasus_for_state","jasus_for_lga","sweetalert2","StatesList","options","o","format","checkboxes","sync","onNotAllChecked","selectedMap","orderedByI","onAllChecked","onAllUnchecked","get_lgas","ReviewRespondent","ListToApprove","onChangeApprove","onChangeRemark","ApproveThisSurvey","approve","remark","surveyId","ApproveSurvey","ApproveTemplate","handleApprove","onChangestatus","get_states","ValidateResponses","EditResponse","template_title","approved_template_timestamp","RespondentList","Users","users","userId","ReviewResponder","date_joined","designation_title","branch_name","ApproveResponder","SurveyInfo","TemplateToApprove","Templates","ApprovedSurvey","rejection_remark","RejectedSurvey","UpdateSurvey","handleUpdate","Get_LGA_Data","ApprovSurveyInfo","match","Number","rejected","states_pk","lgas_pk","RespondentInfo","Notifications","true","mymessage","notifyId","Read","patch","ViewNotification","subject","SurveyToDeploy","DeploySurvey","DeploySingleSurvey","DeploySingleSurveyCategories","SurveyRejected","SurveyApproved","TemplateApproved","TemplateRejected","ApproveThisTemplate","ApproveNotifications","MyNotification","MyNotificationdear","whiteSpace","UploadSupporting","handleActivate","onChangeActive","active","ReviewResponderInfo","link","fullname","staff_number","get_registration_documents","download","info","onChangeUser_pk","onChangeGroup_pk","user_pk","SearchRecurrent","handleGenerate","RecurrentCapitalExpenditure","hyq1","hyq2","q1","q2","q3","q4","COFOGreport","hyq1_capital","hyq1_recurrent","hyq1_total","hyq2_capital","hyq2_recurrent","hyq2_total","q1_capital","q1_recurrent","q1_total","q2_capital","q2_recurrent","q2_total","q3_capital","q3_recurrent","q3_total","q4_capital","q4_recurrent","q4_total","annual","SearchCOFOG","SearchSSGFF","SSGFFreport","SSGFFreportTitle","create","baseURL","Sno","grand_total","SearchPensiondeduction","onChangeSurvey_type","PensiondeductionReport","Survey_type","LGEONSPWReport","capital","recurrent","SearchLGEONSPW","Allsurveys","InputRes","replace","InputResAccounting","FormElementRes","FormElementCatRes","field_cat","ResponseEdit","ResponseEDit","ResponseEDitPk","LGA","responseForm","response_pk","filled_by_phone","supporting_documents","PensionSurvey","onChangecategory","PensiondeductionSurveyList","PensiondeductionResponse","CompletePensiondeduction","Get_Survey_Details_Pension","Set_Survey_Details_pension","setTitle","myValue","LGA_ID","PensionPending","ApprovedPension","RejectedPension","get_latest_history","data-target","aria-modal","ApprovePensionSurvey","PensionSurveyInfo","ListToApprovePension","SurveyToUpdate","SurveyToUpdateInfo","PendingResponsesResponder","Content","exact","path","component","ApproveResponse","ValidateResponse","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.966c8a9b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {   Link, Switch } from \"react-router-dom\";\r\n// import authService from '../services/auth.service';\r\nimport axios from 'axios'\r\n\r\nclass Header extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.routeChange = this.routeChange.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n\r\n  this.state = {\r\n      message: []\r\n  };\r\n  }\r\n  // state = {\r\n  //   navigate: false\r\n  // };\r\n  componentDidMount() {\r\n\r\n\r\n    const user = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n    const token = user.token;\r\n    //call the States and LGAS at the first \r\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/?read=no',\r\n      {\r\n        headers:\r\n        {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Token ${token}`,\r\n        },\r\n\r\n      },\r\n    )\r\n      .then(res => {\r\n        if (res.data) {\r\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\r\n        }\r\n        this.setState({\r\n          notification: res.data.length,\r\n          message: res.data\r\n        });\r\n        // console.log(res.data)                  \r\n\r\n      })\r\n\r\n      \r\n  }\r\n  logOut() {\r\n   localStorage.clear();\r\n    window.location = \"/\"\r\n    //  (<Redirect to=\"/login\" />)\r\n  }\r\n  routeChange = () => {\r\n    this.setState({ navigate: true });\r\n    window.location = \"/dashboard\"\r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    // const { navigate } = this.state;\r\n\r\n    return (\r\n\r\n      <Switch>\r\n        {/* {currentUser && ( */}\r\n\r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n          {/* Left navbar links */}\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-widget=\"pushmenu\" to=\"#\" role=\"button\"><i className=\"fas fa-bars\" /></Link>\r\n            </li>\r\n            {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n      <a href=\"../../index3.html\" className=\"nav-link\">Home</a>\r\n    </li> */}\r\n            {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n      <a href=\"#\" className=\"nav-link\">Menu</a>\r\n    </li> */}\r\n          </ul>\r\n          {/* Right navbar links */}\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {/* Navbar Search */}\r\n\r\n            {/* Messages Dropdown Menu */}\r\n            <li className=\"nav-item\">\r\n              <Link  to=\"/Notifications\" className=\"nav-link\"  >\r\n                <i className=\"fas fa-bell\" />\r\n                <span className=\"badge badge-danger navbar-badge\">{this.state.notification}</span>\r\n              </Link>\r\n             \r\n            </li>\r\n\r\n\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-widget=\"fullscreen\" to=\"#\" role=\"button\">\r\n                <i className=\"fas fa-expand-arrows-alt\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-slide=\"true\" data-widget=\"control-sidebar\" onClick={this.logOut}  >\r\n                <span>Sign Out</span> &nbsp;\r\n        <i className=\"fas fa-user-alt\" />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n      </Switch>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/cbn.ec9a327b.png\";","import React, { Component } from 'react'\r\nimport { Link, Switch } from 'react-router-dom';\r\nimport Logo from '../cbn.png'\r\n// import authService from '../services/auth.service';\r\nimport axios from 'axios'\r\n\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n            Group1_Branch: false,\r\n            Group2: false,\r\n            Respondent: false,\r\n            Approver: false,\r\n            Data_Management_team:false,\r\n            current_User: undefined,\r\n            BranchDataChecker:false,\r\n            HqDataChecker:false,\r\n             FinalDataChecker:false,\r\n             BsOfficer:false,\r\n             HqDataChecker2:false,\r\n             SuperAdmin:false,\r\n            NewUser:false,\r\n            myloading: true,\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        \r\n\r\n        const user = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n        const token = user.token\r\n\r\n      \r\n        //check User Group\r\n        if (user) {\r\n            this.setState({\r\n                current_User: user.profile,\r\n                NewUser:user.profile.user_groups.includes(\"NewUser\"),\r\n                Group1_Branch: user.profile.user_groups.includes(\"Group 1/Branch\"),\r\n                Group2: user.profile.user_groups.includes(\"Group 2\"),\r\n                Respondent: user.profile.user_groups.includes(\"Respondent\"),\r\n                Approver: user.profile.user_groups.includes(\"Approver\"),\r\n                Data_Management_team: user.profile.user_groups.includes(\"Data Management team\"), \r\n                BranchDataChecker: user.profile.user_groups.includes(\"BranchDataChecker\"), \r\n                HqDataChecker: user.profile.user_groups.includes(\"HqDataChecker\"), \r\n                FinalDataChecker: user.profile.user_groups.includes(\"FinalDataChecker\"), \r\n                SuperAdmin: user.profile.user_groups.includes(\"SuperAdmin\"), \r\n                HqDataChecker2: user.profile.user_groups.includes(\"HqDataChecker2\"), \r\n                BsOfficer: user.profile.user_groups.includes(\"BsOfficer\"), \r\n                \r\n                \r\n                          \r\n            });\r\n           \r\n            \r\n        // const token = user.token;\r\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/menus-counts/\",\r\n        {\r\n            headers:\r\n            {\r\n                'Authorization': `Token ${token}`,\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                'Access-Control-Allow-Credentials': true\r\n            },\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                ApprovedSurveys: res.data.approved_surveys,\r\n                RejectedSurveys: res.data.rejected_surveys,\r\n                ApprovedTemplate: res.data.approved_template_surveys,\r\n                Pendingdeployement: res.data.pending_deployed_surveys,\r\n                PendingApprovalSurvey: res.data.pending_approval_surveys,\r\n                PendingApprovalTemplate: res.data.pending_template_approval_surveys,\r\n                RejectedTemplate: res.data.rejected_template_surveys,\r\n                //approver\r\n                Group2RejectedSurveys:res.data.approver_rejected_surveys,\r\n                Group2Approved:res.data.approver_approved_surveys,\r\n                Group2ApprovedTemplate:res.data.approver_approved_template_surveys,\r\n                Group2PendingApprovalTemplate:res.data.approver_pending_template_approval_surveys,\r\n                Group2RejectedTemplate:res.data.approver_rejected_template_surveys,\r\n                Group2PendingDeployedSurvey:res.data.approver_pending_deployed_surveys,\r\n                Group2PendingSurvey:res.data.approver_pending_surveys,\r\n                //response\r\n                ResponderApprovedResponses:res.data.approved_responses,\r\n                ResponderPendingApprovedResponses:res.data.pending_approval_responses,\r\n                ResponderRejectedResponses:res.data.rejected_responses,\r\n                ResponderAvailableSurveys:res.data.available_surveys,\r\n                ResponderUnapprovedResponses:res.data.un_approved_responses,\r\n                myloading: false,\r\n                warningLoad: true,\r\n                pending_approval_responses:res.data.un_approved_responses\r\n                \r\n          \r\n            });\r\n        })\r\n\r\n     \r\n\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        const Check = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n        const token = Check.token\r\n\r\n        const user_type = Check.profile.user_type\r\n        const lga = Check.profile.lga\r\n        const state = Check.profile.state\r\n        // const Hq = state && lga\r\n\r\n            switch (user_type) {\r\n                case 'sg_user':\r\n                    return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&states=${state}`,\r\n                    {\r\n                        headers:\r\n                        {\r\n                            'Authorization': `Token ${token}`,\r\n                            'Access-Control-Allow-Origin': '*',\r\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                            'Access-Control-Allow-Credentials': true\r\n                        },\r\n                    })\r\n                    .then(res => {\r\n                        this.setState({\r\n                            AvailableSurvey: res.data.length,\r\n                            myloading: false,\r\n                            warningLoad: true,\r\n                        });\r\n                    })\r\n             \r\n                    case 'lg_user':\r\n                        return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&lgas=${lga}`,\r\n                        {\r\n                            headers:\r\n                            {\r\n                                'Authorization': `Token ${token}`,\r\n                                'Access-Control-Allow-Origin': '*',\r\n                                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                                'Access-Control-Allow-Credentials': true\r\n                            },\r\n                        })\r\n                        .then(res => {\r\n                            this.setState({\r\n                                AvailableSurvey: res.data.length,\r\n                                myloading: false,\r\n                                warningLoad: true,\r\n                            });\r\n                        })\r\n                        case 'hq_user':\r\n                            return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open`,\r\n                            {\r\n                                headers:\r\n                                {\r\n                                    'Authorization': `Token ${token}`,\r\n                                    'Access-Control-Allow-Origin': '*',\r\n                                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                                    'Access-Control-Allow-Credentials': true\r\n                                },\r\n                            })\r\n                            .then(res => {\r\n                                this.setState({\r\n                                    AvailableSurvey: res.data.length,\r\n                                    myloading: false,\r\n                                    warningLoad: true,\r\n                                });\r\n                            })\r\n                    \r\n                default:\r\n                    return null;\r\n            }\r\n        \r\n        }  \r\n           \r\n\r\n\r\n    render() {\r\n        const { NewUser,SuperAdmin,Group1_Branch,BsOfficer, Group2,Respondent,Approver,Data_Management_team } = this.state;\r\n        // const { NewUser, current_User,SuperAdmin,BranchDataChecker, HqDataChecker,HqDataChecker2,FinalDataChecker,Group1_Branch, Group2,Respondent,Approver,Data_Management_team } = this.state;\r\n\r\n\r\n        return (\r\n\r\n            <Switch>\r\n                \r\n                {/* {current_User ||NewUser && ( */}\r\n\r\n\r\n                    <aside className=\"main-sidebar sidebar-light-success elevation-4 \">\r\n\r\n                        {/* Brand Logo */}\r\n                        <Link to=\"/dashboard\" className=\"brand-link\">\r\n                            <center> <img src={Logo} height=\"100px\" alt=\"\"/></center><br />\r\n                            <center> <span className=\"brand-text font-weight-light text-yellow\"><h3><b>GFSO</b></h3></span></center>\r\n                        </Link>\r\n\r\n                        <div className=\"sidebar\">\r\n                                {/* admin sidebar */}\r\n                        {SuperAdmin && (\r\n                            \r\n                            <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                   <li className=\"nav-item has-treeview menu-open\">\r\n                            \r\n                            <Link to=\"/dashboard\" className=\"nav-link active bg-dark\">\r\n                            <i className=\"nav-icon fas fa-home\" />\r\n                            <p>\r\n                            Dashboard\r\n                            </p>\r\n                            </Link>\r\n                            <hr/>\r\n                            \r\n                           \r\n                            <h1 className=\"nav-header\">GROUP 1(Initiator)</h1>\r\n                            <hr/>\r\n                            \r\n                            \r\n                                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-user\" />\r\n                            <p>\r\n                            RESPONDENT\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentInfo\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-info text-green\"></i>\r\n                                                    <p>\r\n                                                    Update Respondent \r\n                                                 </p>\r\n                                                </Link>\r\n                                            </li>\r\n                            </ul>\r\n                            \r\n              \r\n                            \r\n                            </li>\r\n                            \r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-poll-h\" />\r\n                            <p>\r\n                            SURVEY\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/Deploy\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                            Create Survey\r\n                            \r\n                            </Link>\r\n                            </li>\r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveThisSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                        <p>\r\n                                                        \r\n    \r\n                                                     Pending Approval\r\n                                                     {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                  Approved Surveys \r\n                                                  {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!==0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected Surveys \r\n                                                      {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/SurveyToDeploy\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-clock-o text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Pending Deployement\r\n                                                        {this.state.Pendingdeployement\r\n                                                      ?this.state.Pendingdeployement!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Pendingdeployement}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n\r\n    </p>\r\n\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Ongoing Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/Allsurveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-bar text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        All Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                            \r\n                            </li>\r\n                            \r\n                            \r\n                            {/* LG */}\r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-copy\" />\r\n                            <p>\r\n                            TEMPLATE\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveThisTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                       \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ViewSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Template\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedTemplate\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                      {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                           \r\n                                                </ul>  \r\n                                                <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-minus\" />\r\n                            <p>\r\n                            PENSION & DEDUCT.\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/PensionSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Survey\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprovePension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                        </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                          \r\n\r\n                                        \r\n                           \r\n      \r\n                            </li>\r\n                                             \r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n\r\n                            <i className=\"nav-icon fas fa-reply\" />\r\n                            <p>\r\n                            RESPONSES\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n\r\n                             <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        </li>\r\n                            <hr/>\r\n  \r\n                            <h1 className=\"nav-header\">GROUP 2(Approver)</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-user\" />\r\n                            <p>\r\n                            RESPONDENT\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                                        <li class=\"nav-item has-treeview\">\r\n                                            <Link to=\"/RespondentList\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                <p>\r\n                                                    Approve  Respondent\r\n\r\n</p>\r\n                                            </Link>\r\n                                        </li>\r\n                                    </ul>\r\n                             \r\n              \r\n                            \r\n                            </li>\r\n                          \r\n                           <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-poll-h\" />\r\n                            <p>\r\n                            SURVEY\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                           \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval\r\n                                                    \r\n                                                    {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                     Approved\r\n                                                     {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!==0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected\r\n                                                    {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Ongoing Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/Allsurveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-bar text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        All Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                        </ul>\r\n                                        \r\n                            \r\n                            </li>\r\n                            \r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-copy\" />\r\n                            <p>\r\n                            TEMPLATE\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                           \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                    Approved \r\n                                                    {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected \r\n                                                    {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n\r\n                            </li>\r\n                            \r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-minus\" />\r\n                            <p>\r\n                            PENSION & DEDUCT.\r\n\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                           \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/PensionSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Survey\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprovePension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                        </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                                <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n\r\n                            <i className=\"nav-icon fas fa-reply\" />\r\n                            <p>\r\n                            RESPONSES\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n\r\n                             <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        </li>\r\n                                         <hr/>\r\n\r\n                                        <h1 className=\"nav-header\">RESPONDENT</h1>\r\n                                         <hr/>\r\n                             <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-calendar\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n<p>\r\n   Fill Survey Response\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!==0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n                                 <ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n<p>\r\n   Pending Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!==0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n                                  <ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon far fa-circle text-success\"></i>\r\n<p>\r\n   Approved Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!==0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n                                   <ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon far fa-circle text-danger\"></i>\r\n<p>\r\n   Rejected Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!==0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul>                             \r\n                            </li>\r\n\r\n                                         <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-minus\" />\r\n                            <p>\r\n                            PENSION & DEDUCT.\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            <ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/PensiondeductionSurveyList\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n<p>\r\n  Fill Pension & Deduction\r\n   \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n<ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/PensionPending\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n<p>\r\n\r\nPending Approval \r\n\r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n\r\n<ul class=\"nav nav-treeview\">\r\n\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-check text-green\"></i>\r\n<p>\r\n\r\n\r\nApproved \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n\r\n</ul>  \r\n<ul class=\"nav nav-treeview\">\r\n\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/RejectedPension\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-times text-red\"></i>\r\n<p>\r\n\r\nRejected  \r\n</p>\r\n</Link>\r\n</li>\r\n\r\n</ul>  \r\n<hr/>\r\n\r\n\r\n</li>\r\n                                        {/* <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> */}\r\n                                        <h1 className=\"nav-header\">APPROVER</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-reply\" />\r\n                            <p>\r\n                            RESPONSES\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-info\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                         \r\n                                                        Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-info\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                         \r\n                                                        Approved Responses\r\n                                         </p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                        <Link to=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-file\" />\r\n                                                <p>\r\n                                                REPORTS\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </Link>\r\n                             <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n\r\n                                        <Link to=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-copy\" />\r\n                                                <p>\r\n                                                    State Government\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </Link>\r\n                                           \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/GenerateRecurrentSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Recurrent & C. Expenditure\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchCOFOGSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    COFOG Report\r\n                                                    \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchSSGFFSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SSGFF Report\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchPensiondeductionSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Deduction & pension\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchLGEONSPWSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SG Expenditure  \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        <li className=\"nav-item\">\r\n                                        <Link to=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-copy\" />\r\n                                                <p>\r\n                                                    Local Government\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </Link>\r\n                                           \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/GenerateRecurrent\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Recurrent & C. Expenditure\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchCOFOG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    COFOG Report\r\n                                                    \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchSSGFF\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SSGFF Report\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchPensiondeduction\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Deduction & pension\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchLGEONSPW\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    LGAs Expenditure  \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        </li>\r\n                                        </li>\r\n                                    </ul>                \r\n                                    </li>\r\n                                    <hr/>\r\n\r\n                                    {/* <h1 className=\"nav-header\"></h1>\r\n                                    <h1 className=\"nav-header\"></h1> */}\r\n                                    <h1 className=\"nav-header\">ADMINISTRATOR</h1>\r\n\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"/admin\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-eye\" />\r\n                            <p>\r\n                             Backend Login\r\n                            {/* <i className=\"fas fa-angle-left right\" /> */}\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            {/* <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul>  */}\r\n                                    {/* <hr/> */}\r\n                             \r\n                            \r\n                                 </li>\r\n                                 {/* <h1 className=\"nav-header\">HQ  CHECKS 1</h1> */}\r\n                            {/* <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-eye\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                            \r\n                                 </li> */}\r\n                          \r\n                                 {/* <h1 className=\"nav-header\">HQ CHECKS 2</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-eye\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                            \r\n                                 </li> */}\r\n\r\n                                 {/* <h1 className=\"nav-header\">FINAL HQ CHECKS</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <Link to=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-eye\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </Link>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul>                              \r\n                                 </li> */}\r\n\r\n                            </li>   \r\n                            </li>\r\n                            \r\n                             </ul>\r\n                               )}\r\n                            \r\n                            {/* Sidebar Menu */}\r\n                         <nav className=\"mt-2\">\r\n                            {/* {BranchDataChecker && (\r\n\r\n                             <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                  <li className=\"nav-item has-treeview menu-open\">\r\n\r\n               <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n              <i className=\"nav-icon fas fa-home\" />\r\n               <p>\r\n               Dashboard\r\n               </p>\r\n               </Link>\r\n              <hr/>\r\n\r\n              <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                <hr/>\r\n\r\n                          \r\n                             \r\n                               <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                             <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                             <hr/>\r\n                            \r\n                             \r\n                             <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             \r\n                             Pending Approval \r\n                             \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                             \r\n                             \r\n                             <ul class=\"nav nav-treeview\">\r\n                             \r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n\r\n                                 <p>\r\n                             \r\n                             \r\n                             Approved \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             \r\n                             </ul>  \r\n                             <ul class=\"nav nav-treeview\">\r\n                             \r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-red\"></i>\r\n                             <p>\r\n                             \r\n                             Rejected  \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             \r\n                             </ul>  \r\n                             <hr/>\r\n                             \r\n                             \r\n                             \r\n                             </li>\r\n                             \r\n                             </ul>\r\n                              )} */}\r\n\r\n                        {/* {HqDataChecker && (\r\n\r\n                             <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                  <li className=\"nav-item has-treeview menu-open\">\r\n\r\n               <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n              <i className=\"nav-icon fas fa-home\" />\r\n               <p>\r\n               Dashboard\r\n               </p>\r\n               </Link>\r\n              <hr/>\r\n\r\n              <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                <hr/>\r\n\r\n                          \r\n                             \r\n                               <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!==0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                             <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                             <hr/>\r\n                             \r\n                             \r\n                             <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             \r\n                             Pending Approval \r\n                             \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                             \r\n                             \r\n                             <ul class=\"nav nav-treeview\">\r\n                             \r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             \r\n                             \r\n                             Approved \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             \r\n                             </ul>  \r\n                             <ul class=\"nav nav-treeview\">\r\n                             \r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-red\"></i>\r\n                             <p>\r\n                             \r\n                             Rejected  \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             \r\n                             </ul>  \r\n                             <hr/>\r\n                             \r\n                             \r\n                             \r\n                             </li>\r\n                             \r\n                             </ul>\r\n                              )} */}\r\n                             {/* {HqDataChecker2 && (\r\n\r\n                          <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                          <li className=\"nav-item has-treeview menu-open\">\r\n                          \r\n                          <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n                          <i className=\"nav-icon fas fa-home\" />\r\n                          <p>\r\n                          Dashboard\r\n                          </p>\r\n                          </Link>\r\n                          <hr/>\r\n                          \r\n                          <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                          <hr/>\r\n                          \r\n                          \r\n                          \r\n                            <ul class=\"nav nav-treeview\">\r\n                          <li class=\"nav-item has-treeview\">\r\n                          <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                          <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                          <p>\r\n                          Pending Responses\r\n                          \r\n                          {this.state.AvailableSurvey\r\n                          ?this.state.AvailableSurvey!==0\r\n                          \r\n                          && <span className=\"badge badge-danger navbar-badge\">\r\n                          {this.state.AvailableSurvey}\r\n                          </span>\r\n                          :\"\"}  \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          </ul> \r\n                             <ul className=\"nav nav-treeview\">\r\n                          <li className=\"nav-item has-treeview\">\r\n                          <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                          <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                          <p>\r\n                          Approved Responses\r\n                          \r\n                          {this.state.AvailableSurvey\r\n                          ?this.state.AvailableSurvey!==0\r\n                          \r\n                          && <span className=\"badge badge-danger navbar-badge\">\r\n                          {this.state.AvailableSurvey}\r\n                          </span>\r\n                          :\"\"}  \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          </ul> \r\n                              <ul className=\"nav nav-treeview\">\r\n                          <li className=\"nav-item has-treeview\">\r\n                          <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                          <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                          <p>\r\n                          Rejected Responses\r\n                          \r\n                          {this.state.AvailableSurvey\r\n                          ?this.state.AvailableSurvey!==0\r\n                          \r\n                          && <span className=\"badge badge-danger navbar-badge\">\r\n                          {this.state.AvailableSurvey}\r\n                          </span>\r\n                          :\"\"}  \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          </ul> \r\n                                 <hr/>\r\n                          \r\n                          <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                          <hr/>\r\n                          \r\n                          \r\n                          <ul class=\"nav nav-treeview\">\r\n                          <li class=\"nav-item has-treeview\">\r\n                          <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                          <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                          <p>\r\n                          \r\n                          Pending Approval \r\n                          \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          </ul> \r\n                          \r\n                          \r\n                          <ul class=\"nav nav-treeview\">\r\n                          \r\n                          <li class=\"nav-item has-treeview\">\r\n                          <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                          <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                          <p>\r\n                          \r\n                          \r\n                          Approved \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          \r\n                          </ul>  \r\n                          <ul class=\"nav nav-treeview\">\r\n                          \r\n                          <li class=\"nav-item has-treeview\">\r\n                          <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                          <i className=\"nav-icon far fa-circle text-red\"></i>\r\n                          <p>\r\n                          \r\n                          Rejected  \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          \r\n                          </ul>  \r\n                          <hr/>\r\n                          \r\n                          \r\n                          \r\n                          </li>\r\n                          \r\n                          </ul>\r\n                           )} */}\r\n                          \r\n                               {/* {FinalDataChecker && (\r\n\r\n                              <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                            <li className=\"nav-item has-treeview menu-open\">\r\n                            \r\n                            <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n                            <i className=\"nav-icon fas fa-home\" />\r\n                            <p>\r\n                            Dashboard\r\n                            </p>\r\n                            </Link>\r\n                            <hr/>\r\n                            \r\n                            <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                            <hr/>\r\n                            \r\n                            \r\n                            \r\n                              <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                            <p>\r\n                            Pending Responses\r\n                            \r\n                            {this.state.AvailableSurvey\r\n                            ?this.state.AvailableSurvey!==0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.AvailableSurvey}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                               <ul className=\"nav nav-treeview\">\r\n                            <li className=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                            <p>\r\n                            Approved Responses\r\n                            \r\n                            {this.state.AvailableSurvey\r\n                            ?this.state.AvailableSurvey!==0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.AvailableSurvey}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                            <li className=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                            <p>\r\n                            Rejected Responses\r\n                            \r\n                            {this.state.AvailableSurvey\r\n                            ?this.state.AvailableSurvey!==0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.AvailableSurvey}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                                   <hr/>\r\n                            \r\n                            <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                            <hr/>\r\n                            \r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                            <p>\r\n                            \r\n                            Pending Approval \r\n                            \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                            \r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            \r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                            <p>\r\n                            \r\n                            \r\n                            Approved \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            \r\n                            </ul>  \r\n                            <ul class=\"nav nav-treeview\">\r\n                            \r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-red\"></i>\r\n                            <p>\r\n                            \r\n                            Rejected  \r\n                                                        </p>\r\n                                                        </Link>\r\n                                                        </li>\r\n                                                        \r\n                                                        </ul>  \r\n                                                        <hr/>\r\n                                                        \r\n                                                        \r\n                                                        \r\n                                                        </li>\r\n                                                        \r\n                                                        </ul>\r\n                                                         )} */}\r\n                        {Respondent && (\r\n                            \r\n                                                           <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                            <li className=\"nav-item has-treeview menu-open\">\r\n                            \r\n                            <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n                            <i className=\"nav-icon fas fa-home\" />\r\n                            <p>\r\n                            Dashboard\r\n                            </p>\r\n                            </Link>\r\n                            <hr/>\r\n                            \r\n                                                        <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                                                          <hr/>\r\n                            \r\n                            <ul className=\"nav nav-treeview\">\r\n                            <li className=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n                            <p>\r\n                               Fill Survey Response\r\n                               \r\n                               {this.state.ResponderAvailableSurveys\r\n                            ?this.state.ResponderAvailableSurveys!==0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.ResponderAvailableSurveys}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                            \r\n                                                             <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/PendingResponsesResponder\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                            <p>\r\n                               Pending Responses\r\n                               \r\n                               {this.state.ResponderPendingApprovedResponses\r\n                            ?this.state.ResponderPendingApprovedResponses!==0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.ResponderPendingApprovedResponses}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                                                              <ul className=\"nav nav-treeview\">\r\n                            <li className=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                            <p>\r\n                               Approved Responses\r\n                               \r\n                               {this.state.ResponderApprovedResponses\r\n                            ?this.state.ResponderApprovedResponses!==0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.ResponderApprovedResponses}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                                                               <ul className=\"nav nav-treeview\">\r\n                            <li className=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                            <p>\r\n                               Rejected Responses\r\n                               \r\n                               {this.state.ResponderRejectedResponses\r\n                            ?this.state.ResponderRejectedResponses!==0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.ResponderRejectedResponses}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                                                                  <hr/>\r\n                            \r\n                            <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                            <hr/>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/PensiondeductionSurveyList\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n                            <p>\r\n                              Fill Pension & Deduction\r\n                               \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                            <p>\r\n                            \r\n                            Pending Approval \r\n                            \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                            \r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            \r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                            <p>\r\n                            \r\n                            \r\n                            Approved \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            \r\n                            </ul>  \r\n                            <ul class=\"nav nav-treeview\">\r\n                            \r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                            <p>\r\n                            \r\n                            Rejected  \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            \r\n                            </ul>  \r\n                            <hr/>\r\n                            \r\n                            \r\n                            \r\n                            </li>\r\n                            \r\n                            </ul>\r\n                                                           )}\r\n\r\n\r\n                                \r\n                            {Approver && (\r\n\r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active bg-info\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n</p>\r\n                                        </Link>\r\n                                        <hr/>\r\n\r\n                                        <h1 className=\"nav-header\">RESPONSE</h1>\r\n                                        <hr/>\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-info\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                         \r\n                                                        Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-info\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                         \r\n                                                        Approved Responses\r\n                                         </p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        <hr/>\r\n\r\n                                        <h1 className=\"nav-header\">GENERATE MGT. REPORTS</h1>\r\n                                        <hr/>\r\n\r\n                                              {/* SG */}\r\n                                        \r\n                                        <li className=\"nav-item\">\r\n                                        <Link to=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-copy\" />\r\n                                                <p>\r\n                                                    State Government\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </Link>\r\n                                           \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/GenerateRecurrentSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Recurrent & C. Expenditure\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchCOFOGSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    COFOG Report\r\n                                                    \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchSSGFFSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SSGFF Report\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchPensiondeductionSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Deduction & pension\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchLGEONSPWSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SG Expenditure  \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        </li>\r\n\r\n\r\n                                         {/* LG */}\r\n                                        <li className=\"nav-item\">\r\n                                        <Link to=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-copy\" />\r\n                                                <p>\r\n                                                    Local Government\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </Link>\r\n                                           \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/GenerateRecurrent\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Recurrent & C. Expenditure\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchCOFOG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    COFOG Report\r\n                                                    \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchSSGFF\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SSGFF Report\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchPensiondeduction\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Deduction & pension\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchLGEONSPW\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    LGAs Expenditure  \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        </li>\r\n\r\n\r\n                                      \r\n                                    </li>\r\n\r\n                                </ul>\r\n                            )}\r\n\r\n                            {Group1_Branch && (\r\n\r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    \r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n                                        </p>\r\n                                        </Link>\r\n\r\n                                       \r\n                                        {/* group1 */}\r\n                                        <hr/>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentInfo\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-info text-green\"></i>\r\n                                                    <p>\r\n                                                    Update Respondent \r\n                                                 </p>\r\n                                                </Link>\r\n                                            </li>\r\n                                            \r\n                                        </ul>\r\n                                        <hr/>\r\n                                        <h1 className=\"nav-header\">SURVEY</h1>\r\n                                        <hr/>\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/Deploy\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                    Create Survey \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                      \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveThisSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                        <p>\r\n                                                        \r\n    \r\n                                                     Pending Approval\r\n                                                     {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                  Approved Surveys \r\n                                                  {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!==0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul> \r\n                                            \r\n                                            \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected Surveys \r\n                                                      {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/SurveyToDeploy\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-clock-o text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Pending Deployement\r\n                                                        {this.state.Pendingdeployement\r\n                                                      ?this.state.Pendingdeployement!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Pendingdeployement}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n\r\n    </p>\r\n\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Ongoing Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/Allsurveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-bar text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        All Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                                <hr/> \r\n                                                <h1 className=\"nav-header\">TEMPLATE</h1>\r\n                                                <hr/>\r\n                                       <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveThisTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                       \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ViewSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Template\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedTemplate\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                      {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                             \r\n                                                <hr/>\r\n\r\n                                                <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                                                <hr/>\r\n\r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/PensionSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Survey\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprovePension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                      \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                        <p>\r\n                                                        \r\n    \r\n                                                      Approved \r\n                                                      \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                \r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                        <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                                                            <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                            <p>\r\n                                                             \r\n                                                          Rejected  \r\n                                                            </p>\r\n                                                        </Link>\r\n                                                    </li>\r\n                                               \r\n                                                    </ul>  \r\n                                             \r\n                                       <hr/>\r\n\r\n                                           <h1 className=\"nav-header\">RESPONSES</h1>\r\n                                        <hr/>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-success\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>  \r\n                                        <hr/>\r\n                                         <br/>\r\n                                        <h1 className=\"nav-header\">ADMINISTRATOR</h1>\r\n                                        {/* <h1 className=\"nav-header\"></h1> */}\r\n\r\n                                        <hr />\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to=\"/admin\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-eye\" />\r\n                                                <p>\r\n                                                    Backend Login\r\n{/* <i className=\"fas fa-angle-left right\" /> */}\r\n                                                </p>\r\n                                            </Link>\r\n\r\n                                        </li>\r\n                                    </li>\r\n                                </ul>\r\n                            )}\r\n\r\n\r\n                                {NewUser && (\r\n                                      <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                      <li className=\"nav-item has-treeview menu-open\">\r\n  \r\n                                    <ul class=\"nav nav-treeview\">\r\n                                        <li class=\"nav-item has-treeview\">\r\n                                            <Link to=\"/UserUploads\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-paperclip text-warning\"></i>\r\n                                                <p>\r\n                                                    Supporting Docs\r\n\r\n                                          </p>\r\n                                            </Link>\r\n                                            </li>\r\n                                    </ul> </li>\r\n                                    </ul>\r\n\r\n                                )}\r\n                                  {/* group 2 */}\r\n\r\n                                {Group2 && (\r\n                                    \r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active bg-primary\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n    </p>\r\n                                        </Link>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentList\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  Approve  Respondent  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        {/* <hr/> */}\r\n                                        <h1 className=\"nav-header\">SURVEY</h1>\r\n                                        {/* <hr/> */}\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval\r\n                                                    \r\n                                                    \r\n                                                    {this.state.Group2PendingSurvey\r\n                                                      ?this.state.Group2PendingSurvey!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Group2PendingSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n\r\n\r\n                                                     Approved\r\n                                                     {this.state.Group2Approved\r\n                                                      ?this.state.Group2Approved!==0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.Group2Approved}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected\r\n                                                    {this.state.Group2RejectedSurveys\r\n                                                      ?this.state.Group2RejectedSurveys!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Group2RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Ongoing Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/Allsurveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-bar text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        All Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                        {/* <hr/> */}\r\n                                        <h1 className=\"nav-header\">TEMPLATE</h1>\r\n                                        {/* <hr/> */}\r\n\r\n                            \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.Group2PendingApprovalTemplate\r\n                                                      ?this.state.Group2PendingApprovalTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Group2PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                    Approved \r\n                                                    {this.state.Group2ApprovedTemplate\r\n                                                      ?this.state.Group2ApprovedTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.Group2ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                          \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected \r\n                                                    {this.state.Group2RejectedTemplate\r\n                                                      ?this.state.Group2RejectedTemplate!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Group2RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n  <hr/>\r\n\r\n                               <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                                                <hr/>\r\n\r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/PensionSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Survey\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprovePension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                        </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                          \r\n                                         <hr/>\r\n\r\n                                        <h1 className=\"nav-header\">RESPONSES</h1>\r\n{/* <hr/> */}\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!==0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <hr/>\r\n                                         <br/>\r\n                                        <h1 className=\"nav-header\">ADMINISTRATOR</h1>\r\n                                        {/* <h1 className=\"nav-header\"></h1> */}\r\n\r\n                                        <hr />\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to=\"/admin\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-eye\" />\r\n                                                <p>\r\n                                                    Backend Login\r\n{/* <i className=\"fas fa-angle-left right\" /> */}\r\n                                                </p>\r\n                                            </Link>\r\n\r\n                                        </li>\r\n                                       \r\n                                    </li>\r\n\r\n                                </ul>\r\n                                )}\r\n                                \r\n                            {BsOfficer&&(\r\n                            \r\n                            <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                            <li className=\"nav-item has-treeview menu-open\">\r\n                            \r\n                                <Link to=\"/dashboard\" className=\"nav-link active bg-info\">\r\n                                    <i className=\"nav-icon fas fa-home\" />\r\n                                    <p>\r\n                                        Dashboard\r\n                            </p>\r\n                                </Link>\r\n                                <hr/>\r\n                            \r\n                                <h1 className=\"nav-header\">VERIFY RESPONSE</h1>\r\n                                <hr/>\r\n                            \r\n                                <ul class=\"nav nav-treeview\">\r\n                                    <li class=\"nav-item has-treeview\">\r\n                                        <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                            <i class=\"nav-icon fas fa-warning text-info\"></i>\r\n                                            <p>\r\n                                            \r\n                                                 \r\n                                                Pending Responses\r\n                                             {this.state.pending_approval_responses\r\n                                              ?this.state.pending_approval_responses!==0\r\n                            \r\n                                             && <span className=\"badge badge-danger navbar-badge\">\r\n                                            {this.state.pending_approval_responses}\r\n                                            </span>\r\n                                            :\"\"}   \r\n                            </p>\r\n                                        </Link>\r\n                                    </li>\r\n                                </ul>\r\n                                \r\n                                <hr/>\r\n                            \r\n                                <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                                                          <hr/>\r\n                            \r\n                            <ul className=\"nav nav-treeview\">\r\n                            <li className=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n                            <p>\r\n                               Fill Survey Response\r\n                               \r\n                               {this.state.ResponderAvailableSurveys\r\n                            ?this.state.ResponderAvailableSurveys!==0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.ResponderAvailableSurveys}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                            \r\n                            \r\n                             <hr/>\r\n                            \r\n                            <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                            <hr/>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/PensiondeductionSurveyList\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n                            <p>\r\n                              Fill Pension & Deduction\r\n                               \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                            \r\n                            \r\n                            </li>\r\n                            \r\n                            </ul>\r\n                            \r\n                            \r\n                                                        )}\r\n                                                           \r\n                               \r\n                                {Data_Management_team && (\r\n\r\n                                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                        <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                            <Link to=\"/dashboard\" className=\"nav-link active bg-pink\">\r\n                                                <i className=\"nav-icon fas fa-home\" />\r\n                                                <p>\r\n                                                    Dashboard\r\n</p>\r\n                                            </Link>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-paperclip text-pink\"></i>\r\n                                                        <p>\r\n                                                        Develop Capability\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-bullhorn text-pink\"></i>\r\n                                                        <p>\r\n                                                           Manage Reports\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                )}\r\n                            </nav>\r\n                            {/* /.sidebar-menu */}\r\n                        </div>\r\n                        {/* /.sidebar */}\r\n\r\n\r\n\r\n                    </aside>\r\n\r\n                {/* )} */}\r\n            </Switch>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n// import axios from 'axios'\r\n\r\n\r\n \r\nexport default  class Footer extends Component {\r\n\r\n  // componentDidMount() {\r\n    \r\n  //   const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n  //   const token = mytoken.token;\r\n  //   //call the States and LGAS at the first \r\n  //   const state = \"Ahmad loophole\";\r\n  //   axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n  //       params:\r\n  //       {\r\n  //         state: state\r\n  //       }\r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\r\n  //       }\r\n  //       // console.log(res.data)                  \r\n\r\n  //     })\r\n  //     axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n  //       params:\r\n  //       {\r\n  //         state: state\r\n  //       }\r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\r\n  //       }\r\n  //     }); \r\n  //     axios.get(`https://gfso.chinikiguard.com/accounts/api/branch/list/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n       \r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       this.setState({\r\n  //         BranchList: res.data,\r\n  //     });\r\n  //     });\r\n  //     axios.get(`https://gfso.chinikiguard.com/accounts/api/designation/list/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n       \r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"designations\", JSON.stringify(res.data));\r\n  //     }\r\n  //       this.setState({\r\n  //         DesignationList: res.data,\r\n  //     });\r\n  //     });\r\n\r\n\r\n\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n        <footer class=\"main-footer\">\r\n        <strong>Copyright &copy; 2021 <Link to=\"\">BeeSoft Technology</Link>.</strong>\r\n        All rights reserved.\r\n        <div class=\"float-right d-none d-sm-inline-block\">\r\n          <b>Version</b> 1.0.0\r\n        </div>\r\n      </footer>\r\n \r\n );\r\n}\r\n}","import React, {  useEffect } from \"react\";\r\n// import { Line, Bar, Pie, Doughnut, HorizontalBar, Radar } from \"react-chartjs-2\";\r\n// import axios from \"axios\";\r\n// import Spinner from 'react-bootstrap/Spinner'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\n\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  \r\n \r\n \r\n  //using the functions\r\n  useEffect(() => {\r\n\r\n  \r\n   \r\n  }, []);\r\n\r\n  if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\r\n    return (<Redirect to={'/login'} />)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"content-wrapper\">\r\n        <Menu />\r\n        <br />\r\n        {/* Info boxes */}\r\n\r\n       \r\n\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\n\r\n\r\nconst Url ='https://gfso.chinikiguard.com/accounts/api/jwt/';\r\n\r\nclass AuthService {\r\n\r\n \r\n  login(username, password) {\r\n    \r\n\r\n    return axios.post( Url, { username,  password },  { headers: { \r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n    'Access-Control-Allow-Credentials': true }, }   )\r\n    \r\n      .then(response => {\r\n        if (response.data) {\r\n          localStorage.setItem(\"_WannanGfsoCbnUserNe\", JSON.stringify(response.data));\r\n        }\r\n        // console.log(response.data)\r\n        return response.data;\r\n      }\r\n      \r\n      );\r\n    \r\n  }\r\n\r\n //handle logout\r\n  // logout() {\r\n  //   localStorage.removeItem(\"user\");\r\n  //   localStorage.removeItem(\"token\");\r\n  // }\r\n//create new user\r\n  createNewUser( username,password,first_name,last_name,\r\n    // address, \r\n    lga,state,\r\n    // dob,\r\n    email,phone_number,group_pk,\r\n    // branch_pk,\r\n    designation_pk,\r\n    // staff_number,\r\n    user_type) {\r\n//     const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n// const token = mytoken.token;\r\n\r\nlet formData = new FormData();\r\n        formData.append('username', username);\r\n        formData.append('password', password);\r\n        formData.append('first_name', first_name);\r\n        formData.append('last_name', last_name);\r\n        // formData.append('address', address);\r\n        formData.append('lga', lga);\r\n        // formData.append('dob', dob);\r\n        formData.append('state', state);\r\n        formData.append('email', email);\r\n        formData.append('phone_number', phone_number);\r\n        formData.append('group_pk', group_pk);\r\n        formData.append('designation_pk', designation_pk);\r\n        // formData.append('branch_pk', branch_pk);\r\n        // formData.append('staff_number', staff_number);\r\n        formData.append('user_type', user_type);\r\n        \r\n        \r\n\r\n    return axios.post('https://gfso.chinikiguard.com/accounts/api/create-user/',formData, {\r\n     \r\n    },\r\n    {  \r\n      headers: { \r\n      'Content-Type':'application/json',\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'POST, GET,HEAD,OPTIONS',\r\n       'Access-Control-Allow-Credentials': true \r\n      }, \r\n    }   \r\n    )\r\n  }\r\n\r\n  //this handle projects\r\n  RegisterProject(title,description,location,status,start_date,due_date){\r\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\nconst token = mytoken.token;\r\n     return  axios.post(\"https://ecological.chinikiguard.com/projects/api/create/\", {\r\n\r\n     title,\r\n     description,\r\n     location,\r\n     status,\r\n     start_date,\r\n     due_date,\r\n  },\r\n  \r\n  { \r\n    \r\n    \r\n    headers: { \r\n    'Authorization': `Token ${token}`,\r\n     'Access-Control-Allow-Origin': '*',\r\n     'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n     'Access-Control-Allow-Credentials': true \r\n    }, \r\n  }   \r\n  )\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n//this handle survey creation\r\nCreateSurvey(title,category,status,origin){\r\n\r\n  const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n  const token = mytoken.token;\r\n  return  axios.post(\"https://gfso.chinikiguard.com/survey/api/create/survey/\", {\r\n\r\n  title,\r\n  category,\r\n  status,\r\n  origin,\r\n},\r\n\r\n{ \r\n \r\n \r\n headers: { \r\n 'Authorization': `Token ${token}`,\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n  'Access-Control-Allow-Credentials': true \r\n }, \r\n}   \r\n)\r\n\r\n.then(response => {\r\n  if (response.data) {\r\n    localStorage.setItem(\"survey_pk\", JSON.stringify(response.data.pk));\r\n  }\r\n  // console.log(response.data)\r\n  return response.data;\r\n}\r\n\r\n);\r\n\r\n\r\n\r\n\r\n}\r\n\r\n  \r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n  }\r\n}\r\n\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Logo from '../cbn.png'\r\n\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n    \r\n        this.state = {\r\n          username: \"\",\r\n          password: \"\",\r\n          loading: false,\r\n          ViewTemplateloading: false,\r\n          message: \"\"\r\n        };\r\n      }\r\n    \r\n      onChangeUsername(e) {\r\n        this.setState({\r\n          username: e.target.value\r\n        });\r\n      }\r\n    \r\n      onChangePassword(e) {\r\n        this.setState({\r\n          password: e.target.value\r\n        });\r\n      }\r\n    \r\n      componentDidMount(){\r\n\r\n        if (localStorage.getItem('_WannanGfsoCbnUserNe')) {\r\n          return (<Redirect to={'/dashboard'} />)\r\n      }\r\n      }\r\n      handleLogin(e) {\r\n        e.preventDefault();\r\n        \r\n        this.setState({\r\n          message: \"\",\r\n          loading: true,\r\n          ViewTemplateloading: true,\r\n\r\n        });\r\n    \r\n        this.form.validateAll();\r\n    \r\n        if (this.checkBtn.context._errors.length === 0) {\r\n          AuthService.login(this.state.username, this.state.password).then(\r\n            () => {\r\n            window.location = \"/dashboard\"\r\n            },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data.non_field_errors &&\r\n                            error.response.data.non_field_errors) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage,\r\n                        ViewTemplateloading: false,\r\n\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // const {loading} = this.state;\r\n        \r\n        return (\r\n            <div className=\"hold-transition login-page\">\r\n                {this.state.ViewTemplateloading && (\r\n                        <span className=\"\">\r\n                            <div className=\"overlay-wrapper\">\r\n                                <div className=\"overlay \">         \r\n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\r\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\r\n                            </div>\r\n\r\n                        </span>\r\n                     )}\r\n                <div className=\"\">\r\n                    <div className=\"login-logo\">\r\n                    <img src={Logo} height=\"100px\" alt=\"\" />\r\n                        <br />\r\n                        <Link to=\"\"><b>CBN</b> GFSO</Link>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body login-card-body\">\r\n                            <p className=\"login-box-msg\">Sign in to start your session</p>\r\n                            <br />\r\n                            <Form\r\n                                onSubmit={this.handleLogin}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n\r\n                                <div className=\"input-group mb-4\">\r\n\r\n                                    <Input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"username\" value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        validations={[required]}\r\n                                    />\r\n                                    <div className=\" input-group-append\">\r\n                                        <div className=\"input-group-text\">\r\n                                            <span className=\"fas fa-user\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"input-group mb-4\">\r\n                                    <Input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        validations={[required]} />\r\n                                    <div className=\"input-group-append\">\r\n                                        <div className=\"input-group-text\">\r\n                                            <span className=\"fas fa-lock\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        disabled={this.state.loading}\r\n                                    >\r\n                                        {/* {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                        )} */}\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n\r\n                            </Form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {  Link, Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Landing extends Component {\r\n\r\n    componentDidMount () {\r\n\r\n        \r\n        if (localStorage.getItem('_WannanGfsoCbnUserNe')) {\r\n          return (<Redirect to={'/dashboard'} />)\r\n      }\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"./Landing/assets/js/core/jquery.min.js\";\r\n\r\n      const script1 = document.createElement(\"script\");\r\n      script1.src = \"./Landing/assets/./\";\r\n\r\n      const script2 = document.createElement(\"script\");\r\n      script2.src = \"./Landing/assets/js/core/popper.min.js\";\r\n      \r\n      const script3 = document.createElement(\"script\");\r\n      script3.src = \"./Landing/assets/js/core/bootstrap-material-design.min.js\";\r\n      \r\n      const script4 = document.createElement(\"script\");\r\n      script4.src = \"./Landing/assets/js/plugins/moment.min.js\";\r\n\r\n      const script5 = document.createElement(\"script\");\r\n      script5.src = \"./Landing/assets/js/plugins/bootstrap-datetimepicker.js\";\r\n\r\n      const script7 = document.createElement(\"script\");\r\n      script7.src = \"./Landing/assets/js/plugins/nouislider.min.js\";\r\n\r\n      const script0 = document.createElement(\"script\");\r\n      script0.src =\"./Landing/assets/js/material-kit.js?v=2.0.7\";\r\n      \r\n        \r\n      script.async = true;\r\n      script1.async = true;\r\n      script2.async = true;\r\n      script3.async = true;\r\n      script4.async = true;\r\n      script5.async = true;\r\n      script7.async = true;\r\n      script0.async = true;\r\n      \r\n      document.body.appendChild(script);\r\n      document.body.appendChild(script1);\r\n      document.body.appendChild(script2);\r\n      document.body.appendChild(script3);\r\n      document.body.appendChild(script4);\r\n      document.body.appendChild(script5);\r\n      document.body.appendChild(script7);\r\n      document.body.appendChild(script0);\r\n    }\r\n  \r\n\r\n    render() {\r\n        if (localStorage.getItem('_WannanGfsoCbnUserNe')) {\r\n            return (<Redirect to={'/dashboard'} />)\r\n          }\r\n\r\n    return (\r\n\r\n        <div className=\"landing-page sidebar-collapse\"  >\r\n            <link href=\"./assets/css/material-kit.css?v=2.0.7\" rel=\"stylesheet\" />\r\n\r\n            <nav className=\"navbar navbar-transparent navbar-color-on-scroll fixed-top navbar-expand-lg\" color-on-scroll={100} id=\"sectionsNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-translate\">\r\n                    <img src=\"dist/img/cbn.png\" height=\"100px\"  alt=\"\"/>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"sr-only\">Toggle navigation</span>\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"dropdown nav-item\">\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\" className=\"btn btn-primary btn-raised btn-sm\" data-toggle=\"dropdown\">\r\n                                    Sign In\r\n            </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" rel=\"tooltip\" title data-placement=\"bottom\" href=\"\" target=\"_blank\" data-original-title=\"\">\r\n                                    <i className=\"\" />\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" rel=\"tooltip\" title data-placement=\"bottom\" href=\"\" target=\"_blank\" data-original-title=\"\">\r\n                                    <i className=\"\" />\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/register\" className=\"btn btn-success btn-raised btn-sm\" data-toggle=\"dropdown\">\r\n                                    Sign Up\r\n            </Link>\r\n\r\n                            </li> */}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n            <div className=\"page-header header-filter\" data-parallax=\"true\" style={{ backgroundImage: 'url(\"./assets/img/cbnbg.jpg\")' }}>\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h1 className=\"title\">Statistics Automation Project </h1>\r\n                            <h4> Statistics Data Ingestion Project For the Central Bank of Nigeria\r\n</h4>\r\n                            <hr />\r\n                            <Link to=\"/login\" className=\"btn btn-primary btn-raised btn-lg\" >\r\n                                    Sign In\r\n            </Link>\r\n            &nbsp;&nbsp; &nbsp;&nbsp;\r\n                                <Link to=\"/Register\" className=\"btn btn-success btn-raised btn-lg\" >\r\n                                    Sign Up\r\n            </Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"main main-raised\">\r\n                <div className=\"container\">\r\n                    <div className=\"section text-center\">\r\n\r\n\r\n                    </div></div></div></div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n}","import React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nexport default class ViewSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            ViewTemplateloading:false,\n            message: \"\",\n            SurveyList: [],\n            EditTemplate:[]\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/template/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveyTemplate\", JSON.stringify(res.data));\n                }\n                this.setState({\n                    SurveyList: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n            axios.get('https://gfso.chinikiguard.com/locations/api/list/state/',\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n    \n                })\n                .then(res => {\n                    if (res.data) {\n                        localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                    }\n                    // console.log(res.data)\n                })\n    \n           \n    \n    }\n\n    EditTemplate(SurveyList) {\n\n        localStorage.setItem(\"SingleTemplate\", JSON.stringify(SurveyList));\n        this.setState({\n            ViewTemplateloading: true,\n        });\n\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        const Temple_pk = SurveyList.pk;\n        // console.log(SurveyList.pk)\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${Temple_pk}/`,\n          {\n            headers:\n            {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${token}`,\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n              'Access-Control-Allow-Credentials': true\n            },\n           \n          })\n          .then(res => {\n            if (res.data) {\n              localStorage.setItem(\"Templatedetails\", JSON.stringify(res.data));\n            }\n            window.location = \"/EditTemplate\"\n            this.setState({\n                EditTemplate: res.data,\n                \n              });\n          })\n\n\n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\">                                        \n                    {/* Default box */}\n                    {this.state.ViewTemplateloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <div className=\"card card-solid\">\n                        \n                        <div className=\"card-body pb-0\">\n                            \n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n                                <div className=\"row\">\n                                       \n                                    {this.state.SurveyList.map((surveys,i )=> (\n\n                                        <div className=\"col-12 col-sm-6 col-md-4 d-flex align-items-stretch flex-column\">\n                                            <div className=\"card bg-light d-flex flex-fill\">\n                                         \n                                                <div key={i} className=\"card-header text-muted border-bottom-0\">\n                                                    {surveys.title}\n                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     \n                                                </div>\n                                                <div className=\"card-body pt-0\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-7\">\n                                                            <h2 className=\"lead\" ><b>{surveys.title}</b></h2>\n                                                            <p className=\"text-muted text-sm\"><b>Created by: </b> {surveys.created_by} </p>\n                                                            <p className=\"text-muted text-sm\"><b>Date: </b> {surveys.created} </p>\n                                                        </div>\n                                                        <div className=\"col-5 text-center\">\n                                                            <img src={Logo}  width=\"70px\" height=\"50px\" alt=\"user-avatar\" className=\"img-circle img-fluid\" />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"card-footer\">\n                                                    <div className=\"text-right\">\n                                                                <button \n                                                                 onClick={this.EditTemplate.bind(this, surveys)}\n                                                                 className=\"btn btn-info\"\n                                                                 disabled={this.state.loading}\n\n                                                                 >\n                                        \n                                                                  Review & Deploy Template &nbsp;&nbsp;\n\n                                                                </button>\n                                                        \n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        {/* /.card-body */}\n                        <div className=\"card-footer\">\n                            <nav aria-label=\"Contacts Page Navigation\">\n\n                            </nav>\n                        </div>\n                        {/* /.card-footer */}\n                    </div>\n                    {/* /.card */}\n                </section>\n                <Footer />\n            </div>\n        );\n    }\n}","import { createContext } from 'react';\nexport const FormContext = createContext();\n\n","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n\n  \n \nconst TextInput = ({ input_type, pk, name, field_value ,value}) => {\n    // console.log(field_value)\n    const  {handleChange}  = useContext(FormContext)\n    return (\n\n        <div className=\"col-4\">\n\n           <label >{name} </label>\n         <input\n         onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n         type=\"number\" \n         step=\"any\"\n         className=\"form-control\"  \n         placeholder=\"number\"\n         min={0}  \n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         required\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default TextInput\n","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n\n  \n \nconst SelectOption = ({ input_type, pk, name, field_value ,value}) => {\n    // console.log(field_value)\n    const  {handleChange}  = useContext(FormContext)\n    return (\n\n        <div className=\"col-4\">\n\n           <label >{name} </label>\n         <input\n         onKeyDown={(evt) => [\"e\", \"E\", \"+\"].includes(evt.key) && evt.preventDefault()}\n         type=\"number\" \n         step=\"any\"\n         className=\"form-control\"  \n         placeholder=\"number\"\n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         required\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default SelectOption\n","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElement = ({ field: { input_type, pk, name, value,field_value }}) => {\n  \n    switch (input_type) {\n        case 'text_input_':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n            case 'number':\n                return (<TextInput\n                    pk={pk}\n                    name={name}\n                    input_type={input_type}\n                    value={value}\n                    field_value={field_value}\n                />)\n            case 'accounting':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n                field_value={field_value}\n            />)\n        \n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElement\n","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElementCategory = ( { \n    field_category: { input_type, pk, name, value, }},\n    ) => {\n  \n    switch (input_type) {\n        case 'text_input_':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'number':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n        case 'text_area_':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElementCategory\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class CheckSurveyTypeResponse extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLga = this.onChangeLga.bind(this);\n\n        this.state = {\n            statee:\"\",\n            lga:\"\",\n            myloading: false,\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n            user_type:false\n        };\n    }\n\n    onChangeState(e) {\n        this.setState({\n            statee: e.target.value\n        });\n    }\n    onChangeLga(e) {\n        this.setState({\n            lga: e.target.value\n        });\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n         // console.log(res.data)   \n\n        // check for the value selected and show the related content\n        try {\n            const TargetResponse = JSON.parse(localStorage.getItem('Surveydetails'));\n            const TargetUser = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n\n            const check = TargetResponse.survey_type\n            const user_type = TargetUser.profile.user_type\n\n\n\n            if (check) {\n                this.setState({\n                    user_type:user_type===\"hq_user\",\n                    statesGov: check.includes(\"sg\"),\n                    lgasGov: check.includes(\"lg\"),\n                    othersGov: check.includes(\"other\"),\n                });\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n\n        localStorage.removeItem(\"state_pk\");\n        localStorage.removeItem(\"lga_pk\");\n\n    }\n    componentDidUpdate() {\n        const state_pk = this.state.statee\n        const lga_pk = this.state.lga\n       \n        if (state_pk) {\n\n        localStorage.setItem(\"state_pk\",state_pk);\n\n        }else if(lga_pk){\n\n            localStorage.setItem(\"lga_pk\",lga_pk);\n\n        }else{\n            return null;\n        }    \n    }\n\n\n    render() {\n\n         //get the list of state and LGAS  in the localStorage\n         const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n         const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n         \n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov, othersGov,user_type } = this.state;\n\n        return (\n            <div>\n\n            {user_type && (\n            <div>\n                {statesGov && (\n                    <div className=\"col-sm-12\">\n                        <div className=\"form-group\">\n                            <hr/>\n                           <center> <label> Which state are you from</label></center>\n                            <select type=\"text\" className=\"form-control \" placeholder\n                               onChange={this.onChangeState}\n                                required\n                                value={this.state.statee}\n\n                            >\n                                <option value=\"\">Select your State</option>\n                                {List_Of_States && List_Of_States.map(state => (\n                                 <option value= {state.pk}>{state.title}</option>\n\n                             ))}\n                            </select>\n                        </div>\n                    </div>\n\n                )}\n                {lgasGov && (\n                    <div className=\"col-sm-12\">\n                        <div className=\"form-group\">\n                        <center> <label> Which LGA are you from</label></center>\n                            <select type=\"text\" className=\"form-control \" placeholder\n                                onChange={this.onChangeLga}\n                                validations={[required]}\n                                value={this.state.lga}\n\n                            >\n                                <option value=\"\">Select your LGA</option>\n                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                 <option value= {lga.pk}>{lga.title}</option>\n\n                             ))}\n                            </select>\n                        </div>\n                    </div>\n                )}\n                {othersGov && (\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label> Survey Type</label>\n                            <select type=\"text\" className=\"form-control \" placeholder \n                                validations={[required]}\n                            >\n                                <option value=\"\">Select</option>\n                                <option value=\"SG\">SG</option>\n                                <option value=\"LG\">LG</option>\n                                <option value=\"OTHER\">OTHER</option>\n                            </select>\n                        </div>\n                    </div>\n                )}\n            </div>\n             \n             ) }\n            </div>\n            );   \n                }\n}","\nimport React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Select from \"react-validation/build/select\";\n// import CheckButton from \"react-validation/build/button\";\n// import Header from './Header';\n// import Menu from './Menu';\n// import Footer from './Footer';\nimport axios from 'axios'\n// import MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\n// import authService from '../services/auth.service';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\n// const required = value => {\n//     if (!value) {\n//         return (\n//             <div className=\"alert alert-danger\" role=\"alert\">\n//                 This field is required!\n//             </div>\n//         );\n//     }\n// };\n\nexport default class SurveyAttachment extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.onClickHandler = this.onClickHandler.bind(this);\n        \n        \n        this.state = {\n           \n            loading: false,\n            uploadPercentage: 0,\n            uploadFilePercentage: 0,\n            Filetitle: '',\n            FileInfo: '',\n            file: null,\n            loadingFile: false,\n            selectedFile: null,\n            loaded: 0\n        };\n    }\n\n //My new Smart Upload  \n handleFileTitleChangeSmart =(e)=>{\n    this.setState({\n        Filetitle: e.target.value\n    })\n};\n\nhandleInfoChangeSmart= (e)=> {\n    this.setState({\n        FileInfo: e.target.value\n    })\n};\ncheckMimeType = (event) => {\n    //getting file object\n    let files = event.target.files\n    //define message container\n    let err = []\n    // list allow mime type\n    const types = ['application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/pdf', 'application/doc','application/docx','application/xls','file/pdf', 'file/doc','file/docx','image/png', 'image/jpeg', 'image/gif']\n    // loop access array\n    for (let x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n            // create error message and assign to container   \n            err[x] = files[x].type + ' is not a supported format\\n';\n        }\n    };\n    for (let z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nmaxSelectFile = (event) => {\n    let files = event.target.files\n    if (files.length > 3) {\n        const msg = 'Only 3 images can be uploaded at a time'\n        event.target.value = null\n        toast.warn(msg)\n        return false;\n    }\n    return true;\n}\ncheckFileSize = (event) => {\n    let files = event.target.files\n    let size = 10000000\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n            err[x] = files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n    };\n    for (var z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nonChangeHandler = event => {\n    var files = event.target.files\n    if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        // if return true allow to setState\n        this.setState({\n            selectedFile: files,\n            loaded: 0\n        })\n    }\n}\nonClickHandler (e) {\n    e.preventDefault();\n\n     this.setState({\n          message: \"\",\n          loading: true,\n\n        });\n    const user = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token= user.token \n\n\n\n    const Formdata = new FormData()\n    // const Surveydetails = JSON.parse(localStorage.getItem('Response_Success'));\n    \n        const survey_response=JSON.parse(localStorage.getItem('Response_Success'));\n        const pk= survey_response.survey_response_pk\n    for (var x = 0; x<  this.state.selectedFile.length ; x++) {\n        Formdata.append('document', this.state.selectedFile[x])\n        Formdata.append('title', this.state.Filetitle);\n        Formdata.append('info', this.state.FileInfo);\n        Formdata.append('response', pk);\n        \n    }\n    axios.post(\"https://gfso.chinikiguard.com/survey/api/add/survey-response/document/\", Formdata, {\n        \n    headers: {\n            'content-type': 'multipart/form-data',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n        },\n        \n        onUploadProgress: ProgressEvent => {\n            this.setState({\n                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n            })\n        },\n    })\n        .then(res => {\n            // then print response status\n          //   console.log(res)\n            toast.success('File successfully uploaded')\n          //   window.location = \"/UserUploads\"\n\n          this.setState({\n               message: \"\",\n               loading: true,\n     \n             });\n        })\n        \n        .catch(err => {\n            // then print response status\n            toast.error('Failed to Upload the File')\n        })\n}\n//end file upload\n\n   \n\n    componentDidMount() {\n\n     // const scriptdashboard = document.createElement(\"script\");\n     // scriptdashboard.src = \"./plugins/dropzone/min/dropzone.min.js\";\n     // scriptdashboard.async = true;\n     // document.body.appendChild(scriptdashboard); \n     // const scriptdashboardjquery = document.createElement(\"script\");\n     // scriptdashboardjquery.src = \"./plugins/jquery/jquery.min.js\";\n     // scriptdashboardjquery.async = true;\n     // document.body.appendChild(scriptdashboardjquery);\n     //    console.log(\"hey im here\",Surveydetails.pk)\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n        return (\n            <div>\n                    <br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    \n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Attach Document</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                                                    <ToastContainer />\n\n                                                                    <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded, 2)}%</Progress>\n                                                                    <br />\n                                                                \n                                                                    <div className=\"col-4\">\n\n                                                                        <label > Title</label>\n                                                                        <input type=\"text\" className=\"form-control\"\n                                                                         onChange={this.handleFileTitleChangeSmart} \n                                                                            required />\n                                                                       </div>\n                                                                       <div className=\"col-4\">\n\n                                                                            <label >Info</label>\n                                                                        <input type=\"text\" className=\"form-control\" onChange={this.handleInfoChangeSmart} \n                                                                       required />\n                                                                          </div>\n                                                                          \n                                                                          <div className=\"col-4\">\n                                                                        \n                                                                      <input type=\"file\" className=\"form-control\" onChange={this.onChangeHandler} value={this.state.file}  \n                                                                      required/>\n                                                                      xls,xlsx,pdf,doc,docx,png,jpeg,  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                                                     \n                                                                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                                                         Max.size : 10mb\n\n                                                                      </div>\n                                                                        <br/>\n                                                                        <button \n                                                                        type=\"button\" \n                                                                        className=\"btn btn-info btn-block\" \n                                                                    disabled={this.state.loaded}\n                                                                    onClick={this.onClickHandler} > Attach <i class=\"nav-icon fas fa-paperclip text-white\"></i>                                                        \n                                                                                </button>\n                                                                                <br/>\n                                                                     <center> <Link to=\"/AvailableSurvey\"className=\" btn btn-primary btn-lg float-left \" >\n                                   \n                                                                          <span>Back to Surveys</span>\n                                                                              </Link></center> \n                                                    \n                                                                    </div>\n                                                                  \n                                                                    \n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        \n            </div>\n        );\n    }\n}\n\n","\nimport { useState, useEffect, useRef } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport FormElement from './FormElement';\nimport FormElementCategory from './FormElementCategory';\nimport { FormContext } from './FormContext';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport axios from 'axios'\nimport CheckSurveyTypeResponse from './CheckSurveyTypeResponse';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport SurveyAttachment from './SurveyAttachment';\n\n\n\n//hey i will use react hook here\nconst CompleteSurvey = (props) => {\n\n\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [Get_Survey_Details, Set_Survey_Details] = useState({});\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const singleSurveyPks = JSON.parse(localStorage.getItem('Response_Success'));\n\n  // Call_Survey_Details form localStorage\n  const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n  const Call_Survey_Details = Surveydetails.form;\n\n\n\n  useEffect(() => {\n    // Call_Survey_Details form localStorage\n    const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n    const Call_Survey_Details = Surveydetails.form;\n    Set_Survey_Details(Call_Survey_Details)\n\n\n  }, [])\n\n  const handleNext = (event) => {\n    event.preventDefault();\n\n    const singleSurveyPks = JSON.parse(localStorage.getItem('Response_Success'));\n    const singleSurveyPk = singleSurveyPks.get_next_survey.pk;\n\n    // console.log(Surveys.pk)\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n\n    axios.get(`https://gfso.chinikiguard.com/survey/api/details/${singleSurveyPk}/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n\n      })\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n        }\n\n        // console.log(res.data)\n        window.location = \"/CompleteSurvey\"\n\n      })\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    setMessage(\"\");\n    setLoading(true);\n\n\n    form.current.validateAll();\n\n    //get the user from the localstorage\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    // const state= mytoken\n\n    //get single survey details\n    const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n\n    //get the survey Pk  to send as require survey_pk\n    const SurveydetailsPk = Surveydetails.pk\n\n    //Save all user responses of the survey  to LocalStorage\n    const to_Send = JSON.parse(localStorage.getItem('Response_to_Send'))\n\n    // returns an array of a given object's own enumerable property values\n    const I_to_Send = Object.values(to_Send);\n    const checkUser = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const checkUserpk = checkUser.profile\n    //user state_pk\n    const state_pk = checkUserpk.state\n    const lga_pk = checkUserpk.lga\n\n    //Response Body to send to Mallam Ahmad\n    const Responsebody =\n    {\n      survey_pk: SurveydetailsPk,\n      lga_pk: lga_pk,\n      state_pk: state_pk,\n      form: I_to_Send\n    }\n\n    if (checkBtn.current.context._errors.length === 0) {\n\n      // console.log(Responsebody);\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/create/response/\", Responsebody,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n\n          if (res.data) {\n            localStorage.setItem(\"Response_Success\", JSON.stringify(res.data));\n          }\n          setMessage(res.data.detail);\n          setSuccessful(true);\n          // window.location = \"/AvailableSurvey\"\n\n        },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.survey_title ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      // console.log(Get_Survey_Details)\n    }\n  }\n\n  //this handle the change user typing\n  const handleChange = (id, event) => {\n\n    const newElements = { ...Get_Survey_Details }\n    const arr = [...Get_Survey_Details];\n    // console.log({ ...Get_Survey_Details })\n\n\n    //convert the categories objects to array\n    for (let n = 0; n < newElements.length; n++) {\n      arr.push(newElements[n]);\n    }\n\n    //first array to loop through the categories\n    for (let i = 0; i < arr.length; i++) {\n      const category = arr[i];\n\n      //second array to loop through the field\n      for (let j = 0; j < category.fields.length; j++) {\n        const field = category.fields[j];\n\n        //check the pk for each field\n        const { pk } = field;\n        if (id === pk) {\n          field['value'] = event.target.value;\n        }\n      }\n\n      //first array to loop through the SubCategories\n      for (let h = 0; h < category.sub_categories.length; h++) {\n        const SubCategory = category.sub_categories[h];\n\n        //second array to loop through the fields of SubCategory\n        for (let j = 0; j < SubCategory.fields.length; j++) {\n          const FormElementCategory = SubCategory.fields[j];\n          // console.log(FormElementCategory)\n\n\n          //check the pk for each field\n          const { pk } = FormElementCategory;\n          if (id === pk) {\n            FormElementCategory['value'] = event.target.value;\n          }\n        }\n      }\n    }\n    //sub_categories\n\n    //Save the result to the localStorage\n    localStorage.setItem(\"Response_to_Send\", JSON.stringify(Get_Survey_Details));\n  }\n\n  if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n    return (<Redirect to={'/login'} />)\n  }\n  const checkUser = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n\n  return (\n\n    <FormContext.Provider value={{ handleChange }}>\n      <Header />\n      <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n        <Menu /><br />\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {/* <div className=\"card card-\"> */}\n              {/* left column */}\n\n              {Surveydetails.form.length ?\n\n                <div className=\"col-md-12\">\n                  <Form onSubmit={handleSubmit} ref={form}>\n                    {!successful && (\n                      <div>\n                        <center><h1 class=\"mt-4 mb-2\">{Surveydetails.title}</h1></center>\n                        <center><p class=\"mt-4 mb-2\"><b>Survey Type: &nbsp;</b>{Surveydetails.survey_type.toUpperCase()}&nbsp; <b>Period: &nbsp;</b>{Surveydetails.quarter.toUpperCase()}&nbsp; <b>Year: &nbsp;</b>{Surveydetails.year}</p></center>\n                       \n\n                        <center>\n                          {checkUser.profile.user_type!==\"hq_user\" ?\n\n                          <h5 class=\"mt-4 mb-2\">Make sure you are filling this survey from {checkUser.profile.state_title} state {checkUser.profile.lga_title} Lga </h5>\n                          :<h5 class=\"mt-4 mb-2\">Welcome HQ Staff</h5>}\n\n                          </center>\n                          <CheckSurveyTypeResponse />\n\n                        {Call_Survey_Details.map(myfield => (\n                          <div className=\"card card-\">\n                            <div className=\"card-header\">\n                              <h3 className=\"card-title\">{myfield.name}\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{myfield.economic_code}</h3>\n                              <h6 className=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{myfield.heading}</h6>\n\n                            </div>\n                            <div className=\"card-body\">\n                              {/* <h6 className=\"\">{myfield.type}</h6> */}\n                              <div className=\"row\">\n                                {\n                                  myfield ? myfield.fields.map((field, i) => <FormElement key={i} field={field} />)\n                                    : null\n                                }\n                              </div>\n                            </div>\n                            {myfield.sub_categories.map(subCategory => (\n                              <div>\n                                <h6 className=\"\">{subCategory.name}</h6>\n                                <h6 className=\"\">{subCategory.economic_code}</h6>\n                                <h6 className=\"\">{subCategory.type}</h6>\n                                <h6 className=\"\">{subCategory.heading}</h6>\n\n                                <div className=\"col-12\">\n\n                                  <div className=\"row\">\n                                    {\n                                      subCategory ? subCategory.fields.map((field_category, i) => <FormElementCategory key={i} field_category={field_category} />)\n                                        : null\n                                    }\n                                  </div>\n                                </div>\n                              </div>\n                            ))}\n\n\n                          </div>\n                        ))}\n\n                        <div className=\"form-group\">\n                          {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\n                          <center> <button className=\"btn btn-primary btn-lg \" disabled={loading}>\n                            {loading && (\n                              <span className=\"spinner-grow spinner-grow-sm\"></span>\n                            )}\n                            <span>Next</span>\n                          </button>\n                          </center>\n                        </div>\n                      </div>\n                    )}\n                    <h3>\n                      <center>\n                        {message && (\n                          <div className=\"form-group\">\n                            <div\n                              className={\n                                successful ? \"alert alert-success\" : \"alert alert-danger\"\n                              }\n                              role=\"alert\"\n                            >\n                           \n                              {message}\n\n                              <SurveyAttachment />\n                              {singleSurveyPks.get_next_survey ? singleSurveyPks.get_next_survey.length &&\n                                <Link\n                                  onClick={handleNext}\n                                  className=\"btn  btn btn-primary btn-lg float-right\"\n                                // style={{ borderRadius: '0.25em', textAlign: 'center', color: 'blue', border: '2px solid blue', padding: '0.5em' }}\n\n                                >\n                                  <span>\n                                    Next Survey &nbsp;&nbsp;\n                                  </span>\n\n\n                                </Link>\n                                : <h6 className=\"btn  btn btn-primary btn-lg float-right\"\n                                  style={{ backgroundColor: 'red' }}>\"No Next Survey Available for this Year\"</h6>}\n\n                            </div>\n                          </div>\n                        )}\n                      </center>\n\n                    </h3>\n\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                  </Form>\n                </div>\n                : <center><h2>No  Survey Template Available</h2></center>\n\n              }\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </FormContext.Provider>\n  );\n}\n\nexport default CompleteSurvey;\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n// import Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\n// import Header from \"./Header\";\n// import Menu from \"./Menu\";\n// import Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\nexport default class CreateNewUser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    // this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeLG = this.onChangeLG.bind(this);\n    this.onChangeState = this.onChangeState.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    // this.onChangeDob = this.onChangeDob.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    // this.onChangeBranch = this.onChangeBranch.bind(this);\n    this.onChangeDesignation = this.onChangeDesignation.bind(this);\n    // this.onChangeStaffNumber = this.onChangeStaffNumber.bind(this);\n    this.onChangeuser_type = this.onChangeuser_type.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      // address: \"\",\n      lga: \"\",\n      states: \"\",\n      // dob: \"\",\n      email: \"\",\n      phone_number: \"\",\n      successful: false,\n      message: \"\",\n      loading: false,\n      Lgaloading: false,\n      // branch_pk:\"\",\n      designation_pk: \"\",\n      group_pk: 6,\n      // staff_number:\"\",\n      user_type: \"\",\n      statesGov: false,\n      lgasGov: false,\n      othersGov: false,\n\n    };\n  }\n\n\n  componentDidMount() {\n\n    // const token = \"bd7cfc4fa97ec7a61fff4dd69fad8f548f2d86dd\";\n    // localStorage.setItem(\"token\", JSON.stringify(token));\n\n    //call the States and LGAS at the first \n    const state = \"Ahmad loophole\";\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n        }\n        this.setState({\n          List_Of_State: res.data,\n        });\n\n        // console.log(res.data)                  \n\n      })\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n        }\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/branch/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n\n      },\n    )\n      .then(res => {\n        this.setState({\n          BranchList: res.data,\n        });\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/designation/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"designations\", JSON.stringify(res.data));\n        }\n        this.setState({\n          DesignationList: res.data,\n        });\n      });\n\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/users/group/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"designations\", JSON.stringify(res.data));\n        }\n        this.setState({\n          GroupList: res.data,\n        });\n      });\n\n\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    // const GetUsers = JSON.parse(localStorage.getItem('Users'));\n    // const list_of_lga = JSON.parse(localStorage.getItem('List_Of_Lga'))\n    // const token = JSON.parse(localStorage.getItem('token'));\n\n    // const Lgas = list_of_lga.filter(item => item.state === statepk);\n    // localStorage.setItem(\"LGAS\", JSON.stringify(Lgas));\n    try {\n      if (prevState.user_type !== this.state.user_type) {\n        const user = this.state.user_type\n\n        if (user) {\n          this.setState({\n            statesGov: user.includes(\"sg_user\"),\n            lgasGov: user.includes(\"lg_user\"),\n            othersGov: user.includes(\"other\"),\n          });\n        }\n      }\n\n    } catch (e) {\n\n      console.log(e);\n    }\n\n\n    try {\n      if (prevState.states !== this.state.states) {\n        const statepk = this.state.states\n\n        if (statepk) {\n          this.setState({\n\n            Lgaloading: true\n          });\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n              headers:\n              {\n                'Content-Type': 'application/json',\n                // 'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n              },\n              params:\n              {\n                state_pk: statepk\n              }\n            },\n          )\n            .then(res => {\n\n              this.setState({\n                Lgaloading: false,\n                Lgas: res.data,\n              });\n\n            });\n        }\n\n      }\n\n    } catch (e) {\n\n      console.log(e);\n    }\n\n\n\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      first_name: e.target.value\n    });\n  }\n  onChangeLastName(e) {\n    this.setState({\n      last_name: e.target.value\n    });\n  }\n  // onChangeAddress(e) {\n  //   this.setState({\n  //     address: e.target.value\n  //   });\n  // }\n  onChangeLG(e) {\n    this.setState({\n      lga: e.target.value\n    });\n  }\n  onChangeState(e) {\n    this.setState({\n      states: e.target.value\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n  // onChangeDob(e) {\n  //   this.setState({\n  //     dob: e.target.value\n  //   });\n  // }\n  onChangePhoneNumber(e) {\n    this.setState({\n      phone_number: e.target.value\n    });\n  }\n  onChangeDesignation(e) {\n    this.setState({\n      designation_pk: e.target.value\n    });\n  }\n  // onChangeBranch(e) {\n  //   this.setState({\n  //     branch_pk: e.target.value\n  //   });\n  // }  \n  // onChangeStaffNumber(e) {\n  //   this.setState({\n  //     staff_number: e.target.value\n  //   });\n  // } \n  onChangeuser_type(e) {\n    this.setState({\n      user_type: e.target.value\n    });\n  }\n\n\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false,\n      loading: true\n    });\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.createNewUser(\n        this.state.username,\n        this.state.password,\n        this.state.first_name,\n        this.state.last_name,\n        // this.state.address,\n        this.state.lga,\n        this.state.states,\n        // this.state.dob,\n        this.state.email,\n        this.state.phone_number,\n        this.state.group_pk,\n        this.state.designation_pk,\n        // this.state.branch_pk,\n        // this.state.staff_number,\n        this.state.user_type\n      ).then(\n        response => {\n          if (response.data) {\n            localStorage.setItem(\"tempoUser\", JSON.stringify(response.data));\n            localStorage.setItem(\"_WannanGfsoCbnUserNe\", JSON.stringify(response.data));\n          }\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n          window.location = \"/UserUploads\"\n          console.log(response.data)\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data.detail &&\n              error.response.data.detail) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n\n  }\n\n  render() {\n    const { statesGov, lgasGov } = this.state;\n    // const list_of_lga = JSON.parse(localStorage.getItem('List_Of_Lga'))\n\n    return (\n\n      <div className=\"hold-transition login-page\">\n        {this.state.ViewTemplateloading && (\n          <span className=\"\">\n            <div className=\"overlay-wrapper\">\n              <div className=\"overlay \">\n                <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n            </div>\n\n          </span>\n        )}\n        <div className=\"\">\n          <div className=\"login-logo\">\n            <img src={Logo} height=\"100px\" alt=\"\" />\n            <br />\n            <Link to=\"\"><b>CBN</b> GFSO</Link>\n          </div>\n          <div className=\"col-12\">\n\n            <div className=\"card-\">\n              <div className=\"card-body login-card-body\">\n                {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                <br />\n                <Form onSubmit={this.handleRegister} ref={c => { this.form = c; }} className=\"form\" id=\"\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* text input */}\n                      <div className=\"form-group\">\n                        <label>First Name</label>\n                        <Input type=\"text\" id=\"firstname\" className=\"form-control\" placeholder=\"first name\" value={this.state.first_name}\n                          onChange={this.onChangeFirstName}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Last Name</label>\n                        <Input type=\"text\" id=\"lastname\" className=\"form-control\" placeholder=\"last name\" value={this.state.last_name}\n                          onChange={this.onChangeLastName}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* textarea */}\n                      <div className=\"form-group\">\n                        <label>Email</label>\n                        <Input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email}\n                          onChange={this.onChangeEmail}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Phone Number</label>\n                        <Input type=\"tel\" id=\"phonenumber\" className=\"form-control\" placeholder=\"Phone number\" value={this.state.phone_number}\n                          onChange={this.onChangePhoneNumber}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div className=\"row\"> */}\n\n                  {/* <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Staff Number</label>\n                        <Input type=\"number\" id=\"staffnumber\" className=\"form-control\" \n                        placeholder=\"Staff number\" value={this.state.staff_number}\n                          onChange={this.onChangeStaffNumber}\n                          validations={[required]} />\n                      </div>\n                    </div> */}\n\n\n                  {/* <div className=\"row\"> */}\n                  {/* <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Address</label>\n                        <Textarea type=\"text\" id=\"address\" className=\"form-control\"\n                          placeholder=\"Address\" value={this.state.address}\n                          onChange={this.onChangeAddress} validations={[required]} />\n                      </div>\n                    </div> */}\n                  {/* <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n\n                        <label>Date of birth</label>\n\n                        <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                          value={this.state.dob}\n                          onChange={this.onChangeDob}\n                          validations={[required]}\n\n                        />\n                      </div>\n                    </div> */}\n                  {/* </div> */}\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n\n                      <div className=\"form-group\">\n                        <label>User Type</label>\n                        <Select\n                          className=\"form-control\"\n                          id=\"exampleFormControlSelect9\"\n                          validations={[required]}\n                          onChange={this.onChangeuser_type}\n                          value={this.state.user_type}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"sg_user\">SG</option>\n\n                          <option value=\"lg_user\">LG</option>\n\n                        </Select>\n\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-6\">\n\n                      <div className=\"form-group\">\n                        <label>Designation</label>\n\n                        <Select\n                          className=\"form-control\"\n                          id=\"exampleFormControlSelect9\"\n                          validations={[required]}\n                          onChange={this.onChangeDesignation}\n                          value={this.state.designation_pk}\n                        >\n                          <option value=\"\">--select--</option>\n                          {this.state.DesignationList && this.state.DesignationList.map(Designation => (\n                            <option value={Designation.pk}>{Designation.title}</option>\n                          ))}\n                        </Select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    {statesGov && (\n                      <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                          <label>State</label>\n                          <Select value={this.state.states}\n                            onChange={this.onChangeState}\n                            validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n                            <option value>Select</option>\n                            {this.state.List_Of_State && this.state.List_Of_State.map(state => (\n\n                              <option value={state.pk}>{state.title}</option>\n\n                            ))}\n\n                          </Select>\n                        </div>\n                      </div>\n                    )}\n                    {lgasGov && (\n\n                      <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>State</label>\n                        <Select value={this.state.states}\n                          onChange={this.onChangeState}\n                          validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n                          <option value>Select</option>\n                          {this.state.List_Of_State && this.state.List_Of_State.map(state => (\n\n                            <option value={state.pk}>{state.title}</option>\n\n                          ))}\n\n                        </Select>\n                      </div>\n                    </div>\n                      <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                          <label>Lga</label>\n                          {this.state.Lgaloading && (\n                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                          )}\n                          <Select value={this.state.lga}\n                            onChange={this.onChangeLG}\n                            validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n\n                            <option > Select  </option>\n                            {this.state.List_Of_Lga && this.state.List_Of_Lga.map(lga => (\n                              <option value={lga.pk}>{lga.title}</option>\n                            ))}\n                          </Select>\n\n\n                        </div>\n                        </div>\n                        </div>\n                    )}\n                  </div>\n                  <div className=\"row\">\n                    {/* <div className=\"col-sm-6\">\n\n                  <div className=\"form-group\">\n                  <label>Branch</label>\n\n                  <Select\n                    className=\"form-control\"\n                    id=\"exampleFormControlSelect9\"\n                    validations={[required]}\n                    onChange={this.onChangeBranch}\n                    value={this.state.branch_pk}\n                  >\n                    <option value=\"\">--select--</option>\n\n                    {this.state.BranchList && this.state.BranchList.map(branch => (\n\n                      <option value={branch.pk}>{branch.name}</option>\n\n                    ))}\n\n                  </Select>\n                  </div>\n                  </div> */}\n\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Username</label>\n                        <Input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Username\"\n                          value={this.state.username}\n                          onChange={this.onChangeUsername}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Password</label>\n                        <Input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"password\" value={this.state.password}\n                          onChange={this.onChangePassword}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button\n                      className=\"btn btn-primary btn-lg float-right\"\n                      disabled={this.state.loading}\n                    >\n                      {this.state.loading && (\n                        <span className=\"spinner-border spinner-border-sm\"></span>\n                      )}\n                      <span>Register</span>\n                    </button>\n                  </div>\n                  <center>\n                    {this.state.message && (\n                      <div className=\"form-group\">\n                        <div\n                          className={\n                            this.state.successful\n                              ? \"alert alert-success\"\n                              : \"alert alert-danger\"\n                          }\n                          role=\"alert\"\n                        >\n                          {this.state.message}\n                        </div>\n                      </div>\n                    )}\n                  </center>\n                  <CheckButton\n                    style={{ display: \"none\" }}\n                    ref={c => {\n                      this.checkBtn = c;\n                    }}\n                  />\n\n                </Form>\n\n              </div>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n\n\n    );\n  }\n}","// import TextInput from './FormElements/TextInput'\n// import SelectOption from './FormElements/SelectOption'\nimport { useState } from 'react';\nimport axios from 'axios'\nimport React, { forwardRef, useImperativeHandle } from 'react';\n\n\n\nconst AddField = forwardRef((props, ref) => {\n\n   \n\n  \n  const [inputList, setInputList] = useState([{ name: \"\", economic_code: \"\" }]);\n\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  // const [loading, setLoading] = useState(false);\n\n  // handle input change\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = index => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputList([...inputList, { name: \"\", economic_code: \"\" }]);\n  };\n\n  // const Append = ()=>{\n\n  // }\n  useImperativeHandle(\n    ref,\n    () => ({\n      handleSave (){\n\n        //login user token\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n    \n        // Existing template from localStorage\n        // const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n        const ExtractTemplatePk =props.fullTemplate.pk\n    \n        //his  fields from template\n        // const twist_result = [];\n        // for (let i = 0; i < ExtractTemplate.form.length; i++) {\n        //   twist_result.push(ExtractTemplate.form[i]);\n        // }\n    \n        // localStorage.setItem(\"result\", JSON.stringify(twist_result));\n    \n        // my custom fields\n        const fieldsList = [];\n        for (let i = 0; i < inputList.length; i++) {\n          fieldsList.push(inputList[i]);\n        }\n    \n       const  fullTemplate=[];\n       for (let i = 0; i < props.field.length; i++) {\n        fullTemplate.push(props.field[i]);\n      } \n      // console.log(fullTemplate)\n\n\n        // newly fields added to selected category from user\n        const MyCategoryName = props.MyCategoryName;\n        const result = fullTemplate.find(({ name }) => name === MyCategoryName);\n    \n        const modifiedObj = fullTemplate.filter(item => item.name !== MyCategoryName);\n    \n        const fieldsObj = modifiedObj.concat(result);\n\n        const last_element = fieldsObj[fieldsObj.length - 1];\n\n        const final = last_element.fields\n        const name = last_element.name;\n        const economic_code = last_element.economic_code;\n        const heading = last_element.heading;\n        const type = last_element.type;\n        const finalup = final.concat(inputList);\n    \n    \n        const my_category = {\n          name,\n          economic_code,\n          heading,\n          type,\n          fields:\n          finalup,\n    \n        }\n\n        \n        const form = modifiedObj.concat(my_category)\n\n        // select the survey pk from localstorage\n        const survey_pk = JSON.parse(localStorage.getItem('SelectedSurvey'))\n\n\n        // final result to  be send to the endpoint\n        const body =\n        {\n          survey_template_pk: ExtractTemplatePk,\n          survey_pk: survey_pk,\n          form,\n    \n    \n        }\n        // console.log(body)\n    \n        axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n        {\n          headers:\n          {\n              'Authorization': `Token ${token}`,\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n              'Access-Control-Allow-Credentials': true\n          },\n      }\n        )\n          .then(res => {\n            window.location = \"/ViewSurvey\"\n            // if (res.data) {\n            //   localStorage.setItem(\"AddedField\", JSON.stringify(res.data));\n            // }\n            setMessage(res.data.detail);\n            setSuccessful(true);\n          },\n            (error) => {\n              const resMessage =\n                (error.response &&\n                  error.response.data.detail &&\n                  error.response.data.detail) ||\n                error.message.message ||\n                error.toString();\n    \n              setSuccessful(false);\n              // setLoading(false);\n              setMessage(resMessage);\n            }\n          );\n    \n    \n    \n      }\n    }),\n)\n\n  \n\n  return (\n    <div >\n\n\n      {inputList.map((x, i) => {\n        \n        return (\n          <div >\n         \n            <hr/>\n            <h6>Add field (optional)</h6>\n            <div className=\"row\">\n\n              <div className=\"col-4\">\n\n                <input\n                  className=\"form-control\"\n                  name=\"name\"\n                  placeholder=\"Enter Field Name\"\n                  value={x.name}\n                  onChange={e => handleInputChange(e, i)}\n                />\n\n              </div>\n              <div className=\"col-4\">\n                <input\n                  className=\"form-control\"\n                  name=\"economic_code\"\n                  placeholder=\"Enter economic code\"\n                  value={x.economic_code}\n                  onChange={e => handleInputChange(e, i)}\n                   />\n              </div>\n\n            </div>\n\n               &nbsp;\n            <div className=\"btn-box\">\n              {inputList.length !== 1 && <button\n\n                className=\"btn btn-danger\"\n                onClick={() => handleRemoveClick(i)}>\n                -\n                   </button>\n              }\n                   &nbsp;&nbsp;\n                 {inputList.length - 1 === i &&\n                <button\n                  className=\"btn btn-primary\"\n\n                  onClick={handleAddClick}>Add more &nbsp;+\n                 </button>\n              }\n                 {/* &nbsp;&nbsp;\n                 {inputList.length - 1 === i &&\n                <button\n                  className=\"btn btn-success\"\n\n                  onClick={Append}>Append&nbsp;✓\n                 </button>\n                 } */}\n\n              \n            </div>\n            {message && (\n                <div className=\"form-group\">\n                  <div\n                    className={\n                      successful ? \"alert alert-success\" : \"alert alert-danger\"\n                    }\n                    role=\"alert\"\n                  >\n\n                    {message}\n                  </div>\n                </div>\n\n              )}\n              \n     \n       </div>\n          \n        );\n      })}\n\n      {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\n\n    </div>\n\n  );\n\n\n\n\n})\nexport default AddField\n","// import { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport AddField from \"./AddField\";\nimport React, {  useRef, useState, useEffect } from 'react';\n\n\n\n\nexport default function EditTemplate() {\n\n    // const mySurvey_associate = JSON.parse(localStorage.getItem('ApprovedSurveyToUser'))\n    // const [mySurvey, setMySurvey] = useState(mySurvey_associate);\n    const [selectSurvey, setSelectSurvey] = useState(\"\");\n    // const [successful, setSuccessful] = useState(false);\n    // const [message, setMessage] = useState(\"\");\n    // const [loading, setLoading] = useState(false);\n  \n\n    const onChangeMySurvey = (e) => {\n        const selectSurvey = e.target.value;\n        setSelectSurvey(selectSurvey);\n        // localStorage.setItem(\"SelectedSurvey\", JSON.stringify(mySurvey));\n\n    };\n\n    useEffect(() => {\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurveyToUser\", JSON.stringify(res.data));\n                }\n                const selectSurvey = res.data\n                setSelectSurvey(selectSurvey);\n\n            })\n    }, []);\n\n    const childRef = useRef();\n    const SingleTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n    const SingleTemplateCategories = SingleTemplate.form;\n    const TemplateTitle = SingleTemplate.title;\n\n    return (\n        <div>\n            <Header />\n            <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                <Menu /><br />\n                <section className=\"content\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {/* left column */}\n                            <div className=\"col-md-12\">\n                                <center><h4>{TemplateTitle}</h4></center>\n\n                                {/* right column/ hannun dama */}\n                                {/* /.card */}\n                                {SingleTemplateCategories && SingleTemplateCategories.map((Templatefields, i) => (\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">{Templatefields.economic_code}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>{Templatefields.name}</b>\n                                            </h3>\n                                            {/* <h6 className=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{Templatefields.type}</h6> */}\n                                            <h6 className=\"\" style={{ fontStyle: 'italic' }}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{Templatefields.heading}</h6>\n\n                                        </div>\n                                        <div className=\"card-body\">\n                                            {/* <h6 className=\"\">{Templatefields.economic_code}</h6> */}\n                                            {Templatefields.sub_categories.map(subCategory => (\n                                                <div>\n                                                    <h6 className=\"\">{subCategory.name}</h6>\n\n                                                    <div className=\"row\">\n                                                        {subCategory.fields.map(SubCategoryfields => (\n                                                            <div className=\"col-4\">\n                                                                <h6 className=\"\">{SubCategoryfields.economic_code}</h6>\n                                                                <h6 className=\"\">{SubCategoryfields.type}</h6>\n                                                                <h6 className=\"\">{SubCategoryfields.heading}</h6>\n\n                                                                <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled />                                                <br />\n                                                            </div>\n                                                        ))}\n\n                                                    </div>\n\n                                                </div>\n                                            ))}\n                                            <hr />\n                                            <div className=\"row\">\n                                                {Templatefields.fields.map((fields, i) => (\n\n                                                    <div className=\"col-4\">\n                                                        <h6 className=\"\">{fields.economic_code}</h6>\n                                                        <h6 className=\"\">{fields.type}</h6>\n                                                        <h6 className=\"\">{fields.heading}</h6>\n                                                        <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled />                                                <br />\n\n                                                    </div>\n\n\n                                                ))}\n                                            </div>\n                                            <AddField key={i} ref={childRef}\n                                             field={SingleTemplateCategories}\n                                             MyCategoryName={Templatefields.name}\n                                             fullTemplate={SingleTemplate}\n                                            />\n\n                                        </div>\n                                        {/* /.card-body */}\n                                    </div>\n                                ))}\n\n                                {/* /.card */}\n                                {SingleTemplateCategories.length ?\n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                           \n                                            <div>\n                                                <div className=\"form-group\">\n                                                    <select\n                                                        className=\"form-control\"\n                                                        id=\"exampleFormControlSelect9\"\n                                                        onChange={onChangeMySurvey}\n                                                        value={selectSurvey}\n                                                        required\n                                                    >\n                                                        <option value=\"\">--select--</option>\n\n                                                        {selectSurvey && selectSurvey.map(survey => (\n\n                                                            <option value={survey.pk}>{survey.title}</option>\n\n                                                        ))}\n\n                                                    </select>\n                                                </div>\n                                      \n                                            </div>\n                                            <center>\n                                            <button\n                                                className=\"btn btn-success btn-lg \"\n\n                                                onClick={() => { childRef.current.handleSave() }}\n                                            >\n                                                Adopt Template\n                                                </button>\n                                                </center>\n                                        </div>\n\n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n\n                                }\n                                {/* /.card-body */}\n                            </div>\n                            {/* /.card */}\n                        </div>\n                        {/*/.col (right) */}\n                        {/* /.row */}\n                    </div>{/* /.container-fluid */}\n                </section>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class Surveys extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    // EditTemplate(Surveys) {\n\n    //     //\n    //     const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    //     const token = mytoken.token;\n    //     const survey_pk = Surveys.survey_pk;\n    //     // console.log(Surveys.survey_pk)\n\n       \n    //     axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n    //         {\n    //             headers:\n    //             {\n    //                 'Content-Type': 'application/json',\n    //                 'Authorization': `Token ${token}`,\n    //                 'Access-Control-Allow-Origin': '*',\n    //                 'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n    //                 'Access-Control-Allow-Credentials': true\n    //             },\n    //             params:{\n    //                 survey_pk:survey_pk\n    //             }\n\n    //         })\n    //         .then(res => {\n    //             if (res.data) {\n    //                 localStorage.setItem(\"ResponsesTable\", JSON.stringify(res.data));\n    //             }\n    //             console.log(res.data)\n    //             // window.location = \"/CompleteSurvey\"\n\n    //         })\n\n\n    // }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               {/* <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th> */}\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                {/* <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th> */}\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    {/* <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td> */}\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        {/* <Link className=\"btn btn-primary btn-sm\" to=\"/\">\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     More\n                                                    </Link>&nbsp;&nbsp; */}\n \n                                                  </td>\n\n                                                </tr>\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n\nexport default class AvailableSurvey extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n            loadingModal: false,\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          \n            \n        const mytoken = AuthService.getCurrentUser();\n        const token = mytoken.token;\n       \n        //call the States and LGAS at the first \n        const states = \"Ahmad loophole\";\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: states\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: states\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n            });\n    }\n\n    componentWillMount() {\n\n    const Check=JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = Check.token\n\n            const user_type=Check.profile.user_type\n            const lga =Check.profile.lga\n            const state =Check.profile.state\n            // const Hq = state && lga\n\n            switch (user_type) {\n                case 'sg_user':\n                    return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&states=${state}&user_responded=no`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n             \n                case 'lg_user':\n                    return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&lgas=${lga}&user_responded=no`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n                    case 'hq_user':\n                    return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n        \n                default:\n                    return null;\n            }\n        \n        }\n    Fill_Survey(Surveys) {\n        // localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const singleSurveyPk = Surveys.pk;\n        // console.log(Surveys.pk)\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n        \n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                \n                // console.log(res.data)\n                window.location = \"/CompleteSurvey\"\n\n            })\n    }\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n         \n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\">\n                    {/* Default box */}\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <div className=\"card card-solid\">\n                        <div className=\"card-body pb-0\">\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div>\n                                {this.state.Surveys.length?\n                                <div className=\"row\">\n                                    {this.state.Surveys.map(surveys => (\n\n                                        <div className=\"col-md-4\">\n                                            {/* Widget: user widget style 1 */}\n                                            <div className=\"card card-widget widget-user\">\n                                                {/* Add the bg color to the header using any of the bg-* classes */}\n                                                <div className=\"widget-user-header \" style={{ borderRadius: '0.25em', textAlign: 'center', color: 'green', border: '1px solid green', padding: '0.5em' }}>\n                                                    {this.state.warningLoad ? (\n                                                        <>\n\n                                                            <div className=\"widget-user float-left\">\n                                                                <i className=\"fas fa-bullhorn\" />\n\n                                                                <center>\n\n                                                                    <Spinner\n                                                                        as=\"span\"\n                                                                        animation=\"grow\"\n                                                                        size=\"lg\"\n                                                                        role=\"status\"\n                                                                        aria-hidden=\"true\"\n                                                                        variant=\"warning\"\n                                                                    />\n                                                                </center>\n                                                            </div>\n                                                        </>\n                                                    ) : (\n                                                        <h2 className=\"lead\"><b></b></h2>\n\n                                                    )}\n\n                                                    <Link\n                                                        //  to=\"/EditTemplate\"\n                                                        onClick={this.Fill_Survey.bind(this, surveys)}\n                                                        className=\"btn btn float-right\"\n                                                        disabled={this.state.loading}\n                                                        style={{ borderRadius: '0.25em', textAlign: 'center', color: 'blue', border: '1px solid blue', padding: '0.5em' }}\n\n                                                    >\n                                                        Fill Survey &nbsp;&nbsp;\n                                                                   {/* <i className=\"fas fa-check\" /> */}\n\n                                                    </Link>\n                                                    <br />\n                                                    <h5 className=\"widget-user-title\" >{surveys.title}</h5>\n                                                    <hr />\n                                                    <h5 className=\"widget-user-image\">{surveys.survey_type}</h5>\n                                                </div>\n\n                                                <div className=\"card-footer\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-4 border-right\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.status}</h5>\n                                                                <span className=\"description-text\">Status</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                        <div className=\"col-sm-4 border-right\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.start_date}</h5>\n                                                                <span className=\"description-text\">Start Date</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                        <div className=\"col-sm-4\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.due_date}</h5>\n                                                                <span className=\"description-text\">Due Date</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                    </div>\n                                                    {/* /.row */}\n                                                </div>\n                                            </div>\n                                            {/* /.widget-user */}\n                                        </div>\n\n\n                                    ))}\n                                </div>\n                                            : <center><h2>No  Survey  Available For You at The Moment! </h2></center>\n                                        }\n                              </div>\n                            )}\n                        </div>\n                        {/* /.card-body */}\n                        <div className=\"card-footer\">\n                            <nav aria-label=\"Contacts Page Navigation\">\n                                <ul className=\"pagination justify-content-center m-0\">\n                                    {/* <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">1</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">4</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">5</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">6</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">7</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">8</a></li> */}\n                                </ul>\n                            </nav>\n                        </div>\n                        {/* /.card-footer */}\n                    </div>\n                    {/* /.card */}\n                </section>\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","\nimport React from 'react';\nimport { ReactFormGenerator, ElementStore } from 'react-form-builder2';\nimport axios from \"axios\";\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { Redirect } from 'react-router-dom';\n// import MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Select from \"react-validation/build/select\";\n\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Demobar extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.onChangeSurvey = this.onChangeSurvey.bind(this);\n    \n    // _onSubmit\n\n    this.state = {\n      data: [],\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false,\n      category: \"\",\n\n      loading: false,\n      message: \"\",\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false\n    };\n\n    const update = this._onChange.bind(this);\n    ElementStore.subscribe(state => update(state.data));\n  }\n\n  onChangeSurvey(e) {\n    this.setState({\n      survey: e.target.value\n    });\n  }\n \n\n\n\n\n  showPreview() {\n\n\n    this.setState({\n\n      previewVisible: true,\n    });\n  }\n\n  showShortPreview() {\n    this.setState({\n      shortPreviewVisible: true,\n    });\n  }\n\n  showRoPreview() {\n    this.setState({\n      roPreviewVisible: true,\n    });\n  }\n\n  closePreview() {\n    this.setState({\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false,\n    });\n  }\n\n  _onChange(data) {\n    this.setState({\n      data,\n    });\n  }\n\n  _onSubmit = (data) => {\n\n\n    this.setState({\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: true\n    });\n\n    //login user token\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n\n    // Existing template from localStorage\n    const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n    const ExtractTemplatePk = ExtractTemplate.pk;\n\n    //his  fields from template\n    const twist_result = [];\n    for (let i = 0; i < ExtractTemplate.form.length; i++) {\n      twist_result.push(ExtractTemplate.form[i]);\n    }\n\n    localStorage.setItem(\"result\", JSON.stringify(twist_result));\n\n\n    // my custom fields from formbuilder\n    const fieldsList = [];\n    for (let i = 0; i < data.length; i++) {\n      fieldsList.push(data[i]);\n    }\n\n    // newly fields added to selected category from user\n    const MyCategoryName = JSON.parse(localStorage.getItem('MyCategoryName'));\n    const result = twist_result.find(({ name }) => name === MyCategoryName);\n\n    // const myFields = result.fields;\n    // const fields = myFields.concat(fieldsList);\n    // console.log(\"fields:\", fields);\n    // console.log(\"result:\", result);\n    // modified Array objects from template\n    const modifiedObj = twist_result.filter(item => item.name !== MyCategoryName);\n    // console.log(\"modifiedObj:\", modifiedObj);\n\n\n\n    const fieldsObj = modifiedObj.concat(result);\n    // console.log(\"fieldsObj:\", fieldsObj);\n    const last_element = fieldsObj[fieldsObj.length - 1];\n    // console.log(\"last_element:\", last_element);\n    const final = last_element.fields;\n    const name = last_element.name;\n    const economic_code = last_element.economic_code;\n    const heading = last_element.heading;\n    const type = last_element.type;\n    const finalup = final.concat(data);\n    // console.log(\"final:\", finalup);\n    // console.log(\"name:\", name);\n\n    \n    const my_category = {\n      name,\n      economic_code,\n      heading,\n      type,\n      fields:\n        finalup,\n\n    }\n    // console.log(\"my_category:\", my_category);\n\n    const form = modifiedObj.concat(my_category)\n    // console.log(\"twist_result:\", twist_result);\n\n\n    // final result to  be send to the endpoint\n    const body =\n    {\n      survey_template_pk: ExtractTemplatePk,\n      survey_pk: this.state.survey,\n      form,\n      \n\n    }\n\n    console.log(body);\n\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n          this.setState({\n            AdoptSurveymessage: res.data.detail,\n            AdoptSurveysuccessful: true,\n\n          });\n\n          if (res.data) {\n            localStorage.setItem(\"AdopteSurveyField\", JSON.stringify(res.data));\n          }\n\n        },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.AdoptSurveyloading ||\n              error.toString();\n\n            this.setState({\n              AdoptSurveyloading: false,\n              message: resMessage\n            });\n          }\n        );\n    } else {\n      this.setState({\n        AdoptSurveyloading: false\n      });\n    }\n  }\n  componentDidMount() {\n\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes\",\n      {\n        headers:\n        {\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n      })\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"ApprovedSurveyToUser\", JSON.stringify(res.data));\n        }\n        // (res);\n        // (res.data);\n        this.setState({\n          ApprovedSurveyToUser: res.data,\n          myloading: false,\n          warningLoad: true,\n        });\n      })\n\n\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n\n  // }\n  render() {\n\n    let modalClass = 'modal fade';\n    if (this.state.previewVisible) {\n      modalClass += ' show d-block';\n    }\n\n    let shortModalClass = 'modal short-modal';\n    if (this.state.shortPreviewVisible) {\n      shortModalClass += ' show d-block';\n    }\n\n    let roModalClass = 'modal ro-modal';\n    if (this.state.roPreviewVisible) {\n      roModalClass += ' show d-block';\n    }\n\n    return (\n\n      <div className=\"clearfix\" style={{ margin: '10px', width: '70%' }}>\n        {/* <h4 className=\"float-left\">Preview</h4> */}\n\n        <section className=\"content-header\">\n\n          <div className=\"container-fluid\">\n            {/* general form elements disabled */}\n\n            {/* /.card */}\n\n            <br />\n            <button className=\"btn btn-primary btn-lg float-right\" style={{ marginRight: '10px' }} onClick={this.showPreview.bind(this)}>Preview & Deploy </button>\n            <br />\n            {this.state.previewVisible &&\n              <div className={modalClass} id=\"modal-xl\">\n                <div className=\"modal-dialog modal-xl\">\n                  <div className=\"modal-content\">\n                    \n                    <div className=\"row\">\n\n                      <div className=\"col-md-6\">\n                        <div className=\"card card\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">Select Survey</h3>\n                          </div>\n                          {/* /.card-header */}\n                          <div className=\"card-body\">\n                            <Form onSubmit={this._onSubmit} ref={c => { this.form = c; }} >\n\n                              <div className=\"form-group\">\n                                <Select\n                                  className=\"form-control\"\n                                  id=\"exampleFormControlSelect9\"\n                                  validations={[required]}\n                                  onChange={this.onChangeSurvey}\n                                  value={this.state.survey}\n                                >\n                                  <option value=\"\">--select--</option>\n\n                                  {this.state.ApprovedSurveyToUser && this.state.ApprovedSurveyToUser.map(survey => (\n\n                                    <option value={survey.pk}>{survey.title}</option>\n\n                                  ))}\n\n                                </Select>\n                              </div>\n                              \n                             \n\n                              <center>\n                                {this.state.AdoptSurveymessage && (\n                                  <div className=\"pb-5\" >\n                                    <div\n                                      className={\n                                        this.state.AdoptSurveysuccessful\n                                        ? \"alert alert-success\"\n                                        : \"alert alert-danger\"\n                                    }\n                                      role=\"alert\"\n                                    >\n                                      <h3 > {this.state.AdoptSurveymessage}</h3>\n                                    </div>\n                                  </div>\n                                )}\n                              </center>\n\n                              <CheckButton\n                                style={{ display: \"none\" }}\n                                ref={c => {\n                                  this.checkBtn = c;\n                                }}\n                              />\n\n                            </Form>\n\n\n                          </div>\n                          {/* /.card-body */}\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <ReactFormGenerator\n                          download_path=\"\"\n                          back_action=\"/\"\n                          back_name=\"Back\"\n                          answer_data={{}}\n                          action_name=\"Save\"\n                          form_action=\"https://gfso.chinikiguard.com/survey/api/add/survey/fields/\"\n                          form_method=\"POST\"\n                          onSubmit={this._onSubmit}\n                          variables={this.props.variables}\n                          data={this.state.data} />\n\n                      </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n\n            {this.state.roPreviewVisible &&\n              <div className={roModalClass}>\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <ReactFormGenerator\n                      download_path=\"\"\n                      back_action=\"/\"\n                      back_name=\"Back\"\n                      answer_data={{}}\n                      action_name=\"Save\"\n                      form_action=\"/\"\n                      form_method=\"POST\"\n                      read_only={true}\n                      variables={this.props.variables}\n                      hide_actions={true} data={this.state.data} />\n\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n\n            {this.state.shortPreviewVisible &&\n              <div className={shortModalClass}>\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <ReactFormGenerator\n                      download_path=\"\"\n                      back_action=\"\"\n                      answer_data={{}}\n                      form_action=\"/\"\n                      form_method=\"POST\"\n                      data={this.state.data}\n                      display_short={true}\n                      variables={this.props.variables}\n                      hide_actions={false} />\n\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </section>\n      </div>\n\n    );\n  }\n}","export const JOHN =  ''\r\n","import 'react-form-builder2/dist/app.css';\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Menu from \"./Menu\";\nimport { ReactFormBuilder } from 'react-form-builder2';\nimport Demobar from \"./Demobar\";\nimport * as variables from './variables';\n\n\nexport default class CategoryView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n     \n\n        this.state = {\n            loading: false,\n            message: \"\",\n\n        };\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false,\n            loading: true,\n            meloading: true\n\n        });\n\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n\n        const responses = JSON.parse(localStorage.getItem('SingleResponse'));\n        const response_data = responses.data;\n        const get_form = response_data.get_form;\n        // console.log(response_data);\n        const value = this.state.title;\n\n\n        \n\n        const body =\n        {\n            survey_response_pk: response_data.pk,\n            form:\n\n                [\n                    {\n                        get_form,\n                        value: value\n                    }\n\n                ]\n\n\n        }\n\n        console.log(body);\n\n        axios.post(\"https://gfso.chinikiguard.com/survey/api/add/response/entry/\", body,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"SuccessSurvey\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    message: res.data.detail,\n                    successful: true,\n                    loading: false,\n                    meloading: false\n                });\n\n                console.log(res);\n                console.log(res.data.detail);\n                // window.location = \"/dashboard\"\n            },\n\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data.detail &&\n                            error.response.data.detail) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage,\n                        loading: false,\n                        meloading: false\n                    });\n                })\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        const singleCategory = JSON.parse(localStorage.getItem('Category_to_AddField'));\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {/* left column */}\n                            <div className=\"col-md-6\">\n\n                                {/* general form elements disabled */}\n                                <div className=\"card card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\">{singleCategory.name}</h3>\n                                    </div>\n                                    {/* /.card-header */}\n\n                                    <div className=\"card-body\">\n                                        <br />\n\n                                        <form>\n                                            <div className=\"row\">\n                                                {singleCategory.fields.map(fields => (\n\n                                                    <div className=\"col-4\">\n                                                        <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled id=\"inputSuccess\" />                                                <br />\n                                                    </div>\n                                                ))}\n\n                                            </div>\n                                            {singleCategory.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                            {/* input states */}\n                                        </form>\n                                        <br />\n\n\n                                    </div>\n\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                                \n\n                            </div>\n                            {/*/.col (left) */}\n\n\n                            {/* right column */}\n                            <div className=\"col-md-6\">\n\n                                {/* general form elements disabled */}\n                                <div className=\"card card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\"> </h3>\n                                    </div>\n                                    {/* /.card-header */}\n\n                                    <div className=\"card-body\">\n                                        <br />\n\n                                            <ReactFormBuilder />                \n                                            <Demobar variables={variables} />\n\n\n\n                                            {/* input states */}\n                                        <br />\n\n\n                                    </div>\n\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            <br />\n                           \n\n\n\n\n                            </div>\n                            {/*/.col (right) */}\n                        </div>\n                    </div>\n                </section>\n                <Footer />\n            </div>\n\n        );\n    }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\n\n\n\nexport default class ListResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePageClick = this.handlePageClick.bind(this);\n\n        this.state = {\n            offset: 0,\n            tableData: [],\n            orgtableData: [],\n            perPage: 10,\n            currentPage: 0,\n            myloading: true\n        };\n    }\n\n    //pagination\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n    //pagination\n    loadMoreData() {\n        const data = this.state.orgtableData;\n\n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n        this.setState({\n            pageCount: Math.ceil(data.length / this.state.perPage),\n            tableData: slice\n        })\n\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        // const scriptdashboard = document.createElement(\"script\");\n        // scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n        // scriptdashboard.async = true;\n        // document.body.appendChild(scriptdashboard);\n    \n       \n\n        this.Get_State_Data();\n\n    }\n\n    Get_State_Data() {\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/response/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Responses\", JSON.stringify(res.data));\n                }\n                const tdata = res.data;\n                // console.log(res.data.data)   \n\n                const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                this.setState({\n                    pageCount: Math.ceil(tdata.length / this.state.perPage),\n                    orgtableData: tdata,\n                    tableDataForState: slice,\n                    myloading: false\n                })\n            });\n        // console.log(res.data)   \n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                <br />     \n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                        \n                            <div className=\"row\">\n                           \n                                <div className=\"col-12\">\n                                {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Filled Surveys</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                        <div className=\"card-body\">\n                                            <div id=\"example1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\"><div className=\"row\"><div className=\"col-sm-12 col-md-6\">\n                                           </div>\n                                             </div><div className=\"row\"><div className=\"col-sm-12\"><table id=\"example1\" className=\"table table-bordered table-striped dataTable dtr-inline\" role=\"grid\" aria-describedby=\"example1_info\">\n                                                <thead>\n                                                    <tr role=\"row\">\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Browser: activate to sort column ascending\"> Title</th>\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Platform(s): activate to sort column ascending\">Filled by</th>\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Engine version: activate to sort column ascending\">Categories</th>\n                                                    <th className=\"sorting sorting_asc\" tabIndex={0} aria-controls=\"example1\">Action</th>\n\n                                                   </tr>\n                                                </thead>\n                                                <tbody className=\"table-body\">\n                                                    {this.state.tableDataForState && this.state.tableDataForState.map(survey => (\n\n                                                        <tr>\n                                                            <td>{survey.survey_title}</td>\n                                                            <td>\n                                                            {survey.filled_by}\n\n                                                            </td>\n                                                            \n                                                            <td>\n                                                                {survey.get_entries.map(category => (\n                                                                 <td>\n                                                                 {category.name}\n                                                                </td>\n                              \n                                                               ))}\n                                                            </td>\n                                                            <td className=\"project-actions text-right\">\n                                            <Link className=\"btn btn-success btn-sm\" to=\"#\">\n                                                <i className=\"fas fa-folder\">\n                                                </i>\n                View\n              </Link>&nbsp;&nbsp;\n                             \n                                        </td>\n                                                          \n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n                                                <tfoot>\n                                                    \n                                                </tfoot>\n                                               \n                                            </table>\n                                            <ReactPaginate\n                                                    previousLabel={\"prev\"}\n                                                    nextLabel={\"next\"}\n                                                    breakLabel={\"...\"}\n                                                    breakClassName={\"break-me\"}\n                                                    pageCount={this.state.pageCount}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={this.handlePageClick}\n                                                    containerClassName={\"pagination\"}\n                                                    subContainerClassName={\"pages pagination\"}\n                                                    activeClassName={\"active\"} />\n                                            </div>\n                                            </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    )}\n                                </div>\n\n                                 \n                            </div>\n                                                      \n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","// import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class ResponseTable extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Response:[]\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('ResponseData'));\n          this.setState({\n            \n            Response: Response.data,\n        })\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Response Table</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                        <div className=\"card-body\">\n\n                                            <table id=\"emp\" class=\"table\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>Section</th>\n                                                        <th>Item</th>                                                            <br />\n\n                                                        <th>Q1 2019</th>\n                                                   \n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.Response && this.state.Response.map(category => (\n\n                                                        <tr>\n                                                            <td>\n                                                                {/* {category.economic_code} */}\n                                                                <b> {category?category.economic_code!=='None':\"\"}</b>\n\n                                                                {category.fields.map(economic => (\n                                                                    <div>\n                                                                <hr/>\n\n                                                                    {economic?economic.economic_code!=='None':\"\"}\n                                                                    </div>\n                                                                ))}\n                                                            </td>\n\n                                                            <td>\n                                                                <b>{category.name}\n                                                                </b>\n                                                                <br/>\n                                                                {category.fields.map(field => (\n                                                          <div style={{ fontWeight: 'lighter'}}>\n\n                                                                 <hr/>\n                                                                    { field.name }\n                                                                    </div>\n\n                                                                ))}\n\n                                                            </td>\n\n                                                            <br />\n                                                            <td>\n                                                            <br />\n\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             <hr/>\n\n                                                                        {number.field_total_sum}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                                \n                                                            </td>\n\n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"ReportSurvey\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\n\nimport { Link, Redirect } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\n\n\n\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\nexport default class UserProfile extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleRegister = this.handleRegister.bind(this);\n          this.onChangeFirstName = this.onChangeFirstName.bind(this);\n          this.onChangeLastName = this.onChangeLastName.bind(this);\n          this.onChangeAddress = this.onChangeAddress.bind(this);\n          this.onChangeLG = this.onChangeLG.bind(this);\n          this.onChangeState = this.onChangeState.bind(this);\n          this.onChangeUsername = this.onChangeUsername.bind(this);\n          this.onChangeEmail = this.onChangeEmail.bind(this);\n          this.onChangePassword = this.onChangePassword.bind(this);\n          this.onChangeDob = this.onChangeDob.bind(this);\n          this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n\n\n\n          this.state = {\n               username: \"\",\n               password: \"\",\n               first_name: \"\",\n               last_name: \"\",\n               address: \"\",\n               lga: \"\",\n               state: \"\",\n               dob: \"\",\n               email: \"\",\n               phone_number: \"\",\n               successful: false,\n               message: \"\",\n               loading: false\n\n          };\n     }\n\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n     }\n\n\n     onChangeFirstName(e) {\n          this.setState({\n               first_name: e.target.value\n          });\n     }\n     onChangeLastName(e) {\n          this.setState({\n               last_name: e.target.value\n          });\n     }\n     onChangeAddress(e) {\n          this.setState({\n               address: e.target.value\n          });\n     }\n     onChangeLG(e) {\n          this.setState({\n               lga: e.target.value\n          });\n     }\n     onChangeState(e) {\n          this.setState({\n               state: e.target.value\n          });\n     }\n\n     onChangeUsername(e) {\n          this.setState({\n               username: e.target.value\n          });\n     }\n\n     onChangeEmail(e) {\n          this.setState({\n               email: e.target.value\n          });\n     }\n\n     onChangePassword(e) {\n          this.setState({\n               password: e.target.value\n          });\n     }\n     onChangeDob(e) {\n          this.setState({\n               dob: e.target.value\n          });\n     }\n     onChangePhoneNumber(e) {\n          this.setState({\n               phone_number: e.target.value\n          });\n     }\n\n     handleRegister(e) {\n          e.preventDefault();\n          this.setState({\n               message: \"\",\n               successful: false,\n               loading: true\n          });\n          this.form.validateAll();\n          if (this.checkBtn.context._errors.length === 0) {\n               AuthService.createNewUser(\n                    this.state.username,\n                    this.state.password,\n                    this.state.first_name,\n                    this.state.last_name,\n                    this.state.address,\n                    this.state.lga,\n                    this.state.state,\n                    this.state.dob,\n                    this.state.email,\n                    this.state.phone_number,\n\n               ).then(\n                    response => {\n                         this.setState({\n                              message: response.data.message,\n                              successful: true\n                         });\n                    },\n                    error => {\n                         const resMessage =\n                              (error.response &&\n                                   error.response.data.detail &&\n                                   error.response.data.detail) ||\n                              error.message ||\n                              error.toString();\n\n                         this.setState({\n                              successful: false,\n                              message: resMessage\n                         });\n                    }\n               );\n          }\n     }\n     render() {\n\n          // const { loading } = this.state;\n\n\n          return (\n               <div>\n                    <Header />\n\n                    <div className=\"content-wrapper\" >\n                         <Menu />\n                         <br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-md-3\">\n                                             {/* Profile Image */}\n                                             <div className=\"card card-success card-outline\">\n                                                  <div className=\"card-body box-profile\">\n                                                       <div className=\"text-center\">\n                                                            <img className=\"profile-user-img img-fluid img-circle\" src=\"../../dist/img/user4-128x128.jpg\" alt=\"\" />\n                                                       </div>\n                                                       <h3 className=\"profile-username text-center\">Abdulhakim Bashir</h3>\n                                                       <p className=\"text-muted text-center\">Software Engineer</p>\n\n                                                       <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Education</strong><p className=\"text-muted\">B.S. in Computer Science from the University of Tennessee at Knoxville</p><hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> Location</strong><p className=\"text-muted\">Malibu, California</p><hr /><strong><i className=\"fas fa-pencil-alt mr-1\" /> Skills</strong><p className=\"text-muted\"><span className=\"tag tag-danger\">UI Design</span><span className=\"tag tag-success\">Coding</span><span className=\"tag tag-info\">Javascript</span><span className=\"tag tag-warning\">PHP</span><span className=\"tag tag-primary\">Node.js</span></p><hr />\n                                                            <strong><i className=\"far fa-file-alt mr-1\" /> Notes</strong>\n                                                            <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p>\n                                                       </div>\n                                                  </div>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                            \n                                        </div>\n                                        {/* /.col */}\n                                        <div className=\"col-md-9\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header p-2\">\n                                                       <ul className=\"nav nav-pills\">\n                                                            <li className=\"nav-item\"><Link className=\"nav-link active bg-success\" href=\"#activity\" data-toggle=\"tab\">Activity</Link></li>\n                                                            <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                            <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                       </ul>\n                                                  </div>{/* /.card-header */}\n                                                  <div className=\"card-body\">\n                                                       <div className=\"tab-content\">\n                                                            <div className=\"active tab-pane\" id=\"activity\">\n                                                                 {/* Post */}\n                                                                 <div className=\"post\">\n                                                                      \n                                                                      {/* /.user-block */}\n                                                                      <p>\n                                                                           Lorem ipsum represents a long-held tradition for designers,\n                                                                           typographers and the like. Some people hate it and argue for\n                                                                           its demise, but others ignore the hate as they create awesome\n                                                                           tools to help create filler text for everyone from bacon lovers\n                                                                           to Charlie Sheen fans.   Lorem ipsum represents a long-held tradition for designers,\n                                                                           typographers and the like. Some people hate it and argue for\n                                                                           its demise, but others ignore the hate as they create awesome\n                                                                           tools to help create filler text for everyone from bacon lovers\n                                                        \n                  </p>\n                                                                      \n                                                                 </div>\n                                                                 {/* /.post */}\n                                                                 {/* Post */}\n                                                                 <div className=\"post clearfix\">\n                                                                    \n                                                                      {/* /.user-block */}\n                                                                    \n                                                                 </div>\n                                                                 {/* /.post */}\n\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                            <div className=\"tab-pane\" id=\"timeline\">\n                                                                 {/* The timeline */}\n                                                                 <div className=\"timeline timeline-inverse\">\n                                                                      {/* timeline time label */}\n                                                                      <div className=\"time-label\">\n                                                                           <span className=\"bg-danger\">\n                                                                                10 Feb. 2014\n                    </span>\n                                                                      </div>\n                                                                      {/* /.timeline-label */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-envelope bg-success\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 12:05</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Support Team</Link> sent you an email</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     Etsy doostang zoodles disqus groupon greplin oooj voxy zoodles,\n                                                                                     weebly ning heekya handango imeem plugg dopplr jibjab, movity\n                                                                                     jajah plickers sifteo edmodo ifttt zimbra. Babblely odeo kaboodle\n                                                                                     quora plaxo ideeli hulu weebly balihoo...\n                      </div>\n                                                                                <div className=\"timeline-footer\">\n                                                                                     <Link href=\"#\" className=\"btn btn-success btn-sm\">Read more</Link>\n                                                                                     <Link href=\"#\" className=\"btn btn-danger btn-sm\">Delete</Link>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-user bg-info\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 5 mins ago</span>\n                                                                                <h3 className=\"timeline-header border-0\"><Link href=\"#\">Sarah Young</Link> accepted your friend request\n                      </h3>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-comments bg-warning\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 27 mins ago</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Jay White</Link> commented on your post</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     Take me to your leader!\n                                                                                     Switzerland is small and neutral!\n                                                                                     We are more like Germany, ambitious and misunderstood!\n                      </div>\n                                                                                <div className=\"timeline-footer\">\n                                                                                     <Link href=\"#\" className=\"btn btn-warning btn-flat btn-sm\">View comment</Link>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline time label */}\n                                                                      <div className=\"time-label\">\n                                                                           <span className=\"bg-success\">\n                                                                                3 Jan. 2014\n                    </span>\n                                                                      </div>\n                                                                      {/* /.timeline-label */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-camera bg-purple\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 2 days ago</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Mina Lee</Link> uploaded new photos</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      <div>\n                                                                           <i className=\"far fa-clock bg-gray\" />\n                                                                      </div>\n                                                                 </div>\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                            <div className=\"tab-pane\" id=\"settings\">\n                                                                 <form className=\"form-horizontal\">\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputName\" className=\"col-sm-2 col-form-label\">Name</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"email\" className=\"form-control\" id=\"inputName\" placeholder=\"Name\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputEmail\" className=\"col-sm-2 col-form-label\">Email</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputName2\" className=\"col-sm-2 col-form-label\">Name</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"text\" className=\"form-control\" id=\"inputName2\" placeholder=\"Name\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputExperience\" className=\"col-sm-2 col-form-label\">Experience</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <textarea className=\"form-control\" id=\"inputExperience\" placeholder=\"Experience\" defaultValue={\"\"} />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputSkills\" className=\"col-sm-2 col-form-label\">Skills</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"text\" className=\"form-control\" id=\"inputSkills\" placeholder=\"Skills\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <div className=\"offset-sm-2 col-sm-10\">\n                                                                                <div className=\"checkbox\">\n                                                                                     <label>\n                                                                                          <input type=\"checkbox\" /> I agree to the <Link href=\"#\">terms and conditions</Link>\n                                                                                     </label>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <div className=\"offset-sm-2 col-sm-10\">\n                                                                                <button type=\"submit\" className=\"btn btn-danger\">Submit</button>\n                                                                           </div>\n                                                                      </div>\n                                                                 </form>\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                       </div>\n                                                       {/* /.tab-content */}\n                                                  </div>{/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                        {/* /.col */}\n                                   </div>\n                                   {/* /.row */}\n                              </div>{/* /.container-fluid */}\n                         </section>\n\n\n                    </div>\n                    <Footer />\n\n               </div>\n\n\n          );\n     }\n}","import axios from 'axios'\nimport React, { Component } from \"react\";\nimport {  Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\n\n\n\nexport default class ResponseByUser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handlePageClick = this.handlePageClick.bind(this);\n\n          this.state = {\n               offset: 0,\n               tableData: [],\n               orgtableData: [],\n               perPage: 10,\n               currentPage: 0,\n               myloading: true\n          };\n     }\n\n     //pagination\n     handlePageClick = (e) => {\n          const selectedPage = e.selected;\n          const offset = selectedPage * this.state.perPage;\n          this.setState({\n               currentPage: selectedPage,\n               offset: offset\n          }, () => {\n               this.loadMoreData()\n          });\n\n     };\n     //pagination\n     loadMoreData() {\n          const data = this.state.orgtableData;\n\n          const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n          this.setState({\n               pageCount: Math.ceil(data.length / this.state.perPage),\n               tableData: slice\n          })\n\n     }\n\n     componentDidMount() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const scriptdashboard = document.createElement(\"script\");\n          scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n          scriptdashboard.async = true;\n          document.body.appendChild(scriptdashboard);\n\n         \n          this.Get_State_Data();\n\n     }\n\n     Get_State_Data() {\n          const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n          const token = mytoken.token;\n          // const Response_by_user = mytoken.user\n          axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    // params:{\n                    //      survey_type=\n                    // },\n\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"List_Of_Responses_By_User\", JSON.stringify(res.data));\n                    }\n                    const tdata = res.data;\n                    // console.log(res.data.data)   \n\n                    const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                    this.setState({\n                         pageCount: Math.ceil(tdata.length / this.state.perPage),\n                         orgtableData: tdata,\n                         ResponseByUser: slice,\n                         myloading: false\n                    })\n               });\n          // console.log(res.data)   \n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Responses</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           <div className=\"input-group input-group-sm\" style={{ width: 150 }}>\n                                                                                <input type=\"text\" name=\"table_search\" className=\"form-control float-right\" placeholder=\"Search\" />\n                                                                                <div className=\"input-group-append\">\n                                                                                     <button type=\"submit\" className=\"btn btn-default\">\n                                                                                          <i className=\"fas fa-search\" />\n                                                                                     </button>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                                     <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n                    </div>\n\n                    <Footer />\n               </div>\n\n          );\n     }\n}\n\n\n","\nimport React, { Component } from \"react\";\nimport { Redirect ,Link} from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\n// import Logo from '../cbn.png'\nimport authService from '../services/auth.service';\n// import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import Swal from 'sweetalert2'\n// import withReactContent from 'sweetalert2-react-content'\n\n// const MySwal = withReactContent(Swal)\n\n// MySwal.fire({\n//   title: <p>Hello World</p>,\n//   footer: 'Copyright 2018',\n//   didOpen: () => {\n//     // `MySwal` is a subclass of `Swal`\n//     //   with all the same instance & static methods\n//     MySwal.clickConfirm()\n//   }\n// }).then(() => {\n//   return MySwal.fire(<p>Shorthand works too</p>)\n// })\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\nconst lookup = {\n    \"Annual\": [\n        { id: '', text: '--select--' },\n        { id: 'q1', text: 'Q1' },\n        { id: 'q2', text: 'Q2' },\n        { id: 'q3', text: 'Q3' },\n        { id: 'q4', text: 'Q4' },\n    ],\n    \"Halfyear\": [\n        { id: '', text: '--select--' },\n        { id: 'hyq1', text: 'HYQ1' },\n        { id: 'hyq2', text: 'HYQ2' },\n    ]\n}\nexport default class Deploy extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n        this.onChangehalfyear = this.onChangehalfyear.bind(this);\n\n        this.state = {\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            loading: false,\n            message: \"\",\n            states: \"\",\n            lgas: \"\",\n            myloading: false,\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: false,\n            dataValue: 'Halfyear'\n\n        };\n    }\n\n\n    onChange = ({ target: { value } }) => {\n        this.setState({ dataValue: value });\n    }\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n    onChangehalfyear(e) {\n        this.setState({\n            halfyear: e.target.value\n        });\n    }\n\n\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: true\n        });\n\n\n        //check auth user\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n\n\n        //convert the string to number from the [go] array i save to  localStorage for State\n        const stop_here_for_state = localStorage.getItem('Checked_State');\n        const jasus_for_state = stop_here_for_state\n\n        //convert the string to number from the [go] array i save to localStorage for LGA\n        const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n        const jasus_for_lga = stop_here_for_lga\n\n\n        let formData = new FormData();\n        formData.append('title', this.state.title);\n        formData.append('quarter', this.state.quarter);\n        formData.append('year', this.state.year);\n        formData.append('survey_type', this.state.survey_type);\n        formData.append('start_date', this.state.start_date);\n        formData.append('due_date', this.state.due_date);\n        formData.append('states', jasus_for_state);\n        formData.append('lgas', jasus_for_lga);\n\n        this.form.validateAll();\n        if (this.checkBtn.context._errors.length === 0) {\n\n            axios.post(\"https://gfso.chinikiguard.com/survey/api/create/survey/\",\n                formData,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        message: res.data.detail,\n                        AdoptSurveysuccessful: true,\n                    });\n                    // console.log(res.data);\n\n                    // window.location = \"/Deploy\"\n                    if (res.data) {\n                        localStorage.setItem(\"CreatedSurvey\", JSON.stringify(res.data));\n                    }\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.detail &&\n                                error.response.data.detail) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n\n\n    componentDidMount() {\n\n        const sweetalert2 = document.createElement(\"script\");\n        sweetalert2.src = \"./plugins/sweetalert2/sweetalert2.min.js\";\n\n        sweetalert2.async = true;\n        document.body.appendChild(sweetalert2);\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        //reset to default state\n        const Checked_LGA = 1\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        //call the States and LGAS at the first \n        const state = \"Ahmad loophole\";\n        const user = authService.getCurrentUser();\n\n        const token = user.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n\n            });\n\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/combo/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"StatesList\", JSON.stringify(res.data));\n                }\n\n            });\n        // console.log(res.data)   \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = 1\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        // const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        const StatesList = JSON.parse(localStorage.getItem('StatesList'));\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov } = this.state;\n\n        //   const { dataValue } = this.state;\n        const options = lookup[this.state.dataValue];\n\n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {/* {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">\n                                    <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                    <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                    )} */}\n\n\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n\n\n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Create Survey</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n                                            <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} >\n                                                {!this.state.AdoptSurveysuccessful && (\n                                                    <div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"form-group\">\n                                                                    <label> Name of Survey</label>\n                                                                    <Input type=\"text\" className=\"form-control \" placeholder\n                                                                        value={this.state.title}\n                                                                        onChange={this.onChangeTitle}\n                                                                        validations={[required]}\n                                                                    />\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"col-sm-3\">\n                                                                <div className=\"form-group\">\n                                                                    <label> Period</label>\n                                                                    <Select className=\"form-control \" placeholder\n                                                                        value={this.state.dataValue}\n                                                                        onChange={this.onChange}\n                                                                        validations={[required]}\n                                                                    >\n                                                                        <option value=\"Halfyear\">Half-Year</option>\n                                                                        <option value=\"Annual\">Annual</option>\n\n\n                                                                    </Select>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"col-sm-3\">\n                                                                <div className=\"form-group\">\n                                                                    <label> Quarter</label>\n\n                                                                    <Select className=\"form-control\"\n                                                                        value={this.state.quarter}\n                                                                        onChange={this.onChangeQuarter}\n                                                                        validations={[required]}\n\n\n\n                                                                    >\n                                                                        {/* <option value=\"\">--Select--</option> */}\n\n                                                                        {options.map(o => <option key={o.id} value={o.id}>{o.text}</option>)}\n                                                                    </Select>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"form-group\">\n                                                                    {/* text input */}\n                                                                    <label> Year</label>\n                                                                    <Input type=\"number\" className=\"form-control \" placeholder\n                                                                        value={this.state.year}\n                                                                        onChange={this.onChangeYear}\n                                                                        validations={[required]}\n                                                                        min=\"2011\"\n                                                                        max=\"9999\"\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-6\">\n                                                                    {/* text input */}\n                                                                    <div className=\"form-group\">\n                                                                        <label> Start date</label>\n                                                                        <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                            value={this.state.start_date}\n                                                                            onChange={this.onChangeStartDate}\n                                                                            validations={[required]}\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-sm-6\">\n                                                                    <div className=\"form-group\">\n                                                                        <label> End Date</label>\n                                                                        <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                            value={this.state.due_date}\n                                                                            onChange={this.onChangeDueDate}\n                                                                            validations={[required]}\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"form-group\">\n                                                                    <label> Survey Type</label>\n                                                                    <Select type=\"text\" className=\"form-control \" placeholder\n                                                                        validations={[required]}\n                                                                        value={this.state.survey_type}\n                                                                        onChange={this.onChangeSurveyType}\n                                                                    >\n                                                                        <option value=\"\">Select</option>\n                                                                        <option value=\"sg\">SG</option>\n                                                                        <option value=\"lg\">LG</option>\n                                                                        <option value=\"other\">OTHER</option>\n                                                                    </Select>\n                                                                </div>\n                                                            </div>\n                                                            \n                                                        </div>\n\n                                                        {statesGov && (\n                                                            <div className=\"table-container\">\n                                                                <table className=\"table\">\n                                                                    <thead>\n\n                                                                        <tr>\n                                                                            <th>STATE</th>\n\n                                                                            <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                                    checkboxes=\".table .select-checkbox\"\n                                                                                    sync=\".table .row\"\n                                                                                    onNotAllChecked={(selectedMap) => {\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                        // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                    }}\n                                                                                    onAllChecked={(selectedMap) => {\n                                                                                        // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                    }}\n                                                                                    onAllUnchecked={(selectedMap) => {\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.replace(/\\d+/g,\"\")\n\n                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                        // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                    }}\n\n                                                                                />\n                                                                            </th>\n                                                                        </tr>\n\n                                                                    </thead>\n                                                                    <tbody className=\"table-body\">\n                                                                        {List_Of_States.map((state, i) => (\n\n                                                                            <tr>\n                                                                                <td>{state.title}</td>\n                                                                                <td>\n                                                                                    <input\n                                                                                        type=\"checkbox\"\n                                                                                        className=\"select-checkbox\"\n                                                                                        value={`${state.pk}`}\n                                                                                        // onChange={this.onChangeState}\n                                                                                        validations={[required]}\n                                                                                    />\n                                                                                </td>\n                                                                            </tr>\n                                                                        ))}\n\n                                                                    </tbody>\n\n                                                                </table>\n                                                            </div>\n                                                        )}\n\n                                                        {lgasGov && (\n                                                            <div className=\"table-container\">\n                                                                <table className=\"table\">\n                                                                    <thead>\n                                                                        <tr>\n                                                                            <th>LGA</th>\n\n                                                                            <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                                    checkboxes=\".table .select-checkbox\"\n                                                                                    sync=\".table .row\"\n                                                                                    onNotAllChecked={(selectedMap) => {\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                        // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                    }}\n                                                                                    onAllChecked={(selectedMap) => {\n                                                                                        // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                    }}\n                                                                                    onAllUnchecked={(selectedMap) => {\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                        // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                    }}\n\n                                                                                />\n                                                                            </th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody className=\"table-body\">\n                                                                        {StatesList && StatesList.map(lga => (\n\n                                                                            <tr>\n                                                                                <td style={{ color: 'green', fontWeight: 'bold' }}>{lga.title} </td>\n                                                                                <br />\n                                                                                {lga.get_lgas && lga.get_lgas.map(lgas => (\n                                                                                    <tr>\n                                                                                        <td>{lgas.title}</td>\n                                                                                        <td>\n                                                                                            <input\n                                                                                                type=\"checkbox\"\n                                                                                                className=\"select-checkbox\"\n                                                                                                value={`${lgas.pk}`}\n                                                                                                validations={[required]}\n                                                                                            />\n                                                                                        </td>\n                                                                                    </tr>\n                                                                                ))}\n\n\n                                                                                {/* <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${lga.pk}`}\n                                                                                // onChange={this.onChangeLgas}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td> */}\n                                                                            </tr>\n                                                                        ))}\n\n                                                                    </tbody>\n                                                                </table>\n                                                            </div>\n                                                        )}\n                                                     <div className=\"row\">\n                                                                <center>\n\n                                                                    <button\n                                                                        disabled={this.state.AdoptSurveyloading}\n                                                                        className=\"btn btn-primary float-bottom\"\n\n                                                                    >\n\n                                                                        {this.state.AdoptSurveyloading && (\n                                                                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                                        )}\n                                                            Create Survey\n                                                        </button>\n                                                        </center>\n\n                                                                </div>\n                                                    </div>\n\n\n                                                )}\n                                                <center>\n                                                    {this.state.message && (\n                                                        <div className=\"form-group\">\n                                                            <div\n                                                                className={\n                                                                    this.state.AdoptSurveysuccessful ? \"alert alert-success\" : \"alert alert-danger\"\n                                                                }\n                                                                role=\"alert\"\n                                                            >\n\n                                                                {this.state.message}\n                                                            </div>\n                                                            {this.state.AdoptSurveysuccessful &&\n                                                            <Link\n                                                                className=\"btn btn-primary\"\n                                                               to = \"/ApproveThisSurvey\"\n                                                                \n                                                            >\n\n\n                                                                continue\n                                                        </Link>\n                                                        }\n                                                        </div>\n\n                                                    )}\n                                                </center>\n\n                                                   <CheckButton\n                                                    style={{ display: \"none\" }}\n                                                    ref={c => {\n                                                        this.checkBtn = c;\n                                                    }}\n                                                />\n\n                                            </Form>\n\n                                        </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ReviewRespondent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditTemplate(Surveys) {\n\n        //\n        localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        const singleSurveyPk = Surveys.pk;\n        console.log(Surveys.pk)\n\n        // const body =\n        // {\n        // survey: SurveyList.pk,\n        // }\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                console.log(res.data)\n                // window.location = \"/CompleteSurvey\"\n\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">List of Respondent</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                        <td className=\"\">\n                                                                            <Link className=\"btn btn-lg btn-success \" to=\"/\">\n\n                                                                                Approve\n                                                   </Link>&nbsp;&nbsp;\n\n                                                    <Link className=\"btn btn-lg btn-danger \" to=\"/\">\n                                                                                Delete\n                                                    </Link>&nbsp;&nbsp;\n\n                                                  </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class ListToApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                                <Menu />\n\n                <Header />\n\n                <div className=\"content-wrapper\">\n\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     {/* <th>Created by</th> */}\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     {/* <td><span className=\"tag tag-success\">{survey.created_by}</span></td> */}\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\n// import Logo from '../cbn.png'\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\nexport default class ApproveTemplate extends Component {\n\n     constructor(props) {\n          super(props);\n\n          this.handleApprove = this.handleApprove.bind(this);\n          this.onChangestatus = this.onChangestatus.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               ApproveThisSurvey: [],\n               status: \"\",\n               remark: \"\",\n               SingleTemplate: []\n          };\n     }\n\n\n\n\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n          }\n\n     }\n     onChangestatus(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n     handleApprove(e) {\n\n          e.preventDefault();\n\n          const SingleTemplate = JSON.parse(localStorage.getItem('ApproveTemplateInfo'));\n\n          // const templatepk = SingleTemplate.pk\n\n          this.setState({\n               message: \"\",\n               successful: false,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n               let formData = new FormData();\n               formData.append('status', this.state.status);\n               formData.append('survey', SingleTemplate.pk);\n               formData.append('remark', this.state.remark);\n               // console.log(formData)\n\n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              // window.location = \"/ApproveThisTemplate\"\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n\n     render() {\n\n          //check for user to access the page\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n          }\n          //get the template details\n          const SingleTemplate = JSON.parse(localStorage.getItem('ApproveTemplateInfo'));\n          const SingleTemplateCategories = SingleTemplate.form;\n\n\n          return (\n               <div>\n                    <Header />\n                    <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                         <Menu /><br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        {/* left column */}\n                                        <div className=\"col-md-12\">\n                                             {/* right column/ hannun dama */}\n                                             {/* /.card */}\n                                             {SingleTemplateCategories && SingleTemplateCategories.map(Templatefields => (\n                                                  <div className=\"card card-\">\n                                                       <div className=\"card-header\">\n                                                            <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                                       </div>\n                                                       <div className=\"card-body\">\n                                                            {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                            <div className=\"row\">\n                                                                 {Templatefields.fields.map(fields => (\n\n                                                                      <div className=\"col-4\">\n                                                                           <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled />                                                <br />\n                                                                      </div>\n                                                                 ))}\n                                                            </div>\n                                                            {Templatefields.sub_categories.map(subCategory => (\n                                                                 <div>\n                                                                      <h6 className=\"\">{subCategory.name}</h6>\n                                                                      <div className=\"row\">\n                                                                           {subCategory.fields.map(SubCategoryfields => (\n                                                                                <div className=\"col-4\">\n                                                                                     <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled />                                                <br />\n                                                                                </div>\n                                                                           ))}\n                                                                      </div>\n                                                                 </div>\n                                                            ))}\n\n                                                       </div>\n                                                       {/* /.card-body */}\n\n                                                  </div>\n                                             ))}\n                                             <div className=\"card card-\">\n                                                  <div className=\"card-header\">\n                                                       <h3 className=\"card-title\">{SingleTemplate.title}</h3>\n                                                  </div>\n                                                  <div className=\"card-body\">\n                                                       {/* /.card-header */}\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-12\">\n\n                                                                 <label> Title</label>:&nbsp;\n                                                                      <center>\n                                                                      {SingleTemplate.title.toUpperCase()}\n\n                                                                 </center>\n                                                                 <hr />\n                                                            </div>\n\n                                                            <div className=\"col-sm-12\">\n\n                                                                 <label> Quarter</label>:&nbsp;\n                                                                      <center>\n                                                                      {SingleTemplate.quarter.toUpperCase()}\n                                                                 </center>\n                                                                 <hr />\n                                                            </div>\n                                                       </div>\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-12\">\n\n                                                                 {/* text input */}\n                                                                 <label> Year</label>:&nbsp;\n                                                                      <center>\n                                                                      {SingleTemplate.year}\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 {/* text input */}\n\n                                                                 <label> Start date</label>:&nbsp;\n                                                                      <center>\n                                                                      {SingleTemplate.start_date}\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n\n                                                                 <label> Due Date</label>:&nbsp;\n                                                                      <center>\n                                                                      {SingleTemplate.due_date}\n\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n\n                                                                 <label> Survey Type</label>:&nbsp;\n                                                                      <center>\n                                                                      {SingleTemplate.survey_type.toUpperCase()}\n                                                                 </center>\n                                                                 {/* <hr /> */}\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 <div className=\"table-container\">\n                                                                      <table className=\"table\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>STATE</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody className=\"table-body\">\n\n                                                                                <tr>\n                                                                                     {/* <td style={{ color: 'green', fontWeight: 'bold' }}>{lga.title} </td> */}\n                                                                                     <br />\n                                                                                     {SingleTemplate.get_states && SingleTemplate.get_states.map(states => (\n                                                                                          <tr>\n                                                                                               <td>{states.title}</td>\n\n                                                                                          </tr>\n                                                                                     ))}\n                                                                                </tr>\n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 <div className=\"table-container\">\n                                                                      <table className=\"table\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>LGAs</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody className=\"table-body\">\n\n                                                                                <tr>\n                                                                                     {/* <td style={{ color: 'green', fontWeight: 'bold' }}>{lga.title} </td> */}\n                                                                                     <br />\n                                                                                     {SingleTemplate.get_lgas && SingleTemplate.get_lgas.map(lgas => (\n                                                                                          <tr>\n                                                                                               <td>{lgas.title}</td>\n\n                                                                                          </tr>\n                                                                                     ))}\n                                                                                </tr>\n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n\n                                                            </div>\n\n                                                       </div>\n                                                  </div>\n                                                  {/* /.card-body */}\n\n                                             </div>\n                                             {/* /.card */}\n                                             {SingleTemplateCategories.length ?\n\n                                                  <div className=\"card card-\">\n                                                       <div className=\"card-header\">\n                                                            <h3 className=\"card-title\">Action</h3>\n                                                       </div>\n                                                       <div className=\"card-body\">\n\n\n                                                            <Form\n                                                                 onSubmit={this.handleApprove}\n                                                                 ref={c => {\n                                                                      this.form = c;\n                                                                 }}\n                                                            >\n                                                                 {!this.state.successful && (\n\n\n                                                                      <div>\n                                                                           <div className=\"card-body\">\n\n                                                                                <div className=\"form-group\">\n\n                                                                                     <Select\n                                                                                          className=\"form-control\"\n                                                                                          id=\"exampleFormControlSelect9\"\n                                                                                          validations={[required]}\n                                                                                          onChange={this.onChangestatus}\n                                                                                          value={this.state.status}\n                                                                                     >\n                                                                                          <option>--select--</option>\n                                                                                          <option value=\"approved_template\">Approve</option>\n                                                                                          <option value=\"rejected_template\">Reject</option>\n\n                                                                                     </Select>\n                                                                                </div>\n\n                                                                                <div className=\"form-group\">\n                                                                                     <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                                          onChange={this.onChangeRemark}\n                                                                                          validations={[required]} />\n\n                                                                                </div>\n                                                                                <br />\n\n\n                                                                                <div className=\"form-group\">\n                                                                                     <button\n                                                                                          className=\"btn btn-primary btn-lg\"\n                                                                                          disabled={this.state.loading}\n                                                                                     >\n                                                                                          {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                                          <span>Submit</span>\n                                                                                     </button>\n                                                                                </div>\n\n                                                                           </div>\n                                                                      </div>\n\n                                                                 )}\n\n\n                                                                 \n                                                                 <CheckButton\n                                                                      style={{ display: \"none\" }}\n                                                                      ref={c => {\n                                                                           this.checkBtn = c;\n                                                                      }}\n                                                                 />\n\n\n                                                            </Form>\n\n \n                                                            <center>\n                                                                      {this.state.message && (\n                                                                           <div className=\"form-group\">\n                                                                                <div\n                                                                                     className={\n                                                                                          this.state.successful\n                                                                                               ? \"alert alert-success\"\n                                                                                               : \"alert alert-danger\"\n                                                                                     }\n                                                                                     role=\"alert\"\n                                                                                >\n                                                                                     {this.state.message}\n                                                                                </div>\n                                                                                {this.state.successful &&\n                                                                                     <Link\n                                                                                          className=\"btn btn-primary\"\n                                                                                          to=\"/TemplateToApprove\"\n\n                                                                                     >\n                                                                                          continue\n                                                                                              </Link>\n                                                                                }\n\n                                                                           </div>\n                                                                      )}\n\n                                                                 </center>\n                                             \n\n\n\n                                                       </div>\n\n                                                  </div>\n                                                  : <center><h2>No Template Available</h2></center>\n\n                                             }\n                                            \n                                             {/* /.card-body */}\n\n                                        </div>\n\n                                        {/* /.card */}\n                                   </div>\n                                   {/*/.col (right) */}\n                                   {/* /.row */}\n                              </div>{/* /.container-fluid */}\n                         </section>\n                    </div>\n                    <Footer />\n               </div>\n          );\n     }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ValidateResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            loading: false,\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/response/?status=---\",\n            { \n                headers:\n                \n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"PendingResponses\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditResponse(Surveys) {\n\n        this.setState({\n            loading: true,\n  \n          });       \n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        const survey_pk = Surveys.pk;\n        console.log(Surveys.pk)\n\n\n       \n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/response/${survey_pk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n               \n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ResponseEDit\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)\n                window.location = \"/ResponseEdit\"\n                this.setState({\n                    // loading: false,\n                   \n                });\n            })\n            // axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/document/${survey_pk}/`,\n            // {\n            //     headers:\n            //     {\n            //         'Content-Type': 'application/json',\n            //         'Authorization': `Token ${token}`,\n            //         'Access-Control-Allow-Origin': '*',\n            //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            //         'Access-Control-Allow-Credentials': true\n            //     },\n               \n\n            // })\n            // .then(res => {\n            //     if (res.data) {\n            //         localStorage.setItem(\"ResponseDocuments\", JSON.stringify(res.data));\n            //     }\n            //     // console.log(res.data)                \n            // })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay\"><i className=\"fas fa-2x fa-sync-alt fa-spin\" /></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content-wrapper\" >\n                \n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Responses</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        \n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               filled by \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               State \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    LGA\n                                               </th>\n                                               <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                               \n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 \n                                                 <th style={{ width: '0%' }}>\n                                                  Year\n                                                 </th>\n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                                {/* <th>\n                                                    Survey Progress\n                                                   </th> */}\n                                                \n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                        {survey.filled_by}\n\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        \n                                                    </td>\n\n                                                    <td>\n                                                        <Link>\n                                                        {survey.state_title}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.lga_title}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td> \n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                      \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                \n                                                    <td className=\"project-actions text-right\">\n                                                        <Link\n                                                         className=\"btn btn-primary btn-sm\" \n                                                         onClick={this.EditResponse.bind(this, survey)}\n\n                                                        >\n                                                            \n                                                     Approve\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ValidateResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            loading: false,\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditResponse(Surveys) {\n\n        this.setState({\n            loading: true,\n  \n          });       \n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        const survey_pk = Surveys.pk;\n        // console.log(Surveys.pk)\n\n       \n        axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:{\n                    survey_pk:survey_pk\n                }\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ResponseData\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)\n                window.location = \"/ResponseTable\"\n                this.setState({\n                    loading: false,\n                   \n                });\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay\"><i className=\"fas fa-2x fa-sync-alt fa-spin\" />loading ...</div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content-wrapper\" >\n                \n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        \n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        <Link\n                                                         className=\"btn btn-primary btn-sm\" \n                                                         onClick={this.EditResponse.bind(this, survey)}\n\n                                                        >\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     View\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n\n\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import CheckButton from \"react-validation/build/button\";\n// import Textarea from \"react-validation/build/textarea\"\n// import Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport {  Redirect,Link } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\n\n// const required = value => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n\nexport default class RespondentList extends Component {\n\n  constructor(props) {\n    super(props);\n   \n\n    this.state = {\n      \n      Users:[],\n      successful: false,\n      message: \"\",\n      loading: true,\n      loadingModal:false\n    };\n  }\n\n\n  componentWillMount(){\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n     const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n     const token = mytoken.token;\n     axios.get(\"https://gfso.chinikiguard.com/accounts/api/list/profile/?active=yes\",\n     {\n       headers:\n       {\n         'Authorization': `Token ${token}`,\n         'Access-Control-Allow-Origin': '*',\n         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n         'Access-Control-Allow-Credentials': true\n       },\n     })\n     .then(res => {\n       if (res.data) {\n         localStorage.setItem(\"Users\", JSON.stringify(res.data));\n       }\n       this.setState({\n         Users: res.data,\n         loading:false\n     });\n       // (res);\n      //  console.log(res.data);\n\n     })\n\n   \n\n\n  }\n\n  ApproveResponder(users){\n\n    const userId = users.pk\n    // console.log(users.pk)\n    const mytoken = AuthService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/details/profile/${userId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ApproveResponder\"\n\n            if (res.data) {\n                localStorage.setItem(\"ReviewResponderList\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ReviewResponder: res.data,\n              // loadingModal: false,\n            });\n\n          })\n\n  }\n\n  \n \n  \n  render() {\n\n    \n    // console.log(list_of_lga);\n    // const Users = JSON.parse(localStorage.getItem('Users'))\n\n\n\n\n    return (\n      <div>\n        <Header />\n\n        <div className=\"content-wrapper\" >\n        {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n          <Menu />\n          <div className=\"col-md-12\" >\n            <br />\n            {this.state.loading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">List of Respondents</h3>\n                    <div className=\"card-tools\">\n\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n\n                  <div className=\"card-body table-responsive p-0\">\n\n                    <table className=\"table table-hover text-nowrap\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Phone</th>\n                          <th>State</th>\n                          <th>LGA</th>\n                          <th>Registered on</th>\n                          <th>designation</th>\n                          <th>Branch</th>\n                          <th>Action</th>\n                          \n                        </tr>\n                      </thead>\n                      {this.state.Users && this.state.Users.map(users => (\n\n                        <tbody>\n                          <tr>\n                            <td>{users.username}&nbsp;</td>\n                            <td>{users.phone_number}</td>\n                            <td>{users.state_title}</td>\n                            <td>{users.lga_title}</td>\n                            <td>{users.date_joined}</td>\n                            <td>{users.designation_title}</td>\n                            <td>{users.branch_name}</td>\n                                     <td className=\"\">\n                                          <Link \n                                          className=\"btn btn-lg btn-success \"\n                                           disabled={this.state.loading}\n                                          onClick={this.ApproveResponder.bind(this, users)}\n\n                                           >\n\n                                               Approve\n                                                   </Link>&nbsp;&nbsp;\n\n                                                   \n                                                  </td>\n\n                          </tr>\n\n                        </tbody>\n                      ))}\n                    </table>\n                  </div>\n\n\n                  {/* /.card-body */}\n                </div>\n                {/* /.card */}\n              </div>\n            </div>\n          </section>\n\n          )}\n        </div>\n                               \n        </div>\n        <Footer />\n\n        </div>\n\n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\n// import Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApproveSurvey extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleApprove = this.handleApprove.bind(this);\n          this.onChangeApprove = this.onChangeApprove.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               successful: false,\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeApprove(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n          }\n\n     }\n\n     handleApprove(e) {\n\n          e.preventDefault();\n          // const Surveypk = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n          const SurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'));\n\n\n          this.setState({\n               message: \"\",\n               successful: false,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n\n               // console.log(body) \n               let formData = new FormData();\n               formData.append('status', this.state.status);\n               formData.append('survey', SurveyInfo.pk);\n               formData.append('remark', this.state.remark);\n\n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n\n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n\n                              // window.location = \"/ListToApprove\"\n                              // console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const SurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'));\n\n\n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         {/* {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )} */}\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-12\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header\">\n                                                       <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                       <div className=\"card-tools\">\n                                                       </div>\n                                                  </div>\n                                                  <div className=\"card-body\">\n                                                       {/* /.card-header */}\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-12\">\n                                                                 \n                                                                      <label> Title</label>:&nbsp;\n                                                                      <center>\n                                                                                      {SurveyInfo.title.toUpperCase()}\n\n                                                                 </center>\n                                                                 <hr />\n                                                            </div>\n\n                                                            <div className=\"col-sm-12\">\n                                                                 \n                                                                      <label> Quarter</label>:&nbsp;\n                                                                      <center>\n                                                                      {SurveyInfo.quarter.toUpperCase()}\n                                                                 </center>\n                                                                 <hr />\n                                                            </div>\n                                                       </div>\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-12\">\n                                                                 \n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                      <center>\n                                                                                      {SurveyInfo.year}\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 {/* text input */}\n                                                                 \n                                                                      <label> Start date</label>:&nbsp;\n                                                                      <center>\n                                                                                       {SurveyInfo.start_date}\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                \n                                                                      <label> Due Date</label>:&nbsp;\n                                                                      <center>\n                                                                                         {SurveyInfo.due_date}\n\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 \n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                      <center>\n                                                                       {SurveyInfo.survey_type.toUpperCase()}\n                                                                 </center>\n                                                                 {/* <hr /> */}\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 <div className=\"table-container\">\n                                                                      <table className=\"table\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>STATE</th>                                                 \n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody className=\"table-body\">\n\n                                                                                     <tr>\n                                                                                          {/* <td style={{ color: 'green', fontWeight: 'bold' }}>{lga.title} </td> */}\n                                                                                          <br />\n                                                                                          {SurveyInfo.get_states && SurveyInfo.get_states.map(states => (\n                                                                                               <tr>\n                                                                                                    <td>{states.title}</td>\n                                                                                                    \n                                                                                               </tr>\n                                                                                          ))}\n                                                                                     </tr>\n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                \n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                    {/* {SurveyInfo.get_lgas} */}\n                                                                      {SurveyInfo.get_lgas && SurveyInfo.get_lgas.map(states => (\n                                                                           <span> {states.title}</span>\n                                                                      ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                  {!this.state.successful && (\n\n\n                                                  <div>\n\n                                                       <div className=\"card-body\">\n\n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Action</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeApprove}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_creation\" className=\"text-success\">Approve</option>\n                                                                      <option value=\"rejected_creation\" className=\"text-danger\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            </div> \n                                                            \n                                                            </div>\n                                                              )}\n\n                                                           \n                                     \n                                                                <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n\n                                                  </Form>\n                                                  <center>\n                                                                 {this.state.message && (\n                                                                      <div className=\"form-group\">\n                                                                           <div\n                                                                                className={\n                                                                                     this.state.successful\n                                                                                          ? \"alert alert-success\"\n                                                                                          : \"alert alert-danger\"\n                                                                                }\n                                                                                role=\"alert\"\n                                                                           >\n                                                                                {this.state.message}\n                                                                           </div>\n                                                                           {this.state.successful &&\n                                                                                     <Link\n                                                                                          className=\"btn btn-primary\"\n                                                                                          to=\"/ListToApprove\"\n\n                                                                                     >\n                                                                                          continue\n                                                                                              </Link>\n                                                                                }\n\n\n                                                                      </div>\n                                                                 )}\n\n                                                            </center>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             \n                                             {/* /.card */}\n                                        </div>\n                                   </div>\n\n\n\n                              </div>\n\n\n                         </section>\n\n                    </div>\n                    <Footer />\n\n               </div>\n          );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class TemplateToApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"TemplateToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveTemplate(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveTemplate\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApproveTemplateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveTemplate.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class ApprovedSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no&for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class ApprovedTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n    \n    componentDidMount() {\n\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no`,\n\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nexport default class RejectedTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            approve: \"\",\n            remark: \"\"\n        };\n    }\n\n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n    }\n    onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=no&deployed=no&for_user=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">\n                                    <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                    <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                    )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n                                    {this.state.myloading ? (\n                                        <>\n                                            <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                        </>\n                                    ) : (\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-header\">\n                                                        <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                        <div className=\"card-tools\">\n\n                                                        </div>\n                                                    </div>\n                                                    {/* /.card-header */}\n                                                    {this.state.myloading ? (\n                                                        <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                    ) : (\n                                                        <div className=\"card-body table-responsive p-0\">\n                                                            <table className=\"table table-hover text-nowrap\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th>Title</th>\n                                                                        <th>Type</th>\n                                                                        <th>Year</th>\n                                                                        <th>Quarter</th>\n                                                                        <th>Created by</th>\n                                                                        <th>Remark</th>\n                                                                        <th>Action </th>\n                                                                    </tr>\n                                                                </thead>\n                                                                {this.state.Surveys.map(survey => (\n\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <td>{survey.title}</td>\n                                                                            <td>{survey.survey_type}</td>\n                                                                            <td>{survey.year}</td>\n                                                                            <td>{survey.quarter}</td>\n                                                                            <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                            <td>{survey.rejection_remark}</td>\n                                                                            <td className=\"\">\n                                                                                <Link\n                                                                                    className=\"btn btn-info\"\n                                                                                    disabled={this.state.loading}\n                                                                                    to=\"/ViewSurvey\"\n\n                                                                                >Change Template\n                                                                                         </Link>\n\n\n                                                                            </td>\n\n\n                                                                        </tr>\n\n                                                                    </tbody>\n                                                                ))}\n                                                            </table>\n                                                        </div>\n                                                    )}\n                                                    {/* /.card-body */}\n                                                </div>\n                                                {/* /.card */}\n                                            </div>\n                                        </div>\n\n                                    )}\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n\n                </div>\n                <Footer />\n\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n// import MultiselectCheckbox from \"react-multiselect-checkbox\";\n\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//         return (\n//             <div className=\"alert alert-danger\" role=\"alert\">\n//                 This field is required!\n//             </div>\n//         );\n//     }\n// };\nexport default class RejectedSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.UpdateSurvey = this.UpdateSurvey.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,  \n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            approve: \"\",\n            remark: \"\",\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            states: \"\",\n            lgas: \"\",\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n        };\n    }\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n\n\n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n    }\n    onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        this.Get_State_Data();\n        this.Get_LGA_Data();\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?rejected=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = [1, 1, 1]\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = [1, 1, 1]\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n     \n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            // console.log(e);\n        }\n    }\n\n    handleUpdate(e) {\n\n        e.preventDefault();\n        // const SurveyId = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n    \n        this.setState({\n          message: \"\",\n          successful: false,\n          loading: true\n        });\n        this.form.validateAll();\n    \n        if (this.checkBtn.context._errors.length === 0) {\n          \n          const ApprovSurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'))\n          \n\n\n            //convert the string to number from the [go] array i save to  localStorage for State\n            const stop_here_for_state = localStorage.getItem('Checked_State');\n            const jasus_for_state = stop_here_for_state\n\n            //convert the string to number from the [go] array i save to localStorage for LGA\n            const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n            const jasus_for_lga = stop_here_for_lga\n\n            //set the states user selected\n            const states =\n                jasus_for_state.match(/\\d+/g).map(Number)\n\n            // set the LGAs user selected\n            const lgas =\n                jasus_for_lga.match(/\\d+/g).map(Number)\n\n\n\n\n            // newly created json\n            const body =\n            {\n                survey_pk:ApprovSurveyInfo.pk,\n                title: this.state.title||ApprovSurveyInfo.title,\n                quarter: this.state.quarter||ApprovSurveyInfo.quarter,\n                year: this.state.year||ApprovSurveyInfo.year,\n                survey_type: this.state.survey_type||ApprovSurveyInfo.survey_type,\n                start_date: this.state.start_date||ApprovSurveyInfo.start_date,\n                due_date: this.state.due_date||ApprovSurveyInfo.due_date,\n                rejected: 'false',\n                // survey_type:this.state.survey_type||ApprovSurveyInfo.survey_type,\n                states_pk: states ||ApprovSurveyInfo.states,\n                lgas_pk:lgas||ApprovSurveyInfo.lgas,\n            }\n\n            console.log(body);\n          const mytoken = authService.getCurrentUser();\n          const token = mytoken.token;\n    \n          axios.post(`https://gfso.chinikiguard.com/survey/api/update/survey/respondents/`, body,\n          {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        },\n          \n          ).then(\n    \n            response => {\n    \n              this.setState({\n                message: \"Survey Updated Successefully\",\n                successful: true\n              });\n              window.location = \"/RejectedSurvey\"\n            },\n            error => {\n              const resMessage =\n                (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n                error.message ||\n                error.toString();\n    \n              this.setState({\n                loading: false,\n                message: resMessage\n              });\n            }\n          );\n        } else {\n          this.setState({\n            // loading: false\n          });\n        }\n    \n      }\n\n    UpdateSurvey(survey) {\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n        });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/SurveyToUpdate\"\n\n                if (res.data) {\n                    localStorage.setItem(\"SurveyToUpdateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    ApproveThisSurvey: res.data,\n                    // loadingModal: false,\n                });\n\n            })\n\n    }\n    Get_LGA_Data() {\n        const state = \"Ahmad loophole\";\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n                \n            });\n        // console.log(res.data)   \n    }\n    Get_State_Data() {\n        const state = \"Ahmad loophole\";\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                \n            });\n        // console.log(res.data)   \n    }\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n      \n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">\n                                    <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                    <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                    )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n                                    {this.state.myloading ? (\n                                        <>\n                                            <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                        </>\n                                    ) : (\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-header\">\n                                                        <h3 className=\"card-title\">Update Surveys</h3>\n                                                        <div className=\"card-tools\">\n\n                                                        </div>\n                                                    </div>\n                                                    {/* /.card-header */}\n                                                    {this.state.myloading ? (\n                                                        <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                    ) : (\n                                                        <div className=\"card-body table-responsive p-0\">\n                                                            <table className=\"table table-hover text-nowrap\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th>Title</th>\n                                                                        <th>Type</th>\n                                                                        <th>Year</th>\n                                                                        <th>Quarter</th>\n                                                                        <th>Created by</th>\n                                                                        <th>Remark </th>\n                                                                        <th>Action </th>\n                                                                    </tr>\n                                                                </thead>\n                                                                {this.state.Surveys.map(survey => (\n\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <td>{survey.title}</td>\n                                                                            <td>{survey.survey_type}</td>\n                                                                            <td>{survey.year}</td>\n                                                                            <td>{survey.quarter}</td>\n                                                                            <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                            <td>{survey.rejection_remark}</td>\n\n                                                                            \n                                                                            <td className=\"\">\n                                                                                <button\n                                                                                    className=\"btn btn-info btn-lg\"\n                                                                                    disabled={this.state.loading}\n                                                                                    \n                                                                                   onClick={this.UpdateSurvey.bind(this, survey)}\n\n                                                                                >Update\n                                                                               </button>\n                                                                                \n                                                                            </td>\n\n\n                                                                        </tr>\n\n                                                                    </tbody>\n                                                                ))}\n                                                            </table>\n                                                        </div>\n                                                    )}\n                                                    {/* /.card-body */}\n                                                </div>\n                                                {/* /.card */}\n                                            </div>\n                                        </div>\n\n                                    )}\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n\n                </div>\n                <Footer />\n\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import CheckButton from \"react-validation/build/button\";\n// import Textarea from \"react-validation/build/textarea\"\n// import Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport {  Redirect } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\n// const required = value => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n\nexport default class RespondentInfo extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      \n      Users:[],\n      ApproveResponder:[],\n      successful: false,\n      message: \"\",\n      loading: true\n    };\n  }\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n\n      return (<Redirect to={'/login'} />)\n    }\n    \n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    axios.get(\"https://gfso.chinikiguard.com/accounts/api/list/profile/?approved=no&active=no\",\n    {\n      headers:\n      {\n        'Authorization': `Token ${token}`,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n        'Access-Control-Allow-Credentials': true\n      },\n    })\n    .then(res => {\n      if (res.data) {\n        localStorage.setItem(\"Users\", JSON.stringify(res.data));\n      }\n      this.setState({\n        Users: res.data,\n        loading:false\n    });\n      // (res);\n      // console.log(res.data);\n\n    })\n\n  \n     \n\n  }\n\n  ApproveResponder(users){\n\n    const userId = users.pk\n    // console.log(users.pk)\n    const mytoken = AuthService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/details/profile/${userId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ReviewResponder\"\n\n            if (res.data) {\n                localStorage.setItem(\"ReviewResponderInfo\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ReviewResponder: res.data,\n              // loadingModal: false,\n            });\n\n          })\n\n  }\n\n  \n \n  \n  render() {\n\n    \n    // console.log(list_of_lga);\n    // const Users = JSON.parse(localStorage.getItem('Users'))\n\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n\n        return (<Redirect to={'/login'} />)\n      }\n\n\n    return (\n      <div>\n        <Header />\n\n        <div className=\"content-wrapper\" >\n          <Menu />\n\n          {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n          <div className=\"col-md-12\" >\n            <br />\n            {this.state.loading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">List of Respondents</h3>\n                    <div className=\"card-tools\">\n\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n\n                  <div className=\"card-body table-responsive p-0\">\n\n                    <table className=\"table table-hover text-nowrap\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Phone</th>\n                          <th>State</th>\n                          <th>LGA</th>\n                          <th>Registered on</th>\n                          <th>designation</th>\n                          <th>Branch</th>\n                          <th>Action</th>\n                          \n                        </tr>\n                      </thead>\n                      {this.state.Users && this.state.Users.map(users => (\n\n                        <tbody>\n                          <tr>\n                            <td>{users.username}&nbsp;</td>\n                            <td>{users.phone_number}</td>\n                            <td>{users.state_title}</td>\n                            <td>{users.lga_title}</td>\n                            <td>{users.date_joined}</td>\n                            <td>{users.designation_title}</td>\n                            <td>{users.branch_name}</td>\n                                     <td className=\"\">\n                                          <button className=\"btn btn-lg btn-info \"\n                                          disabled={this.state.loading}\n                                          onClick={this.ApproveResponder.bind(this, users)}\n\n                                          >\n\n                                               Update\n                                                   </button>&nbsp;&nbsp;\n\n                                                   \n                                                  </td>\n\n                          </tr>\n\n                        </tbody>\n                      ))}\n                    </table>\n                  </div>\n\n\n                  {/* /.card-body */}\n                </div>\n                {/* /.card */}\n              </div>\n            </div>\n          </section>\n\n          )}\n        </div>\n                               \n        </div>\n        <Footer />\n\n        </div>\n\n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Select from \"react-validation/build/select\";\n// import CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport ReactPaginate from 'react-paginate';\n\n\n// const required = (value) => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n\nexport default class Notifications extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      // message: \"\",\n      loading: true,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false,\n      survey: \"\",\n      true:\"True\",\n      offset: 0,\n      message: [],\n      perPage: 10,\n      currentPage: 0,\n\n    };\n  }\n\n  //pagination\n  handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * this.state.perPage;\n    this.setState({\n      currentPage: selectedPage,\n      offset: offset\n    }, () => {\n      this.loadMoreData()\n    });\n\n  };\n  //pagination\n  loadMoreData() {\n    const data = this.state.message;\n\n    const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n    this.setState({\n      pageCount: Math.ceil(data.length / this.state.perPage),\n      mymessage: slice\n    })\n\n  }\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/?read=no',\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\n        }\n        const tdata = res.data;\n        const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n\n            this.setState({\n              message: tdata,\n              pageCount: Math.ceil(tdata.length / this.state.perPage),\n              mymessage: slice,\n              loading: false,\n              notification: res.data.length,\n\n            });\n        \n        // console.log(res.data)                  \n\n      })\n\n  }\n\n  ViewNotification(message){\n\n   \n    const notifyId = message.pk\n    // console.log(message.pk)\n    // console.log(this.state.true)\n    localStorage.setItem(\"notify_Update_ID\", JSON.stringify(message.pk));\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n\n    axios.get(`https://gfso.chinikiguard.com/core/api/user/notification/details/${notifyId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            // window.location = \"/ViewNotification\"\n\n            if (res.data) {\n                localStorage.setItem(\"ApproveNotifications\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ApproveThisSurvey: res.data,\n              loadingModal: false,\n            });\n\n          })\n\n          const  Read = new FormData();\n\n          Read.append('read', this.state.true);\n          \n          axios.patch(`https://gfso.chinikiguard.com/core/api/user/notification/update/${notifyId}/`,Read,\n            {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            // if (res.data) {\n            //     localStorage.setItem(\"Read\", JSON.stringify(res.data));\n            // }\n\n          })\n\n  }\n\n\n  render() {\n\n    //check for user to access the page\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n    //get the template details\n    // const ApproveNotifications = JSON.parse(localStorage.getItem('ApproveNotifications'));\n\n\n    return (\n      <div>\n        <Header />\n        <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n          <Menu /><br />\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <Link className=\"btn btn-success btn-block mb-3\">Notification</Link>\n               \n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Folders</h3>\n                    <div className=\"card-tools\">\n                      <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\n                        <i className=\"fas fa-minus\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-0\">\n                    <ul className=\"nav nav-pills flex-column\">\n                      <li className=\"nav-item active\">\n                        <Link to=\"/Notifications\" className=\"nav-link\">\n                          <i className=\"fas fa-inbox\" /> New\n                <span className=\"badge bg-primary float-right\">{this.state.notification}</span>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-envelope\" /> Read\n              </Link>\n                      </li>\n                    \n                      {/* <li className=\"nav-item\">\n                        <Link to=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-trash-alt\" /> Trash\n              </Link>\n                      </li> */}\n                    </ul>\n                  </div>\n                  {/* /.card-body */}\n                </div>\n               \n              </div>\n              {/* /.col */}\n              <div className=\"col-md-9\">\n                <div className=\"card card-success card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Notifications</h3>\n                    <div className=\"card-tools\">\n                     \n                    </div>\n                    {/* /.card-tools */}\n                  </div>\n                  {/* /.card-header */}\n                  <div className=\"card-body p-0\">\n                    \n                    <div className=\"table-responsive mailbox-messages\">\n                      {this.state.loading ? (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span> \n                        ) : (\n                      <table className=\"table table-hover table-striped\">\n                        <tbody>\n                        {this.state.mymessage && this.state.mymessage.map(message => (\n                          <tr>\n                            <td>\n                              <div className=\"icheck-primary\">\n                                <input type=\"checkbox\" defaultValue id=\"check1\" />\n                                <label htmlFor=\"check1\" />\n                              </div>\n                            </td>\n                            <td className=\"mailbox-star\"><Link to=\"#\"><i className=\"fas fa-star text-warning\" /></Link></td>\n                            <td className=\"mailbox-name\">\n                            <Link\n                            onClick={this.ViewNotification.bind(this, message)}\n                            >{message.subject}</Link></td>\n                            {/* <td className=\"mailbox-subject\"><b>{message.api_message}</b> -         </td> */}\n                            <td className=\"mailbox-attachment\" />\n                            <td className=\"mailbox-date\">{message.created}</td>\n                          </tr>\n                        ))}\n                           </tbody>\n                           <ReactPaginate\n                            previousLabel={\"prev\"}\n                            nextLabel={\"next\"}\n                            breakLabel={\"...\"}\n                            breakClassName={\"break-me\"}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={this.handlePageClick}\n                            containerClassName={\"pagination\"}\n                            subContainerClassName={\"pages pagination\"}\n                            activeClassName={\"active\"} />\n                      </table>\n                      \n                        )}\n                    </div>\n                    {/* /.mail-box-messages */}\n                  </div>\n                  {/* /.card-body */}\n                  <div className=\"card-footer p-0\">\n                    \n                  </div>\n                </div>\n                {/* /.card */}\n              </div>\n              {/* /.col */}\n            </div>\n            {/* /.row */}\n          </section>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class SurveyToDeploy extends Component {\n\n    constructor(props) {\n         \n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved=yes&approved_template=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"SurveyToDeploy\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveTemplate(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/DeploySurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"DeployTemplateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveTemplate.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\n// import Logo from '../cbn.png'\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\n\nexport default class DeploySurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.handleApprove = this.handleApprove.bind(this);\n        this.onChangestatus = this.onChangestatus.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,\n            successful: false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            status: \"\",\n            remark: \"\",\n            DeploySingleSurvey: []\n        };\n    }\n\n   \n\n    \n\n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n    }\n    onChangestatus(e) {\n        this.setState({\n          status: e.target.value\n        });\n   }\n   onChangeRemark(e) {\n        this.setState({\n             remark: e.target.value\n        });\n   }\n   handleApprove(e) {\n\n    e.preventDefault();\n\n    const DeploySingleSurvey = JSON.parse(localStorage.getItem('DeployTemplateInfo'));\n\n    const pk=DeploySingleSurvey.pk\n\n    this.setState({\n         message: \"\",\n         successful: false,\n         loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n\n     let formData = new FormData();\n     formData.append('status', this.state.status);\n     formData.append('survey',  pk);\n     formData.append('remark', this.state.remark);\n     //     console.log(formData) \n\n         const mytoken = AuthService.getCurrentUser();\n         const token = mytoken.token;\n         axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n              {\n                   headers:\n                   {\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                   },\n              }).then(\n\n                   response => {\n\n                        this.setState({\n                             message: response.data.detail,\n                             successful: true\n                        });\n                    //     window.location = \"/SurveyToDeploy\"\n                   },\n                   error => {\n                        const resMessage =\n                             (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data) ||\n                             error.message ||\n                             error.toString();\n\n                        this.setState({\n                             loading: false,\n                             message: resMessage,\n                             ViewTemplateloading: false,\n\n                        });\n                   }\n              );\n    } else {\n         this.setState({\n              loading: false\n         });\n    }\n}\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const DeploySingleSurvey = JSON.parse(localStorage.getItem('DeployTemplateInfo'));\n        const DeploySingleSurveyCategories = DeploySingleSurvey.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {DeploySingleSurveyCategories&&DeploySingleSurveyCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                \n                                            </div>\n                                            {/* /.card-body */}\n\n                                        </div>\n                                    ))}\n                                    <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{DeploySingleSurvey.title}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                       {/* /.card-header */}\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-12\">\n                                                                 \n                                                                      <label> Title</label>:&nbsp;\n                                                                      <center>\n                                                                                      {DeploySingleSurvey.title.toUpperCase()}\n\n                                                                 </center>\n                                                                 <hr />\n                                                            </div>\n\n                                                            <div className=\"col-sm-12\">\n                                                                 \n                                                                      <label> Quarter</label>:&nbsp;\n                                                                      <center>\n                                                                      {DeploySingleSurvey.quarter.toUpperCase()}\n                                                                 </center>\n                                                                 <hr />\n                                                            </div>\n                                                       </div>\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-12\">\n                                                                 \n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                      <center>\n                                                                                      {DeploySingleSurvey.year}\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 {/* text input */}\n                                                                 \n                                                                      <label> Start date</label>:&nbsp;\n                                                                      <center>\n                                                                                       {DeploySingleSurvey.start_date}\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                \n                                                                      <label> Due Date</label>:&nbsp;\n                                                                      <center>\n                                                                                         {DeploySingleSurvey.due_date}\n\n                                                                 </center>\n                                                                 <hr />\n\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 \n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                      <center>\n                                                                       {DeploySingleSurvey.survey_type.toUpperCase()}\n                                                                 </center>\n                                                                 {/* <hr /> */}\n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 <div className=\"table-container\">\n                                                                      <table className=\"table\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>STATE</th>                                                 \n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody className=\"table-body\">\n\n                                                                                     <tr>\n                                                                                          {/* <td style={{ color: 'green', fontWeight: 'bold' }}>{lga.title} </td> */}\n                                                                                          <br />\n                                                                                          {DeploySingleSurvey.get_states && DeploySingleSurvey.get_states.map(states => (\n                                                                                               <tr>\n                                                                                                    <td>{states.title}</td>\n                                                                                                    \n                                                                                               </tr>\n                                                                                          ))}\n                                                                                     </tr>\n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                \n                                                            </div>\n                                                            <div className=\"col-sm-12\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                    {/* {DeploySingleSurvey.get_lgas} */}\n                                                                      {DeploySingleSurvey.get_lgas && DeploySingleSurvey.get_lgas.map(states => (\n                                                                           <span> {states.title}</span>\n                                                                      ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                  </div>\n                                            {/* /.card-body */}\n                                            \n                                        </div>\n                                    {/* /.card */}\n                                    {DeploySingleSurveyCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n\n                                        <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       {!this.state.successful && (\n\n\n                                                       <div>\n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                \n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangestatus}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_deploy\">Approve</option>\n                                                                      <option value=\"rejected_deploy\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            </div>\n                                                            </div>\n                                                              )}\n                                                            \n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       \n                                                  </Form>\n                               \n                                                  <center>\n                                                                 {this.state.message && (\n                                                                      <div className=\"form-group\">\n                                                                           <div\n                                                                                className={\n                                                                                     this.state.successful\n                                                                                          ? \"alert alert-success\"\n                                                                                          : \"alert alert-danger\"\n                                                                                }\n                                                                                role=\"alert\"\n                                                                           >\n                                                                                {this.state.message}\n                                                                           </div>\n                                                                           {this.state.successful &&\n                                                                                     <Link\n                                                                                          className=\"btn btn-primary\"\n                                                                                          to=\"/SurveyToDeploy\"\n\n                                                                                     >\n                                                                                          continue\n                                                                                              </Link>\n                                                                                }\n\n\n                                                                      </div>\n                                                                 )}\n\n                                                            </center>\n                                          \n                                       \n                                        \n                                          </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                \n                                </div>\n                               \n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class SurveyRejected extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n           \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n   \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class SurveyApproved extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n   \n    componentDidMount() {\n\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n   \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class TemplateApproved extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n           \n        };\n    }\n \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no`,\n\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class TemplateRejected extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n    \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=no&deployed=no`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class ApproveThisTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n           \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no&for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"TemplateToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class ApproveThisSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n          \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=no&for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Select from \"react-validation/build/select\";\n// import CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\n// import Logo from '../cbn.png'\n\n\n// const required = (value) => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n\nexport default class ViewNotification extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: \"\",\n      loading: true,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false,\n      survey: \"\"\n\n    };\n  }\n\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/',\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\n        }\n        this.setState({\n          notification: res.data.length,\n          message: res.data,\n          loading: false,\n\n        });\n        // console.log(res.data)                  \n\n      })\n\n  }\n\n\n\n\n  render() {\n\n    //check for user to access the page\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const ApproveNotifications = JSON.parse(localStorage.getItem('ApproveNotifications'));\n    const MyNotification = ApproveNotifications.message.slice(37, -670)\n    const MyNotificationdear = ApproveNotifications.message.slice(0, -670)\n    // console.log(MyNotification)\n    return (\n      <div>\n        <Header />\n        <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n          <Menu /><br />\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <Link className=\"btn btn-success btn-block mb-3\">Viw Notification</Link>\n\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Folders</h3>\n                    <div className=\"card-tools\">\n                      <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\n                        <i className=\"fas fa-minus\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-0\">\n                    <ul className=\"nav nav-pills flex-column\">\n                      <li className=\"nav-item active\">\n                        <Link to=\"/Notifications\" className=\"nav-link\">\n                          <i className=\"fas fa-inbox\" /> Inbox\n                <span className=\"badge bg-primary float-right\">{this.state.notification}</span>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-envelope\" /> Read\n              </Link>\n                      </li>\n\n                     \n                    </ul>\n                  </div>\n                  {/* /.card-body */}\n                </div>\n\n              </div>\n              {/* /.col */}\n              <div className=\"col-md-9\">\n                <div className=\"card card-success card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Read Notification</h3>\n                    <div className=\"card-tools\">\n                      <Link to=\"#\" className=\"btn btn-tool\" title=\"Previous\"><i className=\"fas fa-chevron-left\" /></Link>\n                      <Link to=\"#\" className=\"btn btn-tool\" title=\"Next\"><i className=\"fas fa-chevron-right\" /></Link>\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n                  <div className=\"card-body p-0\">\n                    <div className=\"mailbox-read-info\">\n                      <h5>{ApproveNotifications.subject}</h5>\n                      <h6>From: support@cbn.gov.ng.\n          <span className=\"mailbox-read-time float-right\">{ApproveNotifications.created}</span></h6>\n                    </div>\n\n                    <div className=\"mailbox-read-message\">\n                      <p>{MyNotificationdear.slice(0, 37)}</p>\n\n                      <div style={{ whiteSpace: \"pre-wrap\" }}>{MyNotification}</div>\n\n                      <p>Thanks,<br />{MyNotificationdear.slice(0, 37)}</p>\n                    </div>\n                    {/* /.mailbox-read-message */}\n                  </div>\n\n                  \n                  {/* /.card-footer */}\n                </div>\n                {/* /.card */}\n              </div>\n\n              {/* /.col */}\n            </div>\n            {/* /.row */}\n          </section>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n","\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Select from \"react-validation/build/select\";\n// import CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\n// import MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\n// import authService from '../services/auth.service';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\n// const required = value => {\n//     if (!value) {\n//         return (\n//             <div className=\"alert alert-danger\" role=\"alert\">\n//                 This field is required!\n//             </div>\n//         );\n//     }\n// };\n\nexport default class UploadSupporting extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        // this.AdoptSurvey = this.AdoptSurvey.bind(this);\n\n        this.state = {\n           \n            loading: false,\n            uploadPercentage: 0,\n            uploadFilePercentage: 0,\n            Filetitle: '',\n            FileInfo: '',\n            file: null,\n            loadingFile: false,\n            selectedFile: null,\n            loaded: 0\n        };\n    }\n\n //My new Smart Upload  \n handleFileTitleChangeSmart = (e) => {\n    this.setState({\n        Filetitle: e.target.value\n    })\n};\n\nhandleInfoChangeSmart = (e) => {\n    this.setState({\n        FileInfo: e.target.value\n    })\n};\ncheckMimeType = (event) => {\n    //getting file object\n    let files = event.target.files\n    //define message container\n    let err = []\n    // list allow mime type\n    const types = ['application/pdf', 'application/doc','application/docx','file/pdf', 'file/doc','file/docx','image/png', 'image/jpeg', 'image/gif']\n    // loop access array\n    for (let x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n            // create error message and assign to container   \n            err[x] = files[x].type + ' is not a supported format\\n';\n        }\n    };\n    for (let z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nmaxSelectFile = (event) => {\n    let files = event.target.files\n    if (files.length > 3) {\n        const msg = 'Only 3 images can be uploaded at a time'\n        event.target.value = null\n        toast.warn(msg)\n        return false;\n    }\n    return true;\n}\ncheckFileSize = (event) => {\n    let files = event.target.files\n    let size = 5000000\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n            err[x] = files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n    };\n    for (var z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nonChangeHandler = event => {\n    var files = event.target.files\n    if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        // if return true allow to setState\n        this.setState({\n            selectedFile: files,\n            loaded: 0\n        })\n    }\n}\nonClickHandler = () => {\n\n    const user = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token= user.token \n\n    const Formdata = new FormData()\n\n    for (var x = 0; x < this.state.selectedFile.length; x++) {\n        Formdata.append('document', this.state.selectedFile[x])\n        Formdata.append('title', this.state.Filetitle);\n        Formdata.append('info', this.state.FileInfo);\n    }\n    axios.post(\"https://gfso.chinikiguard.com/accounts/api/registration/supporting-docs/add/\", Formdata, {\n        headers: {\n            'content-type': 'multipart/form-data',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n        },\n        onUploadProgress: ProgressEvent => {\n            this.setState({\n                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n            })\n        },\n    })\n        .then(res => {\n            // then print response status\n            console.log(res)\n            toast.success('File successfully uploaded')\n            window.location = \"/UserUploads\"\n\n        })\n        .catch(err => {\n            // then print response status\n            toast.error('Failed to Upload the File')\n        })\n}\n\n//end file upload\n\n   \n\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Upload Supporting Document</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <Form>\n                                                                    <ToastContainer />\n                                                                    <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded, 2)}%</Progress>\n                                                                    <br />\n                                                                    <div className=\"form-group\">\n                                                                    <div className=\"col-4\">\n\n                                                                        <label > Title</label>\n                                                                        <input type=\"text\" className=\"form-control\" onChange={this.handleFileTitleChangeSmart} \n                                                                            required />\n                                                                        </div>\n                                                                        <div className=\"col-4\">\n\n                                                                        <label >Info</label>\n                                                                        <input type=\"text\" className=\"form-control\" onChange={this.handleInfoChangeSmart} \n                                                                        required />\n                                                                        </div>\n\n                                                                        <br/>\n                                                                        <div className=\"col-4\">\n\n                                                                        <input type=\"file\" class=\"form-control\" onChange={this.onChangeHandler} value={this.state.file}  />\n                                                                        \n                                                                        </div>\n                                                                        </div>\n                                                                    <button type=\"button\" class=\"btn btn-success\" onClick={this.onClickHandler} >Upload</button>\n\n                                                                    </Form> \n                                                                    </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\n// import Logo from '../cbn.png'\n// import { noConflict } from \"jquery\";\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ReviewResponder extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleActivate = this.handleActivate.bind(this);\n          this.onChangeActive = this.onChangeActive.bind(this);\n         \n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               active:'',\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeActive(e) {\n          this.setState({\n               active: e.target.value\n          });\n     }\n     \n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const script = document.createElement(\"script\");\n          script.src = \"./plugins/filterizr/jquery.filterizr.min.js\";\n          script.async = true;\n          document.body.appendChild(script);\n     }\n\n     handleActivate(e) {\n\n          e.preventDefault();\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderInfo'));\n          const pk =ReviewResponderInfo.pk\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('active', this.state.active);\n              \n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.patch(`https://gfso.chinikiguard.com/accounts/api/update/profile/${pk}/`,formData, \n               \n               \n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: \"User Activated successefully\",\n                                   successful: true\n                              });\n                              window.location = \"/RespondentInfo\"\n                                             // console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderInfo'));\n\n          const link='https://gfso.chinikiguard.com'\n\n          return (\n\n               <div>\n               <Header />\n\n               <div className=\"content-wrapper\" >\n                    <Menu />\n                    <br />\n                    <section className=\"content\">\n                         <div className=\"container-fluid\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-3\">\n                                        {/* Profile Image */}\n                                        <div className=\"card card-success card-outline\">\n                                             <div className=\"card-body box-profile\">\n                                                  \n                                                  <h3 className=\"profile-username text-center\">{ReviewResponderInfo.fullname}</h3>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.staff_number}</p>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.active}</p>\n\n                                                  <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Designation</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.designation_title}</p><hr />\n                                                  {/* <strong>\n                                                  <i className=\"fas fa-home mr-1\" /> Branch</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.branch_name}</p>\n                                                   */}\n                                                  <hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> State</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.state_title}</p><hr />\n                                                       <strong><i className=\"fas fa-map-marker-alt mr-1\" /> LGA</strong>\n                                                       <p className=\"text-muted\">{ReviewResponderInfo.lga_title}</p>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleActivate}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Change Status</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeActive}\n                                                                      value={this.state.active}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"yes\" className=\"text-success\">Activate</option>\n                                                                      <option value=\"no\" className=\"text-danger\">DeActivate</option>\n\n                                                                 </Select>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-sm\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                          \n                                             </div>\n                                             {/* /.card-body */}\n                                        </div>\n                                        {/* /.card */}\n                                       \n                                   </div>\n\n                                   <div className=\"col-md-9\">\n                                        <div className=\"card\">\n\n                                             <div className=\"card-header p-2\">\n                                                  <Form>\n                                                  <ul className=\"nav nav-pills\">\n                                                  <li className=\"nav-item\"><Link className=\"nav-link  \" onChange={this.onChangeActive} value={this.state.active} data-toggle=\"tab\">document</Link></li>\n                                                       {/* <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                       <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                  */}\n                                                  </ul>\n                                                  </Form>\n                                             </div>{/* /.card-header */}\n                                             \n                                             {ReviewResponderInfo.get_registration_documents.length?\n\n                                             <div className=\"card-body\">\n                                                  <div className=\"tab-content\">\n                                                       <div className=\"active tab-pane\" id=\"activity\">\n                                                       \n                                                                                     <div className=\"card-footer bg-white\">\n                                                                                          <ul className=\"mailbox-attachments d-flex align-items-stretch clearfix\">\n                                                                                          {ReviewResponderInfo.get_registration_documents.map(document => (\n\n                                                                                               <li>\n                                                                                                    <span className=\"mailbox-attachment-icon\"><i className=\"far fa-file-pdf\" /></span>\n                                                                                                    <div className=\"mailbox-attachment-info\">\n                                                                                                         <a href={link+document.document} className=\"mailbox-attachment-name\" download><i className=\"fas fa-paperclip\" /> {document.info}</a>\n                                                                                                         <span className=\"mailbox-attachment-size clearfix mt-1\">\n                                                                                                              <span>{document.title}</span>\n                                                                                                              <a href={link+document.document}className=\"btn btn-default btn-sm float-right\" download={link+document.document}><i className=\"fas fa-cloud-download-alt\" /></a>\n                                                                                                         </span>\n                                                                                                    </div>\n                                                                                               </li>\n                                                                                                                                                       ))}\n\n                                                                                               \n                                                                                               \n                                                                                          </ul>\n                                                                                     </div>\n\n                                                            {/* /.post */}\n                                                            {/* Post */}\n                                                            <div className=\"post clearfix\">\n                                                               \n                                                                 {/* /.user-block */}\n                                                               \n                                                            </div>\n                                                            {/* /.post */}\n\n                                                       </div>\n                                                      \n                                                  </div>\n                                                  {/* /.tab-content */}\n                                             </div>\n : <center> \n <h6>Sorry there is no document attached by this user</h6></center>\n}\n                                             \n                                        </div>\n                                   \n                                        {/* /.card */}\n                                   </div>\n                                   \n                                    </div>\n                         \n                              {/* /.row */}\n                         </div>{/* /.container-fluid */}\n                    </section>\n\n\n               </div>\n               <Footer />\n\n          </div>\n\n\n                );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\n// import Logo from '../cbn.png'\n// import { noConflict } from \"jquery\";\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApproveResponder extends Component {\n\n     constructor(props) {\n          super(props);\n          this.onChangeUser_pk = this.onChangeUser_pk.bind(this);\n          this.onChangeGroup_pk= this.onChangeGroup_pk.bind(this);\n          this.handleActivate= this.handleActivate.bind(this);\n          \n\n          this.state = {\n               myloading: true,\n               loading: false,\n               message: \"\",\n               user_pk:\"\",\n               group_pk:\"\"\n          };\n     }\n\n\n    \n     \n     onChangeUser_pk(e) {\n          this.setState({\n               user_pk: e.target.value\n          });\n     } \n     onChangeGroup_pk(e) {\n          this.setState({\n               group_pk: e.target.value\n          });\n     }\n     \n     \n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const script = document.createElement(\"script\");\n          script.src = \"./plugins/filterizr/jquery.filterizr.min.js\";\n          script.async = true;\n          document.body.appendChild(script);\n     }\n\n     handleActivate(e) {\n\n          e.preventDefault();\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('user_pk', this.state.user_pk);\n               formData.append('group_pk', this.state.group_pk);\n             \n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/accounts/api/group/add/user/`,formData, \n               \n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              window.location = \"/RespondentList\"\n                                             console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderList'));\n\n          const link='https://gfso.chinikiguard.com'\n\n          return (\n\n               <div>\n               <Header />\n\n               <div className=\"content-wrapper\" >\n                    <Menu />\n                    <br />\n                    <section className=\"content\">\n                         <div className=\"container-fluid\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-3\">\n                                        {/* Profile Image */}\n                                        <div className=\"card card-success card-outline\">\n                                             <div className=\"card-body box-profile\">\n                                                  \n                                                  <h3 className=\"profile-username text-center\">{ReviewResponderInfo.fullname}</h3>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.staff_number}</p>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.active}</p>\n\n                                                  <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Designation</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.designation_title}</p><hr /><strong>\n                                                  <i className=\"fas fa-home mr-1\" /> Branch</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.branch_name}</p>\n                                                  \n                                                  <hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> State</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.state_title}</p><hr />\n                                                       <strong><i className=\"fas fa-map-marker-alt mr-1\" /> LGA</strong>\n                                                       <p className=\"text-muted\">{ReviewResponderInfo.lga_title}</p>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleActivate}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n\n                                                       <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">User</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeUser_pk}\n                                                                      value={this.state.user_pk}\n                                                                 >\n                                                                       <option>--select--</option>\n\n                                                                      <option value={ReviewResponderInfo.user} className=\"text-success\" >{ReviewResponderInfo.username}</option>\n\n                                                                 </Select>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Group</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeGroup_pk}\n                                                                      value={this.state.group_pk}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value={1} className=\"text-success\" >Respondent</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-sm\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                          \n                                             </div>\n                                             {/* /.card-body */}\n                                        </div>\n                                        {/* /.card */}\n                                       \n                                   </div>\n                                   {/* /.col */}\n                                   <div className=\"col-md-9\">\n                                        <div className=\"card\">\n                                             <div className=\"card-header p-2\">\n                                                  <Form>\n                                                  <ul className=\"nav nav-pills\">\n                                                  <li className=\"nav-item\"><Link className=\"nav-link  \" onChange={this.onChangeActive} value={this.state.active} data-toggle=\"tab\">document</Link></li>\n                                                       {/* <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                       <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                  */}\n                                                  </ul>\n                                                  </Form>\n                                             </div>{/* /.card-header */}\n                                             {ReviewResponderInfo.get_registration_documents.map(document => (\n\n                                             <div className=\"card-body\">\n                                                  <div className=\"tab-content\">\n                                                       <div className=\"active tab-pane\" id=\"activity\">\n                                                       \n                                                                                     <div className=\"card-footer bg-white\">\n                                                                                          <ul className=\"mailbox-attachments d-flex align-items-stretch clearfix\">\n                                                                                               <li>\n                                                                                                    <span className=\"mailbox-attachment-icon\"><i className=\"far fa-file-pdf\" /></span>\n                                                                                                    <div className=\"mailbox-attachment-info\">\n                                                                                                         <a href={link+document.document} className=\"mailbox-attachment-name\" download><i className=\"fas fa-paperclip\" /> {document.info}</a>\n                                                                                                         <span className=\"mailbox-attachment-size clearfix mt-1\">\n                                                                                                              <span>{document.title}</span>\n                                                                                                              <a href={link+document.document}className=\"btn btn-default btn-sm float-right\" download={link+document.document}><i className=\"fas fa-cloud-download-alt\" /></a>\n                                                                                                         </span>\n                                                                                                    </div>\n                                                                                               </li>\n                                                                                               \n                                                                                               \n                                                                                               \n                                                                                          </ul>\n                                                                                     </div>\n\n                                                            {/* /.post */}\n                                                            {/* Post */}\n                                                            <div className=\"post clearfix\">\n                                                               \n                                                                 {/* /.user-block */}\n                                                               \n                                                            </div>\n                                                            {/* /.post */}\n\n                                                       </div>\n                                                      \n                                                  </div>\n                                                  {/* /.tab-content */}\n                                             </div>\n                                                        ))}\n                                        </div>\n                                        {/* /.card */}\n                                   </div>\n                                   {/* /.col */}\n                              </div>\n                              {/* /.row */}\n                         </div>{/* /.container-fluid */}\n                    </section>\n\n\n               </div>\n               <Footer />\n\n          </div>\n\n\n                );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n// import Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\n// import { Link, Redirect } from 'react-router-dom';\n// import AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\n// import Footer from \"./Footer\";\nimport axios from 'axios'\n// import Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchRecurrent extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n              \n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/by-year/?year=${this.state.year}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                        console.log(res.data);\n  \n                      window.location = \"/RecurrentCapitalExpenditure\"\n                      if (res.data) {\n                          localStorage.setItem(\"RecurrentCapitalExpenditure\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                             <div className=\"col-7\">\n\n                                                       <div className=\"form-group\">\n                                                            <label>Year</label>\n\n                                                            <Select\n                                                                 className=\"form-control\"\n                                                                 id=\"exampleFormControlSelect9\"\n                                                                 validations={[required]}\n                                                                 onChange={this.onChangeYear}\n                                                                 value={this.state.year}\n                                                            >\n                                                                 <option value=\"\">--select--</option>\n                                                                 <option value=\"2011\">2011</option>\n                                                                 <option value=\"2012\">2012</option>\n                                                                 <option value=\"2013\">2013</option>\n                                                                 <option value=\"2014\">2014</option>\n                                                                 <option value=\"2015\">2015</option>\n                                                                 <option value=\"2016\">2016</option>\n                                                                 <option value=\"2017\">2017</option>\n                                                                 <option value=\"2018\">2018</option>\n                                                                 <option value=\"2019\">2019</option>\n                                                                 <option value=\"2020\">2020</option>\n                                                                 <option value=\"2021\">2021</option>\n\n                                                            </Select>\n                                                            </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","// import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class RecurrentCapitalExpenditure extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          RecurrentCapitalExpenditure:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('RecurrentCapitalExpenditure'));\n          this.setState({\n            \n            RecurrentCapitalExpenditure: Response.data,\n            year:Response.year\n        })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.RecurrentCapitalExpenditure)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Recurrent & Capital Expenditure </h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body\">\n\n                                            <table id=\"emp\" class=\"table\">\n                                            \n                                                <thead>\n\n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> Economic Classification of State Government Recurrent and Capital Expenditure <br/> (Naira Billion)</div></center>\n                                                <hr/>\n                                                 \n                                                    <tr style={{ backgroundColor: '#29d050'}}>\n                                                        <th>Section</th>\n                                                        <th>Item</th>                                                          \n                                                          {/* <br /> */}\n\n                                                        <th>{this.state.year} HYQ1</th>\n                                                        <th>{this.state.year}HYQ2</th>\n                                                        <th>Q1{this.state.year}</th>\n                                                        <th>Q2{this.state.year}</th>\n                                                        <th>Q3{this.state.year}</th>\n                                                        <th>Q4{this.state.year}</th>\n                                                   \n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n\n                                                    {this.state.RecurrentCapitalExpenditure && this.state.RecurrentCapitalExpenditure.map(category => (\n\n                                                        <tr>\n                                                            <td>\n                                                                {/* {category.economic_code} */}\n                                                                <b> {category?category.economic_code!=='None':\"\"}</b>\n\n                                                                {category.fields.map(economic => (\n                                                                    <div>\n                                                                {/* <hr/> */}\n\n                                                                    {economic?economic.economic_code!=='None':\"\"}\n                                                                    </div>\n                                                                ))}\n                                                            </td>\n\n                                                            <td>\n\n                                                                <b>{category.name}\n                                                                </b>\n                                                                <br/>\n                                                            <br/>                                                                {category.fields.map(field => (\n                                                          <div style={{ fontWeight: 'lighter'}}>\n\n                                                                 {/* <hr/> */}\n                                                                    { field.name }\n                                                                    </div>\n\n                                                                ))}\n\n                                                            </td>\n\n                                                            {/* <br /> */}\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.hyq1}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.hyq2}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.q1}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.q2}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.q3}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                             <td>\n                                                             <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.q4}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                                \n                                                            </td>\n\n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"RecurrentCapitalExpenditure\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","// import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class COFOGreport extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          COFOGreport:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('COFOGreport'));\n          this.setState({\n            \n               COFOGreport: Response.data,\n            year:Response.year\n        })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.COFOGreport)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">COFOG Recurrent & Capital Expenditure </h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body table-responsive p-0\">\n                                         <table id=\"emp\"className=\"table table-hover text-nowrap\">\n                                                                                         \n                                                <thead>\n                                                \n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> Classification  Functions of  Government (COFOG)  Recurrent and Capital Expenditure <br/> (Naira Billion)</div></center>\n                                                <hr/>\n\n                                                               <tr>\n                                                                    \n                                                                    <th></th>\n                                                                    <th style={{ textAlign: 'buttom' }}>1st  Quarter</th>\n                                                                    <th></th>\n                                                                    <th></th>\n\n                                                                    <th>2nd Quarter</th>\n                                                                    <th></th>\n                                                                    <th></th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}>1st Half Quarter {this.state.year}</th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}></th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}></th>\n                                                                    <th>3rd Quarter</th>\n                                                                    <th></th>\n                                                                    <th></th>\n                                                                    <th>4th Quarter</th>\n                                                                    <th></th>\n                                                                    <th></th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}>Annual {this.state.year} </th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}></th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}></th>\n                                                                   \n                                                               </tr>\n\n                                                    <tr >\n                                                    <th style={{ backgroundColor: '#29d050'}}>COFOG</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Annual</th>\n\n                                                    </tr>\n                                                    \n                                                    \n                                                </thead>\n                                                <tbody>\n\n                                                    {this.state.COFOGreport && this.state.COFOGreport.map(category => (\n                                                        <tr>\n                                                        <td>\n                                                            <b>{category.category}\n                                                                </b>                                                                    \n                                                            </td>\n\n\n                                                            <td>\n                                                            {category.hyq1_capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.hyq1_recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.hyq1_total}\n\n                                                            </td>\n\n\n                                                            <td>\n                                                            {category.hyq2_capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.hyq2_recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.hyq2_total}\n\n                                                            </td>\n\n                                                            <td>\n                                                            {category.q1_capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.q1_recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.q1_total}\n\n                                                            </td>\n                                                                 \n                                                            \n                                                            <td>\n                                                            {category.q2_capital}\n\n                                                            </td>\n                                                             <td>\n                                                            {category.q2_recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.q2_total}\n\n                                                            </td>\n\n\n\n                                                           <td>\n                                                            {category.q3_capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.q3_recurrent}\n\n                                                            </td> \n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.q3_total}\n\n                                                            </td>\n                                                           \n                                                            <td>\n                                                            {category.q4_capital}\n\n                                                            </td> \n                                                            <td>\n                                                            {category.q4_recurrent}\n\n                                                            </td> \n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.q4_total}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.annual}\n\n                                                            </td>\n\n                                                            </tr>\n                                                            \n                                                            \n      \n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"COFOGreport\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n// import Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\n// import { Link, Redirect } from 'react-router-dom';\n// import AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\n// import Footer from \"./Footer\";\nimport axios from 'axios'\n// import Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchCOFOG extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n              \n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/report/cofog/?year=${this.state.year}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                        console.log(res.data);\n  \n                      window.location = \"/COFOGreport\"\n                      if (res.data) {\n                          localStorage.setItem(\"COFOGreport\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                             <div className=\"col-7\">\n\n                                                       <div className=\"form-group\">\n                                                            <label>Year</label>\n\n                                                            <Select\n                                                                 className=\"form-control\"\n                                                                 id=\"exampleFormControlSelect9\"\n                                                                 validations={[required]}\n                                                                 onChange={this.onChangeYear}\n                                                                 value={this.state.year}\n                                                            >\n                                                                 <option value=\"\">--select--</option>\n                                                                 <option value=\"2011\">2011</option>\n                                                                 <option value=\"2012\">2012</option>\n                                                                 <option value=\"2013\">2013</option>\n                                                                 <option value=\"2014\">2014</option>\n                                                                 <option value=\"2015\">2015</option>\n                                                                 <option value=\"2016\">2016</option>\n                                                                 <option value=\"2017\">2017</option>\n                                                                 <option value=\"2018\">2018</option>\n                                                                 <option value=\"2019\">2019</option>\n                                                                 <option value=\"2020\">2020</option>\n                                                                 <option value=\"2021\">2021</option>\n\n                                                            </Select>\n                                                            </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n// import Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\n// import { Link, Redirect } from 'react-router-dom';\n// import AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\n// import Footer from \"./Footer\";\nimport axios from 'axios'\n// import Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchSSGFF extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n              \n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/report/ssgff/?year=${this.state.year}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                        console.log(res.data);\n  \n                      window.location = \"/SSGFFreport\"\n                      if (res.data) {\n                          localStorage.setItem(\"SSGFFreport\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                             <div className=\"col-7\">\n\n                                                       <div className=\"form-group\">\n                                                            <label>Year</label>\n\n                                                            <Select\n                                                                 className=\"form-control\"\n                                                                 id=\"exampleFormControlSelect9\"\n                                                                 validations={[required]}\n                                                                 onChange={this.onChangeYear}\n                                                                 value={this.state.year}\n                                                            >\n                                                                 <option value=\"\">--select--</option>\n                                                                 <option value=\"2011\">2011</option>\n                                                                 <option value=\"2012\">2012</option>\n                                                                 <option value=\"2013\">2013</option>\n                                                                 <option value=\"2014\">2014</option>\n                                                                 <option value=\"2015\">2015</option>\n                                                                 <option value=\"2016\">2016</option>\n                                                                 <option value=\"2017\">2017</option>\n                                                                 <option value=\"2018\">2018</option>\n                                                                 <option value=\"2019\">2019</option>\n                                                                 <option value=\"2020\">2020</option>\n                                                                 <option value=\"2021\">2021</option>\n\n                                                            </Select>\n                                                            </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class SSGFFreport extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          SSGFFreport:[],\n          SSGFFreportTitle:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const ax = axios.create({\n            baseURL: './data'\n        })\n        ax.get('response.json')\n            .then(res => {\n                // if (res.data) {\n                //     localStorage.setItem(\"SSGFFreport\", JSON.stringify(res.data));\n                // }\n\n                this.setState({\n            \n                    SSGFFreport: res.data.data,\n                    SSGFFreportTitle:res.data.data,\n                    year:res.data.year\n                    \n             })\n            })\n            \n\n        //   const Response = JSON.parse(localStorage.getItem('SSGFFreport'));\n        //   this.setState({\n            \n        //        SSGFFreport: Response.data,\n        //        SSGFFreportTitle:Response.data.data,\n        //        year:Response.year\n        // })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.SSGFFreport)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Summary of SG an FCT Finances: State-By-State</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body\">\n\n                                            <table id=\"emp\" class=\"table\">\n                                            \n                                                <thead>\n\n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> Summary of State Government and FCT Finances: State-By-State <br/> (Naira Billion)</div></center>\n                                                <hr/>\n                                                \n                                                <tr style={{ backgroundColor: '#29d050'}}>\n                                                        <th>S/N</th>\n                                                        <th>STATES</th> \n                                                        {/* {this.state.SSGFFreportTitle && this.state.SSGFFreportTitle.map(categoryTitle => (\n                                                         \n                                                        <th>{categoryTitle.fields}</th>\n\n                                                         ))} */}\n                                                    </tr>\n                                                    \n                                                     </thead>\n                                                <tbody>\n\n                                                    {this.state.SSGFFreport && this.state.SSGFFreport.map(category => (\n\n                                                        <tr>\n                                                            <td>\n                                                                 {category.Sno}\n\n                                                            </td>\n                                                            <td>\n                                                                 {category.state}\n\n                                                            </td>\n                                                            <td>\n                                                                 {category.state}\n\n                                                            </td>\n                                                            \n                                                                 {category.data.map(total=> (\n                                                                 <td>{total.grand_total}</td>\n                                                                 \n                                                                 ))}\n\n                                                           \n\n                                                            {/* <td>\n\n                                                                                                                               \n                                                            {category.sub_categories.map(Subcategories => (\n                                                          <div style={{ fontWeight: 'lighter'}}>\n\n                                                                    { Subcategories.name }\n                                                                    </div>\n\n                                                                ))}\n\n                                                            </td> */}\n\n                                                           \n                                                            \n                                                            \n                                                            \n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"RecurrentCapitalExpenditure\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n// import Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\n// import { Link, Redirect } from 'react-router-dom';\n// import AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\n// import Footer from \"./Footer\";\nimport axios from 'axios'\n// import Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchPensiondeduction extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n          this.onChangeSurvey_type = this.onChangeSurvey_type.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n               survey_type:\"\"\n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     } \n     onChangeSurvey_type(e) {\n          this.setState({\n               survey_type: e.target.value\n          });\n     }\n     \n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/total/by-year/?year=${this.state.year}&survey_type=${this.state.survey_type}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                    //     console.log(res.data);\n  \n                      window.location = \"/PensiondeductionReport\"\n                      if (res.data) {\n                          localStorage.setItem(\"PensiondeductionReport\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                        <div className=\"col-7\">\n\n                                                                 <div className=\"form-group\">\n                                                                      <label>Survey Type</label>\n\n                                                                      <Select\n                                                                           className=\"form-control\"\n                                                                           id=\"exampleFormControlSelect9\"\n                                                                           validations={[required]}\n                                                                           onChange={this.onChangeSurvey_type}\n                                                                           value={this.state.survey_type}\n                                                                      >\n                                                                           <option value=\"\">--select--</option>\n                                                                           <option value=\"sg\">SG</option>\n                                                                           <option value=\"lg\">LG</option>\n                                             \n                                                                      </Select>\n                                                                 </div>\n                                                            </div><div className=\"col-7\">\n\n                                                                 <div className=\"form-group\">\n                                                                      <label>Year</label>\n\n                                                                      <Select\n                                                                           className=\"form-control\"\n                                                                           id=\"exampleFormControlSelect9\"\n                                                                           validations={[required]}\n                                                                           onChange={this.onChangeYear}\n                                                                           value={this.state.year}\n                                                                      >\n                                                                           <option value=\"\">--select--</option>\n                                                                           <option value=\"2011\">2011</option>\n                                                                           <option value=\"2012\">2012</option>\n                                                                           <option value=\"2013\">2013</option>\n                                                                           <option value=\"2014\">2014</option>\n                                                                           <option value=\"2015\">2015</option>\n                                                                           <option value=\"2016\">2016</option>\n                                                                           <option value=\"2017\">2017</option>\n                                                                           <option value=\"2018\">2018</option>\n                                                                           <option value=\"2019\">2019</option>\n                                                                           <option value=\"2020\">2020</option>\n                                                                           <option value=\"2021\">2021</option>\n\n                                                                      </Select>\n                                                                 </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","// import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class PensiondeductionReport extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          PensiondeductionReport:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('PensiondeductionReport'));\n          this.setState({\n            \n               PensiondeductionReport: Response.data,\n               year:Response.year,\n               Survey_type:Response.survey_type\n          })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.PensiondeductionReport)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Pension & Deduction </h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body table-responsive p-0\">\n                                         <table id=\"emp\"className=\"table table-hover text-nowrap\">\n                                                                                         \n                                                <thead>\n                                                \n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> Pension & Deduction For {this.state.Survey_type} <br/> </div></center>\n                                                <hr/>\n\n                              \n                                                    <tr >\n                                                    {/* {this.state.Survey_type?this.state.Survey_type==='sg'&&\n                                                    <th >\n                                                    STATE\n                                               </th>\n                                                    :\"\"}\n                                                    {this.state.Survey_type?this.state.Survey_type==='lg' &&\n                                                    <th>LGA</th>\n                                                    :\n                                                    \n                                                    \"\"} */}\n\n                                                                    <th>STATE</th>\n                                                                    <th>LGA</th>\n                                                                    <th>HYQ1</th>\n                                                                    <th>HYQ2</th>\n\n                                                                    <th>Annual</th>\n\n                                                    </tr>\n                                                    \n                                                    \n                                                </thead>\n                                                <tbody>\n\n                                                    {this.state.PensiondeductionReport && this.state.PensiondeductionReport.map(category => (\n                                                        <tr>\n                                                        <td>\n                                                            <b>{category.state}\n                                                                </b>                                                                    \n                                                            </td>\n                                                            <td>\n                                                            <b>{category.lga}\n                                                                </b>                                                                    \n                                                            </td>\n\n\n                                                            <td>\n                                                            {category.hyq1}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.hyq2}\n\n                                                            </td>\n                                                            \n\n                                                                  \n                                                            \n                                                            <td>\n                                                            {category.annual}\n\n                                                            </td>\n\n                                                            </tr>\n                                                            \n                                                            \n      \n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"PensiondeductionReport\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","// import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class LGEONSPWReport extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          LGEONSPWReport:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('LGEONSPWReport'));\n          this.setState({\n            \n               LGEONSPWReport: Response.data,\n               year:Response.year,\n          })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.LGEONSPWReport)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">LGAs Expenditure </h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body table-responsive p-0\">\n                                         <table id=\"emp\"className=\"table table-hover text-nowrap\">\n                                                                                         \n                                                <thead>\n                                                \n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> LGAs Expenditure <br/> </div></center>\n                                                <hr/>\n\n                                      \n                                                               <tr >\n                                                               <th style={{ backgroundColor: '#29d050'}}>Category</th>   \n                                                    <th>Capital</th>\n                                                    <th>Recurrent</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th> \n\n                                                   \n\n                                                    </tr>\n                                                   \n                                                    \n                                                </thead>\n                                                <tbody>\n\n                                                    {this.state.LGEONSPWReport && this.state.LGEONSPWReport.map(category => (\n                                                        <tr>\n                                                        <td>\n                                                            <b>{category.category}\n                                                                </b>                                                                    \n                                                            </td>\n\n\n                                                            <td>\n                                                            {category.capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.total}\n\n                                                            </td>\n\n\n                                                            </tr>\n                                                            \n                                                            \n      \n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"PensiondeductionReport\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n// import Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\n// import { Link, Redirect } from 'react-router-dom';\n// import AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\n// import Footer from \"./Footer\";\nimport axios from 'axios'\n// import Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchLGEONSPW extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n              \n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/report/lge-on-spw/?year=${this.state.year}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                        console.log(res.data);\n  \n                      window.location = \"/LGEONSPWReport\"\n                      if (res.data) {\n                          localStorage.setItem(\"LGEONSPWReport\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                             <div className=\"col-7\">\n\n                                                       <div className=\"form-group\">\n                                                            <label>Year</label>\n\n                                                            <Select\n                                                                 className=\"form-control\"\n                                                                 id=\"exampleFormControlSelect9\"\n                                                                 validations={[required]}\n                                                                 onChange={this.onChangeYear}\n                                                                 value={this.state.year}\n                                                            >\n                                                                 <option value=\"\">--select--</option>\n                                                                 <option value=\"2011\">2011</option>\n                                                                 <option value=\"2012\">2012</option>\n                                                                 <option value=\"2013\">2013</option>\n                                                                 <option value=\"2014\">2014</option>\n                                                                 <option value=\"2015\">2015</option>\n                                                                 <option value=\"2016\">2016</option>\n                                                                 <option value=\"2017\">2017</option>\n                                                                 <option value=\"2018\">2018</option>\n                                                                 <option value=\"2019\">2019</option>\n                                                                 <option value=\"2020\">2020</option>\n                                                                 <option value=\"2021\">2021</option>\n\n                                                            </Select>\n                                                            </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class Allsurveys extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    // EditTemplate(Surveys) {\n\n    //     //\n    //     const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    //     const token = mytoken.token;\n    //     const survey_pk = Surveys.survey_pk;\n    //     // console.log(Surveys.survey_pk)\n\n       \n    //     axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n    //         {\n    //             headers:\n    //             {\n    //                 'Content-Type': 'application/json',\n    //                 'Authorization': `Token ${token}`,\n    //                 'Access-Control-Allow-Origin': '*',\n    //                 'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n    //                 'Access-Control-Allow-Credentials': true\n    //             },\n    //             params:{\n    //                 survey_pk:survey_pk\n    //             }\n\n    //         })\n    //         .then(res => {\n    //             if (res.data) {\n    //                 localStorage.setItem(\"ResponsesTable\", JSON.stringify(res.data));\n    //             }\n    //             console.log(res.data)\n    //             // window.location = \"/CompleteSurvey\"\n\n    //         })\n\n\n    // }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               {/* <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th> */}\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    {/* <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td> */}\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        <Link className=\"btn btn-primary btn-sm\" to=\"/\">\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     More\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n\n  \n \nconst InputRes = ({ input_type, pk, name, field_value ,value}) => {\n    // console.log(field_value)\n    const  {handleChange}  = useContext(FormContext)\n    \n    return (\n\n        <div className=\"col-4\">\n\n           {name} : <label style={{ color: 'blue'}}>&nbsp;&nbsp;{value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </label>\n         <input\n         onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n         type=\"number\" \n         step=\"any\"\n         className=\"form-control\"\n         min={0}  \n        //  placeholder={value}\n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default InputRes\n","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n\n  \n \nconst InputResAccounting = ({ input_type, pk, name, field_value ,value}) => {\n    // console.log(field_value)\n    const  {handleChange}  = useContext(FormContext)\n    return (\n\n        <div className=\"col-4\">\n\n           {name} : <label style={{ color: 'blue'}}>&nbsp;&nbsp;{value} </label>\n         <input\n         onKeyDown={(evt) => [\"e\", \"E\", \"+\"].includes(evt.key) && evt.preventDefault()}\n         type=\"number\" \n         step=\"any\"\n         className=\"form-control\"  \n        //  placeholder={value}\n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default InputResAccounting\n","import React from 'react'\nimport InputRes from './FormElements/InputRes'\nimport InputResAccounting from './FormElements/InputResAccounting'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElementRes = ({ field: { input_type, pk, name, value }}) => {\n  \n    switch (input_type) {\n        case 'number':\n            return (<InputRes\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n            case 'accounting':\n            return (<InputResAccounting\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'text_input_':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n       \n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElementRes\n","import React from 'react'\nimport InputRes from './FormElements/InputRes'\nimport InputResAccounting from './FormElements/InputResAccounting'\n// import SelectOption from './FormElements/SelectOption'\n\nconst FormElementCatRes = ({ field_cat: { input_type, pk, name, value }}) => {\n  \n    switch (input_type) {\n        case 'number':\n            return (<InputRes\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'text_input_':\n            return (<InputResAccounting\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n       \n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElementCatRes\n","\nimport { useState, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FormElementRes from './FormElementRes';\nimport FormElementCatRes from './FormElementCatRes';\nimport { FormContext } from './FormContext';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport axios from 'axios'\n// import CheckSurveyTypeResponse from './CheckSurveyTypeResponse';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n// import SurveyAttachment from './SurveyAttachment';\n\n\n\n//hey i will use react hook here\nconst ResponseEdit = (props) => {\n\n  \n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [Get_Survey_Details, Set_Survey_Details] = useState({});\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n\n  // Call_Survey_Details form localStorage\n  const ResponseEDit = JSON.parse(localStorage.getItem('ResponseEDit'));\n  const Call_Survey_Details = ResponseEDit.get_entries;\n\n\n  \n  useEffect(() => {\n    // Call_Survey_Details form localStorage\n    const ResponseEDit = JSON.parse(localStorage.getItem('ResponseEDit'));\n    const Call_Survey_Details = ResponseEDit.get_entries;\n    Set_Survey_Details(Call_Survey_Details)\n       \n\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    setMessage(\"\");\n    setLoading(true);\n\n\n    form.current.validateAll();\n\n    //get the user from the localstorage\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    // const state= mytoken\n\n    //get single survey details\n    const ResponseEDit = JSON.parse(localStorage.getItem('ResponseEDit'));\n\n    //get the survey Pk  to send as require survey_pk\n    const ResponseEDitPk = ResponseEDit.pk\n    const state_pk = ResponseEDit.state\n    const lga_pk = ResponseEDit.LGA\n    const responseForm=ResponseEDit.form;\n    //Save all user responses of the survey  to LocalStorage\n    const to_Send = JSON.parse(localStorage.getItem('Response_to_Send'))\n\n    // returns an array of a given object's own enumerable property values\n    const I_to_Send = Object.values(to_Send);\n    // const checkUser= JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    // const checkUserpk=checkUser.profile\n    \n    //Response Body to send to Mallam Ahmad\n    const Responsebody =\n    {\n      response_pk: ResponseEDitPk,\n      lga_pk: lga_pk,\n      state_pk: state_pk,\n      form: I_to_Send || responseForm\n    }\n\n    if (checkBtn.current.context._errors.length === 0) {\n\n      // console.log(Responsebody);\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/edit/response/\", Responsebody,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n\n          if (res.data) {\n            localStorage.setItem(\"Response_Approve\", JSON.stringify(res.data));\n          }\n          setMessage(res.data.detail);\n          setSuccessful(true);\n        },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.survey_title ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      // console.log(Get_Survey_Details)\n    }\n  }\n\n  //this handle the change user typing\n  const handleChange = (id, event) => {\n\n    const newElements = { ...Get_Survey_Details }\n    const arr = [...Get_Survey_Details];\n\n\n    //convert the categories objects to array\n    for (let n = 0; n < newElements.length; n++) {\n      arr.push(newElements[n]);\n    }\n\n    //first array to loop through the categories\n    for (let i = 0; i < arr.length; i++) {\n      const category = arr[i];\n\n      //second array to loop through the field\n      for (let j = 0; j < category.fields.length; j++) {\n        const field = category.fields[j];\n\n        //check the pk for each field\n        const { pk } = field;\n        if (id === pk) {\n          field['value'] = event.target.value;\n        }\n      }\n\n      //first array to loop through the SubCategories\n      for (let h = 0; h < category.sub_categories? category.sub_categories.length:0; h++) {\n        const SubCategory = category.sub_categories[h];\n\n        //second array to loop through the fields of SubCategory\n        for (let j = 0; j < SubCategory.fields? SubCategory.fields.length:0; j++) {\n          const FormElementCategory = SubCategory.fields[j];\n          // console.log(FormElementCategory)\n\n         \n          //check the pk for each field\n          const { pk } = FormElementCategory;\n          if (id === pk) {\n            FormElementCategory['value'] = event.target.value;\n          }\n        }\n      }\n    }\n    //sub_categories\n\n    //Save the result to the localStorage\n    localStorage.setItem(\"Response_to_Send\", JSON.stringify(Get_Survey_Details));\n  }\n\n  if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n    return (<Redirect to={'/login'} />)\n  }\n  // const checkUser= JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\nconst link=\"https://gfso.chinikiguard.com\"\n  return (\n\n    <FormContext.Provider value={{ handleChange }}>\n      <Header />\n      <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n        <Menu /><br />\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {/* <div className=\"card card-\"> */}\n              {/* left column */}\n              \n\n              <div className=\"col-md-12\">\n                <Form onSubmit={handleSubmit} ref={form}>\n                  {!successful && (\n                    <div>\n                      <center><h1 class=\"mt-4 mb-2\">{ResponseEDit.title}</h1></center>\n                      <center><p class=\"mt-4 mb-2\"><b>Survey Type: &nbsp;</b>{ResponseEDit.survey_type.toUpperCase()}&nbsp; <b>Period: &nbsp;</b>{ResponseEDit.quarter.toUpperCase()}&nbsp; <b>Year: &nbsp;</b>{ResponseEDit.year}</p></center>\n                      <center><p class=\"mt-4 mb-2\"><b>Filled By: &nbsp;</b>{ResponseEDit.filled_by.toUpperCase()}<b>Period: &nbsp;</b>{ResponseEDit.quarter.toUpperCase()}&nbsp; <b>Phone Number: &nbsp;</b>{ResponseEDit.filled_by_phone}</p></center>\n                        \n                      {/* <CheckSurveyTypeResponse /> */}\n                      {Call_Survey_Details.map(myfield => (\n                        <div className=\"card card-\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">{myfield.name}</h3>\n                          </div>\n                          <div className=\"card-body\">\n                            {/* <h6 className=\"\">{myfield.type}</h6> */}\n                            <div className=\"row\">\n                              {\n                                myfield ? myfield.fields.map((field, i) => <FormElementRes key={i} field={field} />)\n                                  : null\n                              }\n                            </div>\n                          </div>\n                          {myfield.sub_categories.map(subCategory => (\n                            <div>\n                              <h6 className=\"\">{subCategory.name}</h6>\n                              <div className=\"col-12\">\n                                <div className=\"row\">\n                                  {\n                                    subCategory.fields && subCategory.fields.map((field_cat, i) => <FormElementCatRes  key={i} field_cat={field_cat} />)\n                                     \n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n\n                        <div className=\"card-body\">\n                        <div className=\"card-footer bg-white\">\n\n                        {!ResponseEDit.supporting_documents.length===0 ?\n\n                          <div className=\"tab-content\">\n                            <div className=\"active tab-pane\" id=\"activity\">\n\n                              <div className=\"card-footer bg-white\">\n                                <ul className=\"mailbox-attachments d-flex align-items-stretch clearfix\">\n                                {ResponseEDit.supporting_documents.map(document => (\n\n                                  <li>\n                                    <span className=\"mailbox-attachment-icon\"><i className=\"far fa-file-pdf\" /></span>\n                                    <div className=\"mailbox-attachment-info\">\n                                      <a href={link + document.document} download=\"hoto\" rel=\"noreferrer\" target=\"_blank\" className=\"mailbox-attachment-name\" ><i className=\"fas fa-paperclip\" /> {document.info}</a>\n                                      <span className=\"mailbox-attachment-size clearfix mt-1\">\n                                        <span>{document.title}</span>\n                                        <a href={link + document.document} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-default btn-sm float-right\" download=\"gfso\"><i className=\"fas fa-cloud-download-alt\" /></a>\n                                      </span>\n                                    </div>\n                                  </li>\n                      ))}\n\n                                </ul>\n                              </div>\n                            </div>\n\n                          </div>\n\n                       :                <center> <i className=\"nav-icon fas fa-warning text-warning text-lg\"></i><h6 style={{ color: 'red'}}>Sorry there is no any Supporting document attached to this Survey</h6></center>\n\n                      }\n                     </div>\n                     \n\n                        </div>\n                      <div className=\"form-group\">\n                        {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\n                        <center> <button className=\"btn btn-success btn-lg \" disabled={loading}>\n                          {loading && (\n                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                          )}\n                          <span>Approve</span>\n                        </button>\n                        </center>\n                      </div>\n                    </div>\n                  )}\n                  <h3>\n                    <center>\n                      {message && (\n                        <div className=\"form-group\">\n                          <div\n                            className={\n                              successful ? \"alert alert-success\" : \"alert alert-danger\"\n                            }\n                            role=\"alert\"\n                          >\n                            {message}\n                          </div>\n                        </div>\n                      )}\n                    </center>\n\n                  </h3>\n\n                  <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n              </div>\n\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </FormContext.Provider>\n  );\n}\n\nexport default ResponseEdit;\n\n","\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\nimport authService from '../services/auth.service';\n\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\nconst lookup = {\n    \"Annual\": [\n        { id: '', text: '--select--' },\n        { id: 'q1', text: 'Q1' },\n        { id: 'q2', text: 'Q2' },\n      { id: 'q3', text: 'Q3' },\n      { id: 'q4', text: 'Q4' },\n    ],\n    \"Halfyear\": [\n        { id: '', text: '--select--' },\n      { id: 'hyq1', text: 'HYQ1' },\n      { id: 'hyq2', text: 'HYQ2' },\n    ]\n  }\nexport default class PensionSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangecategory = this.onChangecategory.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangehalfyear = this.onChangehalfyear.bind(this);\n        \n        this.state = {\n            category: \"\",\n            quarter: \"\",\n            year: \"\",\n            \n            loading: false,\n            message: \"\",\n            survey_type:\"\",\n            myloading: false,\n            statesGov: false,\n            othersGov: false,\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: false,\n            dataValue: 'Halfyear'\n\n        };\n    }\n          \n      \n        onChange = ({ target: { value } }) => {\n          this.setState({ dataValue: value });\n        }\n      \n    \n    onChangecategory(e) {\n        this.setState({\n            category: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n   \n    onChangehalfyear(e) {\n        this.setState({\n            halfyear: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n    \n\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: true\n        });\n\n        \n            //check auth user\n            const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n            const token = mytoken.token;\n\n           //convert the string to number from the [go] array i save to  localStorage for State\n        //    const stop_here_for_state = localStorage.getItem('Checked_State');\n        //    const jasus_for_state = stop_here_for_state\n         \n           \n            let formData = new FormData();\n            formData.append('category', this.state.category);\n            formData.append('quarter', this.state.quarter);\n            formData.append('year', this.state.year);\n            \n           \n\n            this.form.validateAll();\n            if (this.checkBtn.context._errors.length === 0) {\n    \n            axios.post(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/create/\", \n            formData,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        AdoptSurveysuccessful: true,\n                    });\n                      console.log(res.data);\n\n                    window.location = \"/Deploy\"\n                    if (res.data) {\n                        localStorage.setItem(\"PensionsDeDuction\", JSON.stringify(res.data));\n                    }\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.message &&\n                                error.response.data.message) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n\n    // AddField(Filter_with_name) {\n\n     \n    //     //select Target category\n    //     localStorage.setItem(\"Category_to_AddField\", JSON.stringify(Filter_with_name));\n    //     localStorage.setItem(\"MyCategoryName\", JSON.stringify(Filter_with_name.name));\n    //     window.location = \"/CategoryView\"\n    // }\n\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        //reset to default state\n        const Checked_LGA = 1\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        //call the States and LGAS at the first \n        const state = \"Ahmad loophole\";\n        const user = authService.getCurrentUser();\n\n        const token = user.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n\n            });\n\n            axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/combo/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"StatesList\", JSON.stringify(res.data));\n                }\n\n            });\n        // console.log(res.data)   \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = 1 \n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        // const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        const StatesList = JSON.parse(localStorage.getItem('StatesList'));\n        //for checking the right selection either SG or LG\n        const { statesGov, othersGov } = this.state;\n\n        //   const { dataValue } = this.state;\n          const options = lookup[this.state.dataValue];\n         \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                <center>\n                                                    {this.state.AdoptSurveymessage && (\n                                                        <div className=\"pb-5\" >\n                                                            <div\n                                                                className={\n                                                                    this.state.AdoptSurveysuccessful\n                                                                    ? \"alert alert-success\"\n                                                                    : \"alert alert-danger\"\n                                                                }\n                                                                role=\"alert\"\n                                                            >\n                                                                <h3 > {this.state.AdoptSurveymessage}</h3>\n                                                            </div>\n                                                        </div>\n                                                    )}</center>\n                                               \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Create Pension & deduction Survey</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n                                            <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} >\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            <label> Survey Category</label>\n                                                            \n                                                            <Select className=\"form-control \" placeholder\n                                                                value={this.state.category}\n                                                                onChange={this.onChangecategory}\n                                                                validations={[required]}\n                                                            >\n                                                              <option value=\"\">--select--</option>\n\n                                                            <option value=\"deductions\">deductions</option>\n                                                            <option value=\"pensions\">pensions</option>\n                                                            <option value=\"deductions_and_pensions\">deductions & pensions</option>\n                                                             </Select>\n                                                        </div>\n                                                    </div>\n                                                  \n                                                    <div className=\"col-sm-3\">\n                                                        <div className=\"form-group\">\n                                                            <label> Period</label>\n                                                            <Select  className=\"form-control \" placeholder\n                                                                value={this.state.dataValue}\n                                                                onChange={this.onChange}\n                                                                validations={[required]}\n                                                            >\n                                                             <option value=\"Halfyear\">Half-Year</option>\n                                                             <option value=\"Annual\">Annual</option>\n\n                                                                \n                                                            </Select>\n                                                        </div>\n                                                    </div>\n                                                \n                                                    <div className=\"col-sm-3\">\n                                                        <div className=\"form-group\">\n                                                        <label> Quarter</label>\n\n                                                            <Select className=\"form-control\"\n                                                             value={this.state.quarter}\n                                                             onChange={this.onChangeQuarter}\n                                                             validations={[required]}\n\n                                                             \n\n                                                            >\n                                                            {/* <option value=\"\">--Select--</option> */}\n\n                                                                {options.map(o => <option key={o.id} value={o.id}>{o.text}</option>)}\n                                                            </Select>\n                                                        </div>\n                                                    </div>\n                                                \n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            {/* text input */}\n                                                            <label> Year</label>\n                                                            <Input type=\"number\" className=\"form-control \" placeholder\n                                                                value={this.state.year}\n                                                                onChange={this.onChangeYear}\n                                                                validations={[required]}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                   \n                                                </div>\n                                                {statesGov && (\n                                                    <div className=\"table-container\">\n                                                        <table className=\"table\">\n                                                            <thead>\n\n                                                                <tr>\n                                                                    <th>STATE</th>\n\n                                                                    <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                            checkboxes=\".table .select-checkbox\"\n                                                                            sync=\".table .row\"\n                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                            }}\n                                                                            onAllChecked={(selectedMap) => {\n                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                            }}\n                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.replace(/\\d+/g,\"\")\n                                                                                   \n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                            }}\n\n                                                                        />\n                                                                    </th>\n                                                                </tr>\n\n                                                            </thead>\n                                                            <tbody className=\"table-body\">\n                                                                {List_Of_States.map((state, i) => (\n\n                                                                    <tr>\n                                                                        <td>{state.title}</td>\n                                                                        <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${state.pk}`}\n                                                                                // onChange={this.onChangeState}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td>\n                                                                    </tr>\n                                                                ))}\n\n                                                            </tbody>\n\n                                                        </table>\n                                                    </div>\n                                                )}\n                                                \n                                               {othersGov && (\n                                                    <div className=\"table-container\">\n                                                        <table className=\"table\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th>LGA</th>\n\n                                                                    <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                            checkboxes=\".table .select-checkbox\"\n                                                                            sync=\".table .row\"\n                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                            }}\n                                                                            onAllChecked={(selectedMap) => {\n                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                            }}\n                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                            }}\n\n                                                                        />\n                                                                    </th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody className=\"table-body\">\n                                                                {StatesList && StatesList.map(lga => (\n                                                                    \n                                                                    <tr>\n                                                                        <td style={{ color: 'green', fontWeight:'bold'}}>{lga.title} </td>\n                                                                        <br/>\n                                                                        {lga.get_lgas && lga.get_lgas.map(lgas => (\n                                                                        <tr>\n                                                                    <td>{lgas.title}</td>\n                                                                    <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${lgas.pk}`}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td>\n                                                                        </tr>\n                                                                        ))}\n                                                                       \n\n                                                                        {/* <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${lga.pk}`}\n                                                                                // onChange={this.onChangeLgas}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td> */}\n                                                                    </tr>\n                                                                ))}\n\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                               )}\n                                                <center>\n                                                    <div className=\"row\">\n                                                        <button\n                                                            disabled={this.state.AdoptSurveyloading}\n                                                            className=\"btn btn-success btn-lg float-right\"\n                                                        >\n\n                                                            {this.state.AdoptSurveyloading && (\n                                                                <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                            )}\n                                                            Create Survey\n                                                        </button>\n                                                    </div>\n                                                </center>\n                                                <CheckButton\n                                                    style={{ display: \"none\" }}\n                                                    ref={c => {\n                                                        this.checkBtn = c;\n                                                    }}\n                                                />\n                                                \n                                            </Form>\n                                       \n                                        </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class PensiondeductionSurveyList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/list/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"deductionPension\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    PensiondeductionResponse(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n          \n        axios.get(`https://gfso.chinikiguard.com/survey/api/deduction-pension/detail/?survey_pk=${surveyId}`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/CompletePensiondeduction\"\n\n                if (res.data) {\n                    localStorage.setItem(\"PensiondeductionInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                                <Menu />\n\n                <Header />\n\n                <div className=\"content-wrapper\">\n\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Category</th>\n                                                                                     {/* <th>Type</th> */}\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     {/* <th>Created by</th> */}\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.category}</td>\n                                                                                     {/* <td>{survey.survey_type}</td> */}\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     {/* <td><span className=\"tag tag-success\">{survey.created_by}</span></td> */}\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.PensiondeductionResponse.bind(this, survey)}\n\n                                                                                           >Fill \n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","\nimport { useState, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FormElement from './FormElement';\n// import FormElementCategory from './FormElementCategory';\nimport { FormContext } from './FormContext';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport axios from 'axios'\n// import CheckSurveyTypeResponse from './CheckSurveyTypeResponse';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n// import SurveyAttachment from './SurveyAttachment';\n\n\n\n//hey i will use react hook here\nconst CompletePensiondeduction = (props) => {\n\n  \n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [Get_Survey_Details_Pension, Set_Survey_Details_pension] = useState({});\n  const [successful, setSuccessful] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n\n  const onChangeTitle = (e) => {\n    const title = e.target.value;\n    setTitle(title);\n};\n  // Call_Survey_Details form localStorage\n  const Surveydetails = JSON.parse(localStorage.getItem('PensiondeductionInfo'));\n  const Call_Survey_Details = Surveydetails.form;\n\n\n  \n  useEffect(() => {\n    // Call_Survey_Details form localStorage\n    const Surveydetails = JSON.parse(localStorage.getItem('PensiondeductionInfo'));\n    const Call_Survey_Details = Surveydetails;\n    Set_Survey_Details_pension(Call_Survey_Details)\n    // console.log(Call_Survey_Details)\n\n\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    setMessage(\"\");\n    setLoading(true);\n\n\n    form.current.validateAll();\n\n    //get the user from the localstorage\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    // const state= mytoken\n\n    //get single survey details\n    // const Surveydetails = JSON.parse(localStorage.getItem('PensiondeductionInfo'));\n\n    //get the survey Pk  to send as require survey_pk\n    // const SurveydetailsPk = Surveydetails.pk\n\n    //Save all user responses of the survey  to LocalStorage\n    const to_Send = JSON.parse(localStorage.getItem('Response_to_Send_Pension'))\n\n    // returns an array of a given object's own enumerable property values\n\n    const checkUser= JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const checkUserpk=checkUser.profile\n    //user state_pk\n    const state_pk = checkUserpk.state\n    // const lga_pk = checkUserpk.lga\n\n    //Response Body to send to Mallam Ahmad\n    const Responsebody =\n    {\n      title: title,\n      survey_pk: to_Send.survey_pk,\n      state_pk: state_pk,\n      form: to_Send.form\n    }\n \n    console.log(Responsebody)\n    if (checkBtn.current.context._errors.length === 0) {\n\n      // console.log(Responsebody);\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/add/\", Responsebody,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n\n          if (res.data) {\n            localStorage.setItem(\"Response_Success\", JSON.stringify(res.data));\n          }\n          setMessage(res.data.detail);\n          setSuccessful(true);\n          // window.location = \"/AvailableSurvey\"\n\n        },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.survey_title ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      // console.log(Get_Survey_Details_Pension)\n    }\n  }\n\n  //this handle the change user typing\n  const handleChange = (id, event) => {\n\n    const newElements = { ...Get_Survey_Details_Pension }\n      // console.log(newElements.form)\n\n      //second array to loop through the field\n      for (let j = 0; j < newElements.form.length; j++) {\n        const field = newElements.form[j];\n        // console.log(field)\n\n        //check the pk for each field\n        const { pk } = field;\n        if (id === pk) {\n          field['amount'] = event.target.value;\n        }\n        \n        \n      }\n    //Save the result to the localStorage\n    localStorage.setItem(\"Response_to_Send_Pension\", JSON.stringify(Get_Survey_Details_Pension));\n  }\n\n  if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n    return (<Redirect to={'/login'} />)\n  }\n  const checkUser= JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n\n  return (\n\n    <FormContext.Provider value={{ handleChange }}>\n      <Header />\n      <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n        <Menu /><br />\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {/* <div className=\"card card-\"> */}\n              {/* left column */}\n              \n              {Surveydetails.form.length ? \n\n              <div className=\"col-md-12\">\n                <Form onSubmit={handleSubmit} ref={form}>\n                  {!successful && (\n                    <div>\n                      <center><h1 class=\"mt-4 mb-2\">{Surveydetails.category}</h1></center>\n                      <center><h3 class=\"mt-4 mb-2\">{Surveydetails.quarter}</h3></center>\n                      <center><h4 class=\"mt-4 mb-2\">{Surveydetails.year}</h4></center>\n                      <center><h5 class=\"mt-4 mb-2\">Make sure you are filling this survey from {checkUser.profile.state_title} state </h5></center>\n                      {/* <CheckSurveyTypeResponse /> */}\n                      <div className=\"form-group\">\n                              <label >Title</label>\n                              \n                              <input  type=\"text\"\n                                className=\"form-control\"\n                                value={title}\n                                onChange={onChangeTitle}\n                                required\n                                placeholder=\"Enter Survey Title\"  />  \n                        </div>\n                    <br/>\n                      {Call_Survey_Details.map ((myValue, i) => (\n                        <div className=\"card card-\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">{myValue.title}\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{myValue.LGA_ID}</h3>\n                            <h6 className=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{myValue.heading}</h6>\n\n                          </div>\n                          <div className=\"card-body\">\n                            {/* <h6 className=\"\">{myfield.type}</h6> */}\n                            <div className=\"row\">\n                                  <FormElement key={i} field={myValue} />\n                    \n                            </div>\n                          </div>\n                         \n                           \n                        </div>\n                      ))}\n\n                      <div className=\"form-group\">\n                        {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\n                        <center> <button className=\"btn btn-primary btn-lg \" disabled={loading}>\n                          {loading && (\n                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                          )}\n                          <span>Submit</span>\n                        </button>\n                        </center>\n                      </div>\n                    </div>\n                  )}\n                  <h3>\n                    <center>\n                      {message && (\n                        <div className=\"form-group\">\n                          <div\n                            className={\n                              successful ? \"alert alert-success\" : \"alert alert-danger\"\n                            }\n                            role=\"alert\"\n                          >\n                            {message}\n                            {/* <SurveyAttachment /> */}\n\n                          </div>\n                        </div>\n                      )}\n                    </center>\n\n                  </h3>\n\n                  <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n              </div>\n: <center><h2>No  Survey Template Available</h2></center>\n                                        \n}\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </FormContext.Provider>\n  );\n}\n\nexport default CompletePensiondeduction;\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class PensionPending extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            PensionPending: [],\n          \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/list/?status=---\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"PensionPending\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    PensionPending: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.PensionPending.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class ApprovedPension extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/list/?status=approved\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\n\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//         return (\n//             <div className=\"alert alert-danger\" role=\"alert\">\n//                 This field is required!\n//             </div>\n//         );\n//     }\n// };\nexport default class RejectedPension extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.UpdateSurvey = this.UpdateSurvey.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,  \n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            approve: \"\",\n            remark: \"\",\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            states: \"\",\n            lgas: \"\",\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n        };\n    }\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n\n\n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n    }\n    onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        this.Get_State_Data();\n        this.Get_LGA_Data();\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/list/?status=rejected\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = [1, 1, 1]\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = [1, 1, 1]\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n     \n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            // console.log(e);\n        }\n    }\n\n    handleUpdate(e) {\n\n        e.preventDefault();\n        // const SurveyId = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n    \n        this.setState({\n          message: \"\",\n          successful: false,\n          loading: true\n        });\n        this.form.validateAll();\n    \n        if (this.checkBtn.context._errors.length === 0) {\n          \n          const ApprovSurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'))\n          \n\n\n            //convert the string to number from the [go] array i save to  localStorage for State\n            const stop_here_for_state = localStorage.getItem('Checked_State');\n            const jasus_for_state = stop_here_for_state\n\n            //convert the string to number from the [go] array i save to localStorage for LGA\n            const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n            const jasus_for_lga = stop_here_for_lga\n\n            //set the states user selected\n            const states =\n                jasus_for_state.match(/\\d+/g).map(Number)\n\n            // set the LGAs user selected\n            const lgas =\n                jasus_for_lga.match(/\\d+/g).map(Number)\n\n\n\n\n            // newly created json\n            const body =\n            {\n                survey_pk:ApprovSurveyInfo.pk,\n                title: this.state.title||ApprovSurveyInfo.title,\n                quarter: this.state.quarter||ApprovSurveyInfo.quarter,\n                year: this.state.year||ApprovSurveyInfo.year,\n                survey_type: this.state.survey_type||ApprovSurveyInfo.survey_type,\n                start_date: this.state.start_date||ApprovSurveyInfo.start_date,\n                due_date: this.state.due_date||ApprovSurveyInfo.due_date,\n                rejected: 'false',\n                // survey_type:this.state.survey_type||ApprovSurveyInfo.survey_type,\n                states_pk: states ||ApprovSurveyInfo.states,\n                lgas_pk:lgas||ApprovSurveyInfo.lgas,\n            }\n\n            // console.log(body);\n          const mytoken = authService.getCurrentUser();\n          const token = mytoken.token;\n    \n          axios.post(`https://gfso.chinikiguard.com/survey/api/update/survey/respondents/`, body,\n          {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        },\n          \n          ).then(\n    \n            response => {\n    \n              this.setState({\n                message: \"Survey Updated Successefully\",\n                successful: true\n              });\n              window.location = \"/RejectedSurvey\"\n            },\n            error => {\n              const resMessage =\n                (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n                error.message ||\n                error.toString();\n    \n              this.setState({\n                loading: false,\n                message: resMessage\n              });\n            }\n          );\n        } else {\n          this.setState({\n            // loading: false\n          });\n        }\n    \n      }\n\n    UpdateSurvey(survey) {\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n        });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    ApproveThisSurvey: res.data,\n                    loadingModal: false,\n                });\n\n            })\n\n    }\n    Get_LGA_Data() {\n        const state = \"Ahmad loophole\";\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n                \n            });\n        // console.log(res.data)   \n    }\n    Get_State_Data() {\n        const state = \"Ahmad loophole\";\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                \n            });\n        // console.log(res.data)   \n    }\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov } = this.state;\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">\n                                    <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                    <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                    )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n                                    {this.state.myloading ? (\n                                        <>\n                                            <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                        </>\n                                    ) : (\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-header\">\n                                                        <h3 className=\"card-title\">Update Surveys</h3>\n                                                        <div className=\"card-tools\">\n\n                                                        </div>\n                                                    </div>\n                                                    {/* /.card-header */}\n                                                    {this.state.myloading ? (\n                                                        <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                    ) : (\n                                                        <div className=\"card-body table-responsive p-0\">\n                                                            <table className=\"table table-hover text-nowrap\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th>Title</th>\n                                                                        <th>Type</th>\n                                                                        <th>Year</th>\n                                                                        <th>Quarter</th>\n                                                                        <th>Created by</th>\n                                                                        <th>Remark </th>\n                                                                        <th>Action </th>\n                                                                    </tr>\n                                                                </thead>\n                                                                {this.state.Surveys.map(survey => (\n\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <td>{survey.title}</td>\n                                                                            <td>{survey.survey_type}</td>\n                                                                            <td>{survey.year}</td>\n                                                                            <td>{survey.quarter}</td>\n                                                                            <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                            <td>{survey.get_latest_history?survey.get_latest_history.remark:\"no remark\"}</td>\n\n                                                                            \n                                                                            <td className=\"\">\n                                                                                <button\n                                                                                    className=\"btn btn-info btn-lg\"\n                                                                                    disabled={this.state.loading}\n                                                                                    data-toggle=\"modal\"\n                                                                                    data-target=\"#modal-lg\"\n                                                                                   onClick={this.UpdateSurvey.bind(this, survey)}\n\n                                                                                >Update\n                                                                               </button>\n                                                                                 <div className=\"modal fade\" id=\"modal-lg\"  aria-modal=\"true\" role=\"dialog\">\n                                                                                    <div className=\"modal-dialog modal-lg\">\n                                                                                        <div className=\"modal-content\">\n                                                                                            <div className=\"modal-header\">\n                                                                                                <h4 className=\"modal-title\">Update Survey</h4>\n                                                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                                    <span aria-hidden=\"true\">×</span>\n                                                                                                </button>\n                                                                                            </div>\n                                                                                            {this.state.loadingModal ? (\n                                                                                                <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                                            ) : (\n                                                                                                <div>\n                                                                                                    <div className=\"modal-body\">\n\n                                                                                                            <Form onSubmit={this.handleUpdate} ref={c => { this.form = c; }} >\n                                                                                                                <div className=\"row\">\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Title</label>\n                                                                                                                            <Input type=\"text\" className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.title}\n                                                                                                                                onChange={this.onChangeTitle}\n                                                                                                                                // validations={[required]}\n                                                                                                                            />\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Quarter:{this.state.ApproveThisSurvey.quarter}</label>\n                                                                                                                            <Select className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.quarter}\n                                                                                                                                onChange={this.onChangeQuarter}\n                                                                                                                                // validations={[required]}\n                                                                                                                            >\n                                                                                                                                <option value=\"\">Select</option>\n                                                                                                                                <option value=\"q1\">Q1</option>\n                                                                                                                                <option value=\"q2\">Q2</option>\n                                                                                                                                <option value=\"q3\">Q3</option>\n                                                                                                                                <option value=\"q4\">Q4</option>\n                                                                                                                            </Select>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                </div>\n                                                                                                                <div className=\"row\">\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            {/* text input */}\n                                                                                                                            <label> Year</label>\n                                                                                                                            <Input type=\"number\" className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.year}\n                                                                                                                                onChange={this.onChangeYear}\n                                                                                                                                // validations={[required]}\n                                                                                                                            />\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"row\">\n                                                                                                                        <div className=\"col-sm-6\">\n                                                                                                                            {/* text input */}\n                                                                                                                            <div className=\"form-group\">\n                                                                                                                                <label> Start date</label>\n                                                                                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                                                    value={this.state.ApproveThisSurvey.start_date}\n                                                                                                                                    onChange={this.onChangeStartDate}\n                                                                                                                                    // validations={[required]}\n                                                                                                                                />\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"col-sm-6\">\n                                                                                                                            <div className=\"form-group\">\n                                                                                                                                <label> Due Date</label>\n                                                                                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                                                    value={this.state.ApproveThisSurvey.due_date}\n                                                                                                                                    onChange={this.onChangeDueDate}\n                                                                                                                                    // validations={[required]}\n                                                                                                                                />\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Survey Type</label>\n                                                                                                                            <Select type=\"text\" className=\"form-control \" placeholder\n                                                                                                                                // validations={[required]}\n                                                                                                                                value={this.state.survey_type}\n                                                                                                                                onChange={this.onChangeSurveyType}\n                                                                                                                            >\n                                                                                                                                <option value=\"\">Select</option>\n                                                                                                                                <option value=\"sg\">SG</option>\n                                                                                                                                <option value=\"lg\">LG</option>\n                                                                                                                                <option value=\"other\">OTHER</option>\n                                                                                                                            </Select>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                </div>\n                                                                                                                {statesGov && (\n                                                                                                                    <div className=\"table-container\">\n                                                                                                                        <table className=\"table\">\n                                                                                                                            <thead>\n\n                                                                                                                                <tr>\n                                                                                                                                    <th>STATE</th>\n\n                                                                                                                                    <th> Check all\n                                                                                                                                         <MultiselectCheckbox\n                                                                                                                                            checkboxes=\".table .select-checkbox\"\n                                                                                                                                            sync=\".table .row\"\n                                                                                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                                                            }}\n                                                                                                                                            onAllChecked={(selectedMap) => {\n                                                                                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                            }}\n                                                                                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.replace(/\\d+/g,\"\")\n\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                                                            }}\n\n                                                                                                                                        />\n                                                                                                                                    </th>\n                                                                                                                                </tr>\n\n                                                                                                                            </thead>\n                                                                                                                            <tbody className=\"table-body\">\n                                                                                                                                {List_Of_States.map((state, i) => (\n\n                                                                                                                                    <tr>\n                                                                                                                                        <td>{state.title}</td>\n                                                                                                                                        <td>\n                                                                                                                                            <input\n                                                                                                                                                type=\"checkbox\"\n                                                                                                                                                className=\"select-checkbox\"\n                                                                                                                                                value={`${state.pk}`}\n                                                                                                                                                // onChange={this.onChangeState}\n                                                                                                                                                // validations={[required]}\n                                                                                                                                            />\n                                                                                                                                        </td>\n                                                                                                                                    </tr>\n                                                                                                                                ))}\n\n                                                                                                                            </tbody>\n\n                                                                                                                        </table>\n                                                                                                                    </div>\n                                                                                                                )}\n                                                                                                                {lgasGov && (\n                                                                                                                    <div className=\"table-container\">\n                                                                                                                        <table className=\"table\">\n                                                                                                                            <thead>\n                                                                                                                                <tr>\n                                                                                                                                    <th>LGA</th>\n\n                                                                                                                                    <th> Check all\n                                                                                                                                          <MultiselectCheckbox\n                                                                                                                                            checkboxes=\".table .select-checkbox\"\n                                                                                                                                            sync=\".table .row\"\n                                                                                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                                                            }}\n                                                                                                                                            onAllChecked={(selectedMap) => {\n                                                                                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                            }}\n                                                                                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                                                            }}\n\n                                                                                                                                        />\n                                                                                                                                    </th>\n                                                                                                                                </tr>\n                                                                                                                            </thead>\n                                                                                                                            <tbody className=\"table-body\">\n                                                                                                                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                                                                                                                    <tr>\n                                                                                                                                        <td>{lga.title}</td>\n                                                                                                                                        <td>\n                                                                                                                                            <input\n                                                                                                                                                type=\"checkbox\"\n                                                                                                                                                className=\"select-checkbox\"\n                                                                                                                                                value={`${lga.pk}`}\n                                                                                                                                                // onChange={this.onChangeLgas}\n                                                                                                                                                // validations={[required]}\n                                                                                                                                            />\n                                                                                                                                        </td>\n                                                                                                                                    </tr>\n                                                                                                                                ))}\n\n                                                                                                                            </tbody>\n                                                                                                                        </table>\n                                                                                                                    </div>\n                                                                                                                )}\n                                                                                                                <center>\n                                                                                                                    {this.state.message && (\n                                                                                                                        <div className=\"pb-5\" >\n                                                                                                                            <div\n                                                                                                                                className={\n                                                                                                                                    this.state.successful\n                                                                                                                                        ? \"alert alert-success\"\n                                                                                                                                        : \"alert alert-danger\"\n                                                                                                                                }\n                                                                                                                                role=\"alert\"\n                                                                                                                            >\n                                                                                                                                <h3 > {this.state.message}</h3>\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                    )}</center>\n                                                                                                                <center>\n                 \n                                                                                                                        <div className=\"modal-footer justify-content-between\">\n                                                                                                                            <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                                                                                                                            <button\n                                                                                                                            disabled={this.state.AdoptSurveyloading}\n                                                                                                                            className=\"btn btn-primary btn-sm float-right\"\n                                                                                                                        >\n\n                                                                                                                            {this.state.AdoptSurveyloading && (\n                                                                                                                                <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                                                                                            )}\n                                                                                                                     Update Survey\n                                                                                                                     </button>                                                                                                                        </div>\n\n                                                                                                                </center>\n                                                                                                                <CheckButton\n                                                                                                                    style={{ display: \"none\" }}\n                                                                                                                    ref={c => {\n                                                                                                                        this.checkBtn = c;\n                                                                                                                    }}\n                                                                                                                />\n\n                                                                                                            </Form>\n\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            )}\n                                                                                        </div>\n                                                                                        {/* /.modal-content */}\n                                                                                    </div>\n                                                                                </div>\n                                                                                {/* /.modal-dialog */}\n\n                                                                            </td>\n\n\n                                                                        </tr>\n\n                                                                    </tbody>\n                                                                ))}\n                                                            </table>\n                                                        </div>\n                                                    )}\n                                                    {/* /.card-body */}\n                                                </div>\n                                                {/* /.card */}\n                                            </div>\n                                        </div>\n\n                                    )}\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n\n                </div>\n                <Footer />\n\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\n// import Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApprovePensionSurvey extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleApprove = this.handleApprove.bind(this);\n          this.onChangeApprove = this.onChangeApprove.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeApprove(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n\n     }\n\n     handleApprove(e) {\n\n          e.preventDefault();\n          const PensionSurveyInfo = JSON.parse(localStorage.getItem('PensionSurveyInfo'));\n\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               // let formData = new FormData();\n               // formData.append('status', this.state.status);\n               // formData.append('survey_pk', PensionSurveyInfo.pk);\n               // formData.append('remark', this.state.remark);\n\n               const body={\n                    survey_pk: PensionSurveyInfo.pk,\n                     status: this.state.status,\n                    remark: this.state.remark\n                 }\n                 \n\n\n\n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/survey/api/deduction-pension/cycle/`,body, \n               \n               \n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              \n                              window.location = \"/ListToApprovePension\"\n                                             // console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const PensionSurveyInfo = JSON.parse(localStorage.getItem('PensionSurveyInfo'));\n\n          \n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         {/* {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )} */}\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-12\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header\">\n                                                       <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                       <div className=\"card-tools\">\n                                                       </div>\n                                                  </div>\n                                                  <div className=\"card-body\">\n                                                       {/* /.card-header */}\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Category</label>:&nbsp;\n                                                                                      {PensionSurveyInfo.category}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Quarter</label>:&nbsp;\n                                                                                      {PensionSurveyInfo.quarter}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {PensionSurveyInfo.year}\n                                                                 </div>\n                                                            </div>\n                                                            \n                                                            \n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> State</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          <span> {PensionSurveyInfo.state_title}</span>\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                 {PensionSurveyInfo.get_entries&&PensionSurveyInfo.get_entries.map(states => (\n\n                                                                      <label> {states.lga} :&nbsp;</label>&&\n                                                                                          <span> {states.value}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Action</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeApprove}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved\" className=\"text-success\">Approve</option>\n                                                                      <option value=\"rejected\" className=\"text-danger\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                   </div>\n\n\n\n                              </div>\n\n\n                         </section>\n\n                    </div>\n                    <Footer />\n\n               </div>\n          );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class ListToApprovePension extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/list/?status=---\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"PensionToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/deduction-pension/response/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApprovePensionSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"PensionSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                                <Menu />\n\n                <Header />\n\n                <div className=\"content-wrapper\">\n\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     {/* <th>Type</th> */}\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     {/* <th>Created by</th> */}\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     {/* <td>{survey.survey_type}</td> */}\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     {/* <td><span className=\"tag tag-success\">{survey.created_by}</span></td> */}\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n// import Logo from '../cbn.png'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\n\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\nconst lookup = {\n     \"Annual\": [\n          { id: '', text: '--select--' },\n          { id: 'q1', text: 'Q1' },\n          { id: 'q2', text: 'Q2' },\n          { id: 'q3', text: 'Q3' },\n          { id: 'q4', text: 'Q4' },\n     ],\n     \"Halfyear\": [\n          { id: '', text: '--select--' },\n          { id: 'hyq1', text: 'HYQ1' },\n          { id: 'hyq2', text: 'HYQ2' },\n     ]\n}\nexport default class SurveyToUpdate extends Component {\n\n     constructor(props) {\n          super(props);\n          this.onChangeApprove = this.onChangeApprove.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n          this.onChangeTitle = this.onChangeTitle.bind(this);\n          this.onChangeQuarter = this.onChangeQuarter.bind(this);\n          this.onChangeStatus = this.onChangeStatus.bind(this);\n          this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n          this.onChangeStartDate = this.onChangeStartDate.bind(this);\n          this.onChangeDueDate = this.onChangeDueDate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n          this.onChangeState = this.onChangeState.bind(this);\n          this.onChangeLgas = this.onChangeLgas.bind(this);\n          this.handleUpdate = this.handleUpdate.bind(this);\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               title: \"\",\n               quarter: \"\",\n               status: \"\",\n               year: \"\",\n               survey_type: \"\",\n               start_date: \"\",\n               due_date: \"\",\n               states: \"\",\n               lgas: \"\",\n               statesGov: false,\n               lgasGov: false,\n               othersGov: false,\n               AdoptSurveymessage: \"\",\n               AdoptSurveysuccessful: false,\n               AdoptSurveyloading: false,\n               dataValue: 'Halfyear'\n\n          };\n     }\n\n\n     onChange = ({ target: { value } }) => {\n          this.setState({ dataValue: value });\n     }\n\n     onChangeTitle(e) {\n          this.setState({\n               title: e.target.value\n          });\n     }\n\n     onChangeQuarter(e) {\n          this.setState({\n               quarter: e.target.value\n          });\n     }\n\n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     onChangeStartDate(e) {\n          this.setState({\n               start_date: e.target.value\n          });\n     }\n     onChangeDueDate(e) {\n          this.setState({\n               due_date: e.target.value\n          });\n     }\n     onChangeSurveyType(e) {\n          this.setState({\n               survey_type: e.target.value\n          });\n     }\n\n     onChangeStatus(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n\n     onChangeState(e) {\n          this.setState({\n               states: e.target.value\n          });\n     }\n     onChangeLgas(e) {\n          this.setState({\n               lgas: e.target.value\n          });\n     }\n\n\n     onChangeApprove(e) {\n          this.setState({\n               approve: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n          }\n          this.Get_State_Data();\n          this.Get_LGA_Data();\n\n          const mytoken = authService.getCurrentUser();\n          const token = mytoken.token;\n          axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?rejected=yes&deployed=no\",\n               {\n                    headers:\n                    {\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n               })\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"RejectedSurvey\", JSON.stringify(res.data));\n                    }\n                    // (res);\n                    // (res.data);\n                    this.setState({\n                         Surveys: res.data,\n                         myloading: false,\n                         warningLoad: true,\n                    });\n               })\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/combo/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    //     params:\n                    //     {\n                    //         state: state\n                    //     }\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"StatesList\", JSON.stringify(res.data));\n                    }\n\n               });\n\n     }\n     componentDidUpdate(prevProps, prevState) {\n          //reset to default state\n          const Checked_State = 1\n          localStorage.setItem(\"Checked_State\", Checked_State);\n          const Checked_LGA = 1\n          localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n          // check for the value selected and show the related content\n          try {\n               if (prevState.survey_type !== this.state.survey_type) {\n                    const state = this.state.survey_type\n                    if (state) {\n                         this.setState({\n                              statesGov: state.includes(\"sg\"),\n                              lgasGov: state.includes(\"lg\"),\n                              othersGov: state.includes(\"other\"),\n                         });\n                    }\n               }\n\n          } catch (e) {\n\n               // console.log(e);\n          }\n     }\n\n     handleUpdate(e) {\n\n          e.preventDefault();\n          // const SurveyId = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n\n          this.setState({\n               AdoptSurveymessage: \"\",\n               AdoptSurveysuccessful: false,\n               AdoptSurveyloading: true\n          });\n\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n               const SurveyToUpdateInfo = JSON.parse(localStorage.getItem('SurveyToUpdateInfo'))\n\n\n\n               //convert the string to number from the [go] array i save to  localStorage for State\n               const stop_here_for_state = localStorage.getItem('Checked_State');\n               const jasus_for_state = stop_here_for_state\n\n               //convert the string to number from the [go] array i save to localStorage for LGA\n               const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n               const jasus_for_lga = stop_here_for_lga\n\n               //set the states user selected\n               const states =\n                    jasus_for_state.match(/\\d+/g).map(Number)\n\n               // set the LGAs user selected\n               const lgas =\n                    jasus_for_lga.match(/\\d+/g).map(Number)\n\n               // const SurveyState = SurveyToUpdateInfo.get_states.map(state => state.pk);\n               // const SurveyLga = SurveyToUpdateInfo.get_lgas.map(lga => lga.pk);\n\n               \n               // console.log(result)\n               // newly created json\n               const body =\n               {\n                    survey_pk: SurveyToUpdateInfo.pk,\n                    title: this.state.title || SurveyToUpdateInfo.title,\n                    quarter: this.state.quarter || SurveyToUpdateInfo.quarter,\n                    year: this.state.year || SurveyToUpdateInfo.year,\n                    survey_type: this.state.survey_type || SurveyToUpdateInfo.survey_type,\n                    start_date: this.state.start_date || SurveyToUpdateInfo.start_date,\n                    due_date: this.state.due_date || SurveyToUpdateInfo.due_date,\n                    rejected: 'false',\n                    states_pk:  states ,\n                    lgas_pk: lgas ,\n               }\n\n               console.log(body);\n               const mytoken = authService.getCurrentUser();\n               const token = mytoken.token;\n\n               axios.post(`https://gfso.chinikiguard.com/survey/api/update/survey/respondents/`, body,\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    },\n\n               )\n                    .then(res => {\n                         this.setState({\n                              AdoptSurveymessage: res.data.detail,\n                              message: res.data.detail,\n                              AdoptSurveysuccessful: true,\n                         });\n                         // window.location = \"/RejectedSurvey\"\n                         if (res.data) {\n                              localStorage.setItem(\"UpdatedSurvey\", JSON.stringify(res.data));\n                          }\n                    },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data.detail) ||\n                                   error.AdoptSurveyloading ||\n                                   error.toString();\n\n                              this.setState({\n                                   AdoptSurveyloading: false,\n                                   message: resMessage\n                              });\n                         }\n                    );\n          } else {\n\n               this.setState({\n                    AdoptSurveyloading: false\n               });\n          }\n\n     }\n\n\n     Get_LGA_Data() {\n          const state = \"Ahmad loophole\";\n          const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n          const token = mytoken.token;\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    params:\n                    {\n                         state: state\n                    }\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                    }\n\n               });\n          // console.log(res.data)   \n     }\n     Get_State_Data() {\n          const state = \"Ahmad loophole\";\n          const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n          const token = mytoken.token;\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    params:\n                    {\n                         state: state\n                    }\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                    }\n\n               });\n          // console.log(res.data)   \n     }\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const options = lookup[this.state.dataValue];\n          const SurveyToUpdateInfo = JSON.parse(localStorage.getItem('SurveyToUpdateInfo'));\n          const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n          // const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n          const StatesList = JSON.parse(localStorage.getItem('StatesList'));\n\n          //for checking the right selection either SG or LG\n          const { statesGov, lgasGov } = this.state;\n\n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         {/* {this.state.loadingModal && (\n                              <span className=\"\">\n                                   <div className=\"overlay-wrapper\">\n                                        <div className=\"overlay \">\n                                             <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                                   </div>\n\n                              </span>\n                         )} */}\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-12\">\n                                             <div className=\"row\">\n                                                  <div className=\"col-12\">\n                                                       <div className=\"card\">\n                                                            <div className=\"card-header\">\n                                                                 <h3 className=\"card-title\">Update Surveys</h3>\n                                                                 <div className=\"card-tools\">\n                                                                 </div>\n                                                            </div>\n                                                            {/* /.card-header */}\n                                                            <div className=\"card-body\">\n                                                                 <center ><h5 > Remark : <span className=\"text-warning\">{SurveyToUpdateInfo.rejection_remark}</span></h5></center>\n                                                                 <hr/>\n                                                                 <Form onSubmit={this.handleUpdate} ref={c => { this.form = c; }} >\n                                                                      {!this.state.AdoptSurveysuccessful && (\n                                                                           <div>\n                                                                                <div className=\"row\">\n                                                                                     <div className=\"col-sm-6\">\n                                                                                          <div className=\"form-group\">\n                                                                                               <label> Survey Name</label>\n                                                                                               <Input type=\"text\" className=\"form-control \" placeholder\n                                                                                                    value={SurveyToUpdateInfo.title}\n                                                                                                    onChange={this.onChangeTitle}\n                                                                                               // validations={[required]}\n                                                                                               />\n                                                                                          </div>\n                                                                                     </div>\n                                                                                     <div className=\"col-sm-3\">\n                                                                                          <div className=\"form-group\">\n                                                                                               <label> Period</label>\n                                                                                               <Select className=\"form-control \" placeholder\n                                                                                                    value={this.state.dataValue}\n                                                                                                    onChange={this.onChange}\n                                                                                                    validations={[required]}\n                                                                                               >\n                                                                                                    <option value=\"Halfyear\">Half-Year</option>\n                                                                                                    <option value=\"Annual\">Annual</option>\n\n\n                                                                                               </Select>\n                                                                                          </div>\n                                                                                     </div>\n                                                                                     <div className=\"col-sm-3\">\n                                                                                          <div className=\"form-group\">\n                                                                                               <label> Quarter:&nbsp;{SurveyToUpdateInfo.quarter.toUpperCase()}</label>\n\n                                                                                               <Select className=\"form-control\"\n                                                                                                    value={this.state.quarter}\n                                                                                                    onChange={this.onChangeQuarter}\n                                                                                               // validations={[required]}\n                                                                                               >\n                                                                                                    {options && options.map(o => <option key={o.id} value={o.id}>{o.text}</option>)}\n                                                                                               </Select>\n                                                                                          </div>\n                                                                                     </div>\n                                                                                </div>\n                                                                                <div className=\"row\">\n                                                                                     <div className=\"col-sm-6\">\n                                                                                          <div className=\"form-group\">\n                                                                                               {/* text input */}\n                                                                                               <label> Year</label>\n                                                                                               <Input type=\"number\" className=\"form-control \" placeholder\n                                                                                                    value={SurveyToUpdateInfo.year}\n                                                                                                    onChange={this.onChangeYear}\n                                                                                               // validations={[required]}\n                                                                                               />\n                                                                                          </div>\n                                                                                     </div>\n                                                                                     <div className=\"row\">\n                                                                                          <div className=\"col-sm-6\">\n                                                                                               {/* text input */}\n                                                                                               <div className=\"form-group\">\n                                                                                                    <label> Start date</label>\n                                                                                                    <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                         value={SurveyToUpdateInfo.start_date}\n                                                                                                         onChange={this.onChangeStartDate}\n                                                                                                    // validations={[required]}\n                                                                                                    />\n                                                                                               </div>\n                                                                                          </div>\n                                                                                          <div className=\"col-sm-6\">\n                                                                                               <div className=\"form-group\">\n                                                                                                    <label> Due Date</label>\n                                                                                                    <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                         value={SurveyToUpdateInfo.due_date}\n                                                                                                         onChange={this.onChangeDueDate}\n                                                                                                    // validations={[required]}\n                                                                                                    />\n                                                                                               </div>\n                                                                                          </div>\n                                                                                     </div>\n                                                                                     {/* <div className=\"row\"> */}\n\n\n\n                                                                                     {/* {SurveyToUpdateInfo.get_states.length?\n                                                                           <div className=\"col-sm-7\">\n                                                                           <div className=\"table-container\">\n                                                                                     <table className=\"table\">\n                                                                                          <thead>\n\n                                                                                               <tr>\n                                                                                                    <th>STATES</th>\n                                                                                   \n                                                                                               </tr>\n\n                                                                                          </thead>\n                                                                                          <tbody className=\"table-body\">\n                                                                                               {SurveyToUpdateInfo.get_states.map((state, i) => (\n\n                                                                                                    <tr>\n                                                                                                         <td>{state.title}\n\n                                                                                                         </td>\n                                                                                                         \n                                                                                                         </tr>\n                                      \n                                                                                               ))}\n                                                                                               \n                                                                                          </tbody>\n\n                                                                                     </table>\n                                                                                </div>\n                                                                                </div>\n\n                                                                                :\"\"}\n                                                                                </div> */}\n                                                                                     <div className=\"col-sm-6\">\n                                                                                          <div className=\"form-group\">\n                                                                                               <label> Survey Type:&nbsp;{SurveyToUpdateInfo.survey_type.toUpperCase()}</label>\n                                                                                               <Select type=\"text\" className=\"form-control \" placeholder\n                                                                                                    // validations={[required]}\n                                                                                                    value={this.state.survey_type}\n                                                                                                    onChange={this.onChangeSurveyType}\n                                                                                               >\n                                                                                                    <option value=\"\">Select</option>\n                                                                                                    <option value=\"sg\">SG</option>\n                                                                                                    <option value=\"lg\">LG</option>\n                                                                                                    <option value=\"other\">OTHER</option>\n                                                                                               </Select>\n                                                                                          </div>\n                                                                                     </div>\n                                                                                </div>\n                                                                                {statesGov && (\n                                                                                     <div className=\"table-container\">\n                                                                                          <table className=\"table\">\n                                                                                               <thead>\n\n                                                                                                    <tr>\n                                                                                                         <th>STATE</th>\n\n                                                                                                         <th> Check all\n                                                                                                                                         <MultiselectCheckbox\n                                                                                                                   checkboxes=\".table .select-checkbox\"\n                                                                                                                   sync=\".table .row\"\n                                                                                                                   onNotAllChecked={(selectedMap) => {\n                                                                                                                        const fieldsList = [];\n                                                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                             fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                        }\n                                                                                                                        //    const go = fieldsList.join()\n                                                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                        // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                                   }}\n                                                                                                                   onAllChecked={(selectedMap) => {\n                                                                                                                        // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                        const fieldsList = [];\n                                                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                             fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                        }\n                                                                                                                        //    const go = fieldsList.join()\n                                                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                   }}\n                                                                                                                   onAllUnchecked={(selectedMap) => {\n                                                                                                                        const fieldsList = [];\n                                                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                             fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                        }\n                                                                                                                        //    const go = fieldsList.replace(/\\d+/g,\"\")\n\n                                                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                        // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                                   }}\n\n                                                                                                              />\n                                                                                                         </th>\n\n\n                                                                                                    </tr>\n\n                                                                                               </thead>\n                                                                                               <tbody className=\"table-body\">\n                                                                                                    {List_Of_States.map((state, i) => (\n\n                                                                                                         <tr>\n                                                                                                              <td>{state.title}\n\n                                                                                                              </td>\n\n                                                                                                              <td>\n                                                                                                                   <input\n                                                                                                                        type=\"checkbox\"\n                                                                                                                        className=\"select-checkbox\"\n                                                                                                                        value={`${state.pk}`}\n                                                                                                                   // onChange={this.onChangeState}\n                                                                                                                   // validations={[required]}\n                                                                                                                   />\n                                                                                                              </td>\n                                                                                                         </tr>\n\n                                                                                                    ))}\n\n                                                                                               </tbody>\n\n                                                                                          </table>\n                                                                                     </div>\n                                                                                )}\n                                                                                {lgasGov && (\n                                                                                     <div className=\"table-container\">\n                                                                                          <table className=\"table\">\n                                                                                               <thead>\n                                                                                                    <tr>\n                                                                                                         <th>LGA</th>\n\n                                                                                                         <th> Check all\n                                                                                                                                          <MultiselectCheckbox\n                                                                                                                   checkboxes=\".table .select-checkbox\"\n                                                                                                                   sync=\".table .row\"\n                                                                                                                   onNotAllChecked={(selectedMap) => {\n                                                                                                                        const fieldsList = [];\n                                                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                             fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                        }\n                                                                                                                        //    const go = fieldsList.join()\n                                                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                        // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                                   }}\n                                                                                                                   onAllChecked={(selectedMap) => {\n                                                                                                                        // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                        const fieldsList = [];\n                                                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                             fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                        }\n                                                                                                                        //    const go = fieldsList.join()\n                                                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                   }}\n                                                                                                                   onAllUnchecked={(selectedMap) => {\n                                                                                                                        const fieldsList = [];\n                                                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                             fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                        }\n                                                                                                                        //    const go = fieldsList.join()\n                                                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                        // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                                   }}\n\n                                                                                                              />\n                                                                                                         </th>\n                                                                                                    </tr>\n                                                                                               </thead>\n                                                                                               <tbody className=\"table-body\">\n                                                                                                    {StatesList && StatesList.map(lga => (\n\n                                                                                                         <tr>\n                                                                                                              <td style={{ color: 'green', fontWeight: 'bold' }}>{lga.title} </td>\n                                                                                                              <br />\n                                                                                                              {lga.get_lgas && lga.get_lgas.map(lgas => (\n                                                                                                                   <tr>\n                                                                                                                        <td>{lgas.title}</td>\n                                                                                                                        <td>\n                                                                                                                             <input\n                                                                                                                                  type=\"checkbox\"\n                                                                                                                                  className=\"select-checkbox\"\n                                                                                                                                  value={`${lgas.pk}`}\n                                                                                                                             // validations={[required]}\n                                                                                                                             />\n                                                                                                                        </td>\n                                                                                                                   </tr>\n                                                                                                              ))}\n                                                                                                         </tr>\n                                                                                                    ))}\n                                                                                               </tbody>\n                                                                                          </table>\n                                                                                     </div>\n                                                                                )}\n\n                                                                                <center>\n                                                                                     <button\n                                                                                          disabled={this.state.AdoptSurveyloading}\n                                                                                          className=\"btn btn-info btn-lg float-right\"\n                                                                                     >\n\n                                                                                          {this.state.AdoptSurveyloading && (\n                                                                                               <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                                                          )}\n                                                                                                                     Update\n                                                                                                                     </button>\n\n                                                                                </center>\n                                                                                </div>\n\n                                                                                )}\n                                                                                <center>\n                                                                                     {this.state.message && (\n                                                                                          <div className=\"form-group\">\n                                                                                               <div\n                                                                                                    className={\n                                                                                                         this.state.AdoptSurveysuccessful ? \"alert alert-success\" : \"alert alert-danger\"\n                                                                                                    }\n                                                                                                    role=\"alert\"\n                                                                                               >\n\n                                                                                                    {this.state.message}\n                                                                                               </div>\n                                                                                               {this.state.AdoptSurveysuccessful &&\n                                                                                                    <Link\n                                                                                                         className=\"btn btn-primary\"\n                                                                                                         to=\"/ApproveThisSurvey\"\n\n                                                                                                    >\n                                                                                                         continue\n                                                                                              </Link>\n                                                                                               }\n                                                                                          </div>\n\n                                                                                     )}\n                                                                                </center>\n                                                                                \n                                                                                <CheckButton\n                                                                                     style={{ display: \"none\" }}\n                                                                                     ref={c => {\n                                                                                          this.checkBtn = c;\n                                                                                     }}\n                                                                                />\n             \n                                                                 </Form>\n\n                                                            </div>\n\n\n                                                            {/* /.card-body */}\n                                                       </div>\n                                                       {/* /.card */}\n                                                  </div>\n                                             </div>\n\n\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                    </div>\n                    <Footer />\n\n               </div>\n          );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import Textarea from \"react-validation/build/textarea\";\n// import CheckButton from \"react-validation/build/button\";\n// import Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\n// import authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n// const required = (value) => {\n//     if (!value) {\n//          return (\n//               <div className=\"alert alert-danger\" role=\"alert\">\n//                    This field is required!\n//               </div>\n//          );\n//     }\n// };\nexport default class PendingResponsesResponder extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            PendingResponsesResponder: [],\n          \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const Check=JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = Check.token\n\n            const user_type=Check.profile.user_type\n            const lga =Check.profile.lga\n            const state =Check.profile.state\n            // const Hq = state && lga\n\n            switch (user_type) {\n                case 'sg_user':\n                    return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/response/?status=---&states=${state}&user_responded=yes&for_user=yes`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n             \n                case 'lg_user':\n                    return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/response/?status=---&states=${lga}&user_responded=yes&for_user=yes`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n                    case 'hq_user':\n                         return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/response/?status=---&user_responded=yes`,\n                         {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n        \n                default:\n                    return null;\n            }\n        \n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Pending Responses</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\nimport Landing from './Landing';\r\n// import { FormBuilder } from './FormBuilder';\r\nimport ViewSurvey from './ViewSurvey';\r\nimport CompleteSurvey from './CompleteSurvey';\r\nimport CreateNewUser from './CreateNewUser';\r\nimport EditTemplate from './EditTemplate';\r\nimport Surveys from './Surveys';\r\nimport AvailableSurvey from './AvailableSurvey';\r\nimport CategoryView from './CategoryView';\r\nimport ListResponses from './ListResponses';\r\nimport ResponseTable from './ResponseTable';\r\nimport UserProfile from './UserProfile';\r\nimport ResponseByUser from './ResponseByUser';\r\nimport Deploy from './Deploy';\r\nimport ReviewRespondent from './ReviewRespondent';\r\nimport ListToApprove from './ListToApprove';\r\nimport ApproveTemplate from './ApproveTemplate';\r\nimport ApproveResponse from './ApproveResponse';\r\nimport ValidateResponse from './ValidateResponse';\r\nimport RespondentList from './RespondentList';\r\nimport ApproveSurvey from './ApproveSurvey';\r\nimport TemplateToApprove from './TemplateToApprove';\r\nimport ApprovedSurvey from './ApprovedSurvey';\r\nimport ApprovedTemplate from './ApprovedTemplate';\r\nimport RejectedTemplate from './RejectedTemplate';\r\nimport RejectedSurvey from './RejectedSurvey';\r\nimport RespondentInfo from './RespondentInfo';\r\nimport Notifications from './Notifications';\r\nimport SurveyToDeploy from './SurveyToDeploy';\r\nimport DeploySurvey from './DeploySurvey';\r\nimport SurveyRejected from './SurveyRejected';\r\nimport SurveyApproved from './SurveyApproved';\r\nimport TemplateApproved from './TemplateApproved';\r\nimport TemplateRejected from './TemplateRejected';\r\nimport ApproveThisTemplate from './ApproveThisTemplate';\r\nimport ApproveThisSurvey from './ApproveThisSurvey';\r\nimport ViewNotification from './ViewNotification';\r\nimport UploadSupporting from './UploadSupporting';\r\nimport ReviewResponder from './ReviewResponder';\r\nimport ApproveResponder from './ApproveResponder';\r\nimport SearchRecurrent from './SearchRecurrent';\r\nimport RecurrentCapitalExpenditure from './RecurrentCapitalExpenditure';\r\nimport COFOGreport from './COFOGreport';\r\nimport SearchCOFOG from './SearchCOFOG';\r\nimport SearchSSGFF from './SearchSSGFF';\r\nimport SSGFFreport from './SSGFFreport';\r\nimport SearchPensiondeduction from './SearchPensiondeduction';\r\nimport PensiondeductionReport from './PensiondeductionReport';\r\nimport LGEONSPWReport from './LGEONSPWReport';\r\nimport SearchLGEONSPW from './SearchLGEONSPW';\r\nimport SurveyAttachment from './SurveyAttachment';\r\nimport Allsurveys from './Allsurveys';\r\nimport ResponseEdit from './ResponseEdit';\r\nimport PensionSurvey from './PensionSurvey';\r\nimport PensiondeductionSurveyList from './PensiondeductionSurveyList';\r\nimport CompletePensiondeduction from './CompletePensiondeduction';\r\nimport PensionPending from './PensionPending';\r\nimport ApprovedPension from './ApprovedPension';\r\nimport RejectedPension from './RejectedPension';\r\nimport ApprovePensionSurvey from './ApprovePensionSurvey';\r\nimport ListToApprovePension from './ListToApprovePension';\r\nimport SurveyToUpdate from './SurveyToUpdate';\r\nimport PendingResponsesResponder from './PendingResponsesResponder';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst  Content = () => {\r\n    return (\r\n       <Switch>\r\n           <Route exact path=\"/\" component={Landing}/>\r\n           <Route  path=\"/landing\" component={Landing}/>\r\n\r\n\r\n           <Route exact path=\"/\" component={Login}/>\r\n           <Route  path=\"/login\" component={Login}/>\r\n\r\n \r\n           <Route exact path=\"/\" component={Dashboard}/>\r\n           <Route  path=\"/dashboard\" component={Dashboard}/>\r\n\r\n          \r\n           {/* <Route exact path=\"/\" component={FormBuilder}/>\r\n           <Route  path=\"/FormBuilder\" component={FormBuilder}/>\r\n\r\n           */}\r\n           <Route exact path=\"/\" component={ViewSurvey}/>\r\n           <Route  path=\"/ViewSurvey\" component={ViewSurvey}/>\r\n           \r\n           <Route exact path=\"/\" component={CompleteSurvey}/>\r\n           <Route  path=\"/CompleteSurvey\" component={CompleteSurvey}/>\r\n           \r\n           <Route exact path=\"/\" component={CreateNewUser}/>\r\n           <Route  path=\"/Register\" component={CreateNewUser}/>\r\n\r\n          <Route exact path=\"/\" component={EditTemplate}/>\r\n           <Route  path=\"/EditTemplate\" component={EditTemplate}/>\r\n           \r\n           <Route exact path=\"/\" component={Surveys}/>\r\n           <Route  path=\"/Surveys\" component={Surveys}/>\r\n           \r\n           <Route exact path=\"/\" component={AvailableSurvey}/>\r\n           <Route  path=\"/AvailableSurvey\" component={AvailableSurvey}/>\r\n\r\n           \r\n           <Route exact path=\"/\" component={CategoryView}/>\r\n           <Route  path=\"/CategoryView\" component={CategoryView}/>\r\n\r\n           <Route exact path=\"/\" component={ListResponses}/>\r\n           <Route  path=\"/ListResponses\" component={ListResponses}/>\r\n           \r\n           <Route exact path=\"/\" component={ResponseTable}/>\r\n           <Route  path=\"/ResponseTable\" component={ResponseTable}/>\r\n\r\n           <Route exact path=\"/\" component={UserProfile}/>\r\n           <Route  path=\"/Profile\" component={UserProfile}/>\r\n\r\n           <Route exact path=\"/\" component={ResponseByUser}/>\r\n           <Route  path=\"/ResponseByUser\" component={ResponseByUser}/>\r\n\r\n           <Route exact path=\"/\" component={Deploy}/>\r\n           <Route  path=\"/Deploy\" component={Deploy}/>\r\n\r\n           <Route exact path=\"/\" component={ReviewRespondent}/>\r\n           <Route  path=\"/ReviewRespondent\" component={ReviewRespondent}/>\r\n\r\n           <Route exact path=\"/\" component={ListToApprove}/>\r\n           <Route  path=\"/ListToApprove\" component={ListToApprove}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveTemplate}/>\r\n           <Route  path=\"/ApproveTemplate\" component={ApproveTemplate}/>\r\n\r\n         \r\n           <Route exact path=\"/\" component={ApproveResponse}/>\r\n           <Route  path=\"/ApproveResponse\" component={ApproveResponse}/>\r\n\r\n           <Route exact path=\"/\" component={ValidateResponse}/>\r\n           <Route  path=\"/ValidateResponse\" component={ValidateResponse}/>\r\n\r\n           <Route exact path=\"/\" component={RespondentList}/>\r\n           <Route  path=\"/RespondentList\" component={RespondentList}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveSurvey}/>\r\n           <Route  path=\"/ApproveSurvey\" component={ApproveSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={TemplateToApprove}/>\r\n           <Route  path=\"/TemplateToApprove\" component={TemplateToApprove}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedSurvey}/>\r\n           <Route  path=\"/ApprovedSurvey\" component={ApprovedSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedTemplate}/>\r\n           <Route  path=\"/ApprovedTemplate\" component={ApprovedTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedTemplate}/>\r\n           <Route  path=\"/RejectedTemplate\" component={RejectedTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedSurvey}/>\r\n           <Route  path=\"/RejectedSurvey\" component={RejectedSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={RespondentInfo}/>\r\n           <Route  path=\"/RespondentInfo\" component={RespondentInfo}/>\r\n\r\n           <Route exact path=\"/\" component={Notifications}/>\r\n           <Route  path=\"/Notifications\" component={Notifications}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyToDeploy}/>\r\n           <Route  path=\"/SurveyToDeploy\" component={SurveyToDeploy}/>\r\n\r\n           <Route exact path=\"/\" component={DeploySurvey}/>\r\n           <Route  path=\"/DeploySurvey\" component={DeploySurvey}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyRejected}/>\r\n           <Route  path=\"/SurveyRejected\" component={SurveyRejected}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyApproved}/>\r\n           <Route  path=\"/SurveyApproved\" component={SurveyApproved}/>\r\n           \r\n           <Route exact path=\"/\" component={TemplateApproved}/>\r\n           <Route  path=\"/TemplateApproved\" component={TemplateApproved}/>\r\n \r\n           <Route exact path=\"/\" component={TemplateRejected}/>\r\n           <Route  path=\"/TemplateRejected\" component={TemplateRejected}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveThisTemplate}/>\r\n           <Route  path=\"/ApproveThisTemplate\" component={ApproveThisTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveThisSurvey}/>\r\n           <Route  path=\"/ApproveThisSurvey\" component={ApproveThisSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={ViewNotification}/>\r\n           <Route  path=\"/ViewNotification\" component={ViewNotification}/>\r\n\r\n           <Route exact path=\"/\" component={UploadSupporting}/>\r\n           <Route  path=\"/UserUploads\" component={UploadSupporting}/>\r\n\r\n           <Route exact path=\"/\" component={ReviewResponder}/>\r\n           <Route  path=\"/ReviewResponder\" component={ReviewResponder}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveResponder}/>\r\n           <Route  path=\"/ApproveResponder\" component={ApproveResponder}/>\r\n\r\n           <Route exact path=\"/\" component={SearchRecurrent}/>\r\n           <Route  path=\"/GenerateRecurrent\" component={SearchRecurrent}/>\r\n\r\n           <Route exact path=\"/\" component={RecurrentCapitalExpenditure}/>\r\n           <Route  path=\"/RecurrentCapitalExpenditure\" component={RecurrentCapitalExpenditure}/>\r\n\r\n           <Route exact path=\"/\" component={COFOGreport}/>\r\n           <Route  path=\"/COFOGreport\" component={COFOGreport}/>\r\n\r\n           <Route exact path=\"/\" component={SearchCOFOG}/>\r\n           <Route  path=\"/SearchCOFOG\" component={SearchCOFOG}/>\r\n\r\n           <Route exact path=\"/\" component={SearchSSGFF}/>\r\n           <Route  path=\"/SearchSSGFF\" component={SearchSSGFF}/>\r\n\r\n           <Route exact path=\"/\" component={SSGFFreport}/>\r\n           <Route  path=\"/SSGFFreport\" component={SSGFFreport}/>\r\n\r\n           <Route exact path=\"/\" component={SearchPensiondeduction}/>\r\n           <Route  path=\"/SearchPensiondeduction\" component={SearchPensiondeduction}/>\r\n\r\n           <Route exact path=\"/\" component={PensiondeductionReport}/>\r\n           <Route  path=\"/PensiondeductionReport\" component={PensiondeductionReport}/>\r\n\r\n           <Route exact path=\"/\" component={LGEONSPWReport}/>\r\n           <Route  path=\"/LGEONSPWReport\" component={LGEONSPWReport}/>\r\n\r\n           <Route exact path=\"/\" component={SearchLGEONSPW}/>\r\n           <Route  path=\"/SearchLGEONSPW\" component={SearchLGEONSPW}/>\r\n\r\n           \r\n           <Route exact path=\"/\" component={SurveyAttachment}/>\r\n           <Route  path=\"/SurveyAttachment\" component={SurveyAttachment}/>\r\n\r\n           <Route exact path=\"/\" component={Allsurveys}/>\r\n           <Route  path=\"/Allsurveys\" component={Allsurveys}/>\r\n\r\n           <Route exact path=\"/\" component={ResponseEdit}/>\r\n           <Route  path=\"/ResponseEdit\" component={ResponseEdit}/>\r\n\r\n           <Route exact path=\"/\" component={PensionSurvey}/>\r\n           <Route  path=\"/PensionSurvey\" component={PensionSurvey}/>\r\n\r\n           \r\n           <Route exact path=\"/\" component={PensiondeductionSurveyList}/>\r\n           <Route  path=\"/PensiondeductionSurveyList\" component={PensiondeductionSurveyList}/>\r\n\r\n            \r\n           <Route exact path=\"/\" component={CompletePensiondeduction}/>\r\n           <Route  path=\"/CompletePensiondeduction\" component={CompletePensiondeduction}/>\r\n\r\n           <Route exact path=\"/\" component={PensionPending}/>\r\n           <Route  path=\"/PensionPending\" component={PensionPending}/>\r\n\r\n           <Route exact path=\"/\" component={PensionPending}/>\r\n           <Route  path=\"/PensionPending\" component={PensionPending}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedPension}/>\r\n           <Route  path=\"/ApprovedPension\" component={ApprovedPension}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedPension}/>\r\n           <Route  path=\"/RejectedPension\" component={RejectedPension}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovePensionSurvey}/>\r\n           <Route  path=\"/ApprovePensionSurvey\" component={ApprovePensionSurvey}/>\r\n\r\n\r\n           <Route exact path=\"/\" component={ListToApprovePension}/>\r\n           <Route  path=\"/ListToApprovePension\" component={ListToApprovePension}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyToUpdate}/>\r\n           <Route  path=\"/SurveyToUpdate\" component={SurveyToUpdate}/>\r\n\r\n           <Route exact path=\"/\" component={PendingResponsesResponder}/>\r\n           <Route  path=\"/PendingResponsesResponder\" component={PendingResponsesResponder}/>\r\n\r\n\r\n           \r\n           \r\n       </Switch>\r\n\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default Content;\r\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom';\nimport Content from './components/Content'\n\n\nexport default function App() {\n    \n  return (\n    <div>\n      <BrowserRouter>\n    \n      <Content />\n\n      </BrowserRouter>\n\n    </div>\n    \n  ) \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-form-builder2/dist/app.css';\nimport App from './app';\n// import DemoBar from './components/demobar';\nimport * as serviceWorker from './serviceWorker';\n// import * as variables from './components/variables';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <App />,\n  document.getElementById('form-builder'),\n);\n\n// ReactDOM.render(\n//   <DemoBar variables={variables} />,\n//   document.getElementById('demo-bar'),\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}