{"version":3,"sources":["services/auth.service.js","components/Header.js","cbn.png","components/Menu.js","components/Footer.js","components/Dashboard.js","components/Login.js","components/Landing.js","components/ViewSurvey.js","components/FormContext.js","components/FormElements/TextInput.js","components/FormElements/SelectOption.js","components/FormElement.js","components/FormElementCategory.js","components/CheckSurveyTypeResponse.js","components/CompleteSurvey.js","components/CreateNewUser.js","components/EditTemplate.js","components/Surveys.js","components/AvailableSurvey.js","components/Demobar.js","components/variables.js","components/CategoryView.js","components/ListResponses.js","components/ResponseTable.js","components/UserProfile.js","components/ResponseByUser.js","components/Deploy.js","components/ReviewRespondent.js","components/ListToApprove.js","components/ApproveTemplate.js","components/ApproveResponse.js","components/ValidateResponse.js","components/RespondentList.js","components/ApproveSurvey.js","components/TemplateToApprove.js","components/ApprovedSurvey.js","components/ApprovedTemplate.js","components/RejectedTemplate.js","components/RejectedSurvey.js","components/RespondentInfo.js","components/Notifications.js","components/SurveyToDeploy.js","components/DeploySurvey.js","components/SurveyRejected.js","components/SurveyApproved.js","components/TemplateApproved.js","components/TemplateRejected.js","components/ApproveThisTemplate.js","components/ApproveThisSurvey.js","components/ViewNotification.js","components/Content.js","app.js","serviceWorker.js","index.js"],"names":["username","password","axios","post","headers","then","response","data","localStorage","setItem","JSON","stringify","removeItem","first_name","last_name","address","lga","state","dob","email","phone_number","formData","FormData","append","title","description","location","status","start_date","due_date","token","parse","getItem","category","origin","pk","Header","props","navigate","routeChange","setState","window","bind","logOut","message","get","res","notification","length","authService","logout","this","reload","className","data-widget","to","role","data-slide","onClick","Component","Menu","Group1_Branch","Group2","Respondent","Approver","Data_Management_team","current_User","undefined","myloading","script","document","createElement","src","async","body","appendChild","user","getCurrentUser","profile","user_groups","includes","ApprovedSurveys","warningLoad","RejectedSurveys","ApprovedTemplate","RejectedTemplate","Pendingdeployement","PendingApprovalSurvey","PendingApprovalTemplate","AvailableSurvey","Logo","height","alt","data-accordion","class","Footer","Dashboard","useEffect","required","value","Login","handleLogin","onChangeUsername","onChangePassword","loading","ViewTemplateloading","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","AuthService","login","error","resMessage","non_field_errors","toString","onSubmit","ref","c","type","name","placeholder","onChange","validations","disabled","style","display","Landing","href","rel","color-on-scroll","id","data-toggle","aria-expanded","aria-label","data-parallax","backgroundImage","ViewSurvey","SurveyList","Temple_pk","Spinner","animation","variant","map","surveys","i","created_by","created","width","EditTemplate","FormContext","createContext","TextInput","input_type","field_value","handleChange","useContext","event","SelectOption","FormElement","field","FormElementCategory","field_category","CheckSurveyTypeResponse","onChangeState","onChangeLga","statee","statesGov","lgasGov","othersGov","check","survey_type","console","log","state_pk","lga_pk","List_Of_States","List_Of_lgas","CompleteSurvey","useRef","useState","Get_Survey_Details","Set_Survey_Details","successful","setSuccessful","setMessage","setLoading","SingleSurvey","Call_Survey_Details","Provider","newElements","arr","n","push","j","fields","h","sub_categories","SubCategory","minHeight","current","SingleSurveyPk","to_Send","I_to_Send","Object","values","Responsebody","survey_pk","survey_title","myfield","subCategory","CreateNewUser","handleRegister","onChangeFirstName","onChangeLastName","onChangeAddress","onChangeLG","onChangeEmail","onChangeDob","onChangePhoneNumber","onChangeBranch","onChangeDesignation","states","Lgaloading","branch","designation","params","BranchList","DesignationList","prevProps","prevState","statepk","Lgas","createNewUser","detail","list_of_state","format","Designation","AdoptSurvey","onChangeSurvey","AdoptSurveymessage","AdoptSurveysuccessful","AdoptSurveyloading","survey","ExtractTemplate","ExtractTemplatePk","formList","survey_template_pk","Filter_with_name","ApprovedSurveyToUser","SingleTemplateCategories","Templatefields","SubCategoryfields","AddField","Surveys","singleSurveyPk","data-card-widget","template_title","approved_template_timestamp","get_response_count","year","quarter","aria-valuenow","aria-valuemin","aria-valuemax","progress","borderRadius","textAlign","color","border","padding","as","size","aria-hidden","Fill_Survey","Demobar","_onSubmit","twist_result","fieldsList","MyCategoryName","result","find","modifiedObj","filter","item","fieldsObj","concat","last_element","final","economic_code","heading","finalup","jasus_for_state","jasus_for_lga","match","Number","lgas","my_category","onChangeTitle","onChangeQuarter","onChangeStatus","onChangeSurveyType","onChangeStartDate","onChangeDueDate","onChangeYear","onChangeLgas","previewVisible","shortPreviewVisible","roPreviewVisible","update","_onChange","ElementStore","subscribe","modalClass","shortModalClass","roModalClass","margin","marginRight","showPreview","checkboxes","sync","onNotAllChecked","selectedMap","orderedByI","onAllChecked","onAllUnchecked","download_path","back_action","back_name","answer_data","action_name","form_action","form_method","variables","data-dismiss","closePreview","read_only","hide_actions","display_short","React","JOHN","CategoryView","handleSubmit","meloading","response_data","get_form","survey_response_pk","singleCategory","ListResponses","handlePageClick","selectedPage","selected","offset","perPage","currentPage","loadMoreData","tableData","orgtableData","slice","pageCount","Math","ceil","Get_State_Data","tdata","tableDataForState","aria-describedby","tabIndex","aria-controls","rowSpan","colSpan","filled_by","get_entries","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","ResponseTable","create","baseURL","economic","fontWeight","number","table","filename","sheet","buttonText","UserProfile","htmlFor","defaultValue","ResponseByUser","scriptdashboard","ReviewRespondent","ListToApprove","onChangeApprove","onChangeRemark","ApproveThisSurvey","approve","remark","surveyId","loadingModal","ApproveSurvey","ApproveTemplate","handleApprove","onChangestatus","SingleTemplate","get_states","get_lgas","ApproveResponse","ValidateResponse","RespondentList","Users","list_of_lga","users","state_title","lga_title","date_joined","designation_title","branch_name","SurveyInfo","TemplateToApprove","Templates","ApprovedSurvey","RejectedSurvey","RespondentInfo","Notifications","true","notifyId","patch","ViewNotification","api_message","subject","SurveyToDeploy","DeploySurvey","DeploySingleSurvey","DeploySingleSurveyCategories","SurveyRejected","SurveyApproved","TemplateApproved","TemplateRejected","ApproveThisTemplate","ApproveNotifications","MyNotification","MyNotificationdear","whiteSpace","Content","exact","path","component","Deploy","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6c4c7c1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst Url ='https://gfso.chinikiguard.com/accounts/api/jwt/';\r\n\r\nclass AuthService {\r\n\r\n \r\n  login(username, password) {\r\n    \r\n\r\n    return axios.post( Url, { username,  password },  { headers: { \r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n    'Access-Control-Allow-Credentials': true }, }   )\r\n    \r\n      .then(response => {\r\n        if (response.data) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n        // console.log(response.data)\r\n        return response.data;\r\n      }\r\n      \r\n      );\r\n    \r\n  }\r\n\r\n //handle logout\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n//create new user\r\n  createNewUser( username,password,first_name,last_name,address, lga,state,dob,email,phone_number) {\r\n//     const mytoken = JSON.parse(localStorage.getItem('user'));\r\n// const token = mytoken.token;\r\n\r\nlet formData = new FormData();\r\n        formData.append('username', username);\r\n        formData.append('password', password);\r\n        formData.append('first_name', first_name);\r\n        formData.append('last_name', last_name);\r\n        formData.append('address', address);\r\n        formData.append('lga', lga);\r\n        formData.append('dob', dob);\r\n        formData.append('state', state);\r\n        formData.append('email', email);\r\n        formData.append('phone_number', phone_number);\r\n\r\n    return axios.post('https://gfso.chinikiguard.com/accounts/api/create-user/',formData, {\r\n     \r\n    },\r\n    {  \r\n      headers: { \r\n      'Content-Type':'application/json',\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'POST, GET,HEAD,OPTIONS',\r\n       'Access-Control-Allow-Credentials': true \r\n      }, \r\n    }   \r\n    )\r\n  }\r\n\r\n  //this handle projects\r\n  RegisterProject(title,description,location,status,start_date,due_date){\r\n    const mytoken = JSON.parse(localStorage.getItem('user'));\r\nconst token = mytoken.token;\r\n     return  axios.post(\"https://ecological.chinikiguard.com/projects/api/create/\", {\r\n\r\n     title,\r\n     description,\r\n     location,\r\n     status,\r\n     start_date,\r\n     due_date,\r\n  },\r\n  \r\n  { \r\n    \r\n    \r\n    headers: { \r\n    'Authorization': `Token ${token}`,\r\n     'Access-Control-Allow-Origin': '*',\r\n     'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n     'Access-Control-Allow-Credentials': true \r\n    }, \r\n  }   \r\n  )\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n//this handle survey creation\r\nCreateSurvey(title,category,status,origin){\r\n\r\n  const mytoken = JSON.parse(localStorage.getItem('user'));\r\n  const token = mytoken.token;\r\n  return  axios.post(\"https://gfso.chinikiguard.com/survey/api/create/survey/\", {\r\n\r\n  title,\r\n  category,\r\n  status,\r\n  origin,\r\n},\r\n\r\n{ \r\n \r\n \r\n headers: { \r\n 'Authorization': `Token ${token}`,\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n  'Access-Control-Allow-Credentials': true \r\n }, \r\n}   \r\n)\r\n\r\n.then(response => {\r\n  if (response.data) {\r\n    localStorage.setItem(\"survey_pk\", JSON.stringify(response.data.pk));\r\n  }\r\n  // console.log(response.data)\r\n  return response.data;\r\n}\r\n\r\n);\r\n\r\n\r\n\r\n\r\n}\r\n\r\n  \r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\n\r\nexport default new AuthService();","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch } from \"react-router-dom\";\r\nimport authService from '../services/auth.service';\r\nimport axios from 'axios'\r\n\r\nclass Header extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.routeChange = this.routeChange.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n\r\n  this.state = {\r\n      message: []\r\n  };\r\n  }\r\n  state = {\r\n    navigate: false\r\n  };\r\n  componentDidMount() {\r\n\r\n\r\n    const mytoken = JSON.parse(localStorage.getItem('user'));\r\n    const token = mytoken.token;\r\n    //call the States and LGAS at the first \r\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/?read=no',\r\n      {\r\n        headers:\r\n        {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Token ${token}`,\r\n        },\r\n\r\n      },\r\n    )\r\n      .then(res => {\r\n        if (res.data) {\r\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\r\n        }\r\n        this.setState({\r\n          notification: res.data.length,\r\n          message: res.data\r\n        });\r\n        // console.log(res.data)                  \r\n\r\n      })\r\n\r\n  }\r\n  logOut() {\r\n    authService.logout();\r\n\r\n    this.setState({ navigate: true });\r\n    window.location.reload(\"/login\");\r\n  }\r\n  routeChange = () => {\r\n    this.setState({ navigate: true });\r\n    window.location = \"/dashboard\"\r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    // const { navigate } = this.state;\r\n\r\n    return (\r\n\r\n      <Switch>\r\n        {/* {currentUser && ( */}\r\n\r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n          {/* Left navbar links */}\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-widget=\"pushmenu\" to=\"#\" role=\"button\"><i className=\"fas fa-bars\" /></Link>\r\n            </li>\r\n            {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n      <a href=\"../../index3.html\" className=\"nav-link\">Home</a>\r\n    </li> */}\r\n            {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n      <a href=\"#\" className=\"nav-link\">Menu</a>\r\n    </li> */}\r\n          </ul>\r\n          {/* Right navbar links */}\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {/* Navbar Search */}\r\n\r\n            {/* Messages Dropdown Menu */}\r\n            <li className=\"nav-item\">\r\n              <Link  to=\"/Notifications\" className=\"nav-link\"  >\r\n                <i className=\"fas fa-bell\" />\r\n                <span className=\"badge badge-danger navbar-badge\">{this.state.notification}</span>\r\n              </Link>\r\n             \r\n            </li>\r\n\r\n\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-widget=\"fullscreen\" to=\"#\" role=\"button\">\r\n                <i className=\"fas fa-expand-arrows-alt\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-slide=\"true\" data-widget=\"control-sidebar\" onClick={this.logOut}  >\r\n                <span>Sign Out</span> &nbsp;\r\n        <i className=\"fas fa-user-alt\" />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n      </Switch>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/cbn.ec9a327b.png\";","import React, { Component } from 'react'\r\nimport { Link, Switch } from 'react-router-dom';\r\nimport Logo from '../cbn.png'\r\nimport authService from '../services/auth.service';\r\nimport axios from 'axios'\r\n\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n            Group1_Branch: false,\r\n            Group2: false,\r\n            Respondent: false,\r\n            Approver: false,\r\n            Data_Management_team:false,\r\n            current_User: undefined,\r\n            myloading: true\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const script = document.createElement(\"script\");\r\n\r\n        script.src = \"./plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js\";\r\n        script.async = true;\r\n\r\n        document.body.appendChild(script);\r\n        //user  stored user information (including JWT) from AuthService class\r\n        const user = authService.getCurrentUser();\r\n        //check User Group\r\n        if (user) {\r\n            this.setState({\r\n                current_User: user.profile,\r\n                Group1_Branch: user.profile.user_groups.includes(\"Group 1/Branch\"),\r\n                Group2: user.profile.user_groups.includes(\"Group 2\"),\r\n                Respondent: user.profile.user_groups.includes(\"Respondent\"),\r\n                Approver: user.profile.user_groups.includes(\"Approver\"),\r\n                Data_Management_team: user.profile.user_groups.includes(\"Data Management team\"),           \r\n            });\r\n\r\n        const token = user.token;\r\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no&for_user=yes\",\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    ApprovedSurveys: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n\r\n            axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&for_user=yes\",\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    RejectedSurveys: res.data.length,\r\n\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n\r\n            //for template\r\n\r\n            axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no&for_user=yes`,\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    ApprovedTemplate: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n\r\n            axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&for_user=yes`,\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    RejectedTemplate: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n            axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved=yes&approved_template=yes&deployed=no&for_user=yes`,\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    Pendingdeployement: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n            axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&for_user=yes`,\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    PendingApprovalSurvey: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n            axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no\",\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    PendingApprovalTemplate: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n            axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&for_user=yes\",\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    AvailableSurvey: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { current_User, Group1_Branch, Group2,Respondent,Approver,Data_Management_team } = this.state;\r\n\r\n\r\n        return (\r\n\r\n            <Switch>\r\n\r\n                {current_User && (\r\n\r\n\r\n                    <aside className=\"main-sidebar sidebar-light-success elevation-4\">\r\n\r\n                        {/* Brand Logo */}\r\n                        <Link to=\"/dashboard\" className=\"brand-link\">\r\n                            <center> <img src={Logo} height=\"150px\" alt=\"\"/></center><br />\r\n                            <center> <span className=\"brand-text font-weight-light text-yellow\"><h3><b>GFSO</b></h3></span></center>\r\n                        </Link>\r\n\r\n                        <div className=\"sidebar\">\r\n\r\n                            {/* Sidebar Menu */}\r\n                            <nav className=\"mt-2\">\r\n                            {Group1_Branch && (\r\n\r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    {/* Add icons to the links using the .nav-icon class\r\n                        with font-awesome or any other icon font library */}\r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n                                        </p>\r\n                                        </Link>\r\n\r\n                                       \r\n                                        {/* group1 */}\r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentInfo\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-info text-green\"></i>\r\n                                                    <p>\r\n                                                    Respondent Info/group\r\n                                                 </p>\r\n                                                </Link>\r\n                                            </li>\r\n                                            \r\n                                        </ul>\r\n                                        <hr/>\r\n                                        <h1 className=\"nav-header\">SURVEY</h1>\r\n                                        <hr/>\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/Deploy\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                    Create Survey \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveThisSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                        <p>\r\n                                                        \r\n    \r\n                                                     Pending Approval\r\n                                                     {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                  Approved Surveys \r\n                                                  {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul> \r\n                                            \r\n                                            \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected Surveys \r\n                                                      {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/SurveyToDeploy\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-clock-o text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Pending Deployement\r\n                                                        {this.state.Pendingdeployement\r\n                                                      ?this.state.Pendingdeployement!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Pendingdeployement}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n\r\n    </p>\r\n\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                         Surveys Progress \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                                <hr/> \r\n                                                <h1 className=\"nav-header\">TEMPLATE</h1>\r\n                                                <hr/>\r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveThisTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ViewSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Template\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedTemplate\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                      {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                            \r\n                                    </li>\r\n                                </ul>\r\n                            \r\n\r\n                            \r\n                            )}\r\n                                  {/* group 2 */}\r\n\r\n                                {Group2 && (\r\n                                    \r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active bg-primary\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n    </p>\r\n                                        </Link>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentList\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                    Respondent List \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <hr/>\r\n                                        <h1 className=\"nav-header\">SURVEY</h1>\r\n                                        <hr/>\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval\r\n                                                    \r\n                                                    {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                     Approved\r\n                                                     {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected\r\n                                                    {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <hr/>\r\n                                        <h1 className=\"nav-header\">TEMPLATE</h1>\r\n                                        <hr/>\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                    Approved \r\n                                                    {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected \r\n                                                    {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <hr/>\r\n                                        <h1 className=\"nav-header\">RESPONSES</h1>\r\n<hr/>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ValidateResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                Validate Responses\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                       \r\n                                    </li>\r\n\r\n                                </ul>\r\n                                )}\r\n                                {Respondent && (\r\n\r\n                                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                        <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                            <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n                                                <i className=\"nav-icon fas fa-home\" />\r\n                                                <p>\r\n                                                    Dashboard\r\n</p>\r\n                                            </Link>\r\n                                            {/* <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-paperclip text-warning\"></i>\r\n                                                        <p>\r\n                                                            Supporting Docs\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul> */}\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n                                                        <p>\r\n                                                            Available Survey\r\n                                                            \r\n                                                            {this.state.AvailableSurvey\r\n                                                      ?this.state.AvailableSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.AvailableSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                )}\r\n                                {Approver && (\r\n\r\n                                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                        <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                            <Link to=\"/dashboard\" className=\"nav-link active bg-info\">\r\n                                                <i className=\"nav-icon fas fa-home\" />\r\n                                                <p>\r\n                                                    Dashboard\r\n</p>\r\n                                            </Link>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-paperclip text-info\"></i>\r\n                                                        <p>\r\n                                                        Approve response\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-bullhorn text-info\"></i>\r\n                                                        <p>\r\n                                                            Generate Mgt. Reports\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                )}\r\n                                {Data_Management_team && (\r\n\r\n                                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                        <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                            <Link to=\"/dashboard\" className=\"nav-link active bg-pink\">\r\n                                                <i className=\"nav-icon fas fa-home\" />\r\n                                                <p>\r\n                                                    Dashboard\r\n</p>\r\n                                            </Link>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-paperclip text-pink\"></i>\r\n                                                        <p>\r\n                                                        Develop Capability\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-bullhorn text-pink\"></i>\r\n                                                        <p>\r\n                                                           Manage Reports\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                )}\r\n                            </nav>\r\n                            {/* /.sidebar-menu */}\r\n                        </div>\r\n                        {/* /.sidebar */}\r\n\r\n\r\n\r\n                    </aside>\r\n\r\n                )}\r\n            </Switch>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer class=\"main-footer\">\r\n        <strong>Copyright &copy; 2021 <Link to=\"\">BeeSoft Technology</Link>.</strong>\r\n        All rights reserved.\r\n        <div class=\"float-right d-none d-sm-inline-block\">\r\n          <b>Version</b> 1.0.0\r\n        </div>\r\n      </footer>\r\n    )\r\n}\r\n","import React, {  useEffect } from \"react\";\r\n// import { Line, Bar, Pie, Doughnut, HorizontalBar, Radar } from \"react-chartjs-2\";\r\n// import axios from \"axios\";\r\n// import Spinner from 'react-bootstrap/Spinner'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\n\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  \r\n \r\n \r\n  //using the functions\r\n  useEffect(() => {\r\n\r\n  \r\n   \r\n  }, []);\r\n\r\n  if (!localStorage.getItem('user')) {\r\n    return (<Redirect to={'/login'} />)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"content-wrapper\">\r\n        <Menu />\r\n        <br />\r\n        {/* Info boxes */}\r\n\r\n        <div className=\"col-12\">\r\n        <div className=\"container-fluid\">\r\n\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-12 col-sm-6 col-md-3\">\r\n              <div className=\"info-box\">\r\n                <span className=\"info-box-icon   elevation-1\"><i className=\"fas fa-desktop text-green\" /></span>\r\n                <div className=\"info-box-content\">\r\n                  <span className=\"info-box-text\">Total responses</span>\r\n                  <span className=\"info-box-number\">\r\n                    <div>\r\n                     \r\n\r\n                    </div>\r\n\r\n                  </span>\r\n                </div>\r\n                {/* /.info-box-content */}\r\n              </div>\r\n              {/* /.info-box */}\r\n            </div>\r\n            {/* /.col */}\r\n            <div className=\"col-12 col-sm-6 col-md-3\">\r\n              <div className=\"info-box mb-3\">\r\n                <span class=\"info-box-icon bg-pink\"><i class=\"ion ion-stats-bars\"></i></span>\r\n                <div className=\"info-box-content\">\r\n                  <span className=\"info-box-text\">Daily Responses</span>\r\n                  <span className=\"info-box-number\">\r\n                    </span>\r\n                </div>\r\n                {/* /.info-box-content */}\r\n              </div>\r\n              {/* /.info-box */}\r\n            </div>\r\n            {/* /.col */}\r\n            {/* fix for small devices only */}\r\n            <div className=\"clearfix hidden-md-up\" />\r\n            <div className=\"col-12 col-sm-6 col-md-3\">\r\n              <div className=\"info-box mb-3\">\r\n                <span class=\"info-box-icon bg-warning\"><i class=\"ion ion-stats-bars\"></i></span>\r\n                <div className=\"info-box-content\">\r\n                  <span className=\"info-box-text\">Weekly Responses</span>\r\n                  <span className=\"info-box-number\">\r\n                   \r\n                  </span>\r\n                </div>\r\n                {/* /.info-box-content */}\r\n              </div>\r\n              {/* /.info-box */}\r\n            </div>\r\n            {/* /.col */}\r\n            <div className=\"col-12 col-sm-6 col-md-3\">\r\n              <div className=\"info-box mb-3\">\r\n                <span class=\"info-box-icon bg-success\"><i class=\"ion ion-stats-bars\"></i></span>\r\n                <div className=\"info-box-content\">\r\n                  <span className=\"info-box-text\">Monthly Responses</span>\r\n                  <span className=\"info-box-number\">\r\n                    \r\n\r\n                  </span>\r\n                </div>\r\n                {/* /.info-box-content */}\r\n              </div>\r\n              {/* /.info-box */}\r\n            </div>\r\n            {/* /.col */}\r\n          </div>\r\n        </div>\r\n     \r\n        </div>\r\n\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Logo from '../cbn.png'\r\n\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n    \r\n        this.state = {\r\n          username: \"\",\r\n          password: \"\",\r\n          loading: false,\r\n          ViewTemplateloading: false,\r\n          message: \"\"\r\n        };\r\n      }\r\n    \r\n      onChangeUsername(e) {\r\n        this.setState({\r\n          username: e.target.value\r\n        });\r\n      }\r\n    \r\n      onChangePassword(e) {\r\n        this.setState({\r\n          password: e.target.value\r\n        });\r\n      }\r\n    \r\n      componentDidMount(){\r\n\r\n        if (localStorage.getItem('user')) {\r\n          return (<Redirect to={'/dashboard'} />)\r\n      }\r\n      }\r\n      handleLogin(e) {\r\n        e.preventDefault();\r\n        \r\n        this.setState({\r\n          message: \"\",\r\n          loading: true,\r\n          ViewTemplateloading: true,\r\n\r\n        });\r\n    \r\n        this.form.validateAll();\r\n    \r\n        if (this.checkBtn.context._errors.length === 0) {\r\n          AuthService.login(this.state.username, this.state.password).then(\r\n            () => {\r\n            window.location = \"/dashboard\"\r\n            },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data.non_field_errors &&\r\n                            error.response.data.non_field_errors) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage,\r\n                        ViewTemplateloading: false,\r\n\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // const {loading} = this.state;\r\n        \r\n        return (\r\n            <div className=\"hold-transition login-page\">\r\n                {this.state.ViewTemplateloading && (\r\n                        <span className=\"\">\r\n                            <div className=\"overlay-wrapper\">\r\n                                <div className=\"overlay \">         \r\n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\r\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\r\n                            </div>\r\n\r\n                        </span>\r\n                     )}\r\n                <div className=\"\">\r\n                    <div className=\"login-logo\">\r\n                    <img src={Logo} height=\"100px\" alt=\"\" />\r\n                        <br />\r\n                        <Link to=\"\"><b>CBN</b> GFSO</Link>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body login-card-body\">\r\n                            <p className=\"login-box-msg\">Sign in to start your session</p>\r\n                            <br />\r\n                            <Form\r\n                                onSubmit={this.handleLogin}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n\r\n                                <div className=\"input-group mb-4\">\r\n\r\n                                    <Input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"username\" value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        validations={[required]}\r\n                                    />\r\n                                    <div className=\" input-group-append\">\r\n                                        <div className=\"input-group-text\">\r\n                                            <span className=\"fas fa-user\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"input-group mb-4\">\r\n                                    <Input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        validations={[required]} />\r\n                                    <div className=\"input-group-append\">\r\n                                        <div className=\"input-group-text\">\r\n                                            <span className=\"fas fa-lock\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        disabled={this.state.loading}\r\n                                    >\r\n                                        {/* {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                        )} */}\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n\r\n                            </Form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {  Link, Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Landing extends Component {\r\n\r\n\r\n    render() {\r\n        if (localStorage.getItem('user')) {\r\n            return (<Redirect to={'/dashboard'} />)\r\n          }\r\n\r\n    return (\r\n\r\n        <div className=\"landing-page sidebar-collapse\"  >\r\n            <link href=\"./assets/css/material-kit.css?v=2.0.7\" rel=\"stylesheet\" />\r\n\r\n            <nav className=\"navbar navbar-transparent navbar-color-on-scroll fixed-top navbar-expand-lg\" color-on-scroll={100} id=\"sectionsNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-translate\">\r\n                    <img src=\"dist/img/cbn.png\" height=\"100px\"  alt=\"\"/>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"sr-only\">Toggle navigation</span>\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"dropdown nav-item\">\r\n                            <Link to=\"/login\" className=\"dropdown-toggle nav-link\" data-toggle=\"\">\r\n                                    <i className=\"nav-icon fas fa-th\" /> Admin\r\n                           </Link>\r\n                            </li></ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"page-header header-filter\" data-parallax=\"true\" style={{ backgroundImage: 'url(\"./assets/img/cbnbg.jpg\")' }}>\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h1 className=\"title\">Statistics Automation Project </h1>\r\n                            <h4> Statistics Data Ingestion Project For the Central Bank of Nigeria\r\n</h4>\r\n                            <hr />\r\n                            <Link to=\"/dashboard\"  className=\"btn btn-success btn-raised btn-lg\">\r\n                                <i className=\"fas fa-tachometer\" />  Dashboard\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"main main-raised\">\r\n                <div className=\"container\">\r\n                    <div className=\"section text-center\">\r\n\r\n\r\n                    </div></div></div></div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n}","import React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nexport default class ViewSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            ViewTemplateloading:false,\n            message: \"\",\n            SurveyList: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/template/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveyTemplate\", JSON.stringify(res.data));\n                }\n                this.setState({\n                    SurveyList: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n            axios.get('https://gfso.chinikiguard.com/locations/api/list/state/',\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n    \n                })\n                .then(res => {\n                    if (res.data) {\n                        localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                    }\n                    // console.log(res.data)\n                })\n    \n           \n    \n    }\n\n    EditTemplate(SurveyList) {\n\n        localStorage.setItem(\"SingleTemplate\", JSON.stringify(SurveyList));\n        this.setState({\n            ViewTemplateloading: true,\n        });\n\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const Temple_pk = SurveyList.pk;\n        // console.log(SurveyList.pk)\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${Temple_pk}/`,\n          {\n            headers:\n            {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${token}`,\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n              'Access-Control-Allow-Credentials': true\n            },\n           \n          })\n          .then(res => {\n            if (res.data) {\n              localStorage.setItem(\"Templatedetails\", JSON.stringify(res.data));\n            }\n            window.location = \"/EditTemplate\"\n\n            // console.log(res.data)\n\n          })\n\n\n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\">                                        \n                    {/* Default box */}\n                    {this.state.ViewTemplateloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <div className=\"card card-solid\">\n                        \n                        <div className=\"card-body pb-0\">\n                            \n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n                                <div className=\"row\">\n                                       \n                                    {this.state.SurveyList.map((surveys,i )=> (\n\n                                        <div className=\"col-12 col-sm-6 col-md-4 d-flex align-items-stretch flex-column\">\n                                            <div className=\"card bg-light d-flex flex-fill\">\n                                         \n                                                <div key={i} className=\"card-header text-muted border-bottom-0\">\n                                                    {surveys.title}\n                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     \n                                                </div>\n                                                <div className=\"card-body pt-0\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-7\">\n                                                            <h2 className=\"lead\" ><b>{surveys.title}</b></h2>\n                                                            <p className=\"text-muted text-sm\"><b>Created by: </b> {surveys.created_by} </p>\n                                                            <p className=\"text-muted text-sm\"><b>Date: </b> {surveys.created} </p>\n                                                        </div>\n                                                        <div className=\"col-5 text-center\">\n                                                            <img src={Logo}  width=\"70px\" height=\"50px\" alt=\"user-avatar\" className=\"img-circle img-fluid\" />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"card-footer\">\n                                                    <div className=\"text-right\">\n                                                                <button \n                                                                 onClick={this.EditTemplate.bind(this, surveys)}\n                                                                 className=\"btn btn-info\"\n                                                                 disabled={this.state.loading}\n\n                                                                 >\n                                        \n                                                                  Review & Deploy Template &nbsp;&nbsp;\n\n                                                                </button>\n                                                        \n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        {/* /.card-body */}\n                        <div className=\"card-footer\">\n                            <nav aria-label=\"Contacts Page Navigation\">\n\n                            </nav>\n                        </div>\n                        {/* /.card-footer */}\n                    </div>\n                    {/* /.card */}\n                </section>\n                <Footer />\n            </div>\n        );\n    }\n}","import { createContext } from 'react';\nexport const FormContext = createContext();\n\n","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n\n// const required = value => {\n//     if (!value) {\n//       return (\n//         <div className=\"alert alert-danger\" role=\"alert\">\n//           This field is required!\n//         </div>\n//       );\n//     }\n//   };\n  \n \nconst TextInput = ({ input_type, pk, name, field_value }) => {\n\n    const  {handleChange}  = useContext(FormContext)\n    return (\n\n        <div className=\"col-4\">\n\n         <label>{name} </label>\n         <input\n         type=\"number\" \n         className=\"form-control\"  \n         placeholder='Amount'\n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         required\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default TextInput\n","import React from 'react'\n\nconst SelectOption = () => {\n\n    return (\n                        <div className=\"col-4\">\n                          <input type=\"text\" className=\"form-control is-valid\"    /> \n                             <br />\n                        </div>\n                    \n\n\n    )\n}\n\nexport default SelectOption","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElement = ({ field: { input_type, pk, name, value, }}) => {\n  \n    switch (input_type) {\n        case 'text_input_':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'number':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n        case 'text_area_':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElement\n","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElementCategory = ({ field_category: { input_type, pk, name, value, }}) => {\n  \n    switch (input_type) {\n        case 'text_input_':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'number':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n        case 'text_area_':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElementCategory\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class CheckSurveyTypeResponse extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLga = this.onChangeLga.bind(this);\n\n        this.state = {\n            statee:\"\",\n            lga:\"\",\n            myloading: false,\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n        };\n    }\n\n    onChangeState(e) {\n        this.setState({\n            statee: e.target.value\n        });\n    }\n    onChangeLga(e) {\n        this.setState({\n            lga: e.target.value\n        });\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n         // console.log(res.data)   \n\n        // check for the value selected and show the related content\n        try {\n            const TargetResponse = JSON.parse(localStorage.getItem('SingleSurvey'));\n\n            const check = TargetResponse.survey_type\n\n            if (check) {\n                this.setState({\n                    statesGov: check.includes(\"SG\"),\n                    lgasGov: check.includes(\"LG\"),\n                    othersGov: check.includes(\"OTHER\"),\n                });\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n\n        localStorage.removeItem(\"state_pk\");\n        localStorage.removeItem(\"lga_pk\");\n\n    }\n    componentDidUpdate() {\n        const state_pk = this.state.statee\n        const lga_pk = this.state.lga\n       \n        if (state_pk) {\n\n        localStorage.setItem(\"state_pk\",state_pk);\n\n        }else if(lga_pk){\n\n            localStorage.setItem(\"lga_pk\",lga_pk);\n\n        }else{\n            return null;\n        }    \n    }\n\n\n    render() {\n\n         //get the list of state and LGAS  in the localStorage\n         const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n         const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov, othersGov } = this.state;\n\n        return (\n            <div>\n                {statesGov && (\n                    <div className=\"col-sm-12\">\n                        <div className=\"form-group\">\n                            <hr/>\n                           <center> <label> Which state are you from</label></center>\n                            <select type=\"text\" className=\"form-control \" placeholder\n                               onChange={this.onChangeState}\n                                required\n                                value={this.state.statee}\n\n                            >\n                                <option value=\"\">Select your State</option>\n                                {List_Of_States && List_Of_States.map(state => (\n                                 <option value= {state.pk}>{state.title}</option>\n\n                             ))}\n                            </select>\n                        </div>\n                    </div>\n\n                )}\n                {lgasGov && (\n                    <div className=\"col-sm-12\">\n                        <div className=\"form-group\">\n                        <center> <label> Which LGA are you from</label></center>\n                            <select type=\"text\" className=\"form-control \" placeholder\n                                onChange={this.onChangeLga}\n                                validations={[required]}\n                                value={this.state.lga}\n\n                            >\n                                <option value=\"\">Select your LGA</option>\n                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                 <option value= {lga.pk}>{lga.title}</option>\n\n                             ))}\n                            </select>\n                        </div>\n                    </div>\n                )}\n                {othersGov && (\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label> Survey Type</label>\n                            <select type=\"text\" className=\"form-control \" placeholder \n                                validations={[required]}\n                            >\n                                <option value=\"\">Select</option>\n                                <option value=\"SG\">SG</option>\n                                <option value=\"LG\">LG</option>\n                                <option value=\"OTHER\">OTHER</option>\n                            </select>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","\nimport { useState, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FormElement from './FormElement';\nimport FormElementCategory from './FormElementCategory';\nimport { FormContext } from './FormContext';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport axios from 'axios'\nimport CheckSurveyTypeResponse from './CheckSurveyTypeResponse';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n\n\n//hey i will use react hook here\nconst CompleteSurvey = (props) => {\n\n  \n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [Get_Survey_Details, Set_Survey_Details] = useState({});\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n\n  // Call_Survey_Details form localStorage\n  const SingleSurvey = JSON.parse(localStorage.getItem('SingleSurvey'));\n  const Call_Survey_Details = SingleSurvey.form;\n\n\n  \n  useEffect(() => {\n    // Call_Survey_Details form localStorage\n    const SingleSurvey = JSON.parse(localStorage.getItem('SingleSurvey'));\n    const Call_Survey_Details = SingleSurvey.form;\n    Set_Survey_Details(Call_Survey_Details)\n       \n\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    setMessage(\"\");\n    setLoading(true);\n\n\n    form.current.validateAll();\n\n    //get the user from the localstorage\n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n    // const state= mytoken\n\n    //get single survey details\n    const SingleSurvey = JSON.parse(localStorage.getItem('SingleSurvey'));\n\n    //get the survey Pk  to send as require survey_pk\n    const SingleSurveyPk = SingleSurvey.pk\n\n    //Save all user responses of the survey  to LocalStorage\n    const to_Send = JSON.parse(localStorage.getItem('Response_to_Send'))\n\n    // returns an array of a given object's own enumerable property values\n    const I_to_Send = Object.values(to_Send);\n\n    //user state_pk\n    const state_pk = localStorage.getItem('state_pk');\n    const lga_pk = localStorage.getItem('lga_pk');\n\n    //Response Body to send to Mallam Ahmad\n    const Responsebody =\n    {\n      survey_pk: SingleSurveyPk,\n      lga_pk: lga_pk,\n      state_pk: state_pk,\n      form: I_to_Send\n    }\n\n    if (checkBtn.current.context._errors.length === 0) {\n\n      console.log(Responsebody);\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/create/response/\", Responsebody,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n\n          if (res.data) {\n            localStorage.setItem(\"Response_Success\", JSON.stringify(res.data));\n          }\n          setMessage(res.data.survey_title);\n          setSuccessful(true);\n        },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data.survey_title &&\n                error.response.data.survey_title) ||\n              error.survey_title ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      // console.log(Get_Survey_Details)\n    }\n  }\n\n  //this handle the change user typing\n  const handleChange = (id, event) => {\n\n    const newElements = { ...Get_Survey_Details }\n    const arr = [...Get_Survey_Details];\n\n\n    //convert the categories objects to array\n    for (let n = 0; n < newElements.length; n++) {\n      arr.push(newElements[n]);\n    }\n\n    //first array to loop through the categories\n    for (let i = 0; i < arr.length; i++) {\n      const category = arr[i];\n\n      //second array to loop through the field\n      for (let j = 0; j < category.fields.length; j++) {\n        const field = category.fields[j];\n\n        //check the pk for each field\n        const { pk } = field;\n        if (id === pk) {\n          field['value'] = event.target.value;\n        }\n      }\n\n      //first array to loop through the SubCategories\n      for (let h = 0; h < category.sub_categories.length; h++) {\n        const SubCategory = category.sub_categories[h];\n\n        //second array to loop through the fields of SubCategory\n        for (let j = 0; j < SubCategory.fields.length; j++) {\n          const FormElementCategory = SubCategory.fields[j];\n          // console.log(FormElementCategory)\n\n\n          //check the pk for each field\n          const { pk } = FormElementCategory;\n          if (id === pk) {\n            FormElementCategory['value'] = event.target.value;\n          }\n        }\n      }\n    }\n    //sub_categories\n\n    //Save the result to the localStorage\n    localStorage.setItem(\"Response_to_Send\", JSON.stringify(Get_Survey_Details));\n  }\n\n  if (!localStorage.getItem('user')) {\n    return (<Redirect to={'/login'} />)\n  }\n\n  return (\n\n    <FormContext.Provider value={{ handleChange }}>\n      <Header />\n      <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n        <Menu /><br />\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {/* <div className=\"card card-\"> */}\n              {/* left column */}\n              <div className=\"col-md-12\">\n                <Form onSubmit={handleSubmit} ref={form}>\n                  {!successful && (\n                    <div>\n                      <center><h2 class=\"mt-4 mb-2\">{SingleSurvey.title}</h2></center>\n                      <CheckSurveyTypeResponse />\n                      {Call_Survey_Details.map(myfield => (\n                        <div className=\"card card-\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">{myfield.name}</h3>\n                          </div>\n                          <div className=\"card-body\">\n                            {/* <h6 className=\"\">{myfield.type}</h6> */}\n                            <div className=\"row\">\n                              {\n                                myfield ? myfield.fields.map((field, i) => <FormElement key={i} field={field} />)\n                                  : null\n                              }\n                            </div>\n                          </div>\n                          {myfield.sub_categories.map(subCategory => (\n                            <div>\n                              <h6 className=\"\">{subCategory.name}</h6>\n                              <div className=\"col-12\">\n                                <div className=\"row\">\n                                  {\n                                    subCategory ? subCategory.fields.map((field_category, i) => <FormElementCategory key={i} field_category={field_category} />)\n                                     : null\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                      <div className=\"form-group\">\n                        {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\n                        <center> <button className=\"btn btn-primary btn-lg \" disabled={loading}>\n                          {loading && (\n                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                          )}\n                          <span>Submit</span>\n                        </button>\n                        </center>\n                      </div>\n                    </div>\n                  )}\n                  <h3>\n                    <center>\n                      {message && (\n                        <div className=\"form-group\">\n                          <div\n                            className={\n                              successful ? \"alert alert-success\" : \"alert alert-danger\"\n                            }\n                            role=\"alert\"\n                          >\n                            {message}\n                          </div>\n                        </div>\n                      )}\n                    </center>\n\n                  </h3>\n\n                  <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n              </div>\n\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </FormContext.Provider>\n  );\n}\n\nexport default CompleteSurvey;\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\nexport default class CreateNewUser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeLG = this.onChangeLG.bind(this);\n    this.onChangeState = this.onChangeState.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeDob = this.onChangeDob.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeBranch = this.onChangeBranch.bind(this);\n    this.onChangeDesignation = this.onChangeDesignation.bind(this);\n\n\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      address: \"\",\n      lga: \"\",\n      states: \"\",\n      dob: \"\",\n      email: \"\",\n      phone_number: \"\",\n      successful: false,\n      message: \"\",\n      loading: false,\n      Lgaloading:false,\n      branch:\"\",\n      designation:\"\"\n\n    };\n  }\n\n\n  componentDidMount() {\n    \n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n    //call the States and LGAS at the first \n    const state = \"Ahmad loophole\";\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n        }\n        // console.log(res.data)                  \n\n      })\n      axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n        }\n      }); \n      axios.get(`https://gfso.chinikiguard.com/accounts/api/branch/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n       \n      },\n    )\n      .then(res => {\n        this.setState({\n          BranchList: res.data,\n      });\n      });\n      axios.get(`https://gfso.chinikiguard.com/accounts/api/designation/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n       \n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"designations\", JSON.stringify(res.data));\n      }\n        this.setState({\n          DesignationList: res.data,\n      });\n      });\n\n\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    // const GetUsers = JSON.parse(localStorage.getItem('Users'));\n    const list_of_lga = JSON.parse(localStorage.getItem('List_Of_Lga'))\n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n\n      // const Lgas = list_of_lga.filter(item => item.state === statepk);\n      // localStorage.setItem(\"LGAS\", JSON.stringify(Lgas));\n     \n      try {\n        if (prevState.states !== this.state.states) {\n          const statepk = this.state.states\n\n          if(statepk){\n            this.setState({\n              \n              Lgaloading: true\n          });\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n              headers:\n              {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n              },\n              params:\n              {\n                state_pk: statepk\n              }\n            },\n          )\n            .then(res => {\n\n                this.setState({\n                  Lgaloading: false,\n                  Lgas: res.data,\n              });\n            \n            });\n          }\n          \n        }\n  \n      } catch (e) {\n  \n        console.log(e);\n      }\n    \n   \n\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      first_name: e.target.value\n    });\n  }\n  onChangeLastName(e) {\n    this.setState({\n      last_name: e.target.value\n    });\n  }\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value\n    });\n  }\n  onChangeLG(e) {\n    this.setState({\n      lga: e.target.value\n    });\n  }\n  onChangeState(e) {\n    this.setState({\n      states: e.target.value\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n  onChangeDob(e) {\n    this.setState({\n      dob: e.target.value\n    });\n  }\n  onChangePhoneNumber(e) {\n    this.setState({\n      phone_number: e.target.value\n    });\n  }\n  onChangeDesignation(e) {\n    this.setState({\n      designation: e.target.value\n    });\n  }\n  onChangeBranch(e) {\n    this.setState({\n      branch: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false,\n      loading: true\n    });\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.createNewUser(\n        this.state.username,\n        this.state.password,\n        this.state.first_name,\n        this.state.last_name,\n        this.state.address,\n        this.state.lga,\n        this.state.states,\n        this.state.dob,\n        this.state.email,\n        this.state.phone_number,\n\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n          window.location = \"/register\"\n\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data.detail &&\n              error.response.data.detail) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n\n  }\n\n\n\n  render() {\n\n    if (!localStorage.getItem('user')) {\n\n      return (<Redirect to={'/dashboard'} />)\n    }\n   \n    // const { loading } = this.state;\n\n    const list_of_state = JSON.parse(localStorage.getItem('List_Of_State'))\n    const list_of_lga = JSON.parse(localStorage.getItem('LGAS'))\n    // console.log(list_of_lga);\n    const Users = JSON.parse(localStorage.getItem('Users'))\n\n\n\n\n    return (\n\n      <div className=\"hold-transition login-page\">\n                {this.state.ViewTemplateloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <div className=\"\">\n                    <div className=\"login-logo\">\n                    <img src={Logo} height=\"100px\" alt=\"\" />\n                        <br />\n                        <Link to=\"\"><b>CBN</b> GFSO</Link>\n                    </div>\n                    <div className=\"col-12\">\n\n                    <div className=\"card-\">\n                        <div className=\"card-body login-card-body\">\n                            {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                            <br />\n                          \n                <Form onSubmit={this.handleRegister} ref={c => { this.form = c; }} className=\"form\" id=\"\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* text input */}\n                      <div className=\"form-group\">\n                        <label>First Name</label>\n                        <Input type=\"text\" id=\"firstname\" className=\"form-control\" placeholder=\"first name\" value={this.state.first_name}\n                          onChange={this.onChangeFirstName}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Last Name</label>\n                        <Input type=\"text\" id=\"lastname\" className=\"form-control\" placeholder=\"last name\" value={this.state.last_name}\n                          onChange={this.onChangeLastName}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* textarea */}\n                      <div className=\"form-group\">\n                        <label>Email</label>\n                        <Input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email}\n                          onChange={this.onChangeEmail}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Phone Number</label>\n                        <Input type=\"tel\" id=\"phonenumber\" className=\"form-control\" placeholder=\"Phone number\" value={this.state.phone_number}\n                          onChange={this.onChangePhoneNumber}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* text input */}\n                      <div className=\"form-group\">\n                        <label>Address</label>\n                        <Textarea type=\"text\" id=\"address\" className=\"form-control\"\n                          placeholder=\"Address\" value={this.state.address}\n                          onChange={this.onChangeAddress} validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n\n                        <label>Date of birth</label>\n\n                        <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                          value={this.state.dob}\n                          onChange={this.onChangeDob}\n\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>State</label>\n                        <Select value={this.state.states}\n                          onChange={this.onChangeState}\n                          validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n                          <option value>Select</option>\n                          {list_of_state.map(state => (\n\n                            <option value={state.pk}>{state.title}</option>\n\n                          ))}\n\n                        </Select>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Lga</label>\n                        {this.state.Lgaloading && (\n                        <span className=\"spinner-grow spinner-grow-sm\"></span>\n                      )}\n                        <Select value={this.state.lga}\n                          onChange={this.onChangeLG}\n                          validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n                          \n                          <option > Select  </option>\n                          {this.state.Lgas && this.state.Lgas.map(lga => (\n                            <option value={lga.pk}>{lga.title}</option>\n                          ))}\n                        </Select>\n                       \n\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                  <div className=\"col-sm-6\">\n\n                  <div className=\"form-group\">\n                  <label>Branch</label>\n\n                  <Select\n                    className=\"form-control\"\n                    id=\"exampleFormControlSelect9\"\n                    validations={[required]}\n                    onChange={this.onChangeBranch}\n                    value={this.state.branch}\n                  >\n                    <option value=\"\">--select--</option>\n\n                    {this.state.BranchList && this.state.BranchList.map(branch => (\n\n                      <option value={branch.pk}>{branch.name}</option>\n\n                    ))}\n\n                  </Select>\n                  </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n\n                   <div className=\"form-group\">\n                   <label>Designation</label>\n\n                  <Select\n                    className=\"form-control\"\n                    id=\"exampleFormControlSelect9\"\n                    validations={[required]}\n                    onChange={this.onChangeDesignation}\n                    value={this.state.designation}\n                  >\n                    <option value=\"\">--select--</option>\n\n                    {this.state.DesignationList && this.state.DesignationList.map(Designation => (\n\n                      <option value={Designation.pk}>{Designation.title}</option>\n\n                    ))}\n\n                  </Select>\n                  </div>\n                  </div>\n\n\n                  </div>\n                                       \n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Username</label>\n                        <Input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Username\"\n                          value={this.state.username}\n                          onChange={this.onChangeUsername}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Password</label>\n                        <Input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"password\" value={this.state.password}\n                          onChange={this.onChangePassword}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button\n                      className=\"btn btn-primary btn-lg float-right\"\n                      disabled={this.state.loading}\n                    >\n                      {this.state.loading && (\n                        <span className=\"spinner-border spinner-border-sm\"></span>\n                      )}\n                      <span>Register</span>\n                    </button>\n                  </div>\n                  <center>\n                    {this.state.message && (\n                      <div className=\"form-group\">\n                        <div\n                          className={\n                            this.state.successful\n                              ? \"alert alert-success\"\n                              : \"alert alert-danger\"\n                          }\n                          role=\"alert\"\n                        >\n                          {this.state.message}\n                        </div>\n                      </div>\n                    )}\n                  </center>\n\n                  <CheckButton\n                    style={{ display: \"none\" }}\n                    ref={c => {\n                      this.checkBtn = c;\n                    }}\n                  />\n\n                </Form>\n              \n                        </div>\n\n                        </div>\n                        </div>\n\n                </div>\n            </div>\n\n     \n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\nexport default class EditTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n        this.onChangeSurvey = this.onChangeSurvey.bind(this);\n\n        this.state = {\n            loading: false,\n            message: \"\",\n            myloading: false,\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: false,\n            survey:\"\"\n\n        };\n    }\n    \n    \n    onChangeSurvey(e) {\n        this.setState({\n            survey: e.target.value\n        });\n      }\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: true\n        });\n\n        \n            //check auth user\n            const mytoken = JSON.parse(localStorage.getItem('user'));\n            const token = mytoken.token;\n\n            //get template details\n            const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n            const ExtractTemplatePk = ExtractTemplate.pk;\n\n            //loop through the json\n            const formList = [];\n            for (let i = 0; i < ExtractTemplate.form.length; i++) {\n                formList.push(ExtractTemplate.form[i]);\n            }\n             // newly created json\n            const body =\n            {\n                survey_template_pk:ExtractTemplatePk,\n                survey_pk: this.state.survey,\n                form: formList,\n                \n            } \n            // console.log(body);\n            this.form.validateAll();\n            if (this.checkBtn.context._errors.length === 0) {\n    \n            axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        AdoptSurveysuccessful: true,\n                    });\n                    window.location = \"/ViewSurvey\"\n                    if (res.data) {\n                        localStorage.setItem(\"AdoptedSurvey\", JSON.stringify(res.data));\n                    }\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.detail &&\n                                error.response.data.detail) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n\n    AddField(Filter_with_name) {\n\n     \n        //select Target category\n        localStorage.setItem(\"Category_to_AddField\", JSON.stringify(Filter_with_name));\n        localStorage.setItem(\"MyCategoryName\", JSON.stringify(Filter_with_name.name));\n        window.location = \"/CategoryView\"\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes?for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurveyToUser\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    ApprovedSurveyToUser: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n    }\n\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const SingleTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n        const SingleTemplateCategories = SingleTemplate.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {SingleTemplateCategories&&SingleTemplateCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                <button\n                                                    className=\"btn btn-primary btn-lg\"\n                                                    onClick={this.AddField.bind(this, Templatefields)}\n                                                    value={`${Templatefields.name}`}\n                                                >\n                                                    Add Field&nbsp;&nbsp;\n                                                  <i className=\"fas fa-plus\" />\n                                                </button>\n                                            </div>\n                                            {/* /.card-body */}\n                                        </div>\n                                    ))}\n                                    {/* /.card */}\n                                    {SingleTemplateCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                        <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} > \n\n                                                    <div className=\"form-group\">\n                                                        <Select\n                                                            className=\"form-control\"\n                                                            id=\"exampleFormControlSelect9\"\n                                                              validations={[required]}\n                                                            onChange={this.onChangeSurvey}\n                                                            value={this.state.survey}\n                                                        >\n                                                        <option value=\"\">--select--</option>\n\n                                                            {this.state.ApprovedSurveyToUser && this.state.ApprovedSurveyToUser.map(survey => (\n\n                                                                <option value={survey.pk}>{survey.title}</option>\n\n                                                            ))}\n\n                                                        </Select>\n                                                    </div>\n                                       \n                                        <center>\n\n                                                  <button\n                                                      disabled={this.state.AdoptSurveyloading}\n                                                      className=\"btn btn-success btn-lg \"\n                                                  >\n\n                                                      {this.state.AdoptSurveyloading && (\n                                                          <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                      )}\n                                                      <span>Develop Template</span>\n                                                  </button>\n                                                  </center>\n\n                                              <center>\n                                              {this.state.AdoptSurveymessage && (\n                                                  <div className=\"pb-5\" >\n                                                      <div\n                                                          className={\n                                                              this.state.AdoptSurveysuccessful\n                                                                  ? \"alert alert-custom alert-outline-success fade show mb-5\"\n                                                                  : \"alert alert-custom alert-outline-danger fade show mb-5\"\n                                                          }\n                                                          role=\"alert\"\n                                                      >\n                                                          <h3 > {this.state.AdoptSurveymessage}</h3>\n                                                      </div>\n                                                  </div>\n                                              )}\n                                              </center>\n\n                                          <CheckButton\n                                              style={{ display: \"none\" }}\n                                              ref={c => {\n                                                  this.checkBtn = c;\n                                              }}\n                                          />\n                                          \n                                      </Form> \n                                        \n                                          \n                                       \n                                        \n                                        </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class Surveys extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditTemplate(Surveys) {\n\n        //\n        localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const singleSurveyPk = Surveys.pk;\n        console.log(Surveys.pk)\n\n        // const body =\n        // {\n        // survey: SurveyList.pk,\n        // }\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                console.log(res.data)\n                // window.location = \"/CompleteSurvey\"\n\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        <Link className=\"btn btn-primary btn-sm\" to=\"/\">\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     More\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n\n\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\n\n\n\n\nexport default class AvailableSurvey extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = AuthService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&for_user=yes\",\n        {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n        //call the States and LGAS at the first \n        const state = \"Ahmad loophole\";\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n            });\n    }\n\n    Fill_Survey(Surveys) {\n        localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const singleSurveyPk = Surveys.pk;\n        console.log(Surveys.pk)\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n        \n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                console.log(res.data)\n\n            })\n        window.location = \"/CompleteSurvey\"\n    }\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\">\n                    {/* Default box */}\n                    <div className=\"card card-solid\">\n                        <div className=\"card-body pb-0\">\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"row\">\n                                    {this.state.Surveys.map(surveys => (\n\n                                        <div className=\"col-md-4\">\n                                            {/* Widget: user widget style 1 */}\n                                            <div className=\"card card-widget widget-user\">\n                                                {/* Add the bg color to the header using any of the bg-* classes */}\n                                                <div className=\"widget-user-header \" style={{ borderRadius: '0.25em', textAlign: 'center', color: 'green', border: '1px solid green', padding: '0.5em' }}>\n                                                    {this.state.warningLoad ? (\n                                                        <>\n\n                                                            <div className=\"widget-user float-left\">\n                                                                <i className=\"fas fa-bullhorn\" />\n\n                                                                <center>\n\n                                                                    <Spinner\n                                                                        as=\"span\"\n                                                                        animation=\"grow\"\n                                                                        size=\"lg\"\n                                                                        role=\"status\"\n                                                                        aria-hidden=\"true\"\n                                                                        variant=\"warning\"\n                                                                    />\n                                                                </center>\n                                                            </div>\n                                                        </>\n                                                    ) : (\n                                                        <h2 className=\"lead\"><b></b></h2>\n\n                                                    )}\n\n                                                    <Link\n                                                        //  to=\"/EditTemplate\"\n                                                        onClick={this.Fill_Survey.bind(this, surveys)}\n                                                        className=\"btn btn float-right\"\n                                                        disabled={this.state.loading}\n                                                        style={{ borderRadius: '0.25em', textAlign: 'center', color: 'blue', border: '1px solid blue', padding: '0.5em' }}\n\n                                                    >\n                                                        Fill Survey &nbsp;&nbsp;\n                                                                   {/* <i className=\"fas fa-check\" /> */}\n\n                                                    </Link>\n                                                    <br />\n                                                    <h5 className=\"widget-user-title\" >{surveys.title}</h5>\n                                                    <hr />\n                                                    <h5 className=\"widget-user-image\">{surveys.survey_type}</h5>\n                                                </div>\n\n                                                <div className=\"card-footer\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-4 border-right\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.status}</h5>\n                                                                <span className=\"description-text\">Status</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                        <div className=\"col-sm-4 border-right\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.start_date}</h5>\n                                                                <span className=\"description-text\">Start Date</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                        <div className=\"col-sm-4\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.due_date}</h5>\n                                                                <span className=\"description-text\">Due Date</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                    </div>\n                                                    {/* /.row */}\n                                                </div>\n                                            </div>\n                                            {/* /.widget-user */}\n                                        </div>\n\n\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        {/* /.card-body */}\n                        <div className=\"card-footer\">\n                            <nav aria-label=\"Contacts Page Navigation\">\n                                <ul className=\"pagination justify-content-center m-0\">\n                                    {/* <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">1</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">4</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">5</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">6</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">7</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">8</a></li> */}\n                                </ul>\n                            </nav>\n                        </div>\n                        {/* /.card-footer */}\n                    </div>\n                    {/* /.card */}\n                </section>\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React from 'react';\nimport { ReactFormGenerator, ElementStore } from 'react-form-builder2';\nimport axios from \"axios\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { Redirect } from 'react-router-dom';\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Select from \"react-validation/build/select\";\n\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Demobar extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeQuarter = this.onChangeQuarter.bind(this);\n    this.onChangeStatus = this.onChangeStatus.bind(this);\n    this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\n    this.onChangeDueDate = this.onChangeDueDate.bind(this);\n    this.onChangeYear = this.onChangeYear.bind(this);\n    this.onChangeState = this.onChangeState.bind(this);\n    this.onChangeLgas = this.onChangeLgas.bind(this);\n    // _onSubmit\n\n    this.state = {\n      data: [],\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false,\n      category: \"\",\n      title: \"\",\n      quarter: \"\",\n      status: \"\",\n      year: \"\",\n      survey_type: \"\",\n      start_date: \"\",\n      due_date: \"\",\n      loading: false,\n      message: \"\",\n      statesGov: false,\n      lgasGov: false,\n      othersGov: false,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: true\n    };\n\n    const update = this._onChange.bind(this);\n    ElementStore.subscribe(state => update(state.data));\n  }\n\n  onChangeState(e) {\n    this.setState({\n      states: e.target.value\n    });\n  }\n  onChangeLgas(e) {\n    this.setState({\n      lgas: e.target.value\n    });\n  }\n\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeQuarter(e) {\n    this.setState({\n      quarter: e.target.value\n    });\n  }\n\n  onChangeYear(e) {\n    this.setState({\n      year: e.target.value\n    });\n  }\n  onChangeStartDate(e) {\n    this.setState({\n      start_date: e.target.value\n    });\n  }\n  onChangeDueDate(e) {\n    this.setState({\n      due_date: e.target.value\n    });\n  }\n  onChangeSurveyType(e) {\n    this.setState({\n      survey_type: e.target.value\n    });\n  }\n\n  onChangeStatus(e) {\n    this.setState({\n      status: e.target.value\n    });\n  }\n\n\n  showPreview() {\n\n\n    this.setState({\n\n      previewVisible: true,\n    });\n  }\n\n  showShortPreview() {\n    this.setState({\n      shortPreviewVisible: true,\n    });\n  }\n\n  showRoPreview() {\n    this.setState({\n      roPreviewVisible: true,\n    });\n  }\n\n  closePreview() {\n    this.setState({\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false,\n    });\n  }\n\n  _onChange(data) {\n    this.setState({\n      data,\n    });\n  }\n\n  _onSubmit = (data) => {\n\n\n    this.setState({\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: true\n  });\n\n    //login user token\n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n\n    // Existing template from localStorage\n    const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n    const ExtractTemplatePk = ExtractTemplate.pk;\n\n    //his  fields from template\n    const twist_result = [];\n    for (let i = 0; i < ExtractTemplate.form.length; i++) {\n      twist_result.push(ExtractTemplate.form[i]);\n    }\n\n    localStorage.setItem(\"result\", JSON.stringify(twist_result));\n\n\n    // my custom fields from formbuilder\n    const fieldsList = [];\n    for (let i = 0; i < data.length; i++) {\n      fieldsList.push(data[i]);\n    }\n\n    // newly fields added to selected category from user\n    const MyCategoryName = JSON.parse(localStorage.getItem('MyCategoryName'));\n    const result = twist_result.find(({ name }) => name === MyCategoryName);\n\n    // const myFields = result.fields;\n    // const fields = myFields.concat(fieldsList);\n    // console.log(\"fields:\", fields);\n    // console.log(\"result:\", result);\n    // modified Array objects from template\n    const modifiedObj = twist_result.filter(item => item.name !== MyCategoryName);\n    // console.log(\"modifiedObj:\", modifiedObj);\n\n\n\n    const fieldsObj = modifiedObj.concat(result);\n    // console.log(\"fieldsObj:\", fieldsObj);\n    const last_element = fieldsObj[fieldsObj.length - 1];\n    // console.log(\"last_element:\", last_element);\n    const final = last_element.fields;\n    const name = last_element.name;\n    const economic_code = last_element.economic_code;\n    const heading = last_element.heading;\n    const type = last_element.type;\n    const finalup = final.concat(data);\n    // console.log(\"final:\", finalup);\n    // console.log(\"name:\", name);\n\n    //convert the string to number from the [go] array i save to  localStorage for State\n    const stop_here_for_state = localStorage.getItem('Checked_State');\n    const jasus_for_state = stop_here_for_state\n\n    //convert the string to number from the [go] array i save to localStorage for LGA\n    const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n    const jasus_for_lga = stop_here_for_lga\n\n    //set the states user selected\n    const states =\n      jasus_for_state.match(/\\d+/g).map(Number)\n\n    //set the LGAs user selected\n    const lgas =\n      jasus_for_lga.match(/\\d+/g).map(Number)\n\n    const my_category = {\n      name,\n      economic_code,\n      heading,\n      type,\n      fields:\n        finalup,\n\n    }\n    // console.log(\"my_category:\", my_category);\n\n    const form = modifiedObj.concat(my_category)\n    // console.log(\"twist_result:\", twist_result);\n\n\n\n\n    // final result to  be send to the endpoint\n    const body =\n    {\n      survey_template_pk: ExtractTemplatePk,\n      title: this.state.title,\n      quarter: this.state.quarter,\n      year: this.state.year,\n      survey_type: this.state.survey_type,\n      status: this.state.status,\n      start_date: this.state.start_date,\n      due_date: this.state.due_date,\n      form,\n      states,\n      lgas\n\n    }\n\n    console.log(body);\n\n    this.form.validateAll();\n            if (this.checkBtn.context._errors.length === 0) {\n    \n            axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        AdoptSurveysuccessful: true,\n\n                    });\n\n                    if (res.data) {\n                        localStorage.setItem(\"AdopteSurveyField\", JSON.stringify(res.data));\n                    }\n\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.detail &&\n                                error.response.data.detail) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n  componentDidMount() {\n\n    if (!localStorage.getItem('user')) {\n\n      return (<Redirect to={'/login'} />)\n    }\n    //reset to default state\n    const Checked_State = 1\n    localStorage.setItem(\"Checked_State\", Checked_State);\n    //reset to default state\n    const Checked_LGA = 1\n    localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n    //call the States and LGAS at the first \n    const state = \"Ahmad loophole\";\n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n        }\n        // console.log(res.data)                  \n\n      })\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n        }\n        // console.log(res.data)   \n      })\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    // reset to default state\n    const Checked_State = [1, 1, 1]\n    localStorage.setItem(\"Checked_State\", Checked_State);\n    const Checked_LGA = [1, 1, 1]\n    localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n    // check for the value selected and show the related content\n    try {\n      if (prevState.survey_type !== this.state.survey_type) {\n        const state = this.state.survey_type\n        if (state) {\n          this.setState({\n            statesGov: state.includes(\"SG\"),\n            lgasGov: state.includes(\"LG\"),\n            othersGov: state.includes(\"OTHER\"),\n          });\n        }\n      }\n\n    } catch (e) {\n\n      console.log(e);\n    }\n  }\n  render() {\n\n    let modalClass = 'modal fade';\n    if (this.state.previewVisible) {\n      modalClass += ' show d-block';\n    }\n\n    let shortModalClass = 'modal short-modal';\n    if (this.state.shortPreviewVisible) {\n      shortModalClass += ' show d-block';\n    }\n\n    let roModalClass = 'modal ro-modal';\n    if (this.state.roPreviewVisible) {\n      roModalClass += ' show d-block';\n    }\n    //get the list of state and LGAS  in the localStorage\n    const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n    const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n    //for checking the right selection either SG or LG\n    const { statesGov, lgasGov } = this.state;\n\n    // const SingleTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n\n    return (\n\n      <div className=\"clearfix\" style={{ margin: '10px', width: '70%' }}>\n        {/* <h4 className=\"float-left\">Preview</h4> */}\n\n        <section className=\"content-header\">\n\n          <div className=\"container-fluid\">\n            {/* general form elements disabled */}\n\n            {/* /.card */}\n\n            <br />\n            <button className=\"btn btn-primary btn-lg float-right\" style={{ marginRight: '10px' }} onClick={this.showPreview.bind(this)}>Preview & Save </button>\n            <br />\n            {this.state.previewVisible &&\n              <div className={modalClass} id=\"modal-xl\">\n                <div className=\"modal-dialog modal-xl\">\n                  <div className=\"modal-content\">\n                    <center>\n                      {this.state.AdoptSurveymessage && (\n\n                        <div className=\"pb-5\" >\n                          <div\n                            className={\n                              this.state.AdoptSurveysuccessful\n                                ? \"alert alert-custom alert-outline-success fade show mb-5\"\n                                : \"alert alert-custom alert-outline-danger fade show mb-5\"\n                            }\n                            role=\"alert\"\n                          >\n                            {this.state.AdoptSurveymessage}\n                          </div>\n                        </div>\n\n                      )}</center>\n                    <div className=\"row\">\n\n                      <div className=\"col-md-6\">\n                        <div className=\"card card\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">Survey Details</h3>\n                          </div>\n                          {/* /.card-header */}\n                          <div className=\"card-body\">\n                            <Form onSubmit={this._onSubmit} ref={c => { this.form = c; }} className=\"form\" id=\"\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                  <div className=\"form-group\">\n                                    <label> Title</label>\n                                    <Input type=\"text\" className=\"form-control \" placeholder\n                                      value={this.state.title}\n                                      onChange={this.onChangeTitle}\n                                      validations={[required]}\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                  <div className=\"form-group\">\n                                    <label> Quarter</label>\n                                    <Select type=\"text\" className=\"form-control \" placeholder\n                                      value={this.state.quarter}\n                                      onChange={this.onChangeQuarter}\n                                      validations={[required]}\n                                    >\n                                      <option value=\"\">Select</option>\n                                      <option value=\"q1\">Q1</option>\n                                      <option value=\"q2\">Q2</option>\n                                      <option value=\"q3\">Q3</option>\n                                      <option value=\"q4\">Q4</option>\n                                    </Select>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                  {/* text input */}\n                                  <div className=\"form-group\">\n\n                                    <label> Start date</label>\n\n                                    <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                      value={this.state.start_date}\n                                      onChange={this.onChangeStartDate}\n                                      validations={[required]}\n\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                  <div className=\"form-group\">\n                                    <label> Due Date</label>\n\n                                    <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                      value={this.state.due_date}\n                                      onChange={this.onChangeDueDate}\n                                      validations={[required]}\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                  <div className=\"form-group\">\n\n                                    {/* text input */}\n                                    <label> Year</label>\n\n                                    <Input type=\"number\" className=\"form-control \" placeholder\n                                      value={this.state.year}\n                                      onChange={this.onChangeYear}\n                                      validations={[required]}\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                  <div className=\"form-group\">\n                                    <label> Survey Type</label>\n                                    <Select type=\"text\" className=\"form-control \" placeholder\n                                      value={this.state.survey_type}\n                                      onChange={this.onChangeSurveyType}\n                                      validations={[required]}\n                                    >\n                                      <option value=\"\">Select</option>\n                                      <option value=\"SG\">SG</option>\n                                      <option value=\"LG\">LG</option>\n                                      <option value=\"OTHER\">OTHER</option>\n                                    </Select>\n                                  </div>\n                                </div>\n                              </div>\n                              {statesGov && (\n                                <div className=\"table-container\">\n                                  <table className=\"table\">\n                                    <thead>\n                                      <tr>\n                                        <th>STATE</th>\n\n                                        <th> Check all\n                                <MultiselectCheckbox\n                                            checkboxes=\".table .select-checkbox\"\n                                            sync=\".table .row\"\n                                            onNotAllChecked={(selectedMap) => {\n                                              const fieldsList = [];\n                                              for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                fieldsList.push(selectedMap.orderedByI()[i].value);\n                                              }\n                                              //    const go = fieldsList.join()\n                                              localStorage.setItem(\"Checked_State\", fieldsList);\n                                              // console.log(\" me Checked_State\",fieldsList);\n                                              // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                            }}\n                                            onAllChecked={(selectedMap) => {\n                                              // console.log(\"All checked\", selectedMap.orderedByI());\n                                              const fieldsList = [];\n                                              for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                fieldsList.push(selectedMap.orderedByI()[i].value);\n                                              }\n                                              //    const go = fieldsList.join()\n                                              localStorage.setItem(\"Checked_State\", fieldsList);\n                                              // console.log(\" me Checked_State\",fieldsList);\n                                            }}\n                                            onAllUnchecked={(selectedMap) => {\n                                              const fieldsList = [];\n                                              for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                fieldsList.push(selectedMap.orderedByI()[i].value);\n                                              }\n                                              //    const go = fieldsList.join()\n                                              localStorage.setItem(\"Checked_State\", fieldsList);\n                                              // console.log(\" me Checked_State\",fieldsList);\n                                              // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                            }}\n\n                                          />\n                                        </th>\n                                      </tr>\n                                    </thead>\n                                    <tbody className=\"table-body\">\n                                      {List_Of_States.map(state => (\n                                        <tr>\n                                          <td>{state.title}</td>\n                                          <td>\n                                            <input\n                                              type=\"checkbox\"\n                                              className=\"select-checkbox\"\n                                              value={`${state.pk}`}\n                                              // onChange={this.onChangeState}\n                                              validations={[required]}\n                                            />\n                                          </td>\n                                        </tr>\n                                      ))}\n\n                                    </tbody>\n                                  </table>\n                                </div>\n                              )}\n                              {lgasGov && (\n                                <div className=\"table-container\">\n                                  <table className=\"table\">\n                                    <thead>\n                                      <tr>\n                                        <th>LGA</th>\n\n                                        <th> Check all\n                                                                     <MultiselectCheckbox\n                                            checkboxes=\".table .select-checkbox\"\n                                            sync=\".table .row\"\n                                            onNotAllChecked={(selectedMap) => {\n                                              const fieldsList = [];\n                                              for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                fieldsList.push(selectedMap.orderedByI()[i].value);\n                                              }\n                                              //    const go = fieldsList.join()\n                                              localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                              // console.log(\" me Checked_LGA\",fieldsList);\n                                              // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                            }}\n                                            onAllChecked={(selectedMap) => {\n                                              // console.log(\"All checked\", selectedMap.orderedByI());\n                                              const fieldsList = [];\n                                              for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                fieldsList.push(selectedMap.orderedByI()[i].value);\n                                              }\n                                              //    const go = fieldsList.join()\n                                              localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                              // console.log(\" me Checked_LGA\",fieldsList);\n                                            }}\n                                            onAllUnchecked={(selectedMap) => {\n                                              const fieldsList = [];\n                                              for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                fieldsList.push(selectedMap.orderedByI()[i].value);\n                                              }\n                                              //    const go = fieldsList.join()\n                                              localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                              // console.log(\" me Checked_LGA\",fieldsList);\n                                              // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                            }}\n\n                                          />\n                                        </th>\n                                      </tr>\n                                    </thead>\n                                    <tbody className=\"table-body\">\n                                      {List_Of_lgas && List_Of_lgas.map(lga => (\n                                        <tr>\n                                          <td>{lga.title}</td>\n                                          <td>\n                                            <input\n                                              type=\"checkbox\"\n                                              className=\"select-checkbox\"\n                                              value={`${lga.pk}`}\n                                              // onChange={this.onChangeLgas}\n                                              validations={[required]}\n                                            />\n                                          </td>\n                                        </tr>\n                                      ))}\n\n                                    </tbody>\n                                  </table>\n                                </div>\n\n                              )}\n                              <center>\n                                {this.state.AdoptSurveymessage && (\n\n                                  <div className=\"pb-5\" >\n                                    <div\n                                      className={\n                                        this.state.AdoptSurveysuccessful\n                                          ? \"alert alert-custom alert-outline-success fade show mb-5\"\n                                          : \"alert alert-custom alert-outline-danger fade show mb-5\"\n                                      }\n                                      role=\"alert\"\n                                    >\n                                      <h3 > {this.state.AdoptSurveymessage}</h3>\n                                    </div>\n                                  </div>\n                                )}</center>\n                              {/* <center>\n\n                                                    <div className=\"row\">\n                                                        <button\n                                                            onClick={this.AdoptSurvey.bind(this)}\n                                                            className=\"btn btn-success btn-lg float-right\"\n                                                        >\n                                                            Adopt Template &nbsp;&nbsp;\n                                                                   <i className=\"fas fa-check\" />\n\n                                                        </button>\n                                                    </div>\n                                                </center> */}\n\n                              <CheckButton\n                                style={{ display: \"none\" }}\n                                ref={c => {\n                                  this.checkBtn = c;\n                                }}\n                              />\n                            </Form>\n\n                          </div>\n                          {/* /.card-body */}\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <ReactFormGenerator\n                          download_path=\"\"\n                          back_action=\"/\"\n                          back_name=\"Back\"\n                          answer_data={{}}\n                          action_name=\"Save\"\n                          form_action=\"https://gfso.chinikiguard.com/survey/api/add/survey/fields/\"\n                          form_method=\"POST\"\n                          onSubmit={this._onSubmit}\n                          variables={this.props.variables}\n                          data={this.state.data} />\n\n                      </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n\n            {this.state.roPreviewVisible &&\n              <div className={roModalClass}>\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <ReactFormGenerator\n                      download_path=\"\"\n                      back_action=\"/\"\n                      back_name=\"Back\"\n                      answer_data={{}}\n                      action_name=\"Save\"\n                      form_action=\"/\"\n                      form_method=\"POST\"\n                      read_only={true}\n                      variables={this.props.variables}\n                      hide_actions={true} data={this.state.data} />\n\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n\n            {this.state.shortPreviewVisible &&\n              <div className={shortModalClass}>\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <ReactFormGenerator\n                      download_path=\"\"\n                      back_action=\"\"\n                      answer_data={{}}\n                      form_action=\"/\"\n                      form_method=\"POST\"\n                      data={this.state.data}\n                      display_short={true}\n                      variables={this.props.variables}\n                      hide_actions={false} />\n\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </section>\n      </div>\n\n    );\n  }\n}\n","export const JOHN =  ''\r\n","import 'react-form-builder2/dist/app.css';\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Menu from \"./Menu\";\nimport { ReactFormBuilder } from 'react-form-builder2';\nimport Demobar from \"./Demobar\";\nimport * as variables from './variables';\n\n\nexport default class CategoryView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n\n\n        this.state = {\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            loading: false,\n            message: \"\",\n\n        };\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n   \n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false,\n            loading: true,\n            meloading: true\n\n        });\n\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n\n        const responses = JSON.parse(localStorage.getItem('SingleResponse'));\n        const response_data = responses.data;\n        const get_form = response_data.get_form;\n        // console.log(response_data);\n        const value = this.state.title;\n\n\n        // for(const form of get_form) {\n        //   console.log(form.name)\n        // }\n\n        const body =\n        {\n            survey_response_pk: response_data.pk,\n            form:\n\n                [\n                    {\n                        get_form,\n                        value: value\n                    }\n\n                ]\n\n\n        }\n\n        console.log(body);\n\n        axios.post(\"https://gfso.chinikiguard.com/survey/api/add/response/entry/\", body,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"SuccessSurvey\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    message: res.data.detail,\n                    successful: true,\n                    loading: false,\n                    meloading: false\n                });\n\n                console.log(res);\n                console.log(res.data.detail);\n                // window.location = \"/dashboard\"\n            },\n\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data.detail &&\n                            error.response.data.detail) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage,\n                        loading: false,\n                        meloading: false\n                    });\n                })\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        const singleCategory = JSON.parse(localStorage.getItem('Category_to_AddField'));\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {/* left column */}\n                            <div className=\"col-md-6\">\n\n                                {/* general form elements disabled */}\n                                <div className=\"card card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\">{singleCategory.name}</h3>\n                                    </div>\n                                    {/* /.card-header */}\n\n                                    <div className=\"card-body\">\n                                        <br />\n\n                                        <form>\n                                            <div className=\"row\">\n                                                {singleCategory.fields.map(fields => (\n\n                                                    <div className=\"col-4\">\n                                                        <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled id=\"inputSuccess\" />                                                <br />\n                                                    </div>\n                                                ))}\n\n                                            </div>\n                                            {/* input states */}\n                                        </form>\n                                        <br />\n\n\n                                    </div>\n\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                                \n\n                            </div>\n                            {/*/.col (left) */}\n\n\n                            {/* right column */}\n                            <div className=\"col-md-6\">\n\n                                {/* general form elements disabled */}\n                                <div className=\"card card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\"> </h3>\n                                    </div>\n                                    {/* /.card-header */}\n\n                                    <div className=\"card-body\">\n                                        <br />\n\n                                            <ReactFormBuilder />                \n                                            <Demobar variables={variables} />\n\n\n\n                                            {/* input states */}\n                                        <br />\n\n\n                                    </div>\n\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            <br />\n                           \n\n\n\n\n                            </div>\n                            {/*/.col (right) */}\n                        </div>\n                    </div>\n                </section>\n                <Footer />\n            </div>\n\n        );\n    }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\n\n\n\nexport default class ListResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePageClick = this.handlePageClick.bind(this);\n\n        this.state = {\n            offset: 0,\n            tableData: [],\n            orgtableData: [],\n            perPage: 10,\n            currentPage: 0,\n            myloading: true\n        };\n    }\n\n    //pagination\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n    //pagination\n    loadMoreData() {\n        const data = this.state.orgtableData;\n\n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n        this.setState({\n            pageCount: Math.ceil(data.length / this.state.perPage),\n            tableData: slice\n        })\n\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        // const scriptdashboard = document.createElement(\"script\");\n        // scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n        // scriptdashboard.async = true;\n        // document.body.appendChild(scriptdashboard);\n    \n       \n\n        this.Get_State_Data();\n\n    }\n\n    Get_State_Data() {\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/response/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Responses\", JSON.stringify(res.data));\n                }\n                const tdata = res.data;\n                // console.log(res.data.data)   \n\n                const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                this.setState({\n                    pageCount: Math.ceil(tdata.length / this.state.perPage),\n                    orgtableData: tdata,\n                    tableDataForState: slice,\n                    myloading: false\n                })\n            });\n        // console.log(res.data)   \n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                <br />     \n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                        \n                            <div className=\"row\">\n                           \n                                <div className=\"col-12\">\n                                {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Filled Surveys</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                        <div className=\"card-body\">\n                                            <div id=\"example1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\"><div className=\"row\"><div className=\"col-sm-12 col-md-6\">\n                                           </div>\n                                             </div><div className=\"row\"><div className=\"col-sm-12\"><table id=\"example1\" className=\"table table-bordered table-striped dataTable dtr-inline\" role=\"grid\" aria-describedby=\"example1_info\">\n                                                <thead>\n                                                    <tr role=\"row\">\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Browser: activate to sort column ascending\"> Title</th>\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Platform(s): activate to sort column ascending\">Filled by</th>\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Engine version: activate to sort column ascending\">Categories</th>\n                                                    <th className=\"sorting sorting_asc\" tabIndex={0} aria-controls=\"example1\">Action</th>\n\n                                                   </tr>\n                                                </thead>\n                                                <tbody className=\"table-body\">\n                                                    {this.state.tableDataForState && this.state.tableDataForState.map(survey => (\n\n                                                        <tr>\n                                                            <td>{survey.survey_title}</td>\n                                                            <td>\n                                                            {survey.filled_by}\n\n                                                            </td>\n                                                            \n                                                            <td>\n                                                                {survey.get_entries.map(category => (\n                                                                 <td>\n                                                                 {category.name}\n                                                                </td>\n                              \n                                                               ))}\n                                                            </td>\n                                                            <td className=\"project-actions text-right\">\n                                            <Link className=\"btn btn-success btn-sm\" to=\"#\">\n                                                <i className=\"fas fa-folder\">\n                                                </i>\n                View\n              </Link>&nbsp;&nbsp;\n                             \n                                        </td>\n                                                          \n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n                                                <tfoot>\n                                                    \n                                                </tfoot>\n                                               \n                                            </table>\n                                            <ReactPaginate\n                                                    previousLabel={\"prev\"}\n                                                    nextLabel={\"next\"}\n                                                    breakLabel={\"...\"}\n                                                    breakClassName={\"break-me\"}\n                                                    pageCount={this.state.pageCount}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={this.handlePageClick}\n                                                    containerClassName={\"pagination\"}\n                                                    subContainerClassName={\"pages pagination\"}\n                                                    activeClassName={\"active\"} />\n                                            </div>\n                                            </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    )}\n                                </div>\n\n                                 \n                            </div>\n                                                      \n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class ResponseTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePageClick = this.handlePageClick.bind(this);\n\n        this.state = {\n            offset: 0,\n            tableData: [],\n            orgtableData: [],\n            perPage: 10,\n            currentPage: 0,\n            myloading: true\n        };\n    }\n\n    //pagination\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n    //pagination\n    loadMoreData() {\n        const data = this.state.orgtableData;\n\n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n        this.setState({\n            pageCount: Math.ceil(data.length / this.state.perPage),\n            tableData: slice\n        })\n\n    }\n\n    componentDidMount() {\n        // const scriptdashboard = document.createElement(\"script\");\n        // scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n        // scriptdashboard.async = true;\n        // document.body.appendChild(scriptdashboard);\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n        this.Get_State_Data();\n\n    }\n\n    Get_State_Data() {\n\n        const ax = axios.create({\n            baseURL: 'http://localhost:3000/data'\n        })\n        ax.get('response.json')\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ResponsesTable\", JSON.stringify(res.data));\n                }\n                const tdata = res.data;\n                // console.log(res.data.data)   \n\n                const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                this.setState({\n                    pageCount: Math.ceil(tdata.length / this.state.perPage),\n                    orgtableData: tdata,\n                    ResponseTable: slice,\n                    myloading: false\n                })\n            });\n        // console.log(res.data)   \n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Response Table</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                        <div className=\"card-body\">\n\n                                            <table id=\"emp\" class=\"table\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>Section</th>\n                                                        <th>Item</th>                                                            <br />\n\n                                                        <th>Q1 2019</th>\n                                                   \n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.ResponseTable && this.state.ResponseTable.map(category => (\n\n                                                        <tr>\n                                                            <td>\n                                                                <b>{category.economic_code}</b>\n\n                                                                {category.fields.map(economic => (\n                                                                    <div>\n                                                                <hr/>\n\n                                                                    {economic.economic_code}\n                                                                    </div>\n                                                                ))}\n                                                            </td>\n\n                                                            <td>\n                                                                <b>{category.name}\n                                                                </b>\n                                                                <br/>\n                                                                {category.fields.map(field => (\n                                                          <div style={{ fontWeight: 'lighter'}}>\n\n                                                                 <hr/>\n                                                                    { field.name }\n                                                                    </div>\n\n                                                                ))}\n\n                                                            </td>\n\n                                                            <br />\n                                                            <td>\n                                                            <br />\n\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             <hr/>\n\n                                                                        {number.value}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                                \n                                                            </td>\n\n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"ReportSurvey\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            <ReactPaginate\n                                                previousLabel={\"prev\"}\n                                                nextLabel={\"next\"}\n                                                breakLabel={\"...\"}\n                                                breakClassName={\"break-me\"}\n                                                pageCount={this.state.pageCount}\n                                                marginPagesDisplayed={2}\n                                                pageRangeDisplayed={5}\n                                                onPageChange={this.handlePageClick}\n                                                containerClassName={\"pagination\"}\n                                                subContainerClassName={\"pages pagination\"}\n                                                activeClassName={\"active\"} />\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\n\nimport { Link, Redirect } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\n\n\n\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\nexport default class UserProfile extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleRegister = this.handleRegister.bind(this);\n          this.onChangeFirstName = this.onChangeFirstName.bind(this);\n          this.onChangeLastName = this.onChangeLastName.bind(this);\n          this.onChangeAddress = this.onChangeAddress.bind(this);\n          this.onChangeLG = this.onChangeLG.bind(this);\n          this.onChangeState = this.onChangeState.bind(this);\n          this.onChangeUsername = this.onChangeUsername.bind(this);\n          this.onChangeEmail = this.onChangeEmail.bind(this);\n          this.onChangePassword = this.onChangePassword.bind(this);\n          this.onChangeDob = this.onChangeDob.bind(this);\n          this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n\n\n\n          this.state = {\n               username: \"\",\n               password: \"\",\n               first_name: \"\",\n               last_name: \"\",\n               address: \"\",\n               lga: \"\",\n               state: \"\",\n               dob: \"\",\n               email: \"\",\n               phone_number: \"\",\n               successful: false,\n               message: \"\",\n               loading: false\n\n          };\n     }\n\n\n     componentDidMount() {\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/login'} />)\n             }\n     }\n\n\n     onChangeFirstName(e) {\n          this.setState({\n               first_name: e.target.value\n          });\n     }\n     onChangeLastName(e) {\n          this.setState({\n               last_name: e.target.value\n          });\n     }\n     onChangeAddress(e) {\n          this.setState({\n               address: e.target.value\n          });\n     }\n     onChangeLG(e) {\n          this.setState({\n               lga: e.target.value\n          });\n     }\n     onChangeState(e) {\n          this.setState({\n               state: e.target.value\n          });\n     }\n\n     onChangeUsername(e) {\n          this.setState({\n               username: e.target.value\n          });\n     }\n\n     onChangeEmail(e) {\n          this.setState({\n               email: e.target.value\n          });\n     }\n\n     onChangePassword(e) {\n          this.setState({\n               password: e.target.value\n          });\n     }\n     onChangeDob(e) {\n          this.setState({\n               dob: e.target.value\n          });\n     }\n     onChangePhoneNumber(e) {\n          this.setState({\n               phone_number: e.target.value\n          });\n     }\n\n     handleRegister(e) {\n          e.preventDefault();\n          this.setState({\n               message: \"\",\n               successful: false,\n               loading: true\n          });\n          this.form.validateAll();\n          if (this.checkBtn.context._errors.length === 0) {\n               AuthService.createNewUser(\n                    this.state.username,\n                    this.state.password,\n                    this.state.first_name,\n                    this.state.last_name,\n                    this.state.address,\n                    this.state.lga,\n                    this.state.state,\n                    this.state.dob,\n                    this.state.email,\n                    this.state.phone_number,\n\n               ).then(\n                    response => {\n                         this.setState({\n                              message: response.data.message,\n                              successful: true\n                         });\n                    },\n                    error => {\n                         const resMessage =\n                              (error.response &&\n                                   error.response.data.detail &&\n                                   error.response.data.detail) ||\n                              error.message ||\n                              error.toString();\n\n                         this.setState({\n                              successful: false,\n                              message: resMessage\n                         });\n                    }\n               );\n          }\n     }\n     render() {\n\n          // const { loading } = this.state;\n\n\n          return (\n               <div>\n                    <Header />\n\n                    <div className=\"content-wrapper\" >\n                         <Menu />\n                         <br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-md-3\">\n                                             {/* Profile Image */}\n                                             <div className=\"card card-success card-outline\">\n                                                  <div className=\"card-body box-profile\">\n                                                       <div className=\"text-center\">\n                                                            <img className=\"profile-user-img img-fluid img-circle\" src=\"../../dist/img/user4-128x128.jpg\" alt=\"\" />\n                                                       </div>\n                                                       <h3 className=\"profile-username text-center\">Abdulhakim Bashir</h3>\n                                                       <p className=\"text-muted text-center\">Software Engineer</p>\n\n                                                       <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Education</strong><p className=\"text-muted\">B.S. in Computer Science from the University of Tennessee at Knoxville</p><hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> Location</strong><p className=\"text-muted\">Malibu, California</p><hr /><strong><i className=\"fas fa-pencil-alt mr-1\" /> Skills</strong><p className=\"text-muted\"><span className=\"tag tag-danger\">UI Design</span><span className=\"tag tag-success\">Coding</span><span className=\"tag tag-info\">Javascript</span><span className=\"tag tag-warning\">PHP</span><span className=\"tag tag-primary\">Node.js</span></p><hr />\n                                                            <strong><i className=\"far fa-file-alt mr-1\" /> Notes</strong>\n                                                            <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p>\n                                                       </div>\n                                                  </div>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                            \n                                        </div>\n                                        {/* /.col */}\n                                        <div className=\"col-md-9\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header p-2\">\n                                                       <ul className=\"nav nav-pills\">\n                                                            <li className=\"nav-item\"><Link className=\"nav-link active bg-success\" href=\"#activity\" data-toggle=\"tab\">Activity</Link></li>\n                                                            <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                            <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                       </ul>\n                                                  </div>{/* /.card-header */}\n                                                  <div className=\"card-body\">\n                                                       <div className=\"tab-content\">\n                                                            <div className=\"active tab-pane\" id=\"activity\">\n                                                                 {/* Post */}\n                                                                 <div className=\"post\">\n                                                                      \n                                                                      {/* /.user-block */}\n                                                                      <p>\n                                                                           Lorem ipsum represents a long-held tradition for designers,\n                                                                           typographers and the like. Some people hate it and argue for\n                                                                           its demise, but others ignore the hate as they create awesome\n                                                                           tools to help create filler text for everyone from bacon lovers\n                                                                           to Charlie Sheen fans.   Lorem ipsum represents a long-held tradition for designers,\n                                                                           typographers and the like. Some people hate it and argue for\n                                                                           its demise, but others ignore the hate as they create awesome\n                                                                           tools to help create filler text for everyone from bacon lovers\n                                                        \n                  </p>\n                                                                      \n                                                                 </div>\n                                                                 {/* /.post */}\n                                                                 {/* Post */}\n                                                                 <div className=\"post clearfix\">\n                                                                    \n                                                                      {/* /.user-block */}\n                                                                    \n                                                                 </div>\n                                                                 {/* /.post */}\n\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                            <div className=\"tab-pane\" id=\"timeline\">\n                                                                 {/* The timeline */}\n                                                                 <div className=\"timeline timeline-inverse\">\n                                                                      {/* timeline time label */}\n                                                                      <div className=\"time-label\">\n                                                                           <span className=\"bg-danger\">\n                                                                                10 Feb. 2014\n                    </span>\n                                                                      </div>\n                                                                      {/* /.timeline-label */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-envelope bg-success\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 12:05</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Support Team</Link> sent you an email</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     Etsy doostang zoodles disqus groupon greplin oooj voxy zoodles,\n                                                                                     weebly ning heekya handango imeem plugg dopplr jibjab, movity\n                                                                                     jajah plickers sifteo edmodo ifttt zimbra. Babblely odeo kaboodle\n                                                                                     quora plaxo ideeli hulu weebly balihoo...\n                      </div>\n                                                                                <div className=\"timeline-footer\">\n                                                                                     <Link href=\"#\" className=\"btn btn-success btn-sm\">Read more</Link>\n                                                                                     <Link href=\"#\" className=\"btn btn-danger btn-sm\">Delete</Link>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-user bg-info\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 5 mins ago</span>\n                                                                                <h3 className=\"timeline-header border-0\"><Link href=\"#\">Sarah Young</Link> accepted your friend request\n                      </h3>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-comments bg-warning\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 27 mins ago</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Jay White</Link> commented on your post</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     Take me to your leader!\n                                                                                     Switzerland is small and neutral!\n                                                                                     We are more like Germany, ambitious and misunderstood!\n                      </div>\n                                                                                <div className=\"timeline-footer\">\n                                                                                     <Link href=\"#\" className=\"btn btn-warning btn-flat btn-sm\">View comment</Link>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline time label */}\n                                                                      <div className=\"time-label\">\n                                                                           <span className=\"bg-success\">\n                                                                                3 Jan. 2014\n                    </span>\n                                                                      </div>\n                                                                      {/* /.timeline-label */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-camera bg-purple\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 2 days ago</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Mina Lee</Link> uploaded new photos</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      <div>\n                                                                           <i className=\"far fa-clock bg-gray\" />\n                                                                      </div>\n                                                                 </div>\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                            <div className=\"tab-pane\" id=\"settings\">\n                                                                 <form className=\"form-horizontal\">\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputName\" className=\"col-sm-2 col-form-label\">Name</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"email\" className=\"form-control\" id=\"inputName\" placeholder=\"Name\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputEmail\" className=\"col-sm-2 col-form-label\">Email</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputName2\" className=\"col-sm-2 col-form-label\">Name</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"text\" className=\"form-control\" id=\"inputName2\" placeholder=\"Name\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputExperience\" className=\"col-sm-2 col-form-label\">Experience</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <textarea className=\"form-control\" id=\"inputExperience\" placeholder=\"Experience\" defaultValue={\"\"} />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputSkills\" className=\"col-sm-2 col-form-label\">Skills</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"text\" className=\"form-control\" id=\"inputSkills\" placeholder=\"Skills\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <div className=\"offset-sm-2 col-sm-10\">\n                                                                                <div className=\"checkbox\">\n                                                                                     <label>\n                                                                                          <input type=\"checkbox\" /> I agree to the <Link href=\"#\">terms and conditions</Link>\n                                                                                     </label>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <div className=\"offset-sm-2 col-sm-10\">\n                                                                                <button type=\"submit\" className=\"btn btn-danger\">Submit</button>\n                                                                           </div>\n                                                                      </div>\n                                                                 </form>\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                       </div>\n                                                       {/* /.tab-content */}\n                                                  </div>{/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                        {/* /.col */}\n                                   </div>\n                                   {/* /.row */}\n                              </div>{/* /.container-fluid */}\n                         </section>\n\n\n                    </div>\n                    <Footer />\n\n               </div>\n\n\n          );\n     }\n}","import axios from 'axios'\nimport React, { Component } from \"react\";\nimport {  Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\n\n\n\nexport default class ResponseByUser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handlePageClick = this.handlePageClick.bind(this);\n\n          this.state = {\n               offset: 0,\n               tableData: [],\n               orgtableData: [],\n               perPage: 10,\n               currentPage: 0,\n               myloading: true\n          };\n     }\n\n     //pagination\n     handlePageClick = (e) => {\n          const selectedPage = e.selected;\n          const offset = selectedPage * this.state.perPage;\n          this.setState({\n               currentPage: selectedPage,\n               offset: offset\n          }, () => {\n               this.loadMoreData()\n          });\n\n     };\n     //pagination\n     loadMoreData() {\n          const data = this.state.orgtableData;\n\n          const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n          this.setState({\n               pageCount: Math.ceil(data.length / this.state.perPage),\n               tableData: slice\n          })\n\n     }\n\n     componentDidMount() {\n\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const scriptdashboard = document.createElement(\"script\");\n          scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n          scriptdashboard.async = true;\n          document.body.appendChild(scriptdashboard);\n\n         \n          this.Get_State_Data();\n\n     }\n\n     Get_State_Data() {\n          const mytoken = JSON.parse(localStorage.getItem('user'));\n          const token = mytoken.token;\n          // const Response_by_user = mytoken.user\n          axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    // params:{\n                    //      survey_type=\n                    // },\n\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"List_Of_Responses_By_User\", JSON.stringify(res.data));\n                    }\n                    const tdata = res.data;\n                    // console.log(res.data.data)   \n\n                    const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                    this.setState({\n                         pageCount: Math.ceil(tdata.length / this.state.perPage),\n                         orgtableData: tdata,\n                         ResponseByUser: slice,\n                         myloading: false\n                    })\n               });\n          // console.log(res.data)   \n     }\n\n     render() {\n\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/'} />)\n          }\n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Responses</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           <div className=\"input-group input-group-sm\" style={{ width: 150 }}>\n                                                                                <input type=\"text\" name=\"table_search\" className=\"form-control float-right\" placeholder=\"Search\" />\n                                                                                <div className=\"input-group-append\">\n                                                                                     <button type=\"submit\" className=\"btn btn-default\">\n                                                                                          <i className=\"fas fa-search\" />\n                                                                                     </button>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                                     <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n                    </div>\n\n                    <Footer />\n               </div>\n\n          );\n     }\n}\n\n\n","\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\nimport authService from '../services/auth.service';\n\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class EditTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n\n        this.state = {\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            loading: false,\n            message: \"\",\n            states: \"\",\n            lgas: \"\",\n            myloading: false,\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: false\n        };\n    }\n\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: true\n        });\n\n        \n            //check auth user\n            const mytoken = JSON.parse(localStorage.getItem('user'));\n            const token = mytoken.token;\n\n           \n            //convert the string to number from the [go] array i save to  localStorage for State\n            const stop_here_for_state = localStorage.getItem('Checked_State');\n            const jasus_for_state = stop_here_for_state\n          \n            //convert the string to number from the [go] array i save to localStorage for LGA\n            const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n            const jasus_for_lga = stop_here_for_lga\n\n           \n            let formData = new FormData();\n            formData.append('title', this.state.title);\n            formData.append('quarter', this.state.quarter);\n            formData.append('year', this.state.year);\n            formData.append('survey_type', this.state.survey_type);\n            formData.append('start_date', this.state.start_date);\n            formData.append('due_date', this.state.due_date);\n            formData.append('states', jasus_for_state);\n            formData.append('lgas', jasus_for_lga);\n\n            this.form.validateAll();\n            if (this.checkBtn.context._errors.length === 0) {\n    \n            axios.post(\"https://gfso.chinikiguard.com/survey/api/create/survey/\", \n            formData,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        AdoptSurveysuccessful: true,\n                    });\n                      console.log(res.data);\n\n                    window.location = \"/Deploy\"\n                    if (res.data) {\n                        localStorage.setItem(\"AdoptedSurvey\", JSON.stringify(res.data));\n                    }\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.detail &&\n                                error.response.data.detail) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n\n    AddField(Filter_with_name) {\n\n     \n        //select Target category\n        localStorage.setItem(\"Category_to_AddField\", JSON.stringify(Filter_with_name));\n        localStorage.setItem(\"MyCategoryName\", JSON.stringify(Filter_with_name.name));\n        window.location = \"/CategoryView\"\n    }\n\n    componentDidMount() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        //reset to default state\n        const Checked_LGA = 1\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        //call the States and LGAS at the first \n        const state = \"Ahmad loophole\";\n        const user = authService.getCurrentUser();\n\n        const token = user.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n\n            });\n        // console.log(res.data)   \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = 1 \n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov } = this.state;\n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Create Survey</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n                                            <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} >\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            <label> Title</label>\n                                                            <Input type=\"text\" className=\"form-control \" placeholder\n                                                                value={this.state.title}\n                                                                onChange={this.onChangeTitle}\n                                                                validations={[required]}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            <label> Quarter</label>\n                                                            <Select  className=\"form-control \" placeholder\n                                                                value={this.state.quarter}\n                                                                onChange={this.onChangeQuarter}\n                                                                validations={[required]}\n                                                            >\n                                                                <option value=\"\">Select</option>\n                                                                <option value=\"q1\">Q1</option>\n                                                                <option value=\"q2\">Q2</option>\n                                                                <option value=\"q3\">Q3</option>\n                                                                <option value=\"q4\">Q4</option>\n                                                            </Select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            {/* text input */}\n                                                            <label> Year</label>\n                                                            <Input type=\"number\" className=\"form-control \" placeholder\n                                                                value={this.state.year}\n                                                                onChange={this.onChangeYear}\n                                                                validations={[required]}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-6\">\n                                                            {/* text input */}\n                                                            <div className=\"form-group\">\n                                                                <label> Start date</label>\n                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                    value={this.state.start_date}\n                                                                    onChange={this.onChangeStartDate}\n                                                                    validations={[required]}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-sm-6\">\n                                                            <div className=\"form-group\">\n                                                                <label> Due Date</label>\n                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                    value={this.state.due_date}\n                                                                    onChange={this.onChangeDueDate}\n                                                                    validations={[required]}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            <label> Survey Type</label>\n                                                            <Select type=\"text\" className=\"form-control \" placeholder\n                                                            validations={[required]}\n                                                                value={this.state.survey_type}\n                                                                onChange={this.onChangeSurveyType}                                                               \n                                                            >\n                                                                <option value=\"\">Select</option>\n                                                                <option value=\"sg\">SG</option>\n                                                                <option value=\"lg\">LG</option>\n                                                                <option value=\"other\">OTHER</option>\n                                                            </Select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                {statesGov && (\n                                                    <div className=\"table-container\">\n                                                        <table className=\"table\">\n                                                            <thead>\n\n                                                                <tr>\n                                                                    <th>STATE</th>\n\n                                                                    <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                            checkboxes=\".table .select-checkbox\"\n                                                                            sync=\".table .row\"\n                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                            }}\n                                                                            onAllChecked={(selectedMap) => {\n                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                            }}\n                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.replace(/\\d+/g,\"\")\n                                                                                   \n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                            }}\n\n                                                                        />\n                                                                    </th>\n                                                                </tr>\n\n                                                            </thead>\n                                                            <tbody className=\"table-body\">\n                                                                {List_Of_States.map((state, i) => (\n\n                                                                    <tr>\n                                                                        <td>{state.title}</td>\n                                                                        <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${state.pk}`}\n                                                                                // onChange={this.onChangeState}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td>\n                                                                    </tr>\n                                                                ))}\n\n                                                            </tbody>\n\n                                                        </table>\n                                                    </div>\n                                                )}\n                                                {lgasGov && (\n                                                    <div className=\"table-container\">\n                                                        <table className=\"table\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th>LGA</th>\n\n                                                                    <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                            checkboxes=\".table .select-checkbox\"\n                                                                            sync=\".table .row\"\n                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                            }}\n                                                                            onAllChecked={(selectedMap) => {\n                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                            }}\n                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                            }}\n\n                                                                        />\n                                                                    </th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody className=\"table-body\">\n                                                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                                                    <tr>\n                                                                        <td>{lga.title}</td>\n                                                                        <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${lga.pk}`}\n                                                                                // onChange={this.onChangeLgas}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td>\n                                                                    </tr>\n                                                                ))}\n\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                               )}\n                                                <center>\n                                                    {this.state.AdoptSurveymessage && (\n                                                        <div className=\"pb-5\" >\n                                                            <div\n                                                                className={\n                                                                    this.state.AdoptSurveysuccessful\n                                                                        ? \"alert alert-custom alert-outline-success fade show mb-5\"\n                                                                        : \"alert alert-custom alert-outline-danger fade show mb-5\"\n                                                                }\n                                                                role=\"alert\"\n                                                            >\n                                                                <h3 > {this.state.AdoptSurveymessage}</h3>\n                                                            </div>\n                                                        </div>\n                                                    )}</center>\n                                                <center>\n                                                    <div className=\"row\">\n                                                        <button\n                                                            disabled={this.state.AdoptSurveyloading}\n                                                            className=\"btn btn-success btn-lg float-right\"\n                                                        >\n\n                                                            {this.state.AdoptSurveyloading && (\n                                                                <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                            )}\n                                                            Create Survey\n                                                        </button>\n                                                    </div>\n                                                </center>\n                                                <CheckButton\n                                                    style={{ display: \"none\" }}\n                                                    ref={c => {\n                                                        this.checkBtn = c;\n                                                    }}\n                                                />\n                                                \n                                            </Form>\n                                       \n                                        </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ReviewRespondent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditTemplate(Surveys) {\n\n        //\n        localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const singleSurveyPk = Surveys.pk;\n        console.log(Surveys.pk)\n\n        // const body =\n        // {\n        // survey: SurveyList.pk,\n        // }\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                console.log(res.data)\n                // window.location = \"/CompleteSurvey\"\n\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">List of Respondent</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                        <td className=\"\">\n                                                                            <Link className=\"btn btn-lg btn-success \" to=\"/\">\n\n                                                                                Approve\n                                                   </Link>&nbsp;&nbsp;\n\n                                                    <Link className=\"btn btn-lg btn-danger \" to=\"/\">\n                                                                                Delete\n                                                    </Link>&nbsp;&nbsp;\n\n                                                  </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ListToApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\n\nexport default class ApproveTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.handleApprove = this.handleApprove.bind(this);\n        this.onChangestatus = this.onChangestatus.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            status: \"\",\n            remark: \"\",\n            SingleTemplate: []\n        };\n    }\n\n   \n\n    \n\n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n\n    }\n    onChangestatus(e) {\n        this.setState({\n          status: e.target.value\n        });\n   }\n   onChangeRemark(e) {\n        this.setState({\n             remark: e.target.value\n        });\n   }\n   handleApprove(e) {\n\n    e.preventDefault();\n\n    const SingleTemplate = JSON.parse(localStorage.getItem('ApproveTemplateInfo'));\n\n    const templatepk=SingleTemplate.pk\n\n    this.setState({\n         message: \"\",\n         successful: true,\n         loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n\n     let formData = new FormData();\n     formData.append('status', this.state.status);\n     formData.append('survey', SingleTemplate.pk);\n     formData.append('remark', this.state.remark);\n         console.log(formData) \n\n         const mytoken = AuthService.getCurrentUser();\n         const token = mytoken.token;\n         axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n              {\n                   headers:\n                   {\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                   },\n              }).then(\n\n                   response => {\n\n                        this.setState({\n                             message: response.data.detail,\n                             successful: true\n                        });\n                        // window.location = \"/ListToApprove\"\n                   },\n                   error => {\n                        const resMessage =\n                             (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data) ||\n                             error.message ||\n                             error.toString();\n\n                        this.setState({\n                             loading: false,\n                             message: resMessage,\n                             ViewTemplateloading: false,\n\n                        });\n                   }\n              );\n    } else {\n         this.setState({\n              loading: false\n         });\n    }\n}\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const SingleTemplate = JSON.parse(localStorage.getItem('ApproveTemplateInfo'));\n        const SingleTemplateCategories = SingleTemplate.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {SingleTemplateCategories&&SingleTemplateCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                \n                                            </div>\n                                            {/* /.card-body */}\n\n                                        </div>\n                                    ))}\n                                    <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{SingleTemplate.title}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                               \n                                                <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {SingleTemplate.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {SingleTemplate.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {SingleTemplate.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {SingleTemplate.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {SingleTemplate.get_states&&SingleTemplate.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                    {/* {SurveyInfo.get_lgas} */}\n                                                                    {SingleTemplate.get_lgas && SingleTemplate.get_lgas.map(states => (\n                                                                         <span> {states.title}</span>\n                                                                    ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                 \n                                                   \n                                                \n                                            </div>\n                                            {/* /.card-body */}\n                                            \n                                        </div>\n                                    {/* /.card */}\n                                    {SingleTemplateCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n\n                                        <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                \n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangestatus}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_template\">Approve</option>\n                                                                      <option value=\"rejected_template\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                               \n                                        \n                                          \n                                       \n                                        \n                                          </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                \n                                </div>\n                               \n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ApproveResponse extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditTemplate(Surveys) {\n\n        //\n        localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const singleSurveyPk = Surveys.pk;\n        console.log(Surveys.pk)\n\n        // const body =\n        // {\n        // survey: SurveyList.pk,\n        // }\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                console.log(res.data)\n                // window.location = \"/CompleteSurvey\"\n\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approve Response</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                                     <td className=\"\">\n                                                        <Link className=\"btn btn-primary btn-lg\" to=\"/\">\n                                                            \n                                                     View\n                                                    </Link>&nbsp;&nbsp;\n                                                    <Link className=\"btn btn-success btn-lg\" to=\"/\">\n                                                           \n                                                            Approve\n                                                    </Link>&nbsp;&nbsp;\n                                                    <Link className=\"btn btn-danger btn-lg\" to=\"/\">\n                                                            Delete\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ValidateResponse extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditTemplate(Surveys) {\n\n        //\n        localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const singleSurveyPk = Surveys.pk;\n        console.log(Surveys.pk)\n\n        // const body =\n        // {\n        // survey: SurveyList.pk,\n        // }\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                console.log(res.data)\n                // window.location = \"/CompleteSurvey\"\n\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Validate Response</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                                     <td className=\"\">\n                                                        <Link className=\"btn btn-primary btn-lg\" to=\"/\">\n                                                            \n                                                     View\n                                                    </Link>&nbsp;&nbsp;\n                                                    <Link className=\"btn btn-success btn-lg\" to=\"/\">\n                                                           \n                                                    Validate\n                                                    </Link>&nbsp;&nbsp;\n                                                    <Link className=\"btn btn-danger btn-lg\" to=\"/\">\n                                                            Delete\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport {  Redirect,Link } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class RespondentList extends Component {\n\n  constructor(props) {\n    super(props);\n   \n\n    this.state = {\n      \n      Users:[],\n      successful: false,\n      message: \"\",\n      loading: true\n    };\n  }\n\n\n  componentDidMount() {\n    if (localStorage.getItem('user')) {\n\n      return (<Redirect to={'/dashboard'} />)\n    }\n    \n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n    //call the States and LGAS at the first \n    const state = \"Ahmad loophole\";\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n        }\n        // console.log(res.data)                  \n\n      })\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n        }\n      });\n\n     \n\n  }\n\n  componentWillMount(){\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n     const mytoken = JSON.parse(localStorage.getItem('user'));\n     const token = mytoken.token;\n     axios.get(\"https://gfso.chinikiguard.com/accounts/api/list/profile/?approved=no\",\n     {\n       headers:\n       {\n         'Authorization': `Token ${token}`,\n         'Access-Control-Allow-Origin': '*',\n         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n         'Access-Control-Allow-Credentials': true\n       },\n     })\n     .then(res => {\n       if (res.data) {\n         localStorage.setItem(\"Users\", JSON.stringify(res.data));\n       }\n       this.setState({\n         Users: res.data,\n         loading:false\n     });\n       // (res);\n       console.log(res.data);\n\n     })\n\n   \n\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    // const GetUsers = JSON.parse(localStorage.getItem('Users'));\n    const list_of_lga = JSON.parse(localStorage.getItem('List_Of_Lga'))\n    const statepk = this.state.states\n\n      const Lgas = list_of_lga.filter(item => item.state === statepk);\n      localStorage.setItem(\"LGAS\", JSON.stringify(Lgas));\n    \n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n\n    \n\n  }\n\n  \n \n  \n  render() {\n\n    \n    // console.log(list_of_lga);\n    const Users = JSON.parse(localStorage.getItem('Users'))\n\n\n\n\n    return (\n      <div>\n        <Header />\n\n        <div className=\"content-wrapper\" >\n          <Menu />\n          <div className=\"col-md-12\" >\n            <br />\n            {this.state.loading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">List of Respondents</h3>\n                    <div className=\"card-tools\">\n\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n\n                  <div className=\"card-body table-responsive p-0\">\n\n                    <table className=\"table table-hover text-nowrap\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Phone</th>\n                          <th>State</th>\n                          <th>LGA</th>\n                          <th>Registered on</th>\n                          <th>designation</th>\n                          <th>Branch</th>\n                          <th>Action</th>\n                          \n                        </tr>\n                      </thead>\n                      {this.state.Users && this.state.Users.map(users => (\n\n                        <tbody>\n                          <tr>\n                            <td>{users.username}&nbsp;</td>\n                            <td>{users.phone_number}</td>\n                            <td>{users.state_title}</td>\n                            <td>{users.lga_title}</td>\n                            <td>{users.date_joined}</td>\n                            <td>{users.designation_title}</td>\n                            <td>{users.branch_name}</td>\n                                     <td className=\"\">\n                                          <Link className=\"btn btn-lg btn-success \" to=\"/\">\n\n                                               Approve\n                                                   </Link>&nbsp;&nbsp;\n\n                                                    <Link className=\"btn btn-lg btn-danger \" to=\"/\">\n                                               Reject\n                                                    </Link>&nbsp;&nbsp;\n\n                                                  </td>\n\n                          </tr>\n\n                        </tbody>\n                      ))}\n                    </table>\n                  </div>\n\n\n                  {/* /.card-body */}\n                </div>\n                {/* /.card */}\n              </div>\n            </div>\n          </section>\n\n          )}\n        </div>\n                               \n        </div>\n        <Footer />\n\n        </div>\n\n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApproveSurvey extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleApprove = this.handleApprove.bind(this);\n          this.onChangeApprove = this.onChangeApprove.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeApprove(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n\n     componentDidMount() {\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/login'} />)\n             }\n\n     }\n\n     handleApprove(e) {\n\n          e.preventDefault();\n          const Surveypk = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n          const SurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'));\n\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('status', this.state.status);\n               formData.append('survey', SurveyInfo.pk);\n               formData.append('remark', this.state.remark);\n\n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`,formData, \n               \n               \n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              window.location = \"/ListToApprove\"\n                                             // console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/'} />)\n          }\n          const SurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'));\n\n          \n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         {/* {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )} */}\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-12\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header\">\n                                                       <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                       <div className=\"card-tools\">\n                                                       </div>\n                                                  </div>\n                                                  <div className=\"card-body\">\n                                                       {/* /.card-header */}\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Title</label>:&nbsp;\n                                                                                      {SurveyInfo.title}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Quarter</label>:&nbsp;\n                                                                                      {SurveyInfo.quarter}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {SurveyInfo.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {SurveyInfo.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {SurveyInfo.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {SurveyInfo.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {SurveyInfo.get_states&&SurveyInfo.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_lgas} */}\n                                                                                          {SurveyInfo.get_lgas&&SurveyInfo.get_lgas.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Action</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeApprove}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_creation\" className=\"text-success\">Approve</option>\n                                                                      <option value=\"rejected_creation\" className=\"text-danger\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                   </div>\n\n\n\n                              </div>\n\n\n                         </section>\n\n                    </div>\n                    <Footer />\n\n               </div>\n          );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateToApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"TemplateToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveTemplate(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveTemplate\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApproveTemplateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveTemplate.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApprovedSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no&for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApprovedTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n    \n    componentDidMount() {\n\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no&for_user=yes`,\n\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class RejectedTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&for_user=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class RejectedSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class RespondentInfo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Notifications extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: \"\",\n      loading: true,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false,\n      survey: \"\",\n      true:\"False\"\n\n    };\n  }\n\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/?read=no',\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\n        }\n        this.setState({\n          notification: res.data.length,\n          message: res.data,\n          loading: false,\n\n        });\n        // console.log(res.data)                  \n\n      })\n\n  }\n\n  ViewNotification(message){\n\n    this.state.true= \"True\"\n\n    const notifyId = message.pk\n    // console.log(message.pk)\n    // console.log(this.state.true)\n    localStorage.setItem(\"notify_Update_ID\", JSON.stringify(message.pk));\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n\n    axios.get(`https://gfso.chinikiguard.com/core/api/user/notification/details/${notifyId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ViewNotification\"\n\n            if (res.data) {\n                localStorage.setItem(\"ApproveNotifications\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ApproveThisSurvey: res.data,\n              loadingModal: false,\n            });\n\n          })\n\n          let formData = new FormData();\n          formData.append('read', this.state.true);\n          axios.patch(`https://gfso.chinikiguard.com/core/api/user/notification/update/${notifyId}/`,formData,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            if (res.data) {\n                localStorage.setItem(\"Read\", JSON.stringify(res.data));\n            }\n\n          })\n\n  }\n\n\n  render() {\n\n    //check for user to access the page\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n    //get the template details\n    // const ApproveNotifications = JSON.parse(localStorage.getItem('ApproveNotifications'));\n\n\n    return (\n      <div>\n        <Header />\n        <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n          <Menu /><br />\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <Link className=\"btn btn-success btn-block mb-3\">Messages</Link>\n               \n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Folders</h3>\n                    <div className=\"card-tools\">\n                      <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\n                        <i className=\"fas fa-minus\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-0\">\n                    <ul className=\"nav nav-pills flex-column\">\n                      <li className=\"nav-item active\">\n                        <Link to=\"/Notifications\" className=\"nav-link\">\n                          <i className=\"fas fa-inbox\" /> Inbox\n                <span className=\"badge bg-primary float-right\">{this.state.notification}</span>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-envelope\" /> Read\n              </a>\n                      </li>\n                    \n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-trash-alt\" /> Trash\n              </a>\n                      </li>\n                    </ul>\n                  </div>\n                  {/* /.card-body */}\n                </div>\n               \n              </div>\n              {/* /.col */}\n              <div className=\"col-md-9\">\n                <div className=\"card card-success card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Inbox</h3>\n                    <div className=\"card-tools\">\n                      <div className=\"input-group input-group-sm\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Search Mail\" />\n                        <div className=\"input-group-append\">\n                          <div className=\"btn btn-primary\">\n                            <i className=\"fas fa-search\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* /.card-tools */}\n                  </div>\n                  {/* /.card-header */}\n                  <div className=\"card-body p-0\">\n                    <div className=\"mailbox-controls\">\n                      {/* Check all button */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm checkbox-toggle\"><i className=\"far fa-square\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"far fa-trash-alt\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-reply\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-share\" />\n                        </button>\n                      </div>\n                      {/* /.btn-group */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm\">\n                        <i className=\"fas fa-sync-alt\" />\n                      </button>\n                      <div className=\"float-right\">\n                        {this.state.notification}\n              <div className=\"btn-group\">\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-left\" />\n                          </button>\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-right\" />\n                          </button>\n                        </div>\n                        {/* /.btn-group */}\n                      </div>\n                      {/* /.float-right */}\n                    </div>\n                    <div className=\"table-responsive mailbox-messages\">\n                      {this.state.loading ? (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span> \n                        ) : (\n                      <table className=\"table table-hover table-striped\">\n                        <tbody>\n                        {this.state.message && this.state.message.map(message => (\n                          <tr>\n                            <td>\n                              <div className=\"icheck-primary\">\n                                <input type=\"checkbox\" defaultValue id=\"check1\" />\n                                <label htmlFor=\"check1\" />\n                              </div>\n                            </td>\n                            <td className=\"mailbox-star\"><a href=\"#\"><i className=\"fas fa-star text-warning\" /></a></td>\n                            <td className=\"mailbox-name\">\n                            <Link\n                            onClick={this.ViewNotification.bind(this, message)}\n                            >{message.api_message}</Link></td>\n                            <td className=\"mailbox-subject\"><b>{message.subject}</b> -         </td>\n                            <td className=\"mailbox-attachment\" />\n                            <td className=\"mailbox-date\">{message.created}</td>\n                          </tr>\n                        ))}\n                           </tbody>\n                      </table>\n                        )}\n                    </div>\n                    {/* /.mail-box-messages */}\n                  </div>\n                  {/* /.card-body */}\n                  <div className=\"card-footer p-0\">\n                    <div className=\"mailbox-controls\">\n                      {/* Check all button */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm checkbox-toggle\">\n                        <i className=\"far fa-square\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"far fa-trash-alt\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-reply\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-share\" />\n                        </button>\n                      </div>\n                      {/* /.btn-group */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm\">\n                        <i className=\"fas fa-sync-alt\" />\n                      </button>\n                      <div className=\"float-right\">\n                        1-50/200\n              <div className=\"btn-group\">\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-left\" />\n                          </button>\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-right\" />\n                          </button>\n                        </div>\n                        {/* /.btn-group */}\n                      </div>\n                      {/* /.float-right */}\n                    </div>\n                  </div>\n                </div>\n                {/* /.card */}\n              </div>\n              {/* /.col */}\n            </div>\n            {/* /.row */}\n          </section>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyToDeploy extends Component {\n\n    constructor(props) {\n         \n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved=yes&approved_template=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"SurveyToDeploy\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveTemplate(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/DeploySurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"DeployTemplateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveTemplate.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\n\nexport default class DeploySurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.handleApprove = this.handleApprove.bind(this);\n        this.onChangestatus = this.onChangestatus.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            status: \"\",\n            remark: \"\",\n            DeploySingleSurvey: []\n        };\n    }\n\n   \n\n    \n\n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n    }\n    onChangestatus(e) {\n        this.setState({\n          status: e.target.value\n        });\n   }\n   onChangeRemark(e) {\n        this.setState({\n             remark: e.target.value\n        });\n   }\n   handleApprove(e) {\n\n    e.preventDefault();\n\n    const DeploySingleSurvey = JSON.parse(localStorage.getItem('DeployTemplateInfo'));\n\n    const pk=DeploySingleSurvey.pk\n\n    this.setState({\n         message: \"\",\n         successful: true,\n         loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n\n     let formData = new FormData();\n     formData.append('status', this.state.status);\n     formData.append('survey',  pk);\n     formData.append('remark', this.state.remark);\n         console.log(formData) \n\n         const mytoken = AuthService.getCurrentUser();\n         const token = mytoken.token;\n         axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n              {\n                   headers:\n                   {\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                   },\n              }).then(\n\n                   response => {\n\n                        this.setState({\n                             message: response.data.detail,\n                             successful: true\n                        });\n                        window.location = \"/SurveyToDeploy\"\n                   },\n                   error => {\n                        const resMessage =\n                             (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data) ||\n                             error.message ||\n                             error.toString();\n\n                        this.setState({\n                             loading: false,\n                             message: resMessage,\n                             ViewTemplateloading: false,\n\n                        });\n                   }\n              );\n    } else {\n         this.setState({\n              loading: false\n         });\n    }\n}\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const DeploySingleSurvey = JSON.parse(localStorage.getItem('DeployTemplateInfo'));\n        const DeploySingleSurveyCategories = DeploySingleSurvey.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {DeploySingleSurveyCategories&&DeploySingleSurveyCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                \n                                            </div>\n                                            {/* /.card-body */}\n\n                                        </div>\n                                    ))}\n                                    <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{DeploySingleSurvey.title}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                               \n                                                <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {DeploySingleSurvey.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {DeploySingleSurvey.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {DeploySingleSurvey.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {DeploySingleSurvey.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {DeploySingleSurvey.get_states&&DeploySingleSurvey.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                    {/* {SurveyInfo.get_lgas} */}\n                                                                    {DeploySingleSurvey.get_lgas && DeploySingleSurvey.get_lgas.map(states => (\n                                                                         <span> {states.title}</span>\n                                                                    ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                 \n                                                   \n                                                \n                                            </div>\n                                            {/* /.card-body */}\n                                            \n                                        </div>\n                                    {/* /.card */}\n                                    {DeploySingleSurveyCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n\n                                        <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                \n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangestatus}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_deploy\">Approve</option>\n                                                                      <option value=\"rejected_deploy\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                               \n                                        \n                                          \n                                       \n                                        \n                                          </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                \n                                </div>\n                               \n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyRejected extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n           \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&for_user=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n   \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyApproved extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n   \n    componentDidMount() {\n\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no&for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n   \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateApproved extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n           \n        };\n    }\n \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no&for_user=yes`,\n\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateRejected extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n    \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&for_user=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApproveThisTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n           \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"TemplateToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n  \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApproveThisSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n          \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&for_user=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class ViewNotification extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: \"\",\n      loading: true,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false,\n      survey: \"\"\n\n    };\n  }\n\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/',\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\n        }\n        this.setState({\n          notification: res.data.length,\n          message: res.data,\n          loading: false,\n\n        });\n        // console.log(res.data)                  \n\n      })\n\n  }\n\n\n\n\n  render() {\n\n    //check for user to access the page\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const ApproveNotifications = JSON.parse(localStorage.getItem('ApproveNotifications'));\n    const MyNotification = ApproveNotifications.message.slice(37, -670)\n    const MyNotificationdear = ApproveNotifications.message.slice(0, -670)\n    // console.log(MyNotification)\n    return (\n      <div>\n        <Header />\n        <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n          <Menu /><br />\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <Link className=\"btn btn-success btn-block mb-3\">Messages</Link>\n\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Folders</h3>\n                    <div className=\"card-tools\">\n                      <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\n                        <i className=\"fas fa-minus\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-0\">\n                    <ul className=\"nav nav-pills flex-column\">\n                      <li className=\"nav-item active\">\n                        <Link to=\"/Notifications\" className=\"nav-link\">\n                          <i className=\"fas fa-inbox\" /> Inbox\n                <span className=\"badge bg-primary float-right\">{this.state.notification}</span>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-envelope\" /> Read\n              </a>\n                      </li>\n\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-trash-alt\" /> Trash\n              </a>\n                      </li>\n                    </ul>\n                  </div>\n                  {/* /.card-body */}\n                </div>\n\n              </div>\n              {/* /.col */}\n              <div className=\"col-md-9\">\n                <div className=\"card card-success card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Read Notification</h3>\n                    <div className=\"card-tools\">\n                      <a href=\"#\" className=\"btn btn-tool\" title=\"Previous\"><i className=\"fas fa-chevron-left\" /></a>\n                      <a href=\"#\" className=\"btn btn-tool\" title=\"Next\"><i className=\"fas fa-chevron-right\" /></a>\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n                  <div className=\"card-body p-0\">\n                    <div className=\"mailbox-read-info\">\n                      <h5>{ApproveNotifications.subject}</h5>\n                      <h6>From: support@cbn.gov.ng.\n          <span className=\"mailbox-read-time float-right\">{ApproveNotifications.created}</span></h6>\n                    </div>\n\n                    <div className=\"mailbox-read-message\">\n                      <p>{MyNotificationdear.slice(0, 37)}</p>\n\n                      <div style={{ whiteSpace: \"pre-wrap\" }}>{MyNotification}</div>\n\n                      <p>Thanks,<br />{MyNotificationdear.slice(0, 37)}</p>\n                    </div>\n                    {/* /.mailbox-read-message */}\n                  </div>\n\n                  <div className=\"card-footer\">\n                    <div className=\"float-right\">\n                      <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-reply\" /> Reply</button>\n                      <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-share\" /> Forward</button>\n                    </div>\n                    <button type=\"button\" className=\"btn btn-default\"><i className=\"far fa-trash-alt\" /> Delete</button>\n                    <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-print\" /> Print</button>\n                  </div>\n                  {/* /.card-footer */}\n                </div>\n                {/* /.card */}\n              </div>\n\n              {/* /.col */}\n            </div>\n            {/* /.row */}\n          </section>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\nimport Landing from './Landing';\r\n// import { FormBuilder } from './FormBuilder';\r\nimport ViewSurvey from './ViewSurvey';\r\nimport CompleteSurvey from './CompleteSurvey';\r\nimport CreateNewUser from './CreateNewUser';\r\nimport EditTemplate from './EditTemplate';\r\nimport Surveys from './Surveys';\r\nimport AvailableSurvey from './AvailableSurvey';\r\nimport CategoryView from './CategoryView';\r\nimport ListResponses from './ListResponses';\r\nimport ResponseTable from './ResponseTable';\r\nimport UserProfile from './UserProfile';\r\nimport ResponseByUser from './ResponseByUser';\r\nimport Deploy from './Deploy';\r\nimport ReviewRespondent from './ReviewRespondent';\r\nimport ListToApprove from './ListToApprove';\r\nimport ApproveTemplate from './ApproveTemplate';\r\nimport ApproveResponse from './ApproveResponse';\r\nimport ValidateResponse from './ValidateResponse';\r\nimport RespondentList from './RespondentList';\r\nimport ApproveSurvey from './ApproveSurvey';\r\nimport TemplateToApprove from './TemplateToApprove';\r\nimport ApprovedSurvey from './ApprovedSurvey';\r\nimport ApprovedTemplate from './ApprovedTemplate';\r\nimport RejectedTemplate from './RejectedTemplate';\r\nimport RejectedSurvey from './RejectedSurvey';\r\nimport RespondentInfo from './RespondentInfo';\r\nimport Notifications from './Notifications';\r\nimport SurveyToDeploy from './SurveyToDeploy';\r\nimport DeploySurvey from './DeploySurvey';\r\nimport SurveyRejected from './SurveyRejected';\r\nimport SurveyApproved from './SurveyApproved';\r\nimport TemplateApproved from './TemplateApproved';\r\nimport TemplateRejected from './TemplateRejected';\r\nimport ApproveThisTemplate from './ApproveThisTemplate';\r\nimport ApproveThisSurvey from './ApproveThisSurvey';\r\nimport ViewNotification from './ViewNotification';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst  Content = () => {\r\n    return (\r\n       <Switch>\r\n           <Route exact path=\"/\" component={Landing}/>\r\n           <Route  path=\"/landing\" component={Landing}/>\r\n\r\n\r\n           <Route exact path=\"/\" component={Login}/>\r\n           <Route  path=\"/login\" component={Login}/>\r\n\r\n \r\n           <Route exact path=\"/\" component={Dashboard}/>\r\n           <Route  path=\"/dashboard\" component={Dashboard}/>\r\n\r\n          \r\n           {/* <Route exact path=\"/\" component={FormBuilder}/>\r\n           <Route  path=\"/FormBuilder\" component={FormBuilder}/>\r\n\r\n           */}\r\n           <Route exact path=\"/\" component={ViewSurvey}/>\r\n           <Route  path=\"/ViewSurvey\" component={ViewSurvey}/>\r\n           \r\n           <Route exact path=\"/\" component={CompleteSurvey}/>\r\n           <Route  path=\"/CompleteSurvey\" component={CompleteSurvey}/>\r\n           \r\n           <Route exact path=\"/\" component={CreateNewUser}/>\r\n           <Route  path=\"/Register\" component={CreateNewUser}/>\r\n\r\n          <Route exact path=\"/\" component={EditTemplate}/>\r\n           <Route  path=\"/EditTemplate\" component={EditTemplate}/>\r\n           \r\n           <Route exact path=\"/\" component={Surveys}/>\r\n           <Route  path=\"/Surveys\" component={Surveys}/>\r\n           \r\n           <Route exact path=\"/\" component={AvailableSurvey}/>\r\n           <Route  path=\"/AvailableSurvey\" component={AvailableSurvey}/>\r\n\r\n           \r\n           <Route exact path=\"/\" component={CategoryView}/>\r\n           <Route  path=\"/CategoryView\" component={CategoryView}/>\r\n\r\n           <Route exact path=\"/\" component={ListResponses}/>\r\n           <Route  path=\"/ListResponses\" component={ListResponses}/>\r\n           \r\n           <Route exact path=\"/\" component={ResponseTable}/>\r\n           <Route  path=\"/ResponseTable\" component={ResponseTable}/>\r\n\r\n           <Route exact path=\"/\" component={UserProfile}/>\r\n           <Route  path=\"/Profile\" component={UserProfile}/>\r\n\r\n           <Route exact path=\"/\" component={ResponseByUser}/>\r\n           <Route  path=\"/ResponseByUser\" component={ResponseByUser}/>\r\n\r\n           <Route exact path=\"/\" component={Deploy}/>\r\n           <Route  path=\"/Deploy\" component={Deploy}/>\r\n\r\n           <Route exact path=\"/\" component={ReviewRespondent}/>\r\n           <Route  path=\"/ReviewRespondent\" component={ReviewRespondent}/>\r\n\r\n           <Route exact path=\"/\" component={ListToApprove}/>\r\n           <Route  path=\"/ListToApprove\" component={ListToApprove}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveTemplate}/>\r\n           <Route  path=\"/ApproveTemplate\" component={ApproveTemplate}/>\r\n\r\n         \r\n           <Route exact path=\"/\" component={ApproveResponse}/>\r\n           <Route  path=\"/ApproveResponse\" component={ApproveResponse}/>\r\n\r\n           <Route exact path=\"/\" component={ValidateResponse}/>\r\n           <Route  path=\"/ValidateResponse\" component={ValidateResponse}/>\r\n\r\n           <Route exact path=\"/\" component={RespondentList}/>\r\n           <Route  path=\"/RespondentList\" component={RespondentList}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveSurvey}/>\r\n           <Route  path=\"/ApproveSurvey\" component={ApproveSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={TemplateToApprove}/>\r\n           <Route  path=\"/TemplateToApprove\" component={TemplateToApprove}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedSurvey}/>\r\n           <Route  path=\"/ApprovedSurvey\" component={ApprovedSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedTemplate}/>\r\n           <Route  path=\"/ApprovedTemplate\" component={ApprovedTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedTemplate}/>\r\n           <Route  path=\"/RejectedTemplate\" component={RejectedTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedSurvey}/>\r\n           <Route  path=\"/RejectedSurvey\" component={RejectedSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={RespondentInfo}/>\r\n           <Route  path=\"/RespondentInfo\" component={RespondentInfo}/>\r\n\r\n           <Route exact path=\"/\" component={Notifications}/>\r\n           <Route  path=\"/Notifications\" component={Notifications}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyToDeploy}/>\r\n           <Route  path=\"/SurveyToDeploy\" component={SurveyToDeploy}/>\r\n\r\n           <Route exact path=\"/\" component={DeploySurvey}/>\r\n           <Route  path=\"/DeploySurvey\" component={DeploySurvey}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyRejected}/>\r\n           <Route  path=\"/SurveyRejected\" component={SurveyRejected}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyApproved}/>\r\n           <Route  path=\"/SurveyApproved\" component={SurveyApproved}/>\r\n           \r\n           <Route exact path=\"/\" component={TemplateApproved}/>\r\n           <Route  path=\"/TemplateApproved\" component={TemplateApproved}/>\r\n \r\n           <Route exact path=\"/\" component={TemplateRejected}/>\r\n           <Route  path=\"/TemplateRejected\" component={TemplateRejected}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveThisTemplate}/>\r\n           <Route  path=\"/ApproveThisTemplate\" component={ApproveThisTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveThisSurvey}/>\r\n           <Route  path=\"/ApproveThisSurvey\" component={ApproveThisSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={ViewNotification}/>\r\n           <Route  path=\"/ViewNotification\" component={ViewNotification}/>\r\n\r\n           \r\n           \r\n       </Switch>\r\n\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default Content;\r\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom';\nimport Content from './components/Content'\n\n\nexport default function App() {\n    \n  return (\n    <div>\n      <BrowserRouter>\n    \n      <Content />\n\n      </BrowserRouter>\n\n    </div>\n    \n  ) \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-form-builder2/dist/app.css';\nimport App from './app';\n// import DemoBar from './components/demobar';\nimport * as serviceWorker from './serviceWorker';\n// import * as variables from './components/variables';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <App />,\n  document.getElementById('form-builder'),\n);\n\n// ReactDOM.render(\n//   <DemoBar variables={variables} />,\n//   document.getElementById('demo-bar'),\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}