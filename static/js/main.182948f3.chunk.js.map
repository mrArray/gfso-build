{"version":3,"sources":["services/auth.service.js","components/Header.js","cbn.png","components/Menu.js","components/Footer.js","components/Dashboard.js","components/Login.js","components/Landing.js","components/ViewSurvey.js","components/FormContext.js","components/FormElements/TextInput.js","components/FormElements/SelectOption.js","components/FormElement.js","components/FormElementCategory.js","components/CheckSurveyTypeResponse.js","components/CompleteSurvey.js","components/CreateNewUser.js","components/EditTemplate.js","components/Surveys.js","components/AvailableSurvey.js","components/Demobar.js","components/variables.js","components/CategoryView.js","components/ListResponses.js","components/ResponseTable.js","components/UserProfile.js","components/ResponseByUser.js","components/Deploy.js","components/ReviewRespondent.js","components/ListToApprove.js","components/ApproveTemplate.js","components/ApproveResponse.js","components/ValidateResponse.js","components/RespondentList.js","components/ApproveSurvey.js","components/TemplateToApprove.js","components/ApprovedSurvey.js","components/ApprovedTemplate.js","components/RejectedTemplate.js","components/RejectedSurvey.js","components/RespondentInfo.js","components/Notifications.js","components/SurveyToDeploy.js","components/DeploySurvey.js","components/SurveyRejected.js","components/SurveyApproved.js","components/TemplateApproved.js","components/TemplateRejected.js","components/ApproveThisTemplate.js","components/ApproveThisSurvey.js","components/ViewNotification.js","components/UploadSupporting.js","components/ReviewResponder.js","components/ApproveResponder.js","components/Content.js","app.js","serviceWorker.js","index.js"],"names":["username","password","axios","post","headers","then","response","data","localStorage","setItem","JSON","stringify","token","first_name","last_name","address","lga","state","dob","email","phone_number","group_pk","branch_pk","designation_pk","staff_number","formData","FormData","append","title","description","location","status","start_date","due_date","parse","getItem","category","origin","pk","Header","props","routeChange","setState","navigate","window","bind","logOut","message","get","res","notification","length","clear","className","data-widget","to","role","this","data-slide","onClick","Component","Menu","Group1_Branch","Group2","Respondent","Approver","Data_Management_team","current_User","undefined","NewUser","myloading","ReturnedUser","script","document","createElement","src","async","body","appendChild","tempoUser","user","authService","getCurrentUser","user_groups","includes","profile","ApprovedSurveys","warningLoad","RejectedSurveys","ApprovedTemplate","RejectedTemplate","Pendingdeployement","PendingApprovalSurvey","PendingApprovalTemplate","Check","user_type","AvailableSurvey","Logo","height","alt","data-accordion","class","Footer","Dashboard","useEffect","required","value","Login","handleLogin","onChangeUsername","onChangePassword","loading","ViewTemplateloading","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","AuthService","login","error","resMessage","non_field_errors","toString","onSubmit","ref","c","type","name","placeholder","onChange","validations","disabled","style","display","Landing","script1","script2","script3","script4","script5","script7","script0","href","rel","color-on-scroll","id","data-toggle","aria-expanded","aria-label","data-parallax","backgroundImage","ViewSurvey","SurveyList","EditTemplate","Temple_pk","Spinner","animation","variant","map","surveys","i","created_by","created","width","FormContext","createContext","TextInput","input_type","field_value","handleChange","useContext","event","SelectOption","FormElement","field","FormElementCategory","field_category","CheckSurveyTypeResponse","onChangeState","onChangeLga","statee","statesGov","lgasGov","othersGov","check","survey_type","console","log","removeItem","state_pk","lga_pk","List_Of_States","List_Of_lgas","CompleteSurvey","useRef","useState","Get_Survey_Details","Set_Survey_Details","successful","setSuccessful","setMessage","setLoading","Surveydetails","Call_Survey_Details","Provider","newElements","arr","n","push","j","fields","h","sub_categories","SubCategory","minHeight","current","SurveydetailsPk","to_Send","I_to_Send","Object","values","Responsebody","survey_pk","survey_title","detail","myfield","subCategory","CreateNewUser","handleRegister","onChangeFirstName","onChangeLastName","onChangeAddress","onChangeLG","onChangeEmail","onChangeDob","onChangePhoneNumber","onChangeBranch","onChangeDesignation","onChangeStaffNumber","states","Lgaloading","params","List_Of_State","BranchList","DesignationList","GroupList","prevProps","prevState","statepk","Lgas","createNewUser","format","branch","Designation","AdoptSurvey","onChangeSurvey","AdoptSurveymessage","AdoptSurveysuccessful","AdoptSurveyloading","survey","ExtractTemplate","ExtractTemplatePk","formList","survey_template_pk","Filter_with_name","ApprovedSurveyToUser","SingleTemplateCategories","Templatefields","SubCategoryfields","AddField","Surveys","data-card-widget","get_response_count","year","quarter","aria-valuenow","aria-valuemin","aria-valuemax","progress","loadingModal","singleSurveyPk","borderRadius","textAlign","color","border","padding","as","size","aria-hidden","Fill_Survey","Demobar","_onSubmit","twist_result","fieldsList","MyCategoryName","result","find","modifiedObj","filter","item","fieldsObj","concat","last_element","final","my_category","economic_code","heading","previewVisible","shortPreviewVisible","roPreviewVisible","update","_onChange","ElementStore","subscribe","modalClass","shortModalClass","roModalClass","margin","marginRight","showPreview","download_path","back_action","back_name","answer_data","action_name","form_action","form_method","variables","data-dismiss","closePreview","read_only","hide_actions","display_short","React","JOHN","CategoryView","handleSubmit","meloading","response_data","get_form","survey_response_pk","singleCategory","ListResponses","handlePageClick","selectedPage","selected","offset","perPage","currentPage","loadMoreData","tableData","orgtableData","slice","pageCount","Math","ceil","Get_State_Data","tdata","tableDataForState","aria-describedby","tabIndex","aria-controls","rowSpan","colSpan","filled_by","get_entries","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","ResponseTable","Response","economic","fontWeight","number","field_total_sum","table","filename","sheet","buttonText","UserProfile","htmlFor","defaultValue","ResponseByUser","scriptdashboard","onChangeTitle","onChangeQuarter","onChangeStatus","onChangeSurveyType","onChangeStartDate","onChangeDueDate","onChangeYear","onChangeLgas","lgas","jasus_for_state","jasus_for_lga","checkboxes","sync","onNotAllChecked","selectedMap","orderedByI","onAllChecked","onAllUnchecked","ReviewRespondent","ListToApprove","onChangeApprove","onChangeRemark","ApproveThisSurvey","approve","remark","surveyId","ApproveSurvey","ApproveTemplate","handleApprove","onChangestatus","SingleTemplate","get_states","get_lgas","ValidateResponses","template_title","approved_template_timestamp","EditResponse","RespondentList","Users","users","userId","ReviewResponder","state_title","lga_title","date_joined","designation_title","branch_name","ApproveResponder","SurveyInfo","TemplateToApprove","Templates","ApprovedSurvey","RejectedSurvey","UpdateSurvey","handleUpdate","ApprovSurveyInfo","match","Number","rejected","get_latest_history","data-target","RespondentInfo","Notifications","true","notifyId","patch","ViewNotification","api_message","subject","SurveyToDeploy","DeploySurvey","DeploySingleSurvey","DeploySingleSurveyCategories","SurveyRejected","SurveyApproved","TemplateApproved","TemplateRejected","ApproveThisTemplate","ApproveNotifications","MyNotification","MyNotificationdear","whiteSpace","UploadSupporting","handleFileTitleChangeSmart","Filetitle","handleInfoChangeSmart","FileInfo","checkMimeType","files","err","types","x","every","z","toast","maxSelectFile","warn","checkFileSize","onChangeHandler","selectedFile","loaded","onClickHandler","Formdata","onUploadProgress","ProgressEvent","total","success","catch","uploadPercentage","uploadFilePercentage","file","loadingFile","Progress","max","round","handleActivate","onChangeActive","active","ReviewResponderInfo","link","fullname","get_registration_documents","download","info","onChangeUser_pk","onChangeGroup_pk","user_pk","Content","exact","path","component","Deploy","ApproveResponse","ValidateResponse","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.182948f3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst Url ='https://gfso.chinikiguard.com/accounts/api/jwt/';\r\n\r\nclass AuthService {\r\n\r\n \r\n  login(username, password) {\r\n    \r\n\r\n    return axios.post( Url, { username,  password },  { headers: { \r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n    'Access-Control-Allow-Credentials': true }, }   )\r\n    \r\n      .then(response => {\r\n        if (response.data) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n          localStorage.setItem(\"token\", JSON.stringify(response.data.token));\r\n        }\r\n        // console.log(response.data)\r\n        return response.data;\r\n      }\r\n      \r\n      );\r\n    \r\n  }\r\n\r\n //handle logout\r\n  // logout() {\r\n  //   localStorage.removeItem(\"user\");\r\n  //   localStorage.removeItem(\"token\");\r\n  // }\r\n//create new user\r\n  createNewUser( username,password,first_name,last_name,address, lga,state,dob,email,phone_number,group_pk,branch_pk,designation_pk,staff_number) {\r\n//     const mytoken = JSON.parse(localStorage.getItem('user'));\r\n// const token = mytoken.token;\r\n\r\nlet formData = new FormData();\r\n        formData.append('username', username);\r\n        formData.append('password', password);\r\n        formData.append('first_name', first_name);\r\n        formData.append('last_name', last_name);\r\n        formData.append('address', address);\r\n        formData.append('lga', lga);\r\n        formData.append('dob', dob);\r\n        formData.append('state', state);\r\n        formData.append('email', email);\r\n        formData.append('phone_number', phone_number);\r\n        formData.append('group_pk', group_pk);\r\n        formData.append('designation_pk', designation_pk);\r\n        formData.append('branch_pk', branch_pk);\r\n        formData.append('staff_number', staff_number);\r\n        \r\n\r\n    return axios.post('https://gfso.chinikiguard.com/accounts/api/create-user/',formData, {\r\n     \r\n    },\r\n    {  \r\n      headers: { \r\n      'Content-Type':'application/json',\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'POST, GET,HEAD,OPTIONS',\r\n       'Access-Control-Allow-Credentials': true \r\n      }, \r\n    }   \r\n    )\r\n  }\r\n\r\n  //this handle projects\r\n  RegisterProject(title,description,location,status,start_date,due_date){\r\n    const mytoken = JSON.parse(localStorage.getItem('user'));\r\nconst token = mytoken.token;\r\n     return  axios.post(\"https://ecological.chinikiguard.com/projects/api/create/\", {\r\n\r\n     title,\r\n     description,\r\n     location,\r\n     status,\r\n     start_date,\r\n     due_date,\r\n  },\r\n  \r\n  { \r\n    \r\n    \r\n    headers: { \r\n    'Authorization': `Token ${token}`,\r\n     'Access-Control-Allow-Origin': '*',\r\n     'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n     'Access-Control-Allow-Credentials': true \r\n    }, \r\n  }   \r\n  )\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n//this handle survey creation\r\nCreateSurvey(title,category,status,origin){\r\n\r\n  const mytoken = JSON.parse(localStorage.getItem('user'));\r\n  const token = mytoken.token;\r\n  return  axios.post(\"https://gfso.chinikiguard.com/survey/api/create/survey/\", {\r\n\r\n  title,\r\n  category,\r\n  status,\r\n  origin,\r\n},\r\n\r\n{ \r\n \r\n \r\n headers: { \r\n 'Authorization': `Token ${token}`,\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n  'Access-Control-Allow-Credentials': true \r\n }, \r\n}   \r\n)\r\n\r\n.then(response => {\r\n  if (response.data) {\r\n    localStorage.setItem(\"survey_pk\", JSON.stringify(response.data.pk));\r\n  }\r\n  // console.log(response.data)\r\n  return response.data;\r\n}\r\n\r\n);\r\n\r\n\r\n\r\n\r\n}\r\n\r\n  \r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\n\r\nexport default new AuthService();","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch,Redirect } from \"react-router-dom\";\r\nimport authService from '../services/auth.service';\r\nimport axios from 'axios'\r\n\r\nclass Header extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.routeChange = this.routeChange.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n\r\n  this.state = {\r\n      message: []\r\n  };\r\n  }\r\n  // state = {\r\n  //   navigate: false\r\n  // };\r\n  componentDidMount() {\r\n\r\n\r\n    const token = JSON.parse(localStorage.getItem('token'));\r\n    // const token = mytoken.token;\r\n    //call the States and LGAS at the first \r\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/?read=no',\r\n      {\r\n        headers:\r\n        {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Token ${token}`,\r\n        },\r\n\r\n      },\r\n    )\r\n      .then(res => {\r\n        if (res.data) {\r\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\r\n        }\r\n        this.setState({\r\n          notification: res.data.length,\r\n          message: res.data\r\n        });\r\n        // console.log(res.data)                  \r\n\r\n      })\r\n\r\n      \r\n  }\r\n  logOut() {\r\n   localStorage.clear();\r\n    window.location = \"/\"\r\n    //  (<Redirect to=\"/login\" />)\r\n  }\r\n  routeChange = () => {\r\n    this.setState({ navigate: true });\r\n    window.location = \"/dashboard\"\r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    // const { navigate } = this.state;\r\n\r\n    return (\r\n\r\n      <Switch>\r\n        {/* {currentUser && ( */}\r\n\r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n          {/* Left navbar links */}\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-widget=\"pushmenu\" to=\"#\" role=\"button\"><i className=\"fas fa-bars\" /></Link>\r\n            </li>\r\n            {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n      <a href=\"../../index3.html\" className=\"nav-link\">Home</a>\r\n    </li> */}\r\n            {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n      <a href=\"#\" className=\"nav-link\">Menu</a>\r\n    </li> */}\r\n          </ul>\r\n          {/* Right navbar links */}\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {/* Navbar Search */}\r\n\r\n            {/* Messages Dropdown Menu */}\r\n            <li className=\"nav-item\">\r\n              <Link  to=\"/Notifications\" className=\"nav-link\"  >\r\n                <i className=\"fas fa-bell\" />\r\n                <span className=\"badge badge-danger navbar-badge\">{this.state.notification}</span>\r\n              </Link>\r\n             \r\n            </li>\r\n\r\n\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-widget=\"fullscreen\" to=\"#\" role=\"button\">\r\n                <i className=\"fas fa-expand-arrows-alt\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-slide=\"true\" data-widget=\"control-sidebar\" onClick={this.logOut}  >\r\n                <span>Sign Out</span> &nbsp;\r\n        <i className=\"fas fa-user-alt\" />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n      </Switch>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/cbn.ec9a327b.png\";","import React, { Component } from 'react'\r\nimport { Link, Switch } from 'react-router-dom';\r\nimport Logo from '../cbn.png'\r\nimport authService from '../services/auth.service';\r\nimport axios from 'axios'\r\n\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n            Group1_Branch: false,\r\n            Group2: false,\r\n            Respondent: false,\r\n            Approver: false,\r\n            Data_Management_team:false,\r\n            current_User: undefined,\r\n            NewUser:false,\r\n            myloading: true,\r\n            ReturnedUser:false\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const script = document.createElement(\"script\");\r\n\r\n        script.src = \"./plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js\";\r\n        script.async = true;\r\n\r\n        document.body.appendChild(script);\r\n        //user  stored user information (including JWT) from AuthService class\r\n        const token = JSON.parse(localStorage.getItem('token'));\r\n        const tempoUser = JSON.parse(localStorage.getItem('tempoUser'));\r\n        const user = authService.getCurrentUser();\r\n        // const SuccessMessage = \"User Created Successfully.\";\r\n\r\n        if (tempoUser) {\r\n\r\n        this.setState({\r\n            NewUser:tempoUser.user_groups.includes(\"NewUser\")\r\n        })\r\n    }\r\n        //check User Group\r\n        if (user) {\r\n            this.setState({\r\n                current_User: user.profile,\r\n                ReturnedUser:user.profile.user_groups.includes(\"NewUser\"),\r\n                Group1_Branch: user.profile.user_groups.includes(\"Group 1/Branch\"),\r\n                Group2: user.profile.user_groups.includes(\"Group 2\"),\r\n                Respondent: user.profile.user_groups.includes(\"Respondent\"),\r\n                Approver: user.profile.user_groups.includes(\"Approver\"),\r\n                Data_Management_team: user.profile.user_groups.includes(\"Data Management team\"),           \r\n            });\r\n\r\n        // const token = user.token;\r\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    ApprovedSurveys: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n\r\n            axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=no&rejected=yes\",\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    RejectedSurveys: res.data.length,\r\n\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n\r\n            //for template\r\n\r\n            axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no`,\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    ApprovedTemplate: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n\r\n            axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&rejected=yes`,\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    RejectedTemplate: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n            axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved=yes&approved_template=yes&deployed=no`,\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    Pendingdeployement: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n            axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=no`,\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    PendingApprovalSurvey: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n            axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no&rejected=no\",\r\n            {\r\n                headers:\r\n                {\r\n                    'Authorization': `Token ${token}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                    'Access-Control-Allow-Credentials': true\r\n                },\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    PendingApprovalTemplate: res.data.length,\r\n                    myloading: false,\r\n                    warningLoad: true,\r\n                });\r\n            })\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const token = JSON.parse(localStorage.getItem('token'));\r\n\r\n    const Check=JSON.parse(localStorage.getItem('user'));\r\n            const user_type=Check.profile.user_type\r\n            const lga =Check.profile.lga\r\n            const state =Check.profile.state\r\n\r\n            switch (user_type) {\r\n                case 'sg_user':\r\n                    return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&states=${state}`,\r\n                    {\r\n                        headers:\r\n                        {\r\n                            'Authorization': `Token ${token}`,\r\n                            'Access-Control-Allow-Origin': '*',\r\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                            'Access-Control-Allow-Credentials': true\r\n                        },\r\n                    })\r\n                    .then(res => {\r\n                        this.setState({\r\n                            AvailableSurvey: res.data.length,\r\n                            myloading: false,\r\n                            warningLoad: true,\r\n                        });\r\n                    })\r\n             \r\n                case 'lg_user':\r\n                    return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&lgas=${lga}`,\r\n                    {\r\n                        headers:\r\n                        {\r\n                            'Authorization': `Token ${token}`,\r\n                            'Access-Control-Allow-Origin': '*',\r\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                            'Access-Control-Allow-Credentials': true\r\n                        },\r\n                    })\r\n                    .then(res => {\r\n                        this.setState({\r\n                            AvailableSurvey: res.data.length,\r\n                            myloading: false,\r\n                            warningLoad: true,\r\n                        });\r\n                    })\r\n        \r\n                default:\r\n                    return null;\r\n            }\r\n        \r\n        }  \r\n           \r\n\r\n\r\n    render() {\r\n        const { NewUser,ReturnedUser, current_User, Group1_Branch, Group2,Respondent,Approver,Data_Management_team } = this.state;\r\n\r\n\r\n        return (\r\n\r\n            <Switch>\r\n                \r\n                {/* {current_User ||NewUser && ( */}\r\n\r\n\r\n                    <aside className=\"main-sidebar sidebar-light-success elevation-4 \">\r\n\r\n                        {/* Brand Logo */}\r\n                        <Link to=\"/dashboard\" className=\"brand-link\">\r\n                            <center> <img src={Logo} height=\"100px\" alt=\"\"/></center><br />\r\n                            <center> <span className=\"brand-text font-weight-light text-yellow\"><h3><b>GFSO</b></h3></span></center>\r\n                        </Link>\r\n\r\n                        <div className=\"sidebar\">\r\n\r\n                            {/* Sidebar Menu */}\r\n                            <nav className=\"mt-2\">\r\n                            {Group1_Branch && (\r\n\r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    \r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n                                        </p>\r\n                                        </Link>\r\n\r\n                                       \r\n                                        {/* group1 */}\r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentInfo\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-info text-green\"></i>\r\n                                                    <p>\r\n                                                    Update Respondent \r\n                                                 </p>\r\n                                                </Link>\r\n                                            </li>\r\n                                            \r\n                                        </ul>\r\n                                        {/* <hr/> */}\r\n                                        <h1 className=\"nav-header\">SURVEY</h1>\r\n                                        {/* <hr/> */}\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/Deploy\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                    Create Survey \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveThisSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                        <p>\r\n                                                        \r\n    \r\n                                                     Pending Approval\r\n                                                     {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                  Approved Surveys \r\n                                                  {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul> \r\n                                            \r\n                                            \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected Surveys \r\n                                                      {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/SurveyToDeploy\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-clock-o text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Pending Deployement\r\n                                                        {this.state.Pendingdeployement\r\n                                                      ?this.state.Pendingdeployement!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Pendingdeployement}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n\r\n    </p>\r\n\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                         Surveys Progress \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                                {/* <hr/>  */}\r\n                                                <h1 className=\"nav-header\">TEMPLATE</h1>\r\n                                                {/* <hr/> */}\r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveThisTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ViewSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Template\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedTemplate\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                      {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                            \r\n                                    </li>\r\n                                </ul>\r\n                            )}\r\n\r\n\r\n                                {NewUser && (\r\n                                      <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                      <li className=\"nav-item has-treeview menu-open\">\r\n  \r\n                                    <ul class=\"nav nav-treeview\">\r\n                                        <li class=\"nav-item has-treeview\">\r\n                                            <Link to=\"/UserUploads\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-paperclip text-warning\"></i>\r\n                                                <p>\r\n                                                    Supporting Docs\r\n\r\n                                          </p>\r\n                                            </Link>\r\n                                            </li>\r\n                                    </ul> </li>\r\n                                    </ul>\r\n\r\n                                )}\r\n                                  {/* group 2 */}\r\n\r\n                                {Group2 && (\r\n                                    \r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active bg-primary\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n    </p>\r\n                                        </Link>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentList\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  Approve  Respondent  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        {/* <hr/> */}\r\n                                        <h1 className=\"nav-header\">SURVEY</h1>\r\n                                        {/* <hr/> */}\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval\r\n                                                    \r\n                                                    {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                     Approved\r\n                                                     {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected\r\n                                                    {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        {/* <hr/> */}\r\n                                        <h1 className=\"nav-header\">TEMPLATE</h1>\r\n                                        {/* <hr/> */}\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                    Approved \r\n                                                    {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected \r\n                                                    {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        {/* <hr/> */}\r\n                                        <h1 className=\"nav-header\">RESPONSES</h1>\r\n{/* <hr/> */}\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ValidateResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                Validate Responses\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                       \r\n                                    </li>\r\n\r\n                                </ul>\r\n                                )}\r\n                                \r\n                            \r\n                                {ReturnedUser && (\r\n\r\n                                    <ul class=\"nav nav-treeview\">\r\n                                        <li class=\"nav-item has-treeview\">\r\n                                            <Link to=\"/UserUploads\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-paperclip text-warning\"></i>\r\n                                                <p>\r\n                                                    Supporting Docs\r\n\r\n</p>\r\n                                            </Link>\r\n                                        </li>\r\n                                    </ul>\r\n                                )}\r\n                                {Respondent && (\r\n\r\n                                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                        <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                            <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n                                                <i className=\"nav-icon fas fa-home\" />\r\n                                                <p>\r\n                                                    Dashboard\r\n</p>\r\n                                            </Link>\r\n                                            \r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n                                                        <p>\r\n                                                            Available Survey\r\n                                                            \r\n                                                            {this.state.AvailableSurvey\r\n                                                      ?this.state.AvailableSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.AvailableSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                )}\r\n                                {Approver && (\r\n\r\n                                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                        <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                            <Link to=\"/dashboard\" className=\"nav-link active bg-info\">\r\n                                                <i className=\"nav-icon fas fa-home\" />\r\n                                                <p>\r\n                                                    Dashboard\r\n</p>\r\n                                            </Link>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-paperclip text-info\"></i>\r\n                                                        <p>\r\n                                                        Approve response\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-bullhorn text-info\"></i>\r\n                                                        <p>\r\n                                                            Generate Mgt. Reports\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                )}\r\n                                {Data_Management_team && (\r\n\r\n                                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                        <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                            <Link to=\"/dashboard\" className=\"nav-link active bg-pink\">\r\n                                                <i className=\"nav-icon fas fa-home\" />\r\n                                                <p>\r\n                                                    Dashboard\r\n</p>\r\n                                            </Link>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-paperclip text-pink\"></i>\r\n                                                        <p>\r\n                                                        Develop Capability\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-bullhorn text-pink\"></i>\r\n                                                        <p>\r\n                                                           Manage Reports\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                )}\r\n                            </nav>\r\n                            {/* /.sidebar-menu */}\r\n                        </div>\r\n                        {/* /.sidebar */}\r\n\r\n\r\n\r\n                    </aside>\r\n\r\n                {/* )} */}\r\n            </Switch>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n\r\n \r\nexport default  class Footer extends Component {\r\n\r\n  // componentDidMount() {\r\n    \r\n  //   const mytoken = JSON.parse(localStorage.getItem('user'));\r\n  //   const token = mytoken.token;\r\n  //   //call the States and LGAS at the first \r\n  //   const state = \"Ahmad loophole\";\r\n  //   axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n  //       params:\r\n  //       {\r\n  //         state: state\r\n  //       }\r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\r\n  //       }\r\n  //       // console.log(res.data)                  \r\n\r\n  //     })\r\n  //     axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n  //       params:\r\n  //       {\r\n  //         state: state\r\n  //       }\r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\r\n  //       }\r\n  //     }); \r\n  //     axios.get(`https://gfso.chinikiguard.com/accounts/api/branch/list/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n       \r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       this.setState({\r\n  //         BranchList: res.data,\r\n  //     });\r\n  //     });\r\n  //     axios.get(`https://gfso.chinikiguard.com/accounts/api/designation/list/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n       \r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"designations\", JSON.stringify(res.data));\r\n  //     }\r\n  //       this.setState({\r\n  //         DesignationList: res.data,\r\n  //     });\r\n  //     });\r\n\r\n\r\n\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n        <footer class=\"main-footer\">\r\n        <strong>Copyright &copy; 2021 <Link to=\"\">BeeSoft Technology</Link>.</strong>\r\n        All rights reserved.\r\n        <div class=\"float-right d-none d-sm-inline-block\">\r\n          <b>Version</b> 1.0.0\r\n        </div>\r\n      </footer>\r\n \r\n );\r\n}\r\n}","import React, {  useEffect } from \"react\";\r\n// import { Line, Bar, Pie, Doughnut, HorizontalBar, Radar } from \"react-chartjs-2\";\r\n// import axios from \"axios\";\r\n// import Spinner from 'react-bootstrap/Spinner'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\n\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  \r\n \r\n \r\n  //using the functions\r\n  useEffect(() => {\r\n\r\n  \r\n   \r\n  }, []);\r\n\r\n  if (!localStorage.getItem('user')) {\r\n    return (<Redirect to={'/login'} />)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"content-wrapper\">\r\n        <Menu />\r\n        <br />\r\n        {/* Info boxes */}\r\n\r\n       \r\n\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Logo from '../cbn.png'\r\n\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n    \r\n        this.state = {\r\n          username: \"\",\r\n          password: \"\",\r\n          loading: false,\r\n          ViewTemplateloading: false,\r\n          message: \"\"\r\n        };\r\n      }\r\n    \r\n      onChangeUsername(e) {\r\n        this.setState({\r\n          username: e.target.value\r\n        });\r\n      }\r\n    \r\n      onChangePassword(e) {\r\n        this.setState({\r\n          password: e.target.value\r\n        });\r\n      }\r\n    \r\n      componentDidMount(){\r\n\r\n        if (localStorage.getItem('user')) {\r\n          return (<Redirect to={'/dashboard'} />)\r\n      }\r\n      }\r\n      handleLogin(e) {\r\n        e.preventDefault();\r\n        \r\n        this.setState({\r\n          message: \"\",\r\n          loading: true,\r\n          ViewTemplateloading: true,\r\n\r\n        });\r\n    \r\n        this.form.validateAll();\r\n    \r\n        if (this.checkBtn.context._errors.length === 0) {\r\n          AuthService.login(this.state.username, this.state.password).then(\r\n            () => {\r\n            window.location = \"/dashboard\"\r\n            },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data.non_field_errors &&\r\n                            error.response.data.non_field_errors) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage,\r\n                        ViewTemplateloading: false,\r\n\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // const {loading} = this.state;\r\n        \r\n        return (\r\n            <div className=\"hold-transition login-page\">\r\n                {this.state.ViewTemplateloading && (\r\n                        <span className=\"\">\r\n                            <div className=\"overlay-wrapper\">\r\n                                <div className=\"overlay \">         \r\n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\r\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\r\n                            </div>\r\n\r\n                        </span>\r\n                     )}\r\n                <div className=\"\">\r\n                    <div className=\"login-logo\">\r\n                    <img src={Logo} height=\"100px\" alt=\"\" />\r\n                        <br />\r\n                        <Link to=\"\"><b>CBN</b> GFSO</Link>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body login-card-body\">\r\n                            <p className=\"login-box-msg\">Sign in to start your session</p>\r\n                            <br />\r\n                            <Form\r\n                                onSubmit={this.handleLogin}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n\r\n                                <div className=\"input-group mb-4\">\r\n\r\n                                    <Input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"username\" value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        validations={[required]}\r\n                                    />\r\n                                    <div className=\" input-group-append\">\r\n                                        <div className=\"input-group-text\">\r\n                                            <span className=\"fas fa-user\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"input-group mb-4\">\r\n                                    <Input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        validations={[required]} />\r\n                                    <div className=\"input-group-append\">\r\n                                        <div className=\"input-group-text\">\r\n                                            <span className=\"fas fa-lock\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        disabled={this.state.loading}\r\n                                    >\r\n                                        {/* {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                        )} */}\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n\r\n                            </Form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {  Link, Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Landing extends Component {\r\n\r\n    componentDidMount () {\r\n\r\n        \r\n        if (localStorage.getItem('user')) {\r\n          return (<Redirect to={'/dashboard'} />)\r\n      }\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"./Landing/assets/js/core/jquery.min.js\";\r\n\r\n      const script1 = document.createElement(\"script\");\r\n      script1.src = \"./Landing/assets/./\";\r\n\r\n      const script2 = document.createElement(\"script\");\r\n      script2.src = \"./Landing/assets/js/core/popper.min.js\";\r\n      \r\n      const script3 = document.createElement(\"script\");\r\n      script3.src = \"./Landing/assets/js/core/bootstrap-material-design.min.js\";\r\n      \r\n      const script4 = document.createElement(\"script\");\r\n      script4.src = \"./Landing/assets/js/plugins/moment.min.js\";\r\n\r\n      const script5 = document.createElement(\"script\");\r\n      script5.src = \"./Landing/assets/js/plugins/bootstrap-datetimepicker.js\";\r\n\r\n      const script7 = document.createElement(\"script\");\r\n      script7.src = \"./Landing/assets/js/plugins/nouislider.min.js\";\r\n\r\n      const script0 = document.createElement(\"script\");\r\n      script0.src =\"./Landing/assets/js/material-kit.js?v=2.0.7\";\r\n      \r\n        \r\n      script.async = true;\r\n      script1.async = true;\r\n      script2.async = true;\r\n      script3.async = true;\r\n      script4.async = true;\r\n      script5.async = true;\r\n      script7.async = true;\r\n      script0.async = true;\r\n      \r\n      document.body.appendChild(script);\r\n      document.body.appendChild(script1);\r\n      document.body.appendChild(script2);\r\n      document.body.appendChild(script3);\r\n      document.body.appendChild(script4);\r\n      document.body.appendChild(script5);\r\n      document.body.appendChild(script7);\r\n      document.body.appendChild(script0);\r\n    }\r\n  \r\n\r\n    render() {\r\n        if (localStorage.getItem('user')) {\r\n            return (<Redirect to={'/dashboard'} />)\r\n          }\r\n\r\n    return (\r\n\r\n        <div className=\"landing-page sidebar-collapse\"  >\r\n            <link href=\"./assets/css/material-kit.css?v=2.0.7\" rel=\"stylesheet\" />\r\n\r\n            <nav className=\"navbar navbar-transparent navbar-color-on-scroll fixed-top navbar-expand-lg\" color-on-scroll={100} id=\"sectionsNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-translate\">\r\n                    <img src=\"dist/img/cbn.png\" height=\"100px\"  alt=\"\"/>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"sr-only\">Toggle navigation</span>\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"dropdown nav-item\">\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\" className=\"btn btn-primary btn-raised btn-sm\" data-toggle=\"dropdown\">\r\n                                    Sign In\r\n            </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" rel=\"tooltip\" title data-placement=\"bottom\" href=\"\" target=\"_blank\" data-original-title=\"\">\r\n                                    <i className=\"\" />\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" rel=\"tooltip\" title data-placement=\"bottom\" href=\"\" target=\"_blank\" data-original-title=\"\">\r\n                                    <i className=\"\" />\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/register\" className=\"btn btn-success btn-raised btn-sm\" data-toggle=\"dropdown\">\r\n                                    Sign Up\r\n            </Link>\r\n\r\n                            </li> */}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n            <div className=\"page-header header-filter\" data-parallax=\"true\" style={{ backgroundImage: 'url(\"./assets/img/cbnbg.jpg\")' }}>\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h1 className=\"title\">Statistics Automation Project </h1>\r\n                            <h4> Statistics Data Ingestion Project For the Central Bank of Nigeria\r\n</h4>\r\n                            <hr />\r\n                            <Link to=\"/login\" className=\"btn btn-primary btn-raised btn-lg\" >\r\n                                    Sign In\r\n            </Link>\r\n            &nbsp;&nbsp; &nbsp;&nbsp;\r\n                                <Link to=\"/Register\" className=\"btn btn-success btn-raised btn-lg\" >\r\n                                    Sign Up\r\n            </Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"main main-raised\">\r\n                <div className=\"container\">\r\n                    <div className=\"section text-center\">\r\n\r\n\r\n                    </div></div></div></div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n}","import React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nexport default class ViewSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            ViewTemplateloading:false,\n            message: \"\",\n            SurveyList: [],\n            EditTemplate:[]\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/template/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveyTemplate\", JSON.stringify(res.data));\n                }\n                this.setState({\n                    SurveyList: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n            axios.get('https://gfso.chinikiguard.com/locations/api/list/state/',\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n    \n                })\n                .then(res => {\n                    if (res.data) {\n                        localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                    }\n                    // console.log(res.data)\n                })\n    \n           \n    \n    }\n\n    EditTemplate(SurveyList) {\n\n        localStorage.setItem(\"SingleTemplate\", JSON.stringify(SurveyList));\n        this.setState({\n            ViewTemplateloading: true,\n        });\n\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const Temple_pk = SurveyList.pk;\n        // console.log(SurveyList.pk)\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${Temple_pk}/`,\n          {\n            headers:\n            {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${token}`,\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n              'Access-Control-Allow-Credentials': true\n            },\n           \n          })\n          .then(res => {\n            if (res.data) {\n              localStorage.setItem(\"Templatedetails\", JSON.stringify(res.data));\n            }\n            window.location = \"/EditTemplate\"\n            this.setState({\n                EditTemplate: res.data,\n                \n              });\n          })\n\n\n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\">                                        \n                    {/* Default box */}\n                    {this.state.ViewTemplateloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <div className=\"card card-solid\">\n                        \n                        <div className=\"card-body pb-0\">\n                            \n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n                                <div className=\"row\">\n                                       \n                                    {this.state.SurveyList.map((surveys,i )=> (\n\n                                        <div className=\"col-12 col-sm-6 col-md-4 d-flex align-items-stretch flex-column\">\n                                            <div className=\"card bg-light d-flex flex-fill\">\n                                         \n                                                <div key={i} className=\"card-header text-muted border-bottom-0\">\n                                                    {surveys.title}\n                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     \n                                                </div>\n                                                <div className=\"card-body pt-0\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-7\">\n                                                            <h2 className=\"lead\" ><b>{surveys.title}</b></h2>\n                                                            <p className=\"text-muted text-sm\"><b>Created by: </b> {surveys.created_by} </p>\n                                                            <p className=\"text-muted text-sm\"><b>Date: </b> {surveys.created} </p>\n                                                        </div>\n                                                        <div className=\"col-5 text-center\">\n                                                            <img src={Logo}  width=\"70px\" height=\"50px\" alt=\"user-avatar\" className=\"img-circle img-fluid\" />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"card-footer\">\n                                                    <div className=\"text-right\">\n                                                                <button \n                                                                 onClick={this.EditTemplate.bind(this, surveys)}\n                                                                 className=\"btn btn-info\"\n                                                                 disabled={this.state.loading}\n\n                                                                 >\n                                        \n                                                                  Review & Deploy Template &nbsp;&nbsp;\n\n                                                                </button>\n                                                        \n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        {/* /.card-body */}\n                        <div className=\"card-footer\">\n                            <nav aria-label=\"Contacts Page Navigation\">\n\n                            </nav>\n                        </div>\n                        {/* /.card-footer */}\n                    </div>\n                    {/* /.card */}\n                </section>\n                <Footer />\n            </div>\n        );\n    }\n}","import { createContext } from 'react';\nexport const FormContext = createContext();\n\n","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n\n// const required = value => {\n//     if (!value) {\n//       return (\n//         <div className=\"alert alert-danger\" role=\"alert\">\n//           This field is required!\n//         </div>\n//       );\n//     }\n//   };\n  \n \nconst TextInput = ({ input_type, pk, name, field_value }) => {\n\n    const  {handleChange}  = useContext(FormContext)\n    return (\n\n        <div className=\"col-4\">\n\n         <label>{name} </label>\n         <input\n         type=\"number\" \n         className=\"form-control\"  \n         placeholder='Amount'\n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         required\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default TextInput\n","import React from 'react'\n\nconst SelectOption = () => {\n\n    return (\n                        <div className=\"col-4\">\n                          <input type=\"text\" className=\"form-control is-valid\"    /> \n                             <br />\n                        </div>\n                    \n\n\n    )\n}\n\nexport default SelectOption","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElement = ({ field: { input_type, pk, name, value, }}) => {\n  \n    switch (input_type) {\n        case 'text_input_':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'number':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n        case 'text_area_':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElement\n","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElementCategory = ({ field_category: { input_type, pk, name, value, }}) => {\n  \n    switch (input_type) {\n        case 'text_input_':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'number':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n        case 'text_area_':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElementCategory\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class CheckSurveyTypeResponse extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLga = this.onChangeLga.bind(this);\n\n        this.state = {\n            statee:\"\",\n            lga:\"\",\n            myloading: false,\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n        };\n    }\n\n    onChangeState(e) {\n        this.setState({\n            statee: e.target.value\n        });\n    }\n    onChangeLga(e) {\n        this.setState({\n            lga: e.target.value\n        });\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n         // console.log(res.data)   \n\n        // check for the value selected and show the related content\n        try {\n            const TargetResponse = JSON.parse(localStorage.getItem('Surveydetails'));\n\n            const check = TargetResponse.survey_type\n\n            if (check) {\n                this.setState({\n                    statesGov: check.includes(\"sg\"),\n                    lgasGov: check.includes(\"lg\"),\n                    othersGov: check.includes(\"other\"),\n                });\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n\n        localStorage.removeItem(\"state_pk\");\n        localStorage.removeItem(\"lga_pk\");\n\n    }\n    componentDidUpdate() {\n        const state_pk = this.state.statee\n        const lga_pk = this.state.lga\n       \n        if (state_pk) {\n\n        localStorage.setItem(\"state_pk\",state_pk);\n\n        }else if(lga_pk){\n\n            localStorage.setItem(\"lga_pk\",lga_pk);\n\n        }else{\n            return null;\n        }    \n    }\n\n\n    render() {\n\n         //get the list of state and LGAS  in the localStorage\n         const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n         const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n         \n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov, othersGov } = this.state;\n\n        return (\n            <div>\n                {statesGov && (\n                    <div className=\"col-sm-12\">\n                        <div className=\"form-group\">\n                            <hr/>\n                           <center> <label> Which state are you from</label></center>\n                            <select type=\"text\" className=\"form-control \" placeholder\n                               onChange={this.onChangeState}\n                                required\n                                value={this.state.statee}\n\n                            >\n                                <option value=\"\">Select your State</option>\n                                {List_Of_States && List_Of_States.map(state => (\n                                 <option value= {state.pk}>{state.title}</option>\n\n                             ))}\n                            </select>\n                        </div>\n                    </div>\n\n                )}\n                {lgasGov && (\n                    <div className=\"col-sm-12\">\n                        <div className=\"form-group\">\n                        <center> <label> Which LGA are you from</label></center>\n                            <select type=\"text\" className=\"form-control \" placeholder\n                                onChange={this.onChangeLga}\n                                validations={[required]}\n                                value={this.state.lga}\n\n                            >\n                                <option value=\"\">Select your LGA</option>\n                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                 <option value= {lga.pk}>{lga.title}</option>\n\n                             ))}\n                            </select>\n                        </div>\n                    </div>\n                )}\n                {othersGov && (\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label> Survey Type</label>\n                            <select type=\"text\" className=\"form-control \" placeholder \n                                validations={[required]}\n                            >\n                                <option value=\"\">Select</option>\n                                <option value=\"SG\">SG</option>\n                                <option value=\"LG\">LG</option>\n                                <option value=\"OTHER\">OTHER</option>\n                            </select>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","\nimport { useState, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FormElement from './FormElement';\nimport FormElementCategory from './FormElementCategory';\nimport { FormContext } from './FormContext';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport axios from 'axios'\nimport CheckSurveyTypeResponse from './CheckSurveyTypeResponse';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n\n\n//hey i will use react hook here\nconst CompleteSurvey = (props) => {\n\n  \n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [Get_Survey_Details, Set_Survey_Details] = useState({});\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n\n  // Call_Survey_Details form localStorage\n  const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n  const Call_Survey_Details = Surveydetails.form;\n\n\n  \n  useEffect(() => {\n    // Call_Survey_Details form localStorage\n    const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n    const Call_Survey_Details = Surveydetails.form;\n    Set_Survey_Details(Call_Survey_Details)\n       \n\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    setMessage(\"\");\n    setLoading(true);\n\n\n    form.current.validateAll();\n\n    //get the user from the localstorage\n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n    // const state= mytoken\n\n    //get single survey details\n    const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n\n    //get the survey Pk  to send as require survey_pk\n    const SurveydetailsPk = Surveydetails.pk\n\n    //Save all user responses of the survey  to LocalStorage\n    const to_Send = JSON.parse(localStorage.getItem('Response_to_Send'))\n\n    // returns an array of a given object's own enumerable property values\n    const I_to_Send = Object.values(to_Send);\n\n    //user state_pk\n    const state_pk = localStorage.getItem('state_pk');\n    const lga_pk = localStorage.getItem('lga_pk');\n\n    //Response Body to send to Mallam Ahmad\n    const Responsebody =\n    {\n      survey_pk: SurveydetailsPk,\n      lga_pk: lga_pk,\n      state_pk: state_pk,\n      form: I_to_Send\n    }\n\n    if (checkBtn.current.context._errors.length === 0) {\n\n      // console.log(Responsebody);\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/create/response/\", Responsebody,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n\n          if (res.data) {\n            localStorage.setItem(\"Response_Success\", JSON.stringify(res.data));\n          }\n          setMessage(res.data.survey_title);\n          setSuccessful(true);\n        },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.survey_title ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      // console.log(Get_Survey_Details)\n    }\n  }\n\n  //this handle the change user typing\n  const handleChange = (id, event) => {\n\n    const newElements = { ...Get_Survey_Details }\n    const arr = [...Get_Survey_Details];\n\n\n    //convert the categories objects to array\n    for (let n = 0; n < newElements.length; n++) {\n      arr.push(newElements[n]);\n    }\n\n    //first array to loop through the categories\n    for (let i = 0; i < arr.length; i++) {\n      const category = arr[i];\n\n      //second array to loop through the field\n      for (let j = 0; j < category.fields.length; j++) {\n        const field = category.fields[j];\n\n        //check the pk for each field\n        const { pk } = field;\n        if (id === pk) {\n          field['value'] = event.target.value;\n        }\n      }\n\n      //first array to loop through the SubCategories\n      for (let h = 0; h < category.sub_categories.length; h++) {\n        const SubCategory = category.sub_categories[h];\n\n        //second array to loop through the fields of SubCategory\n        for (let j = 0; j < SubCategory.fields.length; j++) {\n          const FormElementCategory = SubCategory.fields[j];\n          // console.log(FormElementCategory)\n\n\n          //check the pk for each field\n          const { pk } = FormElementCategory;\n          if (id === pk) {\n            FormElementCategory['value'] = event.target.value;\n          }\n        }\n      }\n    }\n    //sub_categories\n\n    //Save the result to the localStorage\n    localStorage.setItem(\"Response_to_Send\", JSON.stringify(Get_Survey_Details));\n  }\n\n  if (!localStorage.getItem('user')) {\n    return (<Redirect to={'/login'} />)\n  }\n\n  return (\n\n    <FormContext.Provider value={{ handleChange }}>\n      <Header />\n      <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n        <Menu /><br />\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {/* <div className=\"card card-\"> */}\n              {/* left column */}\n              \n              {Surveydetails.form.length ? \n\n              <div className=\"col-md-12\">\n                <Form onSubmit={handleSubmit} ref={form}>\n                  {!successful && (\n                    <div>\n                      <center><h2 class=\"mt-4 mb-2\">{Surveydetails.title}</h2></center>\n                      <CheckSurveyTypeResponse />\n                      {Call_Survey_Details.map(myfield => (\n                        <div className=\"card card-\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">{myfield.name}</h3>\n                          </div>\n                          <div className=\"card-body\">\n                            {/* <h6 className=\"\">{myfield.type}</h6> */}\n                            <div className=\"row\">\n                              {\n                                myfield ? myfield.fields.map((field, i) => <FormElement key={i} field={field} />)\n                                  : null\n                              }\n                            </div>\n                          </div>\n                          {myfield.sub_categories.map(subCategory => (\n                            <div>\n                              <h6 className=\"\">{subCategory.name}</h6>\n                              <div className=\"col-12\">\n                                <div className=\"row\">\n                                  {\n                                    subCategory ? subCategory.fields.map((field_category, i) => <FormElementCategory key={i} field_category={field_category} />)\n                                     : null\n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                      <div className=\"form-group\">\n                        {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\n                        <center> <button className=\"btn btn-primary btn-lg \" disabled={loading}>\n                          {loading && (\n                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                          )}\n                          <span>Submit</span>\n                        </button>\n                        </center>\n                      </div>\n                    </div>\n                  )}\n                  <h3>\n                    <center>\n                      {message && (\n                        <div className=\"form-group\">\n                          <div\n                            className={\n                              successful ? \"alert alert-success\" : \"alert alert-danger\"\n                            }\n                            role=\"alert\"\n                          >\n                            {message}\n                          </div>\n                        </div>\n                      )}\n                    </center>\n\n                  </h3>\n\n                  <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n              </div>\n: <center><h2>No  Survey Template Available</h2></center>\n                                        \n}\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </FormContext.Provider>\n  );\n}\n\nexport default CompleteSurvey;\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\nexport default class CreateNewUser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeLG = this.onChangeLG.bind(this);\n    this.onChangeState = this.onChangeState.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeDob = this.onChangeDob.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    this.onChangeBranch = this.onChangeBranch.bind(this);\n    this.onChangeDesignation = this.onChangeDesignation.bind(this);\n    this.onChangeStaffNumber = this.onChangeStaffNumber.bind(this);\n    \n    this.state = {\n      username: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      address: \"\",\n      lga: \"\",\n      states: \"\",\n      dob: \"\",\n      email: \"\",\n      phone_number: \"\",\n      successful: false,\n      message: \"\",\n      loading: false,\n      Lgaloading:false,\n      branch_pk:\"\",\n      designation_pk:\"\",\n      group_pk:6,\n      staff_number:\"\"\n\n    };\n  }\n\n\n  componentDidMount() {\n    \n    const token = \"bd7cfc4fa97ec7a61fff4dd69fad8f548f2d86dd\";\n    localStorage.setItem(\"token\", JSON.stringify(token));\n\n    //call the States and LGAS at the first \n    const state = \"Ahmad loophole\";\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n        }\n        this.setState({\n          List_Of_State: res.data,\n      });\n        \n        // console.log(res.data)                  \n\n      })\n      axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n        }\n      }); \n      axios.get(`https://gfso.chinikiguard.com/accounts/api/branch/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n       \n      },\n    )\n      .then(res => {\n        this.setState({\n          BranchList: res.data,\n      });\n      });\n      axios.get(`https://gfso.chinikiguard.com/accounts/api/designation/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n       \n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"designations\", JSON.stringify(res.data));\n      }\n        this.setState({\n          DesignationList: res.data,\n      });\n      });\n\n      axios.get(`https://gfso.chinikiguard.com/accounts/api/users/group/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n       \n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"designations\", JSON.stringify(res.data));\n      }\n        this.setState({\n          GroupList: res.data,\n      });\n      });\n\n\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    // const GetUsers = JSON.parse(localStorage.getItem('Users'));\n    const list_of_lga = JSON.parse(localStorage.getItem('List_Of_Lga'))\n    const token = JSON.parse(localStorage.getItem('token'));\n\n      // const Lgas = list_of_lga.filter(item => item.state === statepk);\n      // localStorage.setItem(\"LGAS\", JSON.stringify(Lgas));\n     \n      try {\n        if (prevState.states !== this.state.states) {\n          const statepk = this.state.states\n\n          if(statepk){\n            this.setState({\n              \n              Lgaloading: true\n          });\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n              headers:\n              {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n              },\n              params:\n              {\n                state_pk: statepk\n              }\n            },\n          )\n            .then(res => {\n\n                this.setState({\n                  Lgaloading: false,\n                  Lgas: res.data,\n              });\n            \n            });\n          }\n          \n        }\n  \n      } catch (e) {\n  \n        console.log(e);\n      }\n    \n   \n\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      first_name: e.target.value\n    });\n  }\n  onChangeLastName(e) {\n    this.setState({\n      last_name: e.target.value\n    });\n  }\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value\n    });\n  }\n  onChangeLG(e) {\n    this.setState({\n      lga: e.target.value\n    });\n  }\n  onChangeState(e) {\n    this.setState({\n      states: e.target.value\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n  onChangeDob(e) {\n    this.setState({\n      dob: e.target.value\n    });\n  }\n  onChangePhoneNumber(e) {\n    this.setState({\n      phone_number: e.target.value\n    });\n  }\n  onChangeDesignation(e) {\n    this.setState({\n      designation_pk: e.target.value\n    });\n  }\n  onChangeBranch(e) {\n    this.setState({\n      branch_pk: e.target.value\n    });\n  }  \n  onChangeStaffNumber(e) {\n    this.setState({\n      staff_number: e.target.value\n    });\n  }\n  \n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false,\n      loading: true\n    });\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.createNewUser(\n        this.state.username,\n        this.state.password,\n        this.state.first_name,\n        this.state.last_name,\n        this.state.address,\n        this.state.lga,\n        this.state.states,\n        this.state.dob,\n        this.state.email,\n        this.state.phone_number,\n        this.state.group_pk,\n        this.state.designation_pk,\n        this.state.branch_pk,\n        this.state.staff_number\n      ).then(\n        response => {\n          if (response.data) {\n            localStorage.setItem(\"tempoUser\", JSON.stringify(response.data));\n            localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n          }\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n          window.location = \"/UserUploads\"\n          console.log(response.data)\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data.detail &&\n              error.response.data.detail) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"hold-transition login-page\">\n                {this.state.ViewTemplateloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <div className=\"\">\n                    <div className=\"login-logo\">\n                    <img src={Logo} height=\"100px\" alt=\"\" />\n                        <br />\n                        <Link to=\"\"><b>CBN</b> GFSO</Link>\n                    </div>\n                    <div className=\"col-12\">\n\n                    <div className=\"card-\">\n                        <div className=\"card-body login-card-body\">\n                            {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                            <br />            \n                <Form onSubmit={this.handleRegister} ref={c => { this.form = c; }} className=\"form\" id=\"\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* text input */}\n                      <div className=\"form-group\">\n                        <label>First Name</label>\n                        <Input type=\"text\" id=\"firstname\" className=\"form-control\" placeholder=\"first name\" value={this.state.first_name}\n                          onChange={this.onChangeFirstName}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Last Name</label>\n                        <Input type=\"text\" id=\"lastname\" className=\"form-control\" placeholder=\"last name\" value={this.state.last_name}\n                          onChange={this.onChangeLastName}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* textarea */}\n                      <div className=\"form-group\">\n                        <label>Email</label>\n                        <Input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email}\n                          onChange={this.onChangeEmail}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Phone Number</label>\n                        <Input type=\"tel\" id=\"phonenumber\" className=\"form-control\" placeholder=\"Phone number\" value={this.state.phone_number}\n                          onChange={this.onChangePhoneNumber}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div> \n                  <div className=\"row\">\n                    \n                    <div className=\"col-sm-12\">\n                      <div className=\"form-group\">\n                        <label>Staff Number</label>\n                        <Input type=\"number\" id=\"staffnumber\" className=\"form-control\" \n                        placeholder=\"Staff number\" value={this.state.staff_number}\n                          onChange={this.onChangeStaffNumber}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* text input */}\n                      <div className=\"form-group\">\n                        <label>Address</label>\n                        <Textarea type=\"text\" id=\"address\" className=\"form-control\"\n                          placeholder=\"Address\" value={this.state.address}\n                          onChange={this.onChangeAddress} validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n\n                        <label>Date of birth</label>\n\n                        <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                          value={this.state.dob}\n                          onChange={this.onChangeDob}\n                          validations={[required]}\n\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>State</label>\n                        <Select value={this.state.states}\n                          onChange={this.onChangeState}\n                          validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n                          <option value>Select</option>\n                          {this.state.List_Of_State&&this.state.List_Of_State.map(state => (\n\n                            <option value={state.pk}>{state.title}</option>\n\n                          ))}\n\n                        </Select>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Lga</label>\n                        {this.state.Lgaloading && (\n                        <span className=\"spinner-grow spinner-grow-sm\"></span>\n                      )}\n                        <Select value={this.state.lga}\n                          onChange={this.onChangeLG}\n                          validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n                          \n                          <option > Select  </option>\n                          {this.state.Lgas && this.state.Lgas.map(lga => (\n                            <option value={lga.pk}>{lga.title}</option>\n                          ))}\n                        </Select>\n                       \n\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                  <div className=\"col-sm-6\">\n\n                  <div className=\"form-group\">\n                  <label>Branch</label>\n\n                  <Select\n                    className=\"form-control\"\n                    id=\"exampleFormControlSelect9\"\n                    validations={[required]}\n                    onChange={this.onChangeBranch}\n                    value={this.state.branch_pk}\n                  >\n                    <option value=\"\">--select--</option>\n\n                    {this.state.BranchList && this.state.BranchList.map(branch => (\n\n                      <option value={branch.pk}>{branch.name}</option>\n\n                    ))}\n\n                  </Select>\n                  </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n\n                   <div className=\"form-group\">\n                   <label>Designation</label>\n\n                  <Select\n                    className=\"form-control\"\n                    id=\"exampleFormControlSelect9\"\n                    validations={[required]}\n                    onChange={this.onChangeDesignation}\n                    value={this.state.designation_pk}\n                  >\n                    <option value=\"\">--select--</option>\n                    {this.state.DesignationList && this.state.DesignationList.map(Designation => (\n                      <option value={Designation.pk}>{Designation.title}</option>\n                    ))}\n                  </Select>\n                  </div>\n                  </div>\n                  </div>                                \n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Username</label>\n                        <Input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Username\"\n                          value={this.state.username}\n                          onChange={this.onChangeUsername}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Password</label>\n                        <Input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"password\" value={this.state.password}\n                          onChange={this.onChangePassword}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button\n                      className=\"btn btn-primary btn-lg float-right\"\n                      disabled={this.state.loading}\n                    >\n                      {this.state.loading && (\n                        <span className=\"spinner-border spinner-border-sm\"></span>\n                      )}\n                      <span>Register</span>\n                    </button>\n                  </div>\n                  <center>\n                    {this.state.message && (\n                      <div className=\"form-group\">\n                        <div\n                          className={\n                            this.state.successful\n                              ? \"alert alert-success\"\n                              : \"alert alert-danger\"\n                          }\n                          role=\"alert\"\n                        >\n                          {this.state.message}\n                        </div>\n                      </div>\n                    )}\n                  </center>\n                  <CheckButton\n                    style={{ display: \"none\" }}\n                    ref={c => {\n                      this.checkBtn = c;\n                    }}\n                  />\n\n                </Form>\n              \n                        </div>\n\n                        </div>\n                        </div>\n\n                </div>\n            </div>\n\n     \n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\nexport default class EditTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"viewSurvey\",props)\n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n        this.onChangeSurvey = this.onChangeSurvey.bind(this);\n\n        this.state = {\n            loading: false,\n            message: \"\",\n            myloading: false,\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: false,\n            survey:\"\",\n\n\n        };\n        \n    }\n    \n    \n    onChangeSurvey(e) {\n        this.setState({\n            survey: e.target.value\n        });\n      }\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: true\n        });\n\n        \n            //check auth user\n            const mytoken = JSON.parse(localStorage.getItem('user'));\n            const token = mytoken.token;\n\n            //get template details\n            const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n            const ExtractTemplatePk = ExtractTemplate.pk;\n\n            //loop through the json\n            const formList = [];\n            for (let i = 0; i < ExtractTemplate.form.length; i++) {\n                formList.push(ExtractTemplate.form[i]);\n            }\n             // newly created json\n            const body =\n            {\n                survey_template_pk:ExtractTemplatePk,\n                survey_pk: this.state.survey,\n                form: formList,\n                \n            } \n            // console.log(body);\n            this.form.validateAll();\n            if (this.checkBtn.context._errors.length === 0) {\n    \n            axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        AdoptSurveysuccessful: true,\n                    });\n                    window.location = \"/ViewSurvey\"\n                    if (res.data) {\n                        localStorage.setItem(\"AdoptedSurvey\", JSON.stringify(res.data));\n                    }\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.detail &&\n                                error.response.data.detail) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n\n    AddField(Filter_with_name) {\n\n     \n        //select Target category\n        localStorage.setItem(\"Category_to_AddField\", JSON.stringify(Filter_with_name));\n        localStorage.setItem(\"MyCategoryName\", JSON.stringify(Filter_with_name.name));\n        console.log(Filter_with_name)\n        window.location = \"/CategoryView\"\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurveyToUser\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    ApprovedSurveyToUser: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n    }\n\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const SingleTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n        const SingleTemplateCategories = SingleTemplate.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {SingleTemplateCategories&&SingleTemplateCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                <button\n                                                    className=\"btn btn-primary btn-lg\"\n                                                    onClick={this.AddField.bind(this, Templatefields)}\n                                                    value={`${Templatefields.name}`}\n                                                >\n                                                    Add Field&nbsp;&nbsp;\n                                                  <i className=\"fas fa-plus\" />\n                                                </button>\n                                            </div>\n                                            {/* /.card-body */}\n                                        </div>\n                                    ))}\n                                    {/* /.card */}\n                                    {SingleTemplateCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                        <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} > \n\n                                                    <div className=\"form-group\">\n                                                        <Select\n                                                            className=\"form-control\"\n                                                            id=\"exampleFormControlSelect9\"\n                                                              validations={[required]}\n                                                            onChange={this.onChangeSurvey}\n                                                            value={this.state.survey}\n                                                        >\n                                                        <option value=\"\">--select--</option>\n\n                                                            {this.state.ApprovedSurveyToUser && this.state.ApprovedSurveyToUser.map(survey => (\n\n                                                                <option value={survey.pk}>{survey.title}</option>\n\n                                                            ))}\n\n                                                        </Select>\n                                                    </div>\n                                       \n                                        <center>\n\n                                                  <button\n                                                      disabled={this.state.AdoptSurveyloading}\n                                                      className=\"btn btn-success btn-lg \"\n                                                  >\n\n                                                      {this.state.AdoptSurveyloading && (\n                                                          <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                      )}\n                                                      <span>Develop Template</span>\n                                                  </button>\n                                                  </center>\n\n                                              <center>\n                                              {this.state.AdoptSurveymessage && (\n                                                  <div className=\"pb-5\" >\n                                                      <div\n                                                          className={\n                                                              this.state.AdoptSurveysuccessful\n                                                                  ? \"alert alert-custom alert-outline-success fade show mb-5\"\n                                                                  : \"alert alert-custom alert-outline-danger fade show mb-5\"\n                                                          }\n                                                          role=\"alert\"\n                                                      >\n                                                          <h3 > {this.state.AdoptSurveymessage}</h3>\n                                                      </div>\n                                                  </div>\n                                              )}\n                                              </center>\n\n                                          <CheckButton\n                                              style={{ display: \"none\" }}\n                                              ref={c => {\n                                                  this.checkBtn = c;\n                                              }}\n                                          />\n                                          \n                                      </Form> \n                                        \n                                          \n                                       \n                                        \n                                        </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class Surveys extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    // EditTemplate(Surveys) {\n\n    //     //\n    //     const mytoken = JSON.parse(localStorage.getItem('user'));\n    //     const token = mytoken.token;\n    //     const survey_pk = Surveys.survey_pk;\n    //     // console.log(Surveys.survey_pk)\n\n       \n    //     axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n    //         {\n    //             headers:\n    //             {\n    //                 'Content-Type': 'application/json',\n    //                 'Authorization': `Token ${token}`,\n    //                 'Access-Control-Allow-Origin': '*',\n    //                 'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n    //                 'Access-Control-Allow-Credentials': true\n    //             },\n    //             params:{\n    //                 survey_pk:survey_pk\n    //             }\n\n    //         })\n    //         .then(res => {\n    //             if (res.data) {\n    //                 localStorage.setItem(\"ResponsesTable\", JSON.stringify(res.data));\n    //             }\n    //             console.log(res.data)\n    //             // window.location = \"/CompleteSurvey\"\n\n    //         })\n\n\n    // }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               {/* <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th> */}\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    {/* <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td> */}\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        <Link className=\"btn btn-primary btn-sm\" to=\"/\">\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     More\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n\nexport default class AvailableSurvey extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n            loadingModal: false,\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n          \n            \n        const mytoken = AuthService.getCurrentUser();\n        const token = mytoken.token;\n       \n        //call the States and LGAS at the first \n        const states = \"Ahmad loophole\";\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: states\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: states\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n            });\n    }\n\n    componentWillMount() {\n        const token = JSON.parse(localStorage.getItem('token'));\n\n    const Check=JSON.parse(localStorage.getItem('user'));\n            const user_type=Check.profile.user_type\n            const lga =Check.profile.lga\n            const state =Check.profile.state\n\n            switch (user_type) {\n                case 'sg_user':\n                    return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&states=${state}`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n             \n                case 'lg_user':\n                    return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&lgas=${lga}`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n        \n                default:\n                    return null;\n            }\n        \n        }\n    Fill_Survey(Surveys) {\n        // localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const singleSurveyPk = Surveys.pk;\n        // console.log(Surveys.pk)\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n        \n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                \n                // console.log(res.data)\n                window.location = \"/CompleteSurvey\"\n\n            })\n    }\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n         \n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\">\n                    {/* Default box */}\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <div className=\"card card-solid\">\n                        <div className=\"card-body pb-0\">\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div>\n                                {this.state.Surveys.length?\n                                <div className=\"row\">\n                                    {this.state.Surveys.map(surveys => (\n\n                                        <div className=\"col-md-4\">\n                                            {/* Widget: user widget style 1 */}\n                                            <div className=\"card card-widget widget-user\">\n                                                {/* Add the bg color to the header using any of the bg-* classes */}\n                                                <div className=\"widget-user-header \" style={{ borderRadius: '0.25em', textAlign: 'center', color: 'green', border: '1px solid green', padding: '0.5em' }}>\n                                                    {this.state.warningLoad ? (\n                                                        <>\n\n                                                            <div className=\"widget-user float-left\">\n                                                                <i className=\"fas fa-bullhorn\" />\n\n                                                                <center>\n\n                                                                    <Spinner\n                                                                        as=\"span\"\n                                                                        animation=\"grow\"\n                                                                        size=\"lg\"\n                                                                        role=\"status\"\n                                                                        aria-hidden=\"true\"\n                                                                        variant=\"warning\"\n                                                                    />\n                                                                </center>\n                                                            </div>\n                                                        </>\n                                                    ) : (\n                                                        <h2 className=\"lead\"><b></b></h2>\n\n                                                    )}\n\n                                                    <Link\n                                                        //  to=\"/EditTemplate\"\n                                                        onClick={this.Fill_Survey.bind(this, surveys)}\n                                                        className=\"btn btn float-right\"\n                                                        disabled={this.state.loading}\n                                                        style={{ borderRadius: '0.25em', textAlign: 'center', color: 'blue', border: '1px solid blue', padding: '0.5em' }}\n\n                                                    >\n                                                        Fill Survey &nbsp;&nbsp;\n                                                                   {/* <i className=\"fas fa-check\" /> */}\n\n                                                    </Link>\n                                                    <br />\n                                                    <h5 className=\"widget-user-title\" >{surveys.title}</h5>\n                                                    <hr />\n                                                    <h5 className=\"widget-user-image\">{surveys.survey_type}</h5>\n                                                </div>\n\n                                                <div className=\"card-footer\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-4 border-right\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.status}</h5>\n                                                                <span className=\"description-text\">Status</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                        <div className=\"col-sm-4 border-right\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.start_date}</h5>\n                                                                <span className=\"description-text\">Start Date</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                        <div className=\"col-sm-4\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.due_date}</h5>\n                                                                <span className=\"description-text\">Due Date</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                    </div>\n                                                    {/* /.row */}\n                                                </div>\n                                            </div>\n                                            {/* /.widget-user */}\n                                        </div>\n\n\n                                    ))}\n                                </div>\n                                            : <center><h2>No  Survey  Available For You at The Moment! </h2></center>\n                                        }\n                              </div>\n                            )}\n                        </div>\n                        {/* /.card-body */}\n                        <div className=\"card-footer\">\n                            <nav aria-label=\"Contacts Page Navigation\">\n                                <ul className=\"pagination justify-content-center m-0\">\n                                    {/* <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">1</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">4</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">5</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">6</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">7</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">8</a></li> */}\n                                </ul>\n                            </nav>\n                        </div>\n                        {/* /.card-footer */}\n                    </div>\n                    {/* /.card */}\n                </section>\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","\nimport React from 'react';\nimport { ReactFormGenerator, ElementStore } from 'react-form-builder2';\nimport axios from \"axios\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { Redirect } from 'react-router-dom';\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Select from \"react-validation/build/select\";\n\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Demobar extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.onChangeSurvey = this.onChangeSurvey.bind(this);\n    \n    // _onSubmit\n\n    this.state = {\n      data: [],\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false,\n      category: \"\",\n\n      loading: false,\n      message: \"\",\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false\n    };\n\n    const update = this._onChange.bind(this);\n    ElementStore.subscribe(state => update(state.data));\n  }\n\n  onChangeSurvey(e) {\n    this.setState({\n      survey: e.target.value\n    });\n  }\n \n\n\n\n\n  showPreview() {\n\n\n    this.setState({\n\n      previewVisible: true,\n    });\n  }\n\n  showShortPreview() {\n    this.setState({\n      shortPreviewVisible: true,\n    });\n  }\n\n  showRoPreview() {\n    this.setState({\n      roPreviewVisible: true,\n    });\n  }\n\n  closePreview() {\n    this.setState({\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false,\n    });\n  }\n\n  _onChange(data) {\n    this.setState({\n      data,\n    });\n  }\n\n  _onSubmit = (data) => {\n\n\n    this.setState({\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: true\n    });\n\n    //login user token\n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n\n    // Existing template from localStorage\n    const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n    const ExtractTemplatePk = ExtractTemplate.pk;\n\n    //his  fields from template\n    const twist_result = [];\n    for (let i = 0; i < ExtractTemplate.form.length; i++) {\n      twist_result.push(ExtractTemplate.form[i]);\n    }\n\n    localStorage.setItem(\"result\", JSON.stringify(twist_result));\n\n\n    // my custom fields from formbuilder\n    const fieldsList = [];\n    for (let i = 0; i < data.length; i++) {\n      fieldsList.push(data[i]);\n    }\n\n    // newly fields added to selected category from user\n    const MyCategoryName = JSON.parse(localStorage.getItem('MyCategoryName'));\n    const result = twist_result.find(({ name }) => name === MyCategoryName);\n\n    // const myFields = result.fields;\n    // const fields = myFields.concat(fieldsList);\n    // console.log(\"fields:\", fields);\n    // console.log(\"result:\", result);\n    // modified Array objects from template\n    const modifiedObj = twist_result.filter(item => item.name !== MyCategoryName);\n    // console.log(\"modifiedObj:\", modifiedObj);\n\n\n\n    const fieldsObj = modifiedObj.concat(result);\n    // console.log(\"fieldsObj:\", fieldsObj);\n    const last_element = fieldsObj[fieldsObj.length - 1];\n    // console.log(\"last_element:\", last_element);\n    const final = last_element.fields;\n    const name = last_element.name;\n    const economic_code = last_element.economic_code;\n    const heading = last_element.heading;\n    const type = last_element.type;\n    const finalup = final.concat(data);\n    // console.log(\"final:\", finalup);\n    // console.log(\"name:\", name);\n\n    \n    const my_category = {\n      name,\n      economic_code,\n      heading,\n      type,\n      fields:\n        finalup,\n\n    }\n    // console.log(\"my_category:\", my_category);\n\n    const form = modifiedObj.concat(my_category)\n    // console.log(\"twist_result:\", twist_result);\n\n\n    // final result to  be send to the endpoint\n    const body =\n    {\n      survey_template_pk: ExtractTemplatePk,\n      survey_pk: this.state.survey,\n      form,\n      \n\n    }\n\n    console.log(body);\n\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n          this.setState({\n            AdoptSurveymessage: res.data.detail,\n            AdoptSurveysuccessful: true,\n\n          });\n\n          if (res.data) {\n            localStorage.setItem(\"AdopteSurveyField\", JSON.stringify(res.data));\n          }\n\n        },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.AdoptSurveyloading ||\n              error.toString();\n\n            this.setState({\n              AdoptSurveyloading: false,\n              message: resMessage\n            });\n          }\n        );\n    } else {\n      this.setState({\n        AdoptSurveyloading: false\n      });\n    }\n  }\n  componentDidMount() {\n\n    if (!localStorage.getItem('user')) {\n\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n    axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes\",\n      {\n        headers:\n        {\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n      })\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"ApprovedSurveyToUser\", JSON.stringify(res.data));\n        }\n        // (res);\n        // (res.data);\n        this.setState({\n          ApprovedSurveyToUser: res.data,\n          myloading: false,\n          warningLoad: true,\n        });\n      })\n\n\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n\n  // }\n  render() {\n\n    let modalClass = 'modal fade';\n    if (this.state.previewVisible) {\n      modalClass += ' show d-block';\n    }\n\n    let shortModalClass = 'modal short-modal';\n    if (this.state.shortPreviewVisible) {\n      shortModalClass += ' show d-block';\n    }\n\n    let roModalClass = 'modal ro-modal';\n    if (this.state.roPreviewVisible) {\n      roModalClass += ' show d-block';\n    }\n\n    return (\n\n      <div className=\"clearfix\" style={{ margin: '10px', width: '70%' }}>\n        {/* <h4 className=\"float-left\">Preview</h4> */}\n\n        <section className=\"content-header\">\n\n          <div className=\"container-fluid\">\n            {/* general form elements disabled */}\n\n            {/* /.card */}\n\n            <br />\n            <button className=\"btn btn-primary btn-lg float-right\" style={{ marginRight: '10px' }} onClick={this.showPreview.bind(this)}>Preview & Deploy </button>\n            <br />\n            {this.state.previewVisible &&\n              <div className={modalClass} id=\"modal-xl\">\n                <div className=\"modal-dialog modal-xl\">\n                  <div className=\"modal-content\">\n                    \n                    <div className=\"row\">\n\n                      <div className=\"col-md-6\">\n                        <div className=\"card card\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">Select Survey</h3>\n                          </div>\n                          {/* /.card-header */}\n                          <div className=\"card-body\">\n                            <Form onSubmit={this._onSubmit} ref={c => { this.form = c; }} >\n\n                              <div className=\"form-group\">\n                                <Select\n                                  className=\"form-control\"\n                                  id=\"exampleFormControlSelect9\"\n                                  validations={[required]}\n                                  onChange={this.onChangeSurvey}\n                                  value={this.state.survey}\n                                >\n                                  <option value=\"\">--select--</option>\n\n                                  {this.state.ApprovedSurveyToUser && this.state.ApprovedSurveyToUser.map(survey => (\n\n                                    <option value={survey.pk}>{survey.title}</option>\n\n                                  ))}\n\n                                </Select>\n                              </div>\n                              \n                             \n\n                              <center>\n                                {this.state.AdoptSurveymessage && (\n                                  <div className=\"pb-5\" >\n                                    <div\n                                      className={\n                                        this.state.AdoptSurveysuccessful\n                                        ? \"alert alert-success\"\n                                        : \"alert alert-danger\"\n                                    }\n                                      role=\"alert\"\n                                    >\n                                      <h3 > {this.state.AdoptSurveymessage}</h3>\n                                    </div>\n                                  </div>\n                                )}\n                              </center>\n\n                              <CheckButton\n                                style={{ display: \"none\" }}\n                                ref={c => {\n                                  this.checkBtn = c;\n                                }}\n                              />\n\n                            </Form>\n\n\n                          </div>\n                          {/* /.card-body */}\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <ReactFormGenerator\n                          download_path=\"\"\n                          back_action=\"/\"\n                          back_name=\"Back\"\n                          answer_data={{}}\n                          action_name=\"Save\"\n                          form_action=\"https://gfso.chinikiguard.com/survey/api/add/survey/fields/\"\n                          form_method=\"POST\"\n                          onSubmit={this._onSubmit}\n                          variables={this.props.variables}\n                          data={this.state.data} />\n\n                      </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n\n            {this.state.roPreviewVisible &&\n              <div className={roModalClass}>\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <ReactFormGenerator\n                      download_path=\"\"\n                      back_action=\"/\"\n                      back_name=\"Back\"\n                      answer_data={{}}\n                      action_name=\"Save\"\n                      form_action=\"/\"\n                      form_method=\"POST\"\n                      read_only={true}\n                      variables={this.props.variables}\n                      hide_actions={true} data={this.state.data} />\n\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n\n            {this.state.shortPreviewVisible &&\n              <div className={shortModalClass}>\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <ReactFormGenerator\n                      download_path=\"\"\n                      back_action=\"\"\n                      answer_data={{}}\n                      form_action=\"/\"\n                      form_method=\"POST\"\n                      data={this.state.data}\n                      display_short={true}\n                      variables={this.props.variables}\n                      hide_actions={false} />\n\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </section>\n      </div>\n\n    );\n  }\n}","export const JOHN =  ''\r\n","import 'react-form-builder2/dist/app.css';\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Menu from \"./Menu\";\nimport { ReactFormBuilder } from 'react-form-builder2';\nimport Demobar from \"./Demobar\";\nimport * as variables from './variables';\n\n\nexport default class CategoryView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n     \n\n        this.state = {\n            loading: false,\n            message: \"\",\n\n        };\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false,\n            loading: true,\n            meloading: true\n\n        });\n\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n\n        const responses = JSON.parse(localStorage.getItem('SingleResponse'));\n        const response_data = responses.data;\n        const get_form = response_data.get_form;\n        // console.log(response_data);\n        const value = this.state.title;\n\n\n        \n\n        const body =\n        {\n            survey_response_pk: response_data.pk,\n            form:\n\n                [\n                    {\n                        get_form,\n                        value: value\n                    }\n\n                ]\n\n\n        }\n\n        console.log(body);\n\n        axios.post(\"https://gfso.chinikiguard.com/survey/api/add/response/entry/\", body,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"SuccessSurvey\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    message: res.data.detail,\n                    successful: true,\n                    loading: false,\n                    meloading: false\n                });\n\n                console.log(res);\n                console.log(res.data.detail);\n                // window.location = \"/dashboard\"\n            },\n\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data.detail &&\n                            error.response.data.detail) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage,\n                        loading: false,\n                        meloading: false\n                    });\n                })\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        const singleCategory = JSON.parse(localStorage.getItem('Category_to_AddField'));\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {/* left column */}\n                            <div className=\"col-md-6\">\n\n                                {/* general form elements disabled */}\n                                <div className=\"card card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\">{singleCategory.name}</h3>\n                                    </div>\n                                    {/* /.card-header */}\n\n                                    <div className=\"card-body\">\n                                        <br />\n\n                                        <form>\n                                            <div className=\"row\">\n                                                {singleCategory.fields.map(fields => (\n\n                                                    <div className=\"col-4\">\n                                                        <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled id=\"inputSuccess\" />                                                <br />\n                                                    </div>\n                                                ))}\n\n                                            </div>\n                                            {singleCategory.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                            {/* input states */}\n                                        </form>\n                                        <br />\n\n\n                                    </div>\n\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                                \n\n                            </div>\n                            {/*/.col (left) */}\n\n\n                            {/* right column */}\n                            <div className=\"col-md-6\">\n\n                                {/* general form elements disabled */}\n                                <div className=\"card card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\"> </h3>\n                                    </div>\n                                    {/* /.card-header */}\n\n                                    <div className=\"card-body\">\n                                        <br />\n\n                                            <ReactFormBuilder />                \n                                            <Demobar variables={variables} />\n\n\n\n                                            {/* input states */}\n                                        <br />\n\n\n                                    </div>\n\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            <br />\n                           \n\n\n\n\n                            </div>\n                            {/*/.col (right) */}\n                        </div>\n                    </div>\n                </section>\n                <Footer />\n            </div>\n\n        );\n    }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\n\n\n\nexport default class ListResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePageClick = this.handlePageClick.bind(this);\n\n        this.state = {\n            offset: 0,\n            tableData: [],\n            orgtableData: [],\n            perPage: 10,\n            currentPage: 0,\n            myloading: true\n        };\n    }\n\n    //pagination\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n    //pagination\n    loadMoreData() {\n        const data = this.state.orgtableData;\n\n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n        this.setState({\n            pageCount: Math.ceil(data.length / this.state.perPage),\n            tableData: slice\n        })\n\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        // const scriptdashboard = document.createElement(\"script\");\n        // scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n        // scriptdashboard.async = true;\n        // document.body.appendChild(scriptdashboard);\n    \n       \n\n        this.Get_State_Data();\n\n    }\n\n    Get_State_Data() {\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/response/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Responses\", JSON.stringify(res.data));\n                }\n                const tdata = res.data;\n                // console.log(res.data.data)   \n\n                const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                this.setState({\n                    pageCount: Math.ceil(tdata.length / this.state.perPage),\n                    orgtableData: tdata,\n                    tableDataForState: slice,\n                    myloading: false\n                })\n            });\n        // console.log(res.data)   \n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                <br />     \n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                        \n                            <div className=\"row\">\n                           \n                                <div className=\"col-12\">\n                                {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Filled Surveys</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                        <div className=\"card-body\">\n                                            <div id=\"example1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\"><div className=\"row\"><div className=\"col-sm-12 col-md-6\">\n                                           </div>\n                                             </div><div className=\"row\"><div className=\"col-sm-12\"><table id=\"example1\" className=\"table table-bordered table-striped dataTable dtr-inline\" role=\"grid\" aria-describedby=\"example1_info\">\n                                                <thead>\n                                                    <tr role=\"row\">\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Browser: activate to sort column ascending\"> Title</th>\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Platform(s): activate to sort column ascending\">Filled by</th>\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Engine version: activate to sort column ascending\">Categories</th>\n                                                    <th className=\"sorting sorting_asc\" tabIndex={0} aria-controls=\"example1\">Action</th>\n\n                                                   </tr>\n                                                </thead>\n                                                <tbody className=\"table-body\">\n                                                    {this.state.tableDataForState && this.state.tableDataForState.map(survey => (\n\n                                                        <tr>\n                                                            <td>{survey.survey_title}</td>\n                                                            <td>\n                                                            {survey.filled_by}\n\n                                                            </td>\n                                                            \n                                                            <td>\n                                                                {survey.get_entries.map(category => (\n                                                                 <td>\n                                                                 {category.name}\n                                                                </td>\n                              \n                                                               ))}\n                                                            </td>\n                                                            <td className=\"project-actions text-right\">\n                                            <Link className=\"btn btn-success btn-sm\" to=\"#\">\n                                                <i className=\"fas fa-folder\">\n                                                </i>\n                View\n              </Link>&nbsp;&nbsp;\n                             \n                                        </td>\n                                                          \n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n                                                <tfoot>\n                                                    \n                                                </tfoot>\n                                               \n                                            </table>\n                                            <ReactPaginate\n                                                    previousLabel={\"prev\"}\n                                                    nextLabel={\"next\"}\n                                                    breakLabel={\"...\"}\n                                                    breakClassName={\"break-me\"}\n                                                    pageCount={this.state.pageCount}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={this.handlePageClick}\n                                                    containerClassName={\"pagination\"}\n                                                    subContainerClassName={\"pages pagination\"}\n                                                    activeClassName={\"active\"} />\n                                            </div>\n                                            </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    )}\n                                </div>\n\n                                 \n                            </div>\n                                                      \n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class ResponseTable extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Response:[]\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('ResponseData'));\n          this.setState({\n            \n            Response: Response.data,\n        })\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Response Table</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                        <div className=\"card-body\">\n\n                                            <table id=\"emp\" class=\"table\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>Section</th>\n                                                        <th>Item</th>                                                            <br />\n\n                                                        <th>Q1 2019</th>\n                                                   \n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.Response && this.state.Response.map(category => (\n\n                                                        <tr>\n                                                            <td>\n                                                                <b>{category.economic_code}</b>\n\n                                                                {category.fields.map(economic => (\n                                                                    <div>\n                                                                <hr/>\n\n                                                                    {economic?economic.economic_code!='None':\"\"}\n                                                                    </div>\n                                                                ))}\n                                                            </td>\n\n                                                            <td>\n                                                                <b>{category.name}\n                                                                </b>\n                                                                <br/>\n                                                                {category.fields.map(field => (\n                                                          <div style={{ fontWeight: 'lighter'}}>\n\n                                                                 <hr/>\n                                                                    { field.name }\n                                                                    </div>\n\n                                                                ))}\n\n                                                            </td>\n\n                                                            <br />\n                                                            <td>\n                                                            <br />\n\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             <hr/>\n\n                                                                        {number.field_total_sum}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                                \n                                                            </td>\n\n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"ReportSurvey\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\n\nimport { Link, Redirect } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\n\n\n\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\nexport default class UserProfile extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleRegister = this.handleRegister.bind(this);\n          this.onChangeFirstName = this.onChangeFirstName.bind(this);\n          this.onChangeLastName = this.onChangeLastName.bind(this);\n          this.onChangeAddress = this.onChangeAddress.bind(this);\n          this.onChangeLG = this.onChangeLG.bind(this);\n          this.onChangeState = this.onChangeState.bind(this);\n          this.onChangeUsername = this.onChangeUsername.bind(this);\n          this.onChangeEmail = this.onChangeEmail.bind(this);\n          this.onChangePassword = this.onChangePassword.bind(this);\n          this.onChangeDob = this.onChangeDob.bind(this);\n          this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n\n\n\n          this.state = {\n               username: \"\",\n               password: \"\",\n               first_name: \"\",\n               last_name: \"\",\n               address: \"\",\n               lga: \"\",\n               state: \"\",\n               dob: \"\",\n               email: \"\",\n               phone_number: \"\",\n               successful: false,\n               message: \"\",\n               loading: false\n\n          };\n     }\n\n\n     componentDidMount() {\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/login'} />)\n             }\n     }\n\n\n     onChangeFirstName(e) {\n          this.setState({\n               first_name: e.target.value\n          });\n     }\n     onChangeLastName(e) {\n          this.setState({\n               last_name: e.target.value\n          });\n     }\n     onChangeAddress(e) {\n          this.setState({\n               address: e.target.value\n          });\n     }\n     onChangeLG(e) {\n          this.setState({\n               lga: e.target.value\n          });\n     }\n     onChangeState(e) {\n          this.setState({\n               state: e.target.value\n          });\n     }\n\n     onChangeUsername(e) {\n          this.setState({\n               username: e.target.value\n          });\n     }\n\n     onChangeEmail(e) {\n          this.setState({\n               email: e.target.value\n          });\n     }\n\n     onChangePassword(e) {\n          this.setState({\n               password: e.target.value\n          });\n     }\n     onChangeDob(e) {\n          this.setState({\n               dob: e.target.value\n          });\n     }\n     onChangePhoneNumber(e) {\n          this.setState({\n               phone_number: e.target.value\n          });\n     }\n\n     handleRegister(e) {\n          e.preventDefault();\n          this.setState({\n               message: \"\",\n               successful: false,\n               loading: true\n          });\n          this.form.validateAll();\n          if (this.checkBtn.context._errors.length === 0) {\n               AuthService.createNewUser(\n                    this.state.username,\n                    this.state.password,\n                    this.state.first_name,\n                    this.state.last_name,\n                    this.state.address,\n                    this.state.lga,\n                    this.state.state,\n                    this.state.dob,\n                    this.state.email,\n                    this.state.phone_number,\n\n               ).then(\n                    response => {\n                         this.setState({\n                              message: response.data.message,\n                              successful: true\n                         });\n                    },\n                    error => {\n                         const resMessage =\n                              (error.response &&\n                                   error.response.data.detail &&\n                                   error.response.data.detail) ||\n                              error.message ||\n                              error.toString();\n\n                         this.setState({\n                              successful: false,\n                              message: resMessage\n                         });\n                    }\n               );\n          }\n     }\n     render() {\n\n          // const { loading } = this.state;\n\n\n          return (\n               <div>\n                    <Header />\n\n                    <div className=\"content-wrapper\" >\n                         <Menu />\n                         <br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-md-3\">\n                                             {/* Profile Image */}\n                                             <div className=\"card card-success card-outline\">\n                                                  <div className=\"card-body box-profile\">\n                                                       <div className=\"text-center\">\n                                                            <img className=\"profile-user-img img-fluid img-circle\" src=\"../../dist/img/user4-128x128.jpg\" alt=\"\" />\n                                                       </div>\n                                                       <h3 className=\"profile-username text-center\">Abdulhakim Bashir</h3>\n                                                       <p className=\"text-muted text-center\">Software Engineer</p>\n\n                                                       <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Education</strong><p className=\"text-muted\">B.S. in Computer Science from the University of Tennessee at Knoxville</p><hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> Location</strong><p className=\"text-muted\">Malibu, California</p><hr /><strong><i className=\"fas fa-pencil-alt mr-1\" /> Skills</strong><p className=\"text-muted\"><span className=\"tag tag-danger\">UI Design</span><span className=\"tag tag-success\">Coding</span><span className=\"tag tag-info\">Javascript</span><span className=\"tag tag-warning\">PHP</span><span className=\"tag tag-primary\">Node.js</span></p><hr />\n                                                            <strong><i className=\"far fa-file-alt mr-1\" /> Notes</strong>\n                                                            <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p>\n                                                       </div>\n                                                  </div>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                            \n                                        </div>\n                                        {/* /.col */}\n                                        <div className=\"col-md-9\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header p-2\">\n                                                       <ul className=\"nav nav-pills\">\n                                                            <li className=\"nav-item\"><Link className=\"nav-link active bg-success\" href=\"#activity\" data-toggle=\"tab\">Activity</Link></li>\n                                                            <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                            <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                       </ul>\n                                                  </div>{/* /.card-header */}\n                                                  <div className=\"card-body\">\n                                                       <div className=\"tab-content\">\n                                                            <div className=\"active tab-pane\" id=\"activity\">\n                                                                 {/* Post */}\n                                                                 <div className=\"post\">\n                                                                      \n                                                                      {/* /.user-block */}\n                                                                      <p>\n                                                                           Lorem ipsum represents a long-held tradition for designers,\n                                                                           typographers and the like. Some people hate it and argue for\n                                                                           its demise, but others ignore the hate as they create awesome\n                                                                           tools to help create filler text for everyone from bacon lovers\n                                                                           to Charlie Sheen fans.   Lorem ipsum represents a long-held tradition for designers,\n                                                                           typographers and the like. Some people hate it and argue for\n                                                                           its demise, but others ignore the hate as they create awesome\n                                                                           tools to help create filler text for everyone from bacon lovers\n                                                        \n                  </p>\n                                                                      \n                                                                 </div>\n                                                                 {/* /.post */}\n                                                                 {/* Post */}\n                                                                 <div className=\"post clearfix\">\n                                                                    \n                                                                      {/* /.user-block */}\n                                                                    \n                                                                 </div>\n                                                                 {/* /.post */}\n\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                            <div className=\"tab-pane\" id=\"timeline\">\n                                                                 {/* The timeline */}\n                                                                 <div className=\"timeline timeline-inverse\">\n                                                                      {/* timeline time label */}\n                                                                      <div className=\"time-label\">\n                                                                           <span className=\"bg-danger\">\n                                                                                10 Feb. 2014\n                    </span>\n                                                                      </div>\n                                                                      {/* /.timeline-label */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-envelope bg-success\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 12:05</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Support Team</Link> sent you an email</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     Etsy doostang zoodles disqus groupon greplin oooj voxy zoodles,\n                                                                                     weebly ning heekya handango imeem plugg dopplr jibjab, movity\n                                                                                     jajah plickers sifteo edmodo ifttt zimbra. Babblely odeo kaboodle\n                                                                                     quora plaxo ideeli hulu weebly balihoo...\n                      </div>\n                                                                                <div className=\"timeline-footer\">\n                                                                                     <Link href=\"#\" className=\"btn btn-success btn-sm\">Read more</Link>\n                                                                                     <Link href=\"#\" className=\"btn btn-danger btn-sm\">Delete</Link>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-user bg-info\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 5 mins ago</span>\n                                                                                <h3 className=\"timeline-header border-0\"><Link href=\"#\">Sarah Young</Link> accepted your friend request\n                      </h3>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-comments bg-warning\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 27 mins ago</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Jay White</Link> commented on your post</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     Take me to your leader!\n                                                                                     Switzerland is small and neutral!\n                                                                                     We are more like Germany, ambitious and misunderstood!\n                      </div>\n                                                                                <div className=\"timeline-footer\">\n                                                                                     <Link href=\"#\" className=\"btn btn-warning btn-flat btn-sm\">View comment</Link>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline time label */}\n                                                                      <div className=\"time-label\">\n                                                                           <span className=\"bg-success\">\n                                                                                3 Jan. 2014\n                    </span>\n                                                                      </div>\n                                                                      {/* /.timeline-label */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-camera bg-purple\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 2 days ago</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Mina Lee</Link> uploaded new photos</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      <div>\n                                                                           <i className=\"far fa-clock bg-gray\" />\n                                                                      </div>\n                                                                 </div>\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                            <div className=\"tab-pane\" id=\"settings\">\n                                                                 <form className=\"form-horizontal\">\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputName\" className=\"col-sm-2 col-form-label\">Name</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"email\" className=\"form-control\" id=\"inputName\" placeholder=\"Name\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputEmail\" className=\"col-sm-2 col-form-label\">Email</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputName2\" className=\"col-sm-2 col-form-label\">Name</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"text\" className=\"form-control\" id=\"inputName2\" placeholder=\"Name\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputExperience\" className=\"col-sm-2 col-form-label\">Experience</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <textarea className=\"form-control\" id=\"inputExperience\" placeholder=\"Experience\" defaultValue={\"\"} />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputSkills\" className=\"col-sm-2 col-form-label\">Skills</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"text\" className=\"form-control\" id=\"inputSkills\" placeholder=\"Skills\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <div className=\"offset-sm-2 col-sm-10\">\n                                                                                <div className=\"checkbox\">\n                                                                                     <label>\n                                                                                          <input type=\"checkbox\" /> I agree to the <Link href=\"#\">terms and conditions</Link>\n                                                                                     </label>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <div className=\"offset-sm-2 col-sm-10\">\n                                                                                <button type=\"submit\" className=\"btn btn-danger\">Submit</button>\n                                                                           </div>\n                                                                      </div>\n                                                                 </form>\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                       </div>\n                                                       {/* /.tab-content */}\n                                                  </div>{/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                        {/* /.col */}\n                                   </div>\n                                   {/* /.row */}\n                              </div>{/* /.container-fluid */}\n                         </section>\n\n\n                    </div>\n                    <Footer />\n\n               </div>\n\n\n          );\n     }\n}","import axios from 'axios'\nimport React, { Component } from \"react\";\nimport {  Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\n\n\n\nexport default class ResponseByUser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handlePageClick = this.handlePageClick.bind(this);\n\n          this.state = {\n               offset: 0,\n               tableData: [],\n               orgtableData: [],\n               perPage: 10,\n               currentPage: 0,\n               myloading: true\n          };\n     }\n\n     //pagination\n     handlePageClick = (e) => {\n          const selectedPage = e.selected;\n          const offset = selectedPage * this.state.perPage;\n          this.setState({\n               currentPage: selectedPage,\n               offset: offset\n          }, () => {\n               this.loadMoreData()\n          });\n\n     };\n     //pagination\n     loadMoreData() {\n          const data = this.state.orgtableData;\n\n          const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n          this.setState({\n               pageCount: Math.ceil(data.length / this.state.perPage),\n               tableData: slice\n          })\n\n     }\n\n     componentDidMount() {\n\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const scriptdashboard = document.createElement(\"script\");\n          scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n          scriptdashboard.async = true;\n          document.body.appendChild(scriptdashboard);\n\n         \n          this.Get_State_Data();\n\n     }\n\n     Get_State_Data() {\n          const mytoken = JSON.parse(localStorage.getItem('user'));\n          const token = mytoken.token;\n          // const Response_by_user = mytoken.user\n          axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    // params:{\n                    //      survey_type=\n                    // },\n\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"List_Of_Responses_By_User\", JSON.stringify(res.data));\n                    }\n                    const tdata = res.data;\n                    // console.log(res.data.data)   \n\n                    const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                    this.setState({\n                         pageCount: Math.ceil(tdata.length / this.state.perPage),\n                         orgtableData: tdata,\n                         ResponseByUser: slice,\n                         myloading: false\n                    })\n               });\n          // console.log(res.data)   \n     }\n\n     render() {\n\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/'} />)\n          }\n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Responses</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           <div className=\"input-group input-group-sm\" style={{ width: 150 }}>\n                                                                                <input type=\"text\" name=\"table_search\" className=\"form-control float-right\" placeholder=\"Search\" />\n                                                                                <div className=\"input-group-append\">\n                                                                                     <button type=\"submit\" className=\"btn btn-default\">\n                                                                                          <i className=\"fas fa-search\" />\n                                                                                     </button>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                                     <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n                    </div>\n\n                    <Footer />\n               </div>\n\n          );\n     }\n}\n\n\n","\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\nimport authService from '../services/auth.service';\n\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class EditTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n\n        this.state = {\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            loading: false,\n            message: \"\",\n            states: \"\",\n            lgas: \"\",\n            myloading: false,\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: false\n        };\n    }\n\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: true\n        });\n\n        \n            //check auth user\n            const mytoken = JSON.parse(localStorage.getItem('user'));\n            const token = mytoken.token;\n\n           \n            //convert the string to number from the [go] array i save to  localStorage for State\n            const stop_here_for_state = localStorage.getItem('Checked_State');\n            const jasus_for_state = stop_here_for_state\n          \n            //convert the string to number from the [go] array i save to localStorage for LGA\n            const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n            const jasus_for_lga = stop_here_for_lga\n\n           \n            let formData = new FormData();\n            formData.append('title', this.state.title);\n            formData.append('quarter', this.state.quarter);\n            formData.append('year', this.state.year);\n            formData.append('survey_type', this.state.survey_type);\n            formData.append('start_date', this.state.start_date);\n            formData.append('due_date', this.state.due_date);\n            formData.append('states', jasus_for_state);\n            formData.append('lgas', jasus_for_lga);\n\n            this.form.validateAll();\n            if (this.checkBtn.context._errors.length === 0) {\n    \n            axios.post(\"https://gfso.chinikiguard.com/survey/api/create/survey/\", \n            formData,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        AdoptSurveysuccessful: true,\n                    });\n                      console.log(res.data);\n\n                    window.location = \"/Deploy\"\n                    if (res.data) {\n                        localStorage.setItem(\"AdoptedSurvey\", JSON.stringify(res.data));\n                    }\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.message &&\n                                error.response.data.message) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n\n    AddField(Filter_with_name) {\n\n     \n        //select Target category\n        localStorage.setItem(\"Category_to_AddField\", JSON.stringify(Filter_with_name));\n        localStorage.setItem(\"MyCategoryName\", JSON.stringify(Filter_with_name.name));\n        window.location = \"/CategoryView\"\n    }\n\n    componentDidMount() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        //reset to default state\n        const Checked_LGA = 1\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        //call the States and LGAS at the first \n        const state = \"Ahmad loophole\";\n        const user = authService.getCurrentUser();\n\n        const token = user.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n\n            });\n        // console.log(res.data)   \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = 1 \n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov } = this.state;\n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                <center>\n                                                    {this.state.AdoptSurveymessage && (\n                                                        <div className=\"pb-5\" >\n                                                            <div\n                                                                className={\n                                                                    this.state.AdoptSurveysuccessful\n                                                                    ? \"alert alert-success\"\n                                                                    : \"alert alert-danger\"\n                                                                }\n                                                                role=\"alert\"\n                                                            >\n                                                                <h3 > {this.state.AdoptSurveymessage}</h3>\n                                                            </div>\n                                                        </div>\n                                                    )}</center>\n                                               \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Create Survey</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n                                            <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} >\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            <label> Title</label>\n                                                            <Input type=\"text\" className=\"form-control \" placeholder\n                                                                value={this.state.title}\n                                                                onChange={this.onChangeTitle}\n                                                                validations={[required]}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            <label> Quarter</label>\n                                                            <Select  className=\"form-control \" placeholder\n                                                                value={this.state.quarter}\n                                                                onChange={this.onChangeQuarter}\n                                                                validations={[required]}\n                                                            >\n                                                                <option value=\"\">Select</option>\n                                                                <option value=\"q1\">Q1</option>\n                                                                <option value=\"q2\">Q2</option>\n                                                                <option value=\"q3\">Q3</option>\n                                                                <option value=\"q4\">Q4</option>\n                                                                <option value=\"hyq1\">HYQ1</option>\n                                                                <option value=\"hyq2\">HYQ2</option>\n                                                                \n                                                            </Select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            {/* text input */}\n                                                            <label> Year</label>\n                                                            <Input type=\"number\" className=\"form-control \" placeholder\n                                                                value={this.state.year}\n                                                                onChange={this.onChangeYear}\n                                                                validations={[required]}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-6\">\n                                                            {/* text input */}\n                                                            <div className=\"form-group\">\n                                                                <label> Start date</label>\n                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                    value={this.state.start_date}\n                                                                    onChange={this.onChangeStartDate}\n                                                                    validations={[required]}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-sm-6\">\n                                                            <div className=\"form-group\">\n                                                                <label> Due Date</label>\n                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                    value={this.state.due_date}\n                                                                    onChange={this.onChangeDueDate}\n                                                                    validations={[required]}\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            <label> Survey Type</label>\n                                                            <Select type=\"text\" className=\"form-control \" placeholder\n                                                            validations={[required]}\n                                                                value={this.state.survey_type}\n                                                                onChange={this.onChangeSurveyType}                                                               \n                                                            >\n                                                                <option value=\"\">Select</option>\n                                                                <option value=\"sg\">SG</option>\n                                                                <option value=\"lg\">LG</option>\n                                                                <option value=\"other\">OTHER</option>\n                                                            </Select>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                {statesGov && (\n                                                    <div className=\"table-container\">\n                                                        <table className=\"table\">\n                                                            <thead>\n\n                                                                <tr>\n                                                                    <th>STATE</th>\n\n                                                                    <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                            checkboxes=\".table .select-checkbox\"\n                                                                            sync=\".table .row\"\n                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                            }}\n                                                                            onAllChecked={(selectedMap) => {\n                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                            }}\n                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.replace(/\\d+/g,\"\")\n                                                                                   \n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                            }}\n\n                                                                        />\n                                                                    </th>\n                                                                </tr>\n\n                                                            </thead>\n                                                            <tbody className=\"table-body\">\n                                                                {List_Of_States.map((state, i) => (\n\n                                                                    <tr>\n                                                                        <td>{state.title}</td>\n                                                                        <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${state.pk}`}\n                                                                                // onChange={this.onChangeState}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td>\n                                                                    </tr>\n                                                                ))}\n\n                                                            </tbody>\n\n                                                        </table>\n                                                    </div>\n                                                )}\n                                                {lgasGov && (\n                                                    <div className=\"table-container\">\n                                                        <table className=\"table\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th>LGA</th>\n\n                                                                    <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                            checkboxes=\".table .select-checkbox\"\n                                                                            sync=\".table .row\"\n                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                            }}\n                                                                            onAllChecked={(selectedMap) => {\n                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                            }}\n                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                            }}\n\n                                                                        />\n                                                                    </th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody className=\"table-body\">\n                                                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                                                    <tr>\n                                                                        <td>{lga.title}</td>\n                                                                        <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${lga.pk}`}\n                                                                                // onChange={this.onChangeLgas}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td>\n                                                                    </tr>\n                                                                ))}\n\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                               )}\n                                                <center>\n                                                    <div className=\"row\">\n                                                        <button\n                                                            disabled={this.state.AdoptSurveyloading}\n                                                            className=\"btn btn-success btn-lg float-right\"\n                                                        >\n\n                                                            {this.state.AdoptSurveyloading && (\n                                                                <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                            )}\n                                                            Create Survey\n                                                        </button>\n                                                    </div>\n                                                </center>\n                                                <CheckButton\n                                                    style={{ display: \"none\" }}\n                                                    ref={c => {\n                                                        this.checkBtn = c;\n                                                    }}\n                                                />\n                                                \n                                            </Form>\n                                       \n                                        </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ReviewRespondent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditTemplate(Surveys) {\n\n        //\n        localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const singleSurveyPk = Surveys.pk;\n        console.log(Surveys.pk)\n\n        // const body =\n        // {\n        // survey: SurveyList.pk,\n        // }\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                console.log(res.data)\n                // window.location = \"/CompleteSurvey\"\n\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">List of Respondent</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                        <td className=\"\">\n                                                                            <Link className=\"btn btn-lg btn-success \" to=\"/\">\n\n                                                                                Approve\n                                                   </Link>&nbsp;&nbsp;\n\n                                                    <Link className=\"btn btn-lg btn-danger \" to=\"/\">\n                                                                                Delete\n                                                    </Link>&nbsp;&nbsp;\n\n                                                  </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ListToApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                                <Menu />\n\n                <Header />\n\n                <div className=\"content-wrapper\">\n\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     {/* <th>Created by</th> */}\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     {/* <td><span className=\"tag tag-success\">{survey.created_by}</span></td> */}\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\n\nexport default class ApproveTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.handleApprove = this.handleApprove.bind(this);\n        this.onChangestatus = this.onChangestatus.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            status: \"\",\n            remark: \"\",\n            SingleTemplate: []\n        };\n    }\n\n   \n\n    \n\n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n\n    }\n    onChangestatus(e) {\n        this.setState({\n          status: e.target.value\n        });\n   }\n   onChangeRemark(e) {\n        this.setState({\n             remark: e.target.value\n        });\n   }\n   handleApprove(e) {\n\n    e.preventDefault();\n\n    const SingleTemplate = JSON.parse(localStorage.getItem('ApproveTemplateInfo'));\n\n    const templatepk=SingleTemplate.pk\n\n    this.setState({\n         message: \"\",\n         successful: true,\n         loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n\n     let formData = new FormData();\n     formData.append('status', this.state.status);\n     formData.append('survey', SingleTemplate.pk);\n     formData.append('remark', this.state.remark);\n         console.log(formData) \n\n         const mytoken = AuthService.getCurrentUser();\n         const token = mytoken.token;\n         axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n              {\n                   headers:\n                   {\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                   },\n              }).then(\n\n                   response => {\n\n                        this.setState({\n                             message: response.data.detail,\n                             successful: true\n                        });\n                        window.location = \"/ApproveThisTemplate\"\n                   },\n                   error => {\n                        const resMessage =\n                             (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data) ||\n                             error.message ||\n                             error.toString();\n\n                        this.setState({\n                             loading: false,\n                             message: resMessage,\n                             ViewTemplateloading: false,\n\n                        });\n                   }\n              );\n    } else {\n         this.setState({\n              loading: false\n         });\n    }\n}\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const SingleTemplate = JSON.parse(localStorage.getItem('ApproveTemplateInfo'));\n        const SingleTemplateCategories = SingleTemplate.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {SingleTemplateCategories&&SingleTemplateCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                \n                                            </div>\n                                            {/* /.card-body */}\n\n                                        </div>\n                                    ))}\n                                    <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{SingleTemplate.title}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                               \n                                                <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {SingleTemplate.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {SingleTemplate.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {SingleTemplate.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {SingleTemplate.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {SingleTemplate.get_states&&SingleTemplate.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                    {/* {SurveyInfo.get_lgas} */}\n                                                                    {SingleTemplate.get_lgas && SingleTemplate.get_lgas.map(states => (\n                                                                         <span> {states.title}</span>\n                                                                    ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                 \n                                                   \n                                                \n                                            </div>\n                                            {/* /.card-body */}\n                                            \n                                        </div>\n                                    {/* /.card */}\n                                    {SingleTemplateCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n\n                                        <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                \n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangestatus}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_template\">Approve</option>\n                                                                      <option value=\"rejected_template\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                               \n                                        \n                                          \n                                       \n                                        \n                                          </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                \n                                </div>\n                               \n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ValidateResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            loading: false,\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditResponse(Surveys) {\n\n        this.setState({\n            loading: true,\n  \n          });       \n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const survey_pk = Surveys.pk;\n        // console.log(Surveys.pk)\n\n       \n        axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:{\n                    survey_pk:survey_pk\n                }\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ResponseData\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)\n                window.location = \"/ResponseTable\"\n                this.setState({\n                    // loading: false,\n                   \n                });\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay\"><i className=\"fas fa-2x fa-sync-alt fa-spin\" /></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content-wrapper\" >\n                \n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        \n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        <Link\n                                                         className=\"btn btn-primary btn-sm\" \n                                                         onClick={this.EditResponse.bind(this, survey)}\n\n                                                        >\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     View\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n\n\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ValidateResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            loading: false,\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditResponse(Surveys) {\n\n        this.setState({\n            loading: true,\n  \n          });       \n        const mytoken = JSON.parse(localStorage.getItem('user'));\n        const token = mytoken.token;\n        const survey_pk = Surveys.pk;\n        // console.log(Surveys.pk)\n\n       \n        axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:{\n                    survey_pk:survey_pk\n                }\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ResponseData\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)\n                window.location = \"/ResponseTable\"\n                this.setState({\n                    loading: false,\n                   \n                });\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay\"><i className=\"fas fa-2x fa-sync-alt fa-spin\" />loading ...</div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content-wrapper\" >\n                \n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        \n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        <Link\n                                                         className=\"btn btn-primary btn-sm\" \n                                                         onClick={this.EditResponse.bind(this, survey)}\n\n                                                        >\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     View\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n\n\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport {  Redirect,Link } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class RespondentList extends Component {\n\n  constructor(props) {\n    super(props);\n   \n\n    this.state = {\n      \n      Users:[],\n      successful: false,\n      message: \"\",\n      loading: true,\n      loadingModal:false\n    };\n  }\n\n\n  componentWillMount(){\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n     const mytoken = JSON.parse(localStorage.getItem('user'));\n     const token = mytoken.token;\n     axios.get(\"https://gfso.chinikiguard.com/accounts/api/list/profile/?active=yes\",\n     {\n       headers:\n       {\n         'Authorization': `Token ${token}`,\n         'Access-Control-Allow-Origin': '*',\n         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n         'Access-Control-Allow-Credentials': true\n       },\n     })\n     .then(res => {\n       if (res.data) {\n         localStorage.setItem(\"Users\", JSON.stringify(res.data));\n       }\n       this.setState({\n         Users: res.data,\n         loading:false\n     });\n       // (res);\n       console.log(res.data);\n\n     })\n\n   \n\n\n  }\n\n  ApproveResponder(users){\n\n    const userId = users.pk\n    console.log(users.pk)\n    const mytoken = AuthService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/details/profile/${userId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ApproveResponder\"\n\n            if (res.data) {\n                localStorage.setItem(\"ReviewResponderList\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ReviewResponder: res.data,\n              // loadingModal: false,\n            });\n\n          })\n\n  }\n\n  \n \n  \n  render() {\n\n    \n    // console.log(list_of_lga);\n    const Users = JSON.parse(localStorage.getItem('Users'))\n\n\n\n\n    return (\n      <div>\n        <Header />\n\n        <div className=\"content-wrapper\" >\n        {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n          <Menu />\n          <div className=\"col-md-12\" >\n            <br />\n            {this.state.loading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">List of Respondents</h3>\n                    <div className=\"card-tools\">\n\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n\n                  <div className=\"card-body table-responsive p-0\">\n\n                    <table className=\"table table-hover text-nowrap\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Phone</th>\n                          <th>State</th>\n                          <th>LGA</th>\n                          <th>Registered on</th>\n                          <th>designation</th>\n                          <th>Branch</th>\n                          <th>Action</th>\n                          \n                        </tr>\n                      </thead>\n                      {this.state.Users && this.state.Users.map(users => (\n\n                        <tbody>\n                          <tr>\n                            <td>{users.username}&nbsp;</td>\n                            <td>{users.phone_number}</td>\n                            <td>{users.state_title}</td>\n                            <td>{users.lga_title}</td>\n                            <td>{users.date_joined}</td>\n                            <td>{users.designation_title}</td>\n                            <td>{users.branch_name}</td>\n                                     <td className=\"\">\n                                          <Link \n                                          className=\"btn btn-lg btn-success \"\n                                           disabled={this.state.loading}\n                                          onClick={this.ApproveResponder.bind(this, users)}\n\n                                           >\n\n                                               Approve\n                                                   </Link>&nbsp;&nbsp;\n\n                                                   \n                                                  </td>\n\n                          </tr>\n\n                        </tbody>\n                      ))}\n                    </table>\n                  </div>\n\n\n                  {/* /.card-body */}\n                </div>\n                {/* /.card */}\n              </div>\n            </div>\n          </section>\n\n          )}\n        </div>\n                               \n        </div>\n        <Footer />\n\n        </div>\n\n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApproveSurvey extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleApprove = this.handleApprove.bind(this);\n          this.onChangeApprove = this.onChangeApprove.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeApprove(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n\n     componentDidMount() {\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/login'} />)\n             }\n\n     }\n\n     handleApprove(e) {\n\n          e.preventDefault();\n          const Surveypk = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n          const SurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'));\n\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('status', this.state.status);\n               formData.append('survey', SurveyInfo.pk);\n               formData.append('remark', this.state.remark);\n\n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`,formData, \n               \n               \n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              \n                              window.location = \"/ListToApprove\"\n                                             // console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/'} />)\n          }\n          const SurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'));\n\n          \n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         {/* {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )} */}\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-12\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header\">\n                                                       <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                       <div className=\"card-tools\">\n                                                       </div>\n                                                  </div>\n                                                  <div className=\"card-body\">\n                                                       {/* /.card-header */}\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Title</label>:&nbsp;\n                                                                                      {SurveyInfo.title}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Quarter</label>:&nbsp;\n                                                                                      {SurveyInfo.quarter}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {SurveyInfo.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {SurveyInfo.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {SurveyInfo.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {SurveyInfo.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {SurveyInfo.get_states&&SurveyInfo.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_lgas} */}\n                                                                                          {SurveyInfo.get_lgas&&SurveyInfo.get_lgas.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Action</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeApprove}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_creation\" className=\"text-success\">Approve</option>\n                                                                      <option value=\"rejected_creation\" className=\"text-danger\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                   </div>\n\n\n\n                              </div>\n\n\n                         </section>\n\n                    </div>\n                    <Footer />\n\n               </div>\n          );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateToApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"TemplateToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveTemplate(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveTemplate\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApproveTemplateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveTemplate.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApprovedSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApprovedTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n    \n    componentDidMount() {\n\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no`,\n\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class RejectedTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&rejected=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\n\n\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\nexport default class RejectedSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.UpdateSurvey = this.UpdateSurvey.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,  \n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            approve: \"\",\n            remark: \"\",\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            states: \"\",\n            lgas: \"\",\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n        };\n    }\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n\n\n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n    }\n    onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?rejected=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = [1, 1, 1]\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = [1, 1, 1]\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n     \n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            // console.log(e);\n        }\n    }\n\n    handleUpdate(e) {\n\n        e.preventDefault();\n        const SurveyId = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n    \n        this.setState({\n          message: \"\",\n          successful: false,\n          loading: true\n        });\n        this.form.validateAll();\n    \n        if (this.checkBtn.context._errors.length === 0) {\n          \n          const ApprovSurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'))\n          \n\n         \n        //   let formData = new FormData();\n        //   formData.append('title', this.state.title||ApprovSurveyInfo.title);\n        //   formData.append('quarter', this.state.quarter||ApprovSurveyInfo.quarter);\n        //   formData.append('year', this.state.year||ApprovSurveyInfo.year);\n        //   formData.append('survey_type', this.state.survey_type||ApprovSurveyInfo.survey_type);\n        //   formData.append('start_date', this.state.start_date||ApprovSurveyInfo.start_date);\n        //   formData.append('due_date', this.state.due_date||ApprovSurveyInfo.due_date);\n        //   formData.append('states', jasus_for_state ||ApprovSurveyInfo.jasus_for_state);\n        //   formData.append('lgas', jasus_for_lga ||ApprovSurveyInfo.jasus_for_lga);\n        //   formData.append('rejected', 'false' );\n\n        // {\n        //     \"survey_pk\": 17,\n        //     “title”: “New title”,\n        //     “year”: 2011,\n        //     “quarter”: “hyq1”,\n        //      \"survey_type\": slg\",\n        //       \"states_pk\": [1,2],\n        //   }\n\n            //convert the string to number from the [go] array i save to  localStorage for State\n            const stop_here_for_state = localStorage.getItem('Checked_State');\n            const jasus_for_state = stop_here_for_state\n\n            //convert the string to number from the [go] array i save to localStorage for LGA\n            const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n            const jasus_for_lga = stop_here_for_lga\n\n            //set the states user selected\n            const states =\n                jasus_for_state.match(/\\d+/g).map(Number)\n\n            //set the LGAs user selected\n            const lgas =\n                jasus_for_lga.match(/\\d+/g).map(Number)\n\n\n\n\n            // newly created json\n            const body =\n            {\n                survey_pk:ApprovSurveyInfo.pk,\n                title: this.state.title||ApprovSurveyInfo.title,\n                quarter: this.state.quarter||ApprovSurveyInfo.quarter,\n                year: this.state.year||ApprovSurveyInfo.year,\n                survey_type: this.state.survey_type||ApprovSurveyInfo.survey_type,\n                start_date: this.state.start_date||ApprovSurveyInfo.start_date,\n                due_date: this.state.due_date||ApprovSurveyInfo.due_date,\n                rejected: 'false',\n                survey_type:this.state.survey_type||ApprovSurveyInfo.survey_type,\n                states_pk: states ||ApprovSurveyInfo.states,\n                lgas_pk:lgas||ApprovSurveyInfo.states,\n            }\n\n            console.log(body);\n          const mytoken = authService.getCurrentUser();\n          const token = mytoken.token;\n    \n          axios.post(`https://gfso.chinikiguard.com/survey/api/update/survey/respondents/`, body,\n          {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        },\n          \n          ).then(\n    \n            response => {\n    \n              this.setState({\n                message: \"Survey Updated Successefully\",\n                successful: true\n              });\n            //   window.location = \"/RejectedSurvey\"\n            },\n            error => {\n              const resMessage =\n                (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n                error.message ||\n                error.toString();\n    \n              this.setState({\n                loading: false,\n                message: resMessage\n              });\n            }\n          );\n        } else {\n          this.setState({\n            loading: false\n          });\n        }\n    \n      }\n\n    UpdateSurvey(survey) {\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n        });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    ApproveThisSurvey: res.data,\n                    loadingModal: false,\n                });\n\n            })\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov } = this.state;\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">\n                                    <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                    <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                    )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n                                    {this.state.myloading ? (\n                                        <>\n                                            <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                        </>\n                                    ) : (\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-header\">\n                                                        <h3 className=\"card-title\">Update Surveys</h3>\n                                                        <div className=\"card-tools\">\n\n                                                        </div>\n                                                    </div>\n                                                    {/* /.card-header */}\n                                                    {this.state.myloading ? (\n                                                        <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                    ) : (\n                                                        <div className=\"card-body table-responsive p-0\">\n                                                            <table className=\"table table-hover text-nowrap\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th>Title</th>\n                                                                        <th>Type</th>\n                                                                        <th>Year</th>\n                                                                        <th>Quarter</th>\n                                                                        <th>Created by</th>\n                                                                        <th>Remark </th>\n                                                                        <th>Action </th>\n                                                                    </tr>\n                                                                </thead>\n                                                                {this.state.Surveys.map(survey => (\n\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <td>{survey.title}</td>\n                                                                            <td>{survey.survey_type}</td>\n                                                                            <td>{survey.year}</td>\n                                                                            <td>{survey.quarter}</td>\n                                                                            <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                            <td>{survey.get_latest_history?survey.get_latest_history.remark:\"no remark\"}</td>\n\n                                                                            \n                                                                            <td className=\"\">\n                                                                                <button\n                                                                                    className=\"btn btn-info btn-lg\"\n                                                                                    disabled={this.state.loading}\n                                                                                    data-toggle=\"modal\"\n                                                                                    data-target=\"#modal-lg\"\n                                                                                   onClick={this.UpdateSurvey.bind(this, survey)}\n\n                                                                                >Update\n                                                                               </button>\n\n                                                                                <div className=\"modal fade\" id=\"modal-lg\">\n                                                                                    <div className=\"modal-dialog modal-lg\">\n                                                                                        <div className=\"modal-content\">\n                                                                                            <div className=\"modal-header\">\n                                                                                                <h4 className=\"modal-title\">Update Survey</h4>\n                                                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                                    <span aria-hidden=\"true\">×</span>\n                                                                                                </button>\n                                                                                            </div>\n                                                                                            {this.state.loadingModal ? (\n                                                                                                <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                                            ) : (\n                                                                                                <div>\n                                                                                                    <div className=\"modal-body\">\n\n                                                                                                            <Form onSubmit={this.handleUpdate} ref={c => { this.form = c; }} >\n                                                                                                                <div className=\"row\">\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Title</label>\n                                                                                                                            <Input type=\"text\" className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.title}\n                                                                                                                                onChange={this.onChangeTitle}\n                                                                                                                                // validations={[required]}\n                                                                                                                            />\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Quarter</label>\n                                                                                                                            <Select className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.quarter}\n                                                                                                                                onChange={this.onChangeQuarter}\n                                                                                                                                // validations={[required]}\n                                                                                                                            >\n                                                                                                                                <option value=\"\">Select</option>\n                                                                                                                                <option value=\"q1\">Q1</option>\n                                                                                                                                <option value=\"q2\">Q2</option>\n                                                                                                                                <option value=\"q3\">Q3</option>\n                                                                                                                                <option value=\"q4\">Q4</option>\n                                                                                                                            </Select>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                </div>\n                                                                                                                <div className=\"row\">\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            {/* text input */}\n                                                                                                                            <label> Year</label>\n                                                                                                                            <Input type=\"number\" className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.year}\n                                                                                                                                onChange={this.onChangeYear}\n                                                                                                                                // validations={[required]}\n                                                                                                                            />\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"row\">\n                                                                                                                        <div className=\"col-sm-6\">\n                                                                                                                            {/* text input */}\n                                                                                                                            <div className=\"form-group\">\n                                                                                                                                <label> Start date</label>\n                                                                                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                                                    value={this.state.ApproveThisSurvey.start_date}\n                                                                                                                                    onChange={this.onChangeStartDate}\n                                                                                                                                    // validations={[required]}\n                                                                                                                                />\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"col-sm-6\">\n                                                                                                                            <div className=\"form-group\">\n                                                                                                                                <label> Due Date</label>\n                                                                                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                                                    value={this.state.ApproveThisSurvey.due_date}\n                                                                                                                                    onChange={this.onChangeDueDate}\n                                                                                                                                    // validations={[required]}\n                                                                                                                                />\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Survey Type</label>\n                                                                                                                            <Select type=\"text\" className=\"form-control \" placeholder\n                                                                                                                                // validations={[required]}\n                                                                                                                                value={this.state.survey_type}\n                                                                                                                                onChange={this.onChangeSurveyType}\n                                                                                                                            >\n                                                                                                                                <option value=\"\">Select</option>\n                                                                                                                                <option value=\"sg\">SG</option>\n                                                                                                                                <option value=\"lg\">LG</option>\n                                                                                                                                <option value=\"other\">OTHER</option>\n                                                                                                                            </Select>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                </div>\n                                                                                                                {statesGov && (\n                                                                                                                    <div className=\"table-container\">\n                                                                                                                        <table className=\"table\">\n                                                                                                                            <thead>\n\n                                                                                                                                <tr>\n                                                                                                                                    <th>STATE</th>\n\n                                                                                                                                    <th> Check all\n                                                                                                                                         <MultiselectCheckbox\n                                                                                                                                            checkboxes=\".table .select-checkbox\"\n                                                                                                                                            sync=\".table .row\"\n                                                                                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                                                            }}\n                                                                                                                                            onAllChecked={(selectedMap) => {\n                                                                                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                            }}\n                                                                                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.replace(/\\d+/g,\"\")\n\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                                                            }}\n\n                                                                                                                                        />\n                                                                                                                                    </th>\n                                                                                                                                </tr>\n\n                                                                                                                            </thead>\n                                                                                                                            <tbody className=\"table-body\">\n                                                                                                                                {List_Of_States.map((state, i) => (\n\n                                                                                                                                    <tr>\n                                                                                                                                        <td>{state.title}</td>\n                                                                                                                                        <td>\n                                                                                                                                            <input\n                                                                                                                                                type=\"checkbox\"\n                                                                                                                                                className=\"select-checkbox\"\n                                                                                                                                                value={`${state.pk}`}\n                                                                                                                                                // onChange={this.onChangeState}\n                                                                                                                                                // validations={[required]}\n                                                                                                                                            />\n                                                                                                                                        </td>\n                                                                                                                                    </tr>\n                                                                                                                                ))}\n\n                                                                                                                            </tbody>\n\n                                                                                                                        </table>\n                                                                                                                    </div>\n                                                                                                                )}\n                                                                                                                {lgasGov && (\n                                                                                                                    <div className=\"table-container\">\n                                                                                                                        <table className=\"table\">\n                                                                                                                            <thead>\n                                                                                                                                <tr>\n                                                                                                                                    <th>LGA</th>\n\n                                                                                                                                    <th> Check all\n                                                                                                                                          <MultiselectCheckbox\n                                                                                                                                            checkboxes=\".table .select-checkbox\"\n                                                                                                                                            sync=\".table .row\"\n                                                                                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                                                            }}\n                                                                                                                                            onAllChecked={(selectedMap) => {\n                                                                                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                            }}\n                                                                                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                                                            }}\n\n                                                                                                                                        />\n                                                                                                                                    </th>\n                                                                                                                                </tr>\n                                                                                                                            </thead>\n                                                                                                                            <tbody className=\"table-body\">\n                                                                                                                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                                                                                                                    <tr>\n                                                                                                                                        <td>{lga.title}</td>\n                                                                                                                                        <td>\n                                                                                                                                            <input\n                                                                                                                                                type=\"checkbox\"\n                                                                                                                                                className=\"select-checkbox\"\n                                                                                                                                                value={`${lga.pk}`}\n                                                                                                                                                // onChange={this.onChangeLgas}\n                                                                                                                                                // validations={[required]}\n                                                                                                                                            />\n                                                                                                                                        </td>\n                                                                                                                                    </tr>\n                                                                                                                                ))}\n\n                                                                                                                            </tbody>\n                                                                                                                        </table>\n                                                                                                                    </div>\n                                                                                                                )}\n                                                                                                                <center>\n                                                                                                                    {this.state.message && (\n                                                                                                                        <div className=\"pb-5\" >\n                                                                                                                            <div\n                                                                                                                                className={\n                                                                                                                                    this.state.successful\n                                                                                                                                        ? \"alert alert-success\"\n                                                                                                                                        : \"alert alert-danger\"\n                                                                                                                                }\n                                                                                                                                role=\"alert\"\n                                                                                                                            >\n                                                                                                                                <h3 > {this.state.message}</h3>\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                    )}</center>\n                                                                                                                <center>\n                 \n                                                                                                                        <div className=\"modal-footer justify-content-between\">\n                                                                                                                            <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                                                                                                                            <button\n                                                                                                                            disabled={this.state.AdoptSurveyloading}\n                                                                                                                            className=\"btn btn-primary btn-sm float-right\"\n                                                                                                                        >\n\n                                                                                                                            {this.state.AdoptSurveyloading && (\n                                                                                                                                <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                                                                                            )}\n                                                                                                                     Update Survey\n                                                                                                                     </button>                                                                                                                        </div>\n\n                                                                                                                </center>\n                                                                                                                <CheckButton\n                                                                                                                    style={{ display: \"none\" }}\n                                                                                                                    ref={c => {\n                                                                                                                        this.checkBtn = c;\n                                                                                                                    }}\n                                                                                                                />\n\n                                                                                                            </Form>\n\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            )}\n                                                                                        </div>\n                                                                                        {/* /.modal-content */}\n                                                                                    </div>\n                                                                                </div>\n                                                                                {/* /.modal-dialog */}\n\n                                                                            </td>\n\n\n                                                                        </tr>\n\n                                                                    </tbody>\n                                                                ))}\n                                                            </table>\n                                                        </div>\n                                                    )}\n                                                    {/* /.card-body */}\n                                                </div>\n                                                {/* /.card */}\n                                            </div>\n                                        </div>\n\n                                    )}\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n\n                </div>\n                <Footer />\n\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport {  Redirect,Link } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class RespondentInfo extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      \n      Users:[],\n      ApproveResponder:[],\n      successful: false,\n      message: \"\",\n      loading: true\n    };\n  }\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('user')) {\n\n      return (<Redirect to={'/login'} />)\n    }\n    \n    const mytoken = JSON.parse(localStorage.getItem('user'));\n    const token = mytoken.token;\n    axios.get(\"https://gfso.chinikiguard.com/accounts/api/list/profile/?approved=no&active=no\",\n    {\n      headers:\n      {\n        'Authorization': `Token ${token}`,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n        'Access-Control-Allow-Credentials': true\n      },\n    })\n    .then(res => {\n      if (res.data) {\n        localStorage.setItem(\"Users\", JSON.stringify(res.data));\n      }\n      this.setState({\n        Users: res.data,\n        loading:false\n    });\n      // (res);\n      // console.log(res.data);\n\n    })\n\n  \n     \n\n  }\n\n  ApproveResponder(users){\n\n    const userId = users.pk\n    // console.log(users.pk)\n    const mytoken = AuthService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/details/profile/${userId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ReviewResponder\"\n\n            if (res.data) {\n                localStorage.setItem(\"ReviewResponderInfo\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ReviewResponder: res.data,\n              // loadingModal: false,\n            });\n\n          })\n\n  }\n\n  \n \n  \n  render() {\n\n    \n    // console.log(list_of_lga);\n    const Users = JSON.parse(localStorage.getItem('Users'))\n\n    if (!localStorage.getItem('user')) {\n\n        return (<Redirect to={'/login'} />)\n      }\n\n\n    return (\n      <div>\n        <Header />\n\n        <div className=\"content-wrapper\" >\n          <Menu />\n\n          {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n          <div className=\"col-md-12\" >\n            <br />\n            {this.state.loading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">List of Respondents</h3>\n                    <div className=\"card-tools\">\n\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n\n                  <div className=\"card-body table-responsive p-0\">\n\n                    <table className=\"table table-hover text-nowrap\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Phone</th>\n                          <th>State</th>\n                          <th>LGA</th>\n                          <th>Registered on</th>\n                          <th>designation</th>\n                          <th>Branch</th>\n                          <th>Action</th>\n                          \n                        </tr>\n                      </thead>\n                      {this.state.Users && this.state.Users.map(users => (\n\n                        <tbody>\n                          <tr>\n                            <td>{users.username}&nbsp;</td>\n                            <td>{users.phone_number}</td>\n                            <td>{users.state_title}</td>\n                            <td>{users.lga_title}</td>\n                            <td>{users.date_joined}</td>\n                            <td>{users.designation_title}</td>\n                            <td>{users.branch_name}</td>\n                                     <td className=\"\">\n                                          <button className=\"btn btn-lg btn-info \"\n                                          disabled={this.state.loading}\n                                          onClick={this.ApproveResponder.bind(this, users)}\n\n                                          >\n\n                                               Update\n                                                   </button>&nbsp;&nbsp;\n\n                                                   \n                                                  </td>\n\n                          </tr>\n\n                        </tbody>\n                      ))}\n                    </table>\n                  </div>\n\n\n                  {/* /.card-body */}\n                </div>\n                {/* /.card */}\n              </div>\n            </div>\n          </section>\n\n          )}\n        </div>\n                               \n        </div>\n        <Footer />\n\n        </div>\n\n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Notifications extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: \"\",\n      loading: true,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false,\n      survey: \"\",\n      true:\"False\"\n\n    };\n  }\n\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/?read=no',\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\n        }\n        this.setState({\n          notification: res.data.length,\n          message: res.data,\n          loading: false,\n\n        });\n        // console.log(res.data)                  \n\n      })\n\n  }\n\n  ViewNotification(message){\n\n    this.state.true= \"True\"\n\n    const notifyId = message.pk\n    // console.log(message.pk)\n    // console.log(this.state.true)\n    localStorage.setItem(\"notify_Update_ID\", JSON.stringify(message.pk));\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n\n    axios.get(`https://gfso.chinikiguard.com/core/api/user/notification/details/${notifyId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ViewNotification\"\n\n            if (res.data) {\n                localStorage.setItem(\"ApproveNotifications\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ApproveThisSurvey: res.data,\n              loadingModal: false,\n            });\n\n          })\n\n          let formData = new FormData();\n          formData.append('read', this.state.true);\n          axios.patch(`https://gfso.chinikiguard.com/core/api/user/notification/update/${notifyId}/`,formData,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            if (res.data) {\n                localStorage.setItem(\"Read\", JSON.stringify(res.data));\n            }\n\n          })\n\n  }\n\n\n  render() {\n\n    //check for user to access the page\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n    //get the template details\n    // const ApproveNotifications = JSON.parse(localStorage.getItem('ApproveNotifications'));\n\n\n    return (\n      <div>\n        <Header />\n        <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n          <Menu /><br />\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <Link className=\"btn btn-success btn-block mb-3\">Messages</Link>\n               \n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Folders</h3>\n                    <div className=\"card-tools\">\n                      <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\n                        <i className=\"fas fa-minus\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-0\">\n                    <ul className=\"nav nav-pills flex-column\">\n                      <li className=\"nav-item active\">\n                        <Link to=\"/Notifications\" className=\"nav-link\">\n                          <i className=\"fas fa-inbox\" /> Inbox\n                <span className=\"badge bg-primary float-right\">{this.state.notification}</span>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-envelope\" /> Read\n              </a>\n                      </li>\n                    \n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-trash-alt\" /> Trash\n              </a>\n                      </li>\n                    </ul>\n                  </div>\n                  {/* /.card-body */}\n                </div>\n               \n              </div>\n              {/* /.col */}\n              <div className=\"col-md-9\">\n                <div className=\"card card-success card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Inbox</h3>\n                    <div className=\"card-tools\">\n                      <div className=\"input-group input-group-sm\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Search Mail\" />\n                        <div className=\"input-group-append\">\n                          <div className=\"btn btn-primary\">\n                            <i className=\"fas fa-search\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* /.card-tools */}\n                  </div>\n                  {/* /.card-header */}\n                  <div className=\"card-body p-0\">\n                    <div className=\"mailbox-controls\">\n                      {/* Check all button */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm checkbox-toggle\"><i className=\"far fa-square\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"far fa-trash-alt\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-reply\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-share\" />\n                        </button>\n                      </div>\n                      {/* /.btn-group */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm\">\n                        <i className=\"fas fa-sync-alt\" />\n                      </button>\n                      <div className=\"float-right\">\n                        {this.state.notification}\n              <div className=\"btn-group\">\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-left\" />\n                          </button>\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-right\" />\n                          </button>\n                        </div>\n                        {/* /.btn-group */}\n                      </div>\n                      {/* /.float-right */}\n                    </div>\n                    <div className=\"table-responsive mailbox-messages\">\n                      {this.state.loading ? (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span> \n                        ) : (\n                      <table className=\"table table-hover table-striped\">\n                        <tbody>\n                        {this.state.message && this.state.message.map(message => (\n                          <tr>\n                            <td>\n                              <div className=\"icheck-primary\">\n                                <input type=\"checkbox\" defaultValue id=\"check1\" />\n                                <label htmlFor=\"check1\" />\n                              </div>\n                            </td>\n                            <td className=\"mailbox-star\"><a href=\"#\"><i className=\"fas fa-star text-warning\" /></a></td>\n                            <td className=\"mailbox-name\">\n                            <Link\n                            onClick={this.ViewNotification.bind(this, message)}\n                            >{message.api_message}</Link></td>\n                            <td className=\"mailbox-subject\"><b>{message.subject}</b> -         </td>\n                            <td className=\"mailbox-attachment\" />\n                            <td className=\"mailbox-date\">{message.created}</td>\n                          </tr>\n                        ))}\n                           </tbody>\n                      </table>\n                        )}\n                    </div>\n                    {/* /.mail-box-messages */}\n                  </div>\n                  {/* /.card-body */}\n                  <div className=\"card-footer p-0\">\n                    <div className=\"mailbox-controls\">\n                      {/* Check all button */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm checkbox-toggle\">\n                        <i className=\"far fa-square\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"far fa-trash-alt\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-reply\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-share\" />\n                        </button>\n                      </div>\n                      {/* /.btn-group */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm\">\n                        <i className=\"fas fa-sync-alt\" />\n                      </button>\n                      <div className=\"float-right\">\n                        1-50/200\n              <div className=\"btn-group\">\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-left\" />\n                          </button>\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-right\" />\n                          </button>\n                        </div>\n                        {/* /.btn-group */}\n                      </div>\n                      {/* /.float-right */}\n                    </div>\n                  </div>\n                </div>\n                {/* /.card */}\n              </div>\n              {/* /.col */}\n            </div>\n            {/* /.row */}\n          </section>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyToDeploy extends Component {\n\n    constructor(props) {\n         \n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved=yes&approved_template=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"SurveyToDeploy\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveTemplate(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/DeploySurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"DeployTemplateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveTemplate.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\n\nexport default class DeploySurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.handleApprove = this.handleApprove.bind(this);\n        this.onChangestatus = this.onChangestatus.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            status: \"\",\n            remark: \"\",\n            DeploySingleSurvey: []\n        };\n    }\n\n   \n\n    \n\n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n    }\n    onChangestatus(e) {\n        this.setState({\n          status: e.target.value\n        });\n   }\n   onChangeRemark(e) {\n        this.setState({\n             remark: e.target.value\n        });\n   }\n   handleApprove(e) {\n\n    e.preventDefault();\n\n    const DeploySingleSurvey = JSON.parse(localStorage.getItem('DeployTemplateInfo'));\n\n    const pk=DeploySingleSurvey.pk\n\n    this.setState({\n         message: \"\",\n         successful: true,\n         loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n\n     let formData = new FormData();\n     formData.append('status', this.state.status);\n     formData.append('survey',  pk);\n     formData.append('remark', this.state.remark);\n         console.log(formData) \n\n         const mytoken = AuthService.getCurrentUser();\n         const token = mytoken.token;\n         axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n              {\n                   headers:\n                   {\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                   },\n              }).then(\n\n                   response => {\n\n                        this.setState({\n                             message: response.data.detail,\n                             successful: true\n                        });\n                        window.location = \"/SurveyToDeploy\"\n                   },\n                   error => {\n                        const resMessage =\n                             (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data) ||\n                             error.message ||\n                             error.toString();\n\n                        this.setState({\n                             loading: false,\n                             message: resMessage,\n                             ViewTemplateloading: false,\n\n                        });\n                   }\n              );\n    } else {\n         this.setState({\n              loading: false\n         });\n    }\n}\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const DeploySingleSurvey = JSON.parse(localStorage.getItem('DeployTemplateInfo'));\n        const DeploySingleSurveyCategories = DeploySingleSurvey.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {DeploySingleSurveyCategories&&DeploySingleSurveyCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                \n                                            </div>\n                                            {/* /.card-body */}\n\n                                        </div>\n                                    ))}\n                                    <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{DeploySingleSurvey.title}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                               \n                                                <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {DeploySingleSurvey.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {DeploySingleSurvey.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {DeploySingleSurvey.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {DeploySingleSurvey.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {DeploySingleSurvey.get_states&&DeploySingleSurvey.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                    {/* {SurveyInfo.get_lgas} */}\n                                                                    {DeploySingleSurvey.get_lgas && DeploySingleSurvey.get_lgas.map(states => (\n                                                                         <span> {states.title}</span>\n                                                                    ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                 \n                                                   \n                                                \n                                            </div>\n                                            {/* /.card-body */}\n                                            \n                                        </div>\n                                    {/* /.card */}\n                                    {DeploySingleSurveyCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n\n                                        <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                \n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangestatus}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_deploy\">Approve</option>\n                                                                      <option value=\"rejected_deploy\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                               \n                                        \n                                          \n                                       \n                                        \n                                          </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                \n                                </div>\n                               \n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyRejected extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n           \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n   \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyApproved extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n   \n    componentDidMount() {\n\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n   \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateApproved extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n           \n        };\n    }\n \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no`,\n\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateRejected extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n    \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&rejected=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApproveThisTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n           \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"TemplateToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n  \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApproveThisSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n          \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('user')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('user')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class ViewNotification extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: \"\",\n      loading: true,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false,\n      survey: \"\"\n\n    };\n  }\n\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/',\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\n        }\n        this.setState({\n          notification: res.data.length,\n          message: res.data,\n          loading: false,\n\n        });\n        // console.log(res.data)                  \n\n      })\n\n  }\n\n\n\n\n  render() {\n\n    //check for user to access the page\n    if (!localStorage.getItem('user')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const ApproveNotifications = JSON.parse(localStorage.getItem('ApproveNotifications'));\n    const MyNotification = ApproveNotifications.message.slice(37, -670)\n    const MyNotificationdear = ApproveNotifications.message.slice(0, -670)\n    // console.log(MyNotification)\n    return (\n      <div>\n        <Header />\n        <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n          <Menu /><br />\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <Link className=\"btn btn-success btn-block mb-3\">Messages</Link>\n\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Folders</h3>\n                    <div className=\"card-tools\">\n                      <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\n                        <i className=\"fas fa-minus\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-0\">\n                    <ul className=\"nav nav-pills flex-column\">\n                      <li className=\"nav-item active\">\n                        <Link to=\"/Notifications\" className=\"nav-link\">\n                          <i className=\"fas fa-inbox\" /> Inbox\n                <span className=\"badge bg-primary float-right\">{this.state.notification}</span>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-envelope\" /> Read\n              </a>\n                      </li>\n\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-trash-alt\" /> Trash\n              </a>\n                      </li>\n                    </ul>\n                  </div>\n                  {/* /.card-body */}\n                </div>\n\n              </div>\n              {/* /.col */}\n              <div className=\"col-md-9\">\n                <div className=\"card card-success card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Read Notification</h3>\n                    <div className=\"card-tools\">\n                      <a href=\"#\" className=\"btn btn-tool\" title=\"Previous\"><i className=\"fas fa-chevron-left\" /></a>\n                      <a href=\"#\" className=\"btn btn-tool\" title=\"Next\"><i className=\"fas fa-chevron-right\" /></a>\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n                  <div className=\"card-body p-0\">\n                    <div className=\"mailbox-read-info\">\n                      <h5>{ApproveNotifications.subject}</h5>\n                      <h6>From: support@cbn.gov.ng.\n          <span className=\"mailbox-read-time float-right\">{ApproveNotifications.created}</span></h6>\n                    </div>\n\n                    <div className=\"mailbox-read-message\">\n                      <p>{MyNotificationdear.slice(0, 37)}</p>\n\n                      <div style={{ whiteSpace: \"pre-wrap\" }}>{MyNotification}</div>\n\n                      <p>Thanks,<br />{MyNotificationdear.slice(0, 37)}</p>\n                    </div>\n                    {/* /.mailbox-read-message */}\n                  </div>\n\n                  <div className=\"card-footer\">\n                    <div className=\"float-right\">\n                      <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-reply\" /> Reply</button>\n                      <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-share\" /> Forward</button>\n                    </div>\n                    <button type=\"button\" className=\"btn btn-default\"><i className=\"far fa-trash-alt\" /> Delete</button>\n                    <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-print\" /> Print</button>\n                  </div>\n                  {/* /.card-footer */}\n                </div>\n                {/* /.card */}\n              </div>\n\n              {/* /.col */}\n            </div>\n            {/* /.row */}\n          </section>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n","\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\nimport authService from '../services/auth.service';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class UploadSupporting extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        // this.AdoptSurvey = this.AdoptSurvey.bind(this);\n\n        this.state = {\n           \n            loading: false,\n            uploadPercentage: 0,\n            uploadFilePercentage: 0,\n            Filetitle: '',\n            FileInfo: '',\n            file: null,\n            loadingFile: false,\n            selectedFile: null,\n            loaded: 0\n        };\n    }\n\n //My new Smart Upload  \n handleFileTitleChangeSmart = (e) => {\n    this.setState({\n        Filetitle: e.target.value\n    })\n};\n\nhandleInfoChangeSmart = (e) => {\n    this.setState({\n        FileInfo: e.target.value\n    })\n};\ncheckMimeType = (event) => {\n    //getting file object\n    let files = event.target.files\n    //define message container\n    let err = []\n    // list allow mime type\n    const types = ['file/pdf', 'file/doc','file/docx','image/png', 'image/jpeg', 'image/gif']\n    // loop access array\n    for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n            // create error message and assign to container   \n            err[x] = files[x].type + ' is not a supported format\\n';\n        }\n    };\n    for (var z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nmaxSelectFile = (event) => {\n    let files = event.target.files\n    if (files.length > 3) {\n        const msg = 'Only 3 images can be uploaded at a time'\n        event.target.value = null\n        toast.warn(msg)\n        return false;\n    }\n    return true;\n}\ncheckFileSize = (event) => {\n    let files = event.target.files\n    let size = 5000000\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n            err[x] = files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n    };\n    for (var z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nonChangeHandler = event => {\n    var files = event.target.files\n    if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        // if return true allow to setState\n        this.setState({\n            selectedFile: files,\n            loaded: 0\n        })\n    }\n}\nonClickHandler = () => {\n\n    const token = JSON.parse(localStorage.getItem('token'));\n\n    const Formdata = new FormData()\n\n    for (var x = 0; x < this.state.selectedFile.length; x++) {\n        Formdata.append('document', this.state.selectedFile[x])\n        Formdata.append('title', this.state.Filetitle);\n        Formdata.append('info', this.state.FileInfo);\n    }\n    axios.post(\"https://gfso.chinikiguard.com/accounts/api/registration/supporting-docs/add/\", Formdata, {\n        headers: {\n            'content-type': 'multipart/form-data',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n        },\n        onUploadProgress: ProgressEvent => {\n            this.setState({\n                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n            })\n        },\n    })\n        .then(res => {\n            // then print response status\n            console.log(res)\n            toast.success('File successfully uploaded')\n            window.location = \"/UserUploads\"\n\n        })\n        .catch(err => {\n            // then print response status\n            toast.error('Failed to Upload the File')\n        })\n}\n\n//end file upload\n\n   \n\n    componentDidMount() {\n\n        if (!localStorage.getItem('token')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('token')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Upload Supporting Document</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <Form>\n                                                                    <ToastContainer />\n                                                                    <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded, 2)}%</Progress>\n                                                                    <br />\n                                                                    <div className=\"form-group\">\n                                                                    <div className=\"col-4\">\n\n                                                                        <label > Title</label>\n                                                                        <input type=\"text\" className=\"form-control\" onChange={this.handleFileTitleChangeSmart} \n                                                                            required />\n                                                                        </div>\n                                                                        <div className=\"col-4\">\n\n                                                                        <label >Info</label>\n                                                                        <input type=\"text\" className=\"form-control\" onChange={this.handleInfoChangeSmart} \n                                                                        required />\n                                                                        </div>\n\n                                                                        <br/>\n                                                                        <div className=\"col-4\">\n\n                                                                        <input type=\"file\" class=\"form-control\" onChange={this.onChangeHandler} value={this.state.file}  />\n                                                                        \n                                                                        </div>\n                                                                        </div>\n                                                                    <button type=\"button\" class=\"btn btn-success\" onClick={this.onClickHandler} >Upload</button>\n\n                                                                    </Form> \n                                                                    </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport { noConflict } from \"jquery\";\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ReviewResponder extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleActivate = this.handleActivate.bind(this);\n          this.onChangeActive = this.onChangeActive.bind(this);\n         \n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               active:'',\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeActive(e) {\n          this.setState({\n               active: e.target.value\n          });\n     }\n     \n\n     componentDidMount() {\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const script = document.createElement(\"script\");\n          script.src = \"./plugins/filterizr/jquery.filterizr.min.js\";\n          script.async = true;\n          document.body.appendChild(script);\n     }\n\n     handleActivate(e) {\n\n          e.preventDefault();\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderInfo'));\n          const pk =ReviewResponderInfo.pk\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('active', this.state.active);\n              \n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.patch(`https://gfso.chinikiguard.com/accounts/api/update/profile/${pk}/`,formData, \n               \n               \n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              // window.location = \"/RespondentInfo\"\n                                             console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/'} />)\n          }\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderInfo'));\n\n          const link='https://gfso.chinikiguard.com'\n\n          return (\n\n               <div>\n               <Header />\n\n               <div className=\"content-wrapper\" >\n                    <Menu />\n                    <br />\n                    <section className=\"content\">\n                         <div className=\"container-fluid\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-3\">\n                                        {/* Profile Image */}\n                                        <div className=\"card card-success card-outline\">\n                                             <div className=\"card-body box-profile\">\n                                                  \n                                                  <h3 className=\"profile-username text-center\">{ReviewResponderInfo.fullname}</h3>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.staff_number}</p>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.active}</p>\n\n                                                  <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Designation</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.designation_title}</p><hr /><strong>\n                                                  <i className=\"fas fa-home mr-1\" /> Branch</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.branch_name}</p>\n                                                  \n                                                  <hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> State</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.state_title}</p><hr />\n                                                       <strong><i className=\"fas fa-map-marker-alt mr-1\" /> LGA</strong>\n                                                       <p className=\"text-muted\">{ReviewResponderInfo.lga_title}</p>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleActivate}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Change Status</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeActive}\n                                                                      value={this.state.active}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"yes\" className=\"text-success\">Activate</option>\n                                                                      <option value=\"no\" className=\"text-danger\">DeActivate</option>\n\n                                                                 </Select>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-sm\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                          \n                                             </div>\n                                             {/* /.card-body */}\n                                        </div>\n                                        {/* /.card */}\n                                       \n                                   </div>\n                                   {/* /.col */}\n                                   <div className=\"col-md-9\">\n                                        <div className=\"card\">\n                                             <div className=\"card-header p-2\">\n                                                  <Form>\n                                                  <ul className=\"nav nav-pills\">\n                                                  <li className=\"nav-item\"><Link className=\"nav-link  \" onChange={this.onChangeActive} value={this.state.active} data-toggle=\"tab\">document</Link></li>\n                                                       {/* <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                       <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                  */}\n                                                  </ul>\n                                                  </Form>\n                                             </div>{/* /.card-header */}\n                                             {ReviewResponderInfo.get_registration_documents.map(document => (\n\n                                             <div className=\"card-body\">\n                                                  <div className=\"tab-content\">\n                                                       <div className=\"active tab-pane\" id=\"activity\">\n                                                       \n                                                                                     <div className=\"card-footer bg-white\">\n                                                                                          <ul className=\"mailbox-attachments d-flex align-items-stretch clearfix\">\n                                                                                               <li>\n                                                                                                    <span className=\"mailbox-attachment-icon\"><i className=\"far fa-file-pdf\" /></span>\n                                                                                                    <div className=\"mailbox-attachment-info\">\n                                                                                                         <a href={link+document.document} className=\"mailbox-attachment-name\" download><i className=\"fas fa-paperclip\" /> {document.info}</a>\n                                                                                                         <span className=\"mailbox-attachment-size clearfix mt-1\">\n                                                                                                              <span>{document.title}</span>\n                                                                                                              <a href={link+document.document}className=\"btn btn-default btn-sm float-right\" download={link+document.document}><i className=\"fas fa-cloud-download-alt\" /></a>\n                                                                                                         </span>\n                                                                                                    </div>\n                                                                                               </li>\n                                                                                               \n                                                                                               \n                                                                                               \n                                                                                          </ul>\n                                                                                     </div>\n\n                                                            {/* /.post */}\n                                                            {/* Post */}\n                                                            <div className=\"post clearfix\">\n                                                               \n                                                                 {/* /.user-block */}\n                                                               \n                                                            </div>\n                                                            {/* /.post */}\n\n                                                       </div>\n                                                      \n                                                  </div>\n                                                  {/* /.tab-content */}\n                                             </div>\n                                                        ))}\n                                        </div>\n                                        {/* /.card */}\n                                   </div>\n                                   {/* /.col */}\n                              </div>\n                              {/* /.row */}\n                         </div>{/* /.container-fluid */}\n                    </section>\n\n\n               </div>\n               <Footer />\n\n          </div>\n\n\n                );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport { noConflict } from \"jquery\";\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApproveResponder extends Component {\n\n     constructor(props) {\n          super(props);\n          this.onChangeUser_pk = this.onChangeUser_pk.bind(this);\n          this.onChangeGroup_pk= this.onChangeGroup_pk.bind(this);\n          this.handleActivate= this.handleActivate.bind(this);\n          \n\n          this.state = {\n               myloading: true,\n               loading: false,\n               message: \"\",\n               user_pk:\"\",\n               group_pk:\"\"\n          };\n     }\n\n\n    \n     \n     onChangeUser_pk(e) {\n          this.setState({\n               user_pk: e.target.value\n          });\n     } \n     onChangeGroup_pk(e) {\n          this.setState({\n               group_pk: e.target.value\n          });\n     }\n     \n     \n\n     componentDidMount() {\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const script = document.createElement(\"script\");\n          script.src = \"./plugins/filterizr/jquery.filterizr.min.js\";\n          script.async = true;\n          document.body.appendChild(script);\n     }\n\n     handleActivate(e) {\n\n          e.preventDefault();\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('user_pk', this.state.user_pk);\n               formData.append('group_pk', this.state.group_pk);\n             \n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/accounts/api/group/add/user/`,formData, \n               \n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              window.location = \"/RespondentList\"\n                                             console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('user')) {\n               return (<Redirect to={'/'} />)\n          }\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderList'));\n\n          const link='https://gfso.chinikiguard.com'\n\n          return (\n\n               <div>\n               <Header />\n\n               <div className=\"content-wrapper\" >\n                    <Menu />\n                    <br />\n                    <section className=\"content\">\n                         <div className=\"container-fluid\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-3\">\n                                        {/* Profile Image */}\n                                        <div className=\"card card-success card-outline\">\n                                             <div className=\"card-body box-profile\">\n                                                  \n                                                  <h3 className=\"profile-username text-center\">{ReviewResponderInfo.fullname}</h3>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.staff_number}</p>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.active}</p>\n\n                                                  <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Designation</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.designation_title}</p><hr /><strong>\n                                                  <i className=\"fas fa-home mr-1\" /> Branch</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.branch_name}</p>\n                                                  \n                                                  <hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> State</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.state_title}</p><hr />\n                                                       <strong><i className=\"fas fa-map-marker-alt mr-1\" /> LGA</strong>\n                                                       <p className=\"text-muted\">{ReviewResponderInfo.lga_title}</p>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleActivate}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n\n                                                       <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">User</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeUser_pk}\n                                                                      value={this.state.user_pk}\n                                                                 >\n                                                                       <option>--select--</option>\n\n                                                                      <option value={ReviewResponderInfo.user} className=\"text-success\" >{ReviewResponderInfo.username}</option>\n\n                                                                 </Select>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Group</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeGroup_pk}\n                                                                      value={this.state.group_pk}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value={1} className=\"text-success\" >Respondent</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-sm\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                          \n                                             </div>\n                                             {/* /.card-body */}\n                                        </div>\n                                        {/* /.card */}\n                                       \n                                   </div>\n                                   {/* /.col */}\n                                   <div className=\"col-md-9\">\n                                        <div className=\"card\">\n                                             <div className=\"card-header p-2\">\n                                                  <Form>\n                                                  <ul className=\"nav nav-pills\">\n                                                  <li className=\"nav-item\"><Link className=\"nav-link  \" onChange={this.onChangeActive} value={this.state.active} data-toggle=\"tab\">document</Link></li>\n                                                       {/* <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                       <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                  */}\n                                                  </ul>\n                                                  </Form>\n                                             </div>{/* /.card-header */}\n                                             {ReviewResponderInfo.get_registration_documents.map(document => (\n\n                                             <div className=\"card-body\">\n                                                  <div className=\"tab-content\">\n                                                       <div className=\"active tab-pane\" id=\"activity\">\n                                                       \n                                                                                     <div className=\"card-footer bg-white\">\n                                                                                          <ul className=\"mailbox-attachments d-flex align-items-stretch clearfix\">\n                                                                                               <li>\n                                                                                                    <span className=\"mailbox-attachment-icon\"><i className=\"far fa-file-pdf\" /></span>\n                                                                                                    <div className=\"mailbox-attachment-info\">\n                                                                                                         <a href={link+document.document} className=\"mailbox-attachment-name\" download><i className=\"fas fa-paperclip\" /> {document.info}</a>\n                                                                                                         <span className=\"mailbox-attachment-size clearfix mt-1\">\n                                                                                                              <span>{document.title}</span>\n                                                                                                              <a href={link+document.document}className=\"btn btn-default btn-sm float-right\" download={link+document.document}><i className=\"fas fa-cloud-download-alt\" /></a>\n                                                                                                         </span>\n                                                                                                    </div>\n                                                                                               </li>\n                                                                                               \n                                                                                               \n                                                                                               \n                                                                                          </ul>\n                                                                                     </div>\n\n                                                            {/* /.post */}\n                                                            {/* Post */}\n                                                            <div className=\"post clearfix\">\n                                                               \n                                                                 {/* /.user-block */}\n                                                               \n                                                            </div>\n                                                            {/* /.post */}\n\n                                                       </div>\n                                                      \n                                                  </div>\n                                                  {/* /.tab-content */}\n                                             </div>\n                                                        ))}\n                                        </div>\n                                        {/* /.card */}\n                                   </div>\n                                   {/* /.col */}\n                              </div>\n                              {/* /.row */}\n                         </div>{/* /.container-fluid */}\n                    </section>\n\n\n               </div>\n               <Footer />\n\n          </div>\n\n\n                );\n     }\n}\n\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\nimport Landing from './Landing';\r\n// import { FormBuilder } from './FormBuilder';\r\nimport ViewSurvey from './ViewSurvey';\r\nimport CompleteSurvey from './CompleteSurvey';\r\nimport CreateNewUser from './CreateNewUser';\r\nimport EditTemplate from './EditTemplate';\r\nimport Surveys from './Surveys';\r\nimport AvailableSurvey from './AvailableSurvey';\r\nimport CategoryView from './CategoryView';\r\nimport ListResponses from './ListResponses';\r\nimport ResponseTable from './ResponseTable';\r\nimport UserProfile from './UserProfile';\r\nimport ResponseByUser from './ResponseByUser';\r\nimport Deploy from './Deploy';\r\nimport ReviewRespondent from './ReviewRespondent';\r\nimport ListToApprove from './ListToApprove';\r\nimport ApproveTemplate from './ApproveTemplate';\r\nimport ApproveResponse from './ApproveResponse';\r\nimport ValidateResponse from './ValidateResponse';\r\nimport RespondentList from './RespondentList';\r\nimport ApproveSurvey from './ApproveSurvey';\r\nimport TemplateToApprove from './TemplateToApprove';\r\nimport ApprovedSurvey from './ApprovedSurvey';\r\nimport ApprovedTemplate from './ApprovedTemplate';\r\nimport RejectedTemplate from './RejectedTemplate';\r\nimport RejectedSurvey from './RejectedSurvey';\r\nimport RespondentInfo from './RespondentInfo';\r\nimport Notifications from './Notifications';\r\nimport SurveyToDeploy from './SurveyToDeploy';\r\nimport DeploySurvey from './DeploySurvey';\r\nimport SurveyRejected from './SurveyRejected';\r\nimport SurveyApproved from './SurveyApproved';\r\nimport TemplateApproved from './TemplateApproved';\r\nimport TemplateRejected from './TemplateRejected';\r\nimport ApproveThisTemplate from './ApproveThisTemplate';\r\nimport ApproveThisSurvey from './ApproveThisSurvey';\r\nimport ViewNotification from './ViewNotification';\r\nimport UploadSupporting from './UploadSupporting';\r\nimport ReviewResponder from './ReviewResponder';\r\nimport ApproveResponder from './ApproveResponder';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst  Content = () => {\r\n    return (\r\n       <Switch>\r\n           <Route exact path=\"/\" component={Landing}/>\r\n           <Route  path=\"/landing\" component={Landing}/>\r\n\r\n\r\n           <Route exact path=\"/\" component={Login}/>\r\n           <Route  path=\"/login\" component={Login}/>\r\n\r\n \r\n           <Route exact path=\"/\" component={Dashboard}/>\r\n           <Route  path=\"/dashboard\" component={Dashboard}/>\r\n\r\n          \r\n           {/* <Route exact path=\"/\" component={FormBuilder}/>\r\n           <Route  path=\"/FormBuilder\" component={FormBuilder}/>\r\n\r\n           */}\r\n           <Route exact path=\"/\" component={ViewSurvey}/>\r\n           <Route  path=\"/ViewSurvey\" component={ViewSurvey}/>\r\n           \r\n           <Route exact path=\"/\" component={CompleteSurvey}/>\r\n           <Route  path=\"/CompleteSurvey\" component={CompleteSurvey}/>\r\n           \r\n           <Route exact path=\"/\" component={CreateNewUser}/>\r\n           <Route  path=\"/Register\" component={CreateNewUser}/>\r\n\r\n          <Route exact path=\"/\" component={EditTemplate}/>\r\n           <Route  path=\"/EditTemplate\" component={EditTemplate}/>\r\n           \r\n           <Route exact path=\"/\" component={Surveys}/>\r\n           <Route  path=\"/Surveys\" component={Surveys}/>\r\n           \r\n           <Route exact path=\"/\" component={AvailableSurvey}/>\r\n           <Route  path=\"/AvailableSurvey\" component={AvailableSurvey}/>\r\n\r\n           \r\n           <Route exact path=\"/\" component={CategoryView}/>\r\n           <Route  path=\"/CategoryView\" component={CategoryView}/>\r\n\r\n           <Route exact path=\"/\" component={ListResponses}/>\r\n           <Route  path=\"/ListResponses\" component={ListResponses}/>\r\n           \r\n           <Route exact path=\"/\" component={ResponseTable}/>\r\n           <Route  path=\"/ResponseTable\" component={ResponseTable}/>\r\n\r\n           <Route exact path=\"/\" component={UserProfile}/>\r\n           <Route  path=\"/Profile\" component={UserProfile}/>\r\n\r\n           <Route exact path=\"/\" component={ResponseByUser}/>\r\n           <Route  path=\"/ResponseByUser\" component={ResponseByUser}/>\r\n\r\n           <Route exact path=\"/\" component={Deploy}/>\r\n           <Route  path=\"/Deploy\" component={Deploy}/>\r\n\r\n           <Route exact path=\"/\" component={ReviewRespondent}/>\r\n           <Route  path=\"/ReviewRespondent\" component={ReviewRespondent}/>\r\n\r\n           <Route exact path=\"/\" component={ListToApprove}/>\r\n           <Route  path=\"/ListToApprove\" component={ListToApprove}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveTemplate}/>\r\n           <Route  path=\"/ApproveTemplate\" component={ApproveTemplate}/>\r\n\r\n         \r\n           <Route exact path=\"/\" component={ApproveResponse}/>\r\n           <Route  path=\"/ApproveResponse\" component={ApproveResponse}/>\r\n\r\n           <Route exact path=\"/\" component={ValidateResponse}/>\r\n           <Route  path=\"/ValidateResponse\" component={ValidateResponse}/>\r\n\r\n           <Route exact path=\"/\" component={RespondentList}/>\r\n           <Route  path=\"/RespondentList\" component={RespondentList}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveSurvey}/>\r\n           <Route  path=\"/ApproveSurvey\" component={ApproveSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={TemplateToApprove}/>\r\n           <Route  path=\"/TemplateToApprove\" component={TemplateToApprove}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedSurvey}/>\r\n           <Route  path=\"/ApprovedSurvey\" component={ApprovedSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedTemplate}/>\r\n           <Route  path=\"/ApprovedTemplate\" component={ApprovedTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedTemplate}/>\r\n           <Route  path=\"/RejectedTemplate\" component={RejectedTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedSurvey}/>\r\n           <Route  path=\"/RejectedSurvey\" component={RejectedSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={RespondentInfo}/>\r\n           <Route  path=\"/RespondentInfo\" component={RespondentInfo}/>\r\n\r\n           <Route exact path=\"/\" component={Notifications}/>\r\n           <Route  path=\"/Notifications\" component={Notifications}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyToDeploy}/>\r\n           <Route  path=\"/SurveyToDeploy\" component={SurveyToDeploy}/>\r\n\r\n           <Route exact path=\"/\" component={DeploySurvey}/>\r\n           <Route  path=\"/DeploySurvey\" component={DeploySurvey}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyRejected}/>\r\n           <Route  path=\"/SurveyRejected\" component={SurveyRejected}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyApproved}/>\r\n           <Route  path=\"/SurveyApproved\" component={SurveyApproved}/>\r\n           \r\n           <Route exact path=\"/\" component={TemplateApproved}/>\r\n           <Route  path=\"/TemplateApproved\" component={TemplateApproved}/>\r\n \r\n           <Route exact path=\"/\" component={TemplateRejected}/>\r\n           <Route  path=\"/TemplateRejected\" component={TemplateRejected}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveThisTemplate}/>\r\n           <Route  path=\"/ApproveThisTemplate\" component={ApproveThisTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveThisSurvey}/>\r\n           <Route  path=\"/ApproveThisSurvey\" component={ApproveThisSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={ViewNotification}/>\r\n           <Route  path=\"/ViewNotification\" component={ViewNotification}/>\r\n\r\n           <Route exact path=\"/\" component={UploadSupporting}/>\r\n           <Route  path=\"/UserUploads\" component={UploadSupporting}/>\r\n\r\n           <Route exact path=\"/\" component={ReviewResponder}/>\r\n           <Route  path=\"/ReviewResponder\" component={ReviewResponder}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveResponder}/>\r\n           <Route  path=\"/ApproveResponder\" component={ApproveResponder}/>\r\n\r\n           \r\n           \r\n       </Switch>\r\n\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default Content;\r\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom';\nimport Content from './components/Content'\n\n\nexport default function App() {\n    \n  return (\n    <div>\n      <BrowserRouter>\n    \n      <Content />\n\n      </BrowserRouter>\n\n    </div>\n    \n  ) \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-form-builder2/dist/app.css';\nimport App from './app';\n// import DemoBar from './components/demobar';\nimport * as serviceWorker from './serviceWorker';\n// import * as variables from './components/variables';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <App />,\n  document.getElementById('form-builder'),\n);\n\n// ReactDOM.render(\n//   <DemoBar variables={variables} />,\n//   document.getElementById('demo-bar'),\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}