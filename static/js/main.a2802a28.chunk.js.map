{"version":3,"sources":["services/auth.service.js","components/Header.js","cbn.png","components/Menu.js","components/Footer.js","components/Dashboard.js","components/Login.js","components/Landing.js","components/ViewSurvey.js","components/FormContext.js","components/FormElements/TextInput.js","components/FormElements/SelectOption.js","components/FormElement.js","components/FormElementCategory.js","components/CheckSurveyTypeResponse.js","components/SurveyAttachment.js","components/CompleteSurvey.js","components/CreateNewUser.js","components/AddField.js","components/EditTemplate.js","components/Surveys.js","components/AvailableSurvey.js","components/Demobar.js","components/variables.js","components/CategoryView.js","components/ListResponses.js","components/ResponseTable.js","components/UserProfile.js","components/ResponseByUser.js","components/Deploy.js","components/ReviewRespondent.js","components/ListToApprove.js","components/ApproveTemplate.js","components/ApproveResponse.js","components/ValidateResponse.js","components/RespondentList.js","components/ApproveSurvey.js","components/TemplateToApprove.js","components/ApprovedSurvey.js","components/ApprovedTemplate.js","components/RejectedTemplate.js","components/RejectedSurvey.js","components/RespondentInfo.js","components/Notifications.js","components/SurveyToDeploy.js","components/DeploySurvey.js","components/SurveyRejected.js","components/SurveyApproved.js","components/TemplateApproved.js","components/TemplateRejected.js","components/ApproveThisTemplate.js","components/ApproveThisSurvey.js","components/ViewNotification.js","components/UploadSupporting.js","components/ReviewResponder.js","components/ApproveResponder.js","components/SearchRecurrent.js","components/RecurrentCapitalExpenditure.js","components/COFOGreport.js","components/SearchCOFOG.js","components/SearchSSGFF.js","components/SSGFFreport.js","components/SearchPensiondeduction.js","components/PensiondeductionReport.js","components/LGEONSPWReport.js","components/SearchLGEONSPW.js","components/Allsurveys.js","components/FormElements/InputRes.js","components/FormElements/InputResAccounting.js","components/FormElementRes.js","components/FormElementCatRes.js","components/ResponseEdit.js","components/test.js","components/PensionSurvey.js","components/PensiondeductionSurveyList.js","components/CompletePensiondeduction.js","components/PensionPending.js","components/ApprovedPension.js","components/RejectedPension.js","components/ApprovePensionSurvey.js","components/ListToApprovePension.js","components/SurveyToUpdate.js","components/Content.js","app.js","serviceWorker.js","index.js"],"names":["username","password","axios","post","headers","then","response","data","localStorage","setItem","JSON","stringify","first_name","last_name","lga","state","email","phone_number","group_pk","designation_pk","user_type","formData","FormData","append","title","description","location","status","start_date","due_date","token","parse","getItem","category","origin","pk","Header","props","routeChange","setState","navigate","window","bind","logOut","message","get","res","notification","length","clear","className","data-widget","to","role","this","data-slide","onClick","Component","Menu","Group1_Branch","Group2","Respondent","Approver","Data_Management_team","current_User","undefined","BranchDataChecker","HqDataChecker","FinalDataChecker","HqDataChecker2","SuperAdmin","NewUser","myloading","user","profile","user_groups","includes","ApprovedSurveys","approved_surveys","RejectedSurveys","rejected_surveys","ApprovedTemplate","approved_template_surveys","Pendingdeployement","pending_deployed_surveys","PendingApprovalSurvey","pending_approval_surveys","PendingApprovalTemplate","pending_template_approval_surveys","warningLoad","pending_approval_responses","RejectedTemplate","Check","AvailableSurvey","src","Logo","height","alt","data-accordion","href","class","Footer","Dashboard","useEffect","required","value","Login","handleLogin","onChangeUsername","onChangePassword","loading","ViewTemplateloading","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","AuthService","login","error","resMessage","non_field_errors","toString","onSubmit","ref","c","type","name","placeholder","onChange","validations","disabled","style","display","Landing","script","document","createElement","script1","script2","script3","script4","script5","script7","script0","async","body","appendChild","rel","color-on-scroll","id","data-toggle","aria-expanded","aria-label","data-parallax","backgroundImage","ViewSurvey","SurveyList","EditTemplate","authService","getCurrentUser","Temple_pk","Spinner","animation","variant","map","surveys","i","created_by","created","width","FormContext","createContext","TextInput","input_type","field_value","handleChange","useContext","onKeyDown","evt","key","step","min","event","SelectOption","FormElement","field","FormElementCategory","field_category","CheckSurveyTypeResponse","onChangeState","onChangeLga","statee","statesGov","lgasGov","othersGov","TargetResponse","TargetUser","check","survey_type","console","log","removeItem","state_pk","lga_pk","List_Of_States","List_Of_lgas","SurveyAttachment","handleFileTitleChangeSmart","Filetitle","handleInfoChangeSmart","FileInfo","checkMimeType","files","err","types","x","every","z","toast","maxSelectFile","warn","checkFileSize","size","onChangeHandler","selectedFile","loaded","onClickHandler","uploadPercentage","uploadFilePercentage","file","loadingFile","Formdata","survey_response_pk","onUploadProgress","ProgressEvent","total","success","catch","AdoptSurveyloading","Progress","max","color","Math","round","CompleteSurvey","useRef","useState","Get_Survey_Details","Set_Survey_Details","successful","setSuccessful","setMessage","setLoading","singleSurveyPks","Surveydetails","Call_Survey_Details","checkUser","Provider","newElements","arr","n","push","j","fields","h","sub_categories","SubCategory","minHeight","current","SurveydetailsPk","to_Send","I_to_Send","Object","values","checkUserpk","Responsebody","survey_pk","detail","survey_title","toUpperCase","quarter","year","state_title","lga_title","myfield","economic_code","heading","subCategory","get_next_survey","singleSurveyPk","backgroundColor","CreateNewUser","handleRegister","onChangeFirstName","onChangeLastName","onChangeLG","onChangeEmail","onChangePhoneNumber","onChangeDesignation","onChangeuser_type","states","Lgaloading","params","List_Of_State","BranchList","DesignationList","GroupList","prevProps","prevState","statepk","Lgas","createNewUser","Designation","List_Of_Lga","AddField","inputList","setInputList","handleInputChange","index","list","handleAddClick","handleSave","ExtractTemplate","ExtractTemplatePk","twist_result","fieldsList","MyCategoryName","result","find","modifiedObj","filter","item","fieldsObj","concat","last_element","final","my_category","survey_template_pk","ApprovedSurveyToUser","splice","handleRemoveClick","AdoptSurvey","onChangeSurvey","ApproveSurveymessage","ApproveSurveysuccessful","ApproveSurveyloading","survey","formList","SingleTemplate","SingleTemplateCategories","TemplateTitle","Templatefields","fontStyle","SubCategoryfields","saveField","Surveys","data-card-widget","get_response_count","aria-valuenow","aria-valuemin","aria-valuemax","progress","loadingModal","borderRadius","textAlign","border","padding","as","aria-hidden","Fill_Survey","Demobar","_onSubmit","AdoptSurveymessage","AdoptSurveysuccessful","previewVisible","shortPreviewVisible","roPreviewVisible","update","_onChange","ElementStore","subscribe","modalClass","shortModalClass","roModalClass","margin","marginRight","showPreview","download_path","back_action","back_name","answer_data","action_name","form_action","form_method","variables","data-dismiss","closePreview","read_only","hide_actions","display_short","React","JOHN","CategoryView","handleSubmit","meloading","response_data","get_form","singleCategory","ListResponses","handlePageClick","selectedPage","selected","offset","perPage","currentPage","loadMoreData","tableData","orgtableData","slice","pageCount","ceil","Get_State_Data","tdata","tableDataForState","aria-describedby","tabIndex","aria-controls","rowSpan","colSpan","filled_by","get_entries","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","ResponseTable","Response","economic","fontWeight","number","field_total_sum","table","filename","sheet","buttonText","UserProfile","onChangeAddress","onChangeDob","address","dob","htmlFor","defaultValue","ResponseByUser","scriptdashboard","lookup","text","Deploy","dataValue","onChangeTitle","onChangeQuarter","onChangeStatus","onChangeSurveyType","onChangeStartDate","onChangeDueDate","onChangeYear","onChangeLgas","onChangehalfyear","lgas","halfyear","jasus_for_state","jasus_for_lga","sweetalert2","StatesList","options","o","format","checkboxes","sync","onNotAllChecked","selectedMap","orderedByI","onAllChecked","onAllUnchecked","get_lgas","ReviewRespondent","ListToApprove","onChangeApprove","onChangeRemark","ApproveThisSurvey","approve","remark","surveyId","ApproveSurvey","ApproveTemplate","handleApprove","onChangestatus","get_states","ValidateResponses","EditResponse","template_title","approved_template_timestamp","RespondentList","Users","users","userId","ReviewResponder","date_joined","designation_title","branch_name","ApproveResponder","SurveyInfo","TemplateToApprove","Templates","ApprovedSurvey","RejectedSurvey","UpdateSurvey","handleUpdate","Get_LGA_Data","ApprovSurveyInfo","match","Number","rejected","get_latest_history","RespondentInfo","Notifications","true","notifyId","patch","ViewNotification","api_message","subject","SurveyToDeploy","DeploySurvey","DeploySingleSurvey","DeploySingleSurveyCategories","SurveyRejected","SurveyApproved","TemplateApproved","TemplateRejected","ApproveThisTemplate","ApproveNotifications","MyNotification","MyNotificationdear","whiteSpace","UploadSupporting","handleActivate","onChangeActive","active","ReviewResponderInfo","link","fullname","staff_number","get_registration_documents","download","info","onChangeUser_pk","onChangeGroup_pk","user_pk","SearchRecurrent","handleGenerate","RecurrentCapitalExpenditure","hyq1","hyq2","q1","q2","q3","q4","COFOGreport","hyq1_capital","hyq1_recurrent","hyq1_total","hyq2_capital","hyq2_recurrent","hyq2_total","q1_capital","q1_recurrent","q1_total","q2_capital","q2_recurrent","q2_total","q3_capital","q3_recurrent","q3_total","q4_capital","q4_recurrent","q4_total","annual","SearchCOFOG","SearchSSGFF","SSGFFreport","SSGFFreportTitle","create","baseURL","Sno","grand_total","SearchPensiondeduction","onChangeSurvey_type","PensiondeductionReport","Survey_type","LGEONSPWReport","capital","recurrent","SearchLGEONSPW","Allsurveys","InputRes","replace","InputResAccounting","FormElementRes","FormElementCatRes","field_cat","ResponseEdit","ResponseEDit","ResponseEDitPk","LGA","responseForm","response_pk","filled_by_phone","supporting_documents","test","idx","getAllStates","PensionSurvey","onChangecategory","PensiondeductionSurveyList","PensiondeductionResponse","CompletePensiondeduction","Get_Survey_Details_Pension","Set_Survey_Details_pension","setTitle","myValue","LGA_ID","PensionPending","ApprovedPension","RejectedPension","data-target","aria-modal","ApprovePensionSurvey","PensionSurveyInfo","ListToApprovePension","SurveyToUpdate","SurveyToUpdateInfo","Content","exact","path","component","ApproveResponse","ValidateResponse","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yRA6Je,M,qFArJb,SAAMA,EAAUC,GAGd,OAAOC,IAAMC,KARN,kDAQiB,CAAEH,WAAWC,YAAa,CAAEG,QAAS,CAC7D,8BAA+B,IAC/B,+BAAgC,mBAChC,oCAAoC,KAEjCC,MAAK,SAAAC,GAKJ,OAJIA,EAASC,MACXC,aAAaC,QAAQ,uBAAwBC,KAAKC,UAAUL,EAASC,OAGhED,EAASC,U,2BAatB,SAAeP,EAASC,EAASW,EAAWC,EAE1CC,EAAIC,EAEJC,EAAMC,EAAaC,EAEnBC,EAEAC,GAIJ,IAAIC,EAAW,IAAIC,SAmBf,OAlBID,EAASE,OAAO,WAAYvB,GAC5BqB,EAASE,OAAO,WAAYtB,GAC5BoB,EAASE,OAAO,aAAcX,GAC9BS,EAASE,OAAO,YAAaV,GAE7BQ,EAASE,OAAO,MAAOT,GAEvBO,EAASE,OAAO,QAASR,GACzBM,EAASE,OAAO,QAASP,GACzBK,EAASE,OAAO,eAAgBN,GAChCI,EAASE,OAAO,WAAYL,GAC5BG,EAASE,OAAO,iBAAkBJ,GAGlCE,EAASE,OAAO,YAAaH,GAI1BlB,IAAMC,KAAK,0DAA0DkB,EAAU,GAGtF,CACEjB,QAAS,CACT,eAAe,mBACd,8BAA+B,IAC/B,+BAAgC,yBAChC,oCAAoC,O,6BAOzC,SAAgBoB,EAAMC,EAAYC,EAASC,EAAOC,EAAWC,GAC3D,IACEC,EADcpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC9BF,MACjB,OAAQ5B,IAAMC,KAAK,2DAA4D,CAE/EqB,QACAC,cACAC,WACAC,SACAC,aACAC,YAGH,CAGEzB,QAAS,CACT,cAAgB,SAAhB,OAA0B0B,GACzB,8BAA+B,IAC/B,+BAAgC,mBAChC,oCAAoC,O,0BAWzC,SAAaN,EAAMS,EAASN,EAAOO,GAEjC,IACMJ,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB,OAAQ5B,IAAMC,KAAK,0DAA2D,CAE9EqB,QACAS,WACAN,SACAO,UAGF,CAGC9B,QAAS,CACT,cAAgB,SAAhB,OAA0B0B,GACzB,8BAA+B,IAC/B,+BAAgC,mBAChC,oCAAoC,KAKrCzB,MAAK,SAAAC,GAKJ,OAJIA,EAASC,MACXC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUL,EAASC,KAAK4B,KAG1D7B,EAASC,U,4BAWhB,WACE,OAAOG,KAAKqB,MAAMvB,aAAawB,QAAQ,6B,aChC5BI,E,kDAhHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA+CRC,YAAc,WACZ,EAAKC,SAAS,CAAEC,UAAU,IAC1BC,OAAOf,SAAW,cAhDlB,EAAKY,YAAc,EAAKA,YAAYI,KAAjB,gBACnB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBAGhB,EAAK3B,MAAQ,CACT6B,QAAS,IAPM,E,qDAanB,WAAqB,IAAD,OAIZd,EADOpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAEnB5B,IAAM2C,IAAI,yEACR,CACEzC,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,MAK7BzB,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUmC,EAAIvC,OAE1D,EAAKgC,SAAS,CACZQ,aAAcD,EAAIvC,KAAKyC,OACvBJ,QAASE,EAAIvC,Y,oBAQrB,WACCC,aAAayC,QACZR,OAAOf,SAAW,M,oBASpB,WAIE,OAEE,cAAC,IAAD,UAGE,sBAAKwB,UAAU,6DAAf,UAEE,oBAAIA,UAAU,aAAd,SACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWC,cAAY,WAAWC,GAAG,IAAIC,KAAK,SAA9D,SAAuE,mBAAGH,UAAU,sBAUxF,qBAAIA,UAAU,qBAAd,UAIE,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAOE,GAAG,iBAAiBF,UAAU,WAArC,UACE,mBAAGA,UAAU,gBACb,sBAAMA,UAAU,kCAAhB,SAAmDI,KAAKvC,MAAMgC,oBAMlE,oBAAIG,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWC,cAAY,aAAaC,GAAG,IAAIC,KAAK,SAAhE,SACE,mBAAGH,UAAU,iCAGjB,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWK,aAAW,OAAOJ,cAAY,kBAAkBK,QAASF,KAAKX,OAAzF,UACE,4CADF,QAEN,mBAAGO,UAAU,qC,GArGAO,aCLN,MAA0B,gCCs8F1BC,E,kDA77FX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CAET4C,eAAe,EACfC,QAAQ,EACRC,YAAY,EACZC,UAAU,EACVC,sBAAqB,EACrBC,kBAAcC,EACdC,mBAAkB,EAClBC,eAAc,EACbC,kBAAiB,EACjBC,gBAAe,EACfC,YAAW,EACZC,SAAQ,EACRC,WAAW,GAjBA,E,qDAuBnB,WAAqB,IAAD,OAGVC,EAAO/D,KAAKqB,MAAMvB,aAAawB,QAAQ,yBACvCF,EAAQ2C,EAAK3C,MAIf2C,IACAnB,KAAKf,SAAS,CACVyB,aAAcS,EAAKC,QACnBH,QAAQE,EAAKC,QAAQC,YAAYC,SAAS,WAC1CjB,cAAec,EAAKC,QAAQC,YAAYC,SAAS,kBACjDhB,OAAQa,EAAKC,QAAQC,YAAYC,SAAS,WAC1Cf,WAAYY,EAAKC,QAAQC,YAAYC,SAAS,cAC9Cd,SAAUW,EAAKC,QAAQC,YAAYC,SAAS,YAC5Cb,qBAAsBU,EAAKC,QAAQC,YAAYC,SAAS,wBACxDV,kBAAmBO,EAAKC,QAAQC,YAAYC,SAAS,qBACrDT,cAAeM,EAAKC,QAAQC,YAAYC,SAAS,iBACjDR,iBAAkBK,EAAKC,QAAQC,YAAYC,SAAS,oBACpDN,WAAYG,EAAKC,QAAQC,YAAYC,SAAS,cAC9CP,eAAgBI,EAAKC,QAAQC,YAAYC,SAAS,oBAO1D1E,IAAM2C,IAAI,yDACV,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVsC,gBAAiB/B,EAAIvC,KAAKuE,iBAC1BC,gBAAiBjC,EAAIvC,KAAKyE,iBAC1BC,iBAAkBnC,EAAIvC,KAAK2E,0BAC3BC,mBAAoBrC,EAAIvC,KAAK6E,yBAC7BC,sBAAuBvC,EAAIvC,KAAK+E,yBAChCC,wBAAyBzC,EAAIvC,KAAKiF,kCAClChB,WAAW,EACXiB,aAAa,EACbC,2BAA2B5C,EAAIvC,KAAKmF,gCAc5CxF,IAAM2C,IAAN,wHACA,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVoD,iBAAkB7C,EAAIvC,KAAKyC,OAC3BwB,WAAW,EACXiB,aAAa,U,gCAYzB,WAAsB,IAAD,OAEXG,EAAQlF,KAAKqB,MAAMvB,aAAawB,QAAQ,yBACxCF,EAAQ8D,EAAM9D,MAEdV,EAAYwE,EAAMlB,QAAQtD,UAC1BN,EAAM8E,EAAMlB,QAAQ5D,IACpBC,EAAQ6E,EAAMlB,QAAQ3D,MAGxB,OAAQK,GACJ,IAAK,UACD,OAASlB,IAAM2C,IAAN,gGAAmG9B,GAC5G,CACIX,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVsD,gBAAiB/C,EAAIvC,KAAKyC,OAC1BwB,WAAW,EACXiB,aAAa,OAIrB,IAAK,UACD,OAAQvF,IAAM2C,IAAN,8FAAiG/B,GACzG,CACIV,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVsD,gBAAiB/C,EAAIvC,KAAKyC,OAC1BwB,WAAW,EACXiB,aAAa,OAGrB,IAAK,UACD,OAAQvF,IAAM2C,IAAN,iFACR,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVsD,gBAAiB/C,EAAIvC,KAAKyC,OAC1BwB,WAAW,EACXiB,aAAa,OAIjC,QACI,OAAO,Q,oBAOvB,WAAU,IAAD,EACwKnC,KAAKvC,MAA1KwD,EADH,EACGA,QAAsBD,GADzB,EACYN,aADZ,EACyBM,YAAWJ,EADpC,EACoCA,kBAAmBC,EADvD,EACuDA,cAAcE,EADrE,EACqEA,eAAeD,EADpF,EACoFA,iBAAiBT,EADrG,EACqGA,cAAeC,EADpH,EACoHA,OAAOC,EAD3H,EAC2HA,WAAWC,EADtI,EACsIA,SAASC,EAD/I,EAC+IA,qBAGpJ,OAEI,cAAC,IAAD,UAKQ,wBAAOb,UAAU,kDAAjB,UAGI,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,aAAhC,UACI,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,QAAQC,IAAI,QAAa,uBACzD,uCAAS,sBAAM/C,UAAU,2CAAhB,SAA2D,6BAAI,+CAG5E,sBAAKA,UAAU,UAAf,UAECoB,GAEG,oBAAIpB,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACO,qBAAIhD,UAAU,kCAAd,UAEP,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,0BAAhC,UACA,mBAAGA,UAAU,yBACb,6CAIA,uBAGA,oBAAIA,UAAU,aAAd,qBACA,uBAGgB,qBAAIA,UAAU,WAAd,UAChB,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,yBACb,2CAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACoB,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,oCACT,4DAWxB,qBAAIlD,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,2BACb,uCAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,UAAUF,UAAU,WAA7B,UACA,mBAAGkD,MAAM,mCADT,uBAOA,oBAAIA,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACwB,eAAC,IAAD,CAAMhD,GAAG,qBAAqBF,UAAU,WAAxC,UACI,mBAAGkD,MAAM,yCACT,iDAIF9C,KAAKvC,MAAMsE,sBACwB,GAAlC/B,KAAKvC,MAAMsE,uBAEV,sBAAMnC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMsE,wBAEX,aAKzB,oBAAIe,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACoB,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,qCACT,iDAGD9C,KAAKvC,MAAM8D,gBACqB,GAA5BvB,KAAKvC,MAAM8D,iBAEV,sBAAM3B,UAAU,mCAAhB,SACHI,KAAKvC,MAAM8D,kBAEX,aAOzB,oBAAIuB,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACwB,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,mCACT,iDAGD9C,KAAKvC,MAAMgE,gBACiB,GAA5BzB,KAAKvC,MAAMgE,iBAEV,sBAAM7B,UAAU,kCAAhB,SACHI,KAAKvC,MAAMgE,kBAEX,aAMzB,oBAAIqB,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACwB,eAAC,IAAD,CAAOhD,GAAG,kBAAiBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,uCACT,oDAGC9C,KAAKvC,MAAMoE,mBACkB,GAA/B7B,KAAKvC,MAAMoE,oBAEV,sBAAMjC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMoE,qBAEX,aASzB,qBAAIiB,MAAM,mBAAV,UAEgB,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAOhD,GAAG,WAAUF,UAAU,WAA9B,UACI,mBAAGkD,MAAM,0CACT,qDAOR,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAOhD,GAAG,cAAaF,UAAU,WAAjC,UACI,mBAAGkD,MAAM,yCACT,uDAc5B,qBAAIlD,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,yBACb,yCAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACgB,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,uBAAuBF,UAAU,WAA1C,UACI,mBAAGkD,MAAM,yCACT,iDAIC9C,KAAKvC,MAAMwE,wBAC2B,GAApCjC,KAAKvC,MAAMwE,yBAEV,sBAAMrC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMwE,0BAEX,aAMb,oBAAIa,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,cAAcF,UAAU,WAAjC,UACI,mBAAGkD,MAAM,oCACT,uDAQZ,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,qCACT,yCAID9C,KAAKvC,MAAMkE,iBACsB,GAA7B3B,KAAKvC,MAAMkE,kBAEV,sBAAM/B,UAAU,mCAAhB,SACHI,KAAKvC,MAAMkE,mBAEX,aAMb,oBAAImB,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,mCACT,yCAGD9C,KAAKvC,MAAM4E,iBACkB,GAA7BrC,KAAKvC,MAAM4E,kBAEV,sBAAMzC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM4E,mBAEX,GATG,iBAeR,qBAAIzC,UAAU,WAAd,UACpB,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,0BACb,kDAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACgB,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,oCACT,qDAQJ,oBAAIA,MAAM,mBAAV,SACJ,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,wBAAwBF,UAAU,WAA3C,UACI,mBAAGkD,MAAM,yCACT,wDAWZ,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,qCACT,gDAUZ,oBAAIA,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,mCACT,sDAgB5B,qBAAIlD,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UAEA,mBAAGA,UAAU,0BACb,0CAEA,mBAAGA,UAAU,kCAIZ,oBAAIkD,MAAM,mBAAV,SACe,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,+CACL,kDAGE9C,KAAKvC,MAAM2E,2BAC6B,GAAvCpC,KAAKvC,MAAM2E,4BAEV,sBAAMxC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM2E,6BAEX,gBAQzB,uBAEA,oBAAIxC,UAAU,aAAd,qBACA,uBACA,qBAAIA,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,yBACb,2CAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACY,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,+CACT,8DAYrB,qBAAIlD,UAAU,WAAd,UACC,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,2BACb,uCAEA,mBAAGA,UAAU,kCAKb,oBAAIkD,MAAM,mBAAV,SACgB,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,0CACT,iDAGC9C,KAAKvC,MAAMsE,sBACyB,GAAlC/B,KAAKvC,MAAMsE,uBAEV,sBAAMnC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMsE,wBAEX,aAMb,oBAAIe,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,sCACT,yCAEE9C,KAAKvC,MAAM8D,gBACkB,GAA5BvB,KAAKvC,MAAM8D,iBAEV,sBAAM3B,UAAU,mCAAhB,SACHI,KAAKvC,MAAM8D,kBAEX,aAMb,qBAAIuB,MAAM,mBAAV,UACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,uCACT,yCAEC9C,KAAKvC,MAAMgE,gBACmB,GAA5BzB,KAAKvC,MAAMgE,iBAEV,sBAAM7B,UAAU,kCAAhB,SACHI,KAAKvC,MAAMgE,kBAEX,WAKT,oBAAIqB,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAOhD,GAAG,WAAUF,UAAU,WAA9B,UACI,mBAAGkD,MAAM,0CACT,qDAOR,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAOhD,GAAG,cAAaF,UAAU,WAAjC,UACI,mBAAGkD,MAAM,yCACT,uDAY5B,qBAAIlD,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,yBACb,yCAEA,mBAAGA,UAAU,kCAKb,oBAAIkD,MAAM,mBAAV,SACgB,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,qBAAqBF,UAAU,WAAxC,UACI,mBAAGkD,MAAM,0CACT,iDAGC9C,KAAKvC,MAAMwE,wBAC2B,GAApCjC,KAAKvC,MAAMwE,yBAEV,sBAAMrC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMwE,0BAEX,aAMb,oBAAIa,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,sCACT,yCAEC9C,KAAKvC,MAAMkE,iBACoB,GAA7B3B,KAAKvC,MAAMkE,kBAEV,sBAAM/B,UAAU,mCAAhB,SACHI,KAAKvC,MAAMkE,mBAEX,aAKb,oBAAImB,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,uCACT,yCAEC9C,KAAKvC,MAAM4E,iBACoB,GAA7BrC,KAAKvC,MAAM4E,kBAEV,sBAAMzC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM4E,mBAEX,gBAQzB,qBAAIzC,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,0BACb,kDAGA,mBAAGA,UAAU,kCAKb,oBAAIkD,MAAM,mBAAV,SACgB,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,oCACT,qDAQJ,oBAAIA,MAAM,mBAAV,SACJ,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,wBAAwBF,UAAU,WAA3C,UACI,mBAAGkD,MAAM,yCACT,wDAWZ,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,qCACT,gDAUZ,oBAAIA,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,mCACT,gDAQR,qBAAIlD,UAAU,WAAd,UACpB,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UAEA,mBAAGA,UAAU,0BACb,0CAEA,mBAAGA,UAAU,kCAIZ,oBAAIkD,MAAM,mBAAV,SACe,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,+CACL,kDAGE9C,KAAKvC,MAAM2E,2BAC6B,GAAvCpC,KAAKvC,MAAM2E,4BAEV,sBAAMxC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM2E,6BAEX,gBAQZ,uBAED,oBAAIxC,UAAU,aAAd,wBACC,uBACZ,qBAAIA,UAAU,WAAd,UACD,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,6BACb,mDAEA,mBAAGA,UAAU,kCAIb,oBAAIA,UAAU,mBAAd,SAC5B,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,0CACb,qDAGII,KAAKvC,MAAM8E,gBACc,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAOgC,oBAAIO,MAAM,mBAAV,SACjC,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGI9C,KAAKvC,MAAM8E,gBACc,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMiC,oBAAI3C,UAAU,mBAAd,SAClC,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGII,KAAKvC,MAAM8E,gBACc,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMkC,oBAAI3C,UAAU,mBAAd,SACnC,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGII,KAAKvC,MAAM8E,gBACc,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,gBAQwC,qBAAI3C,UAAU,WAAd,UACb,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,0BACb,kDAEA,mBAAGA,UAAU,kCAGb,oBAAIkD,MAAM,mBAAV,SAC5B,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,8BAA8BF,UAAU,WAAjD,UACA,mBAAGkD,MAAM,0CACT,gEASA,oBAAIA,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACA,mBAAGkD,MAAM,yCACT,wDAWA,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,qCACT,gDAUA,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,mCACT,gDAQA,0BAuBwC,oBAAIlD,UAAU,aAAd,sBACZ,uBACA,qBAAIA,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,0BACb,0CAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACgB,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,sCACT,kDAIE9C,KAAKvC,MAAM2E,2BAC6B,GAAvCpC,KAAKvC,MAAM2E,4BAEV,sBAAMxC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM2E,6BAEX,aAOb,oBAAIU,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,oCACT,6DAWxB,qBAAIlD,UAAU,WAAd,UACY,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACQ,mBAAGA,UAAU,yBACb,wCAEF,mBAAGA,UAAU,kCAG9B,oBAAIkD,MAAM,mBAAV,SACA,qBAAIA,MAAM,wBAAV,UAEW,oBAAGD,KAAK,IAAIjD,UAAU,WAAtB,UACQ,mBAAGA,UAAU,yBACb,iDAEF,mBAAGA,UAAU,kCAInB,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,uBAAuBF,UAAU,WAA1C,UACI,mBAAGkD,MAAM,mCADb,oCAOR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,mCADb,sBAOR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,mCADb,sBAMR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,4BAA4BF,UAAU,WAA/C,UACI,mBAAGkD,MAAM,mCADb,6BAMR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,mCADb,wBAQR,qBAAIlD,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACQ,mBAAGA,UAAU,yBACb,iDAEF,mBAAGA,UAAU,kCAInB,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,qBAAqBF,UAAU,WAAxC,UACI,mBAAGkD,MAAM,mCADb,oCAOR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,eAAeF,UAAU,WAAlC,UACI,mBAAGkD,MAAM,mCADb,sBAOR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,eAAeF,UAAU,WAAlC,UACI,mBAAGkD,MAAM,mCADb,sBAMR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,0BAA0BF,UAAU,WAA7C,UACI,mBAAGkD,MAAM,mCADb,6BAMR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,mCADb,qCAYZ,uBAER,oBAAIlD,UAAU,aAAd,2BACA,uBACA,qBAAIA,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,wBACb,mDAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACC,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGC9C,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAME,oBAAI3C,UAAU,mBAAd,SACH,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMG,oBAAI3C,UAAU,mBAAd,SACJ,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMM,0BAIH,oBAAI3C,UAAU,aAAd,0BACL,uBACA,qBAAIA,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,wBACb,mDAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACC,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGC9C,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAME,oBAAI3C,UAAU,mBAAd,SACH,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMG,oBAAI3C,UAAU,mBAAd,SACJ,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMM,0BAKH,oBAAI3C,UAAU,aAAd,yBACL,uBACA,qBAAIA,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,wBACb,mDAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACC,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGC9C,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAME,oBAAI3C,UAAU,mBAAd,SACH,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMG,oBAAI3C,UAAU,mBAAd,SACJ,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMM,0BAKH,oBAAI3C,UAAU,aAAd,6BACL,uBACA,qBAAIA,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACA,mBAAGA,UAAU,wBACb,mDAEA,mBAAGA,UAAU,kCAIb,oBAAIkD,MAAM,mBAAV,SACC,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGC9C,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAME,oBAAI3C,UAAU,mBAAd,SACH,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMG,oBAAI3C,UAAU,mBAAd,SACJ,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,wBAeL,sBAAK3C,UAAU,OAAf,UACIgB,GAEA,oBAAIhB,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACX,qBAAIhD,UAAU,kCAAd,UAEH,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,6BAAhC,UACD,mBAAGA,UAAU,yBACZ,6CAID,uBAEA,oBAAIA,UAAU,aAAd,gCACE,uBAIe,oBAAIkD,MAAM,mBAAV,SACF,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGC9C,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAME,oBAAI3C,UAAU,mBAAd,SACH,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMG,oBAAI3C,UAAU,mBAAd,SACJ,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMM,uBAEP,oBAAI3C,UAAU,aAAd,iCACA,uBAGA,oBAAIkD,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACA,mBAAGkD,MAAM,yCACT,wDAWA,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCAET,gDAUJ,oBAAIkD,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,oCACb,gDAQA,4BASJiB,GAEI,oBAAIjB,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACX,qBAAIhD,UAAU,kCAAd,UAEH,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,6BAAhC,UACD,mBAAGA,UAAU,yBACZ,6CAID,uBAEA,oBAAIA,UAAU,aAAd,gCACE,uBAIe,oBAAIkD,MAAM,mBAAV,SACF,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGC9C,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAME,oBAAI3C,UAAU,mBAAd,SACH,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMG,oBAAI3C,UAAU,mBAAd,SACJ,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMM,uBAEP,oBAAI3C,UAAU,aAAd,iCACA,uBAGA,oBAAIkD,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACA,mBAAGkD,MAAM,yCACT,wDAWA,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,gDAUA,oBAAIkD,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,oCACb,gDAQA,4BAQCmB,GAEJ,oBAAInB,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACA,qBAAIhD,UAAU,kCAAd,UAEA,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,6BAAhC,UACA,mBAAGA,UAAU,yBACb,6CAIA,uBAEA,oBAAIA,UAAU,aAAd,gCACA,uBAIE,oBAAIkD,MAAM,mBAAV,SACF,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGC9C,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAME,oBAAI3C,UAAU,mBAAd,SACH,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMG,oBAAI3C,UAAU,mBAAd,SACJ,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMM,uBAEP,oBAAI3C,UAAU,aAAd,iCACA,uBAGA,oBAAIkD,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACA,mBAAGkD,MAAM,yCACT,wDAWA,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,gDAUA,oBAAIkD,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,oCACb,gDAQA,4BASMkB,GAEF,oBAAIlB,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACF,qBAAIhD,UAAU,kCAAd,UAEA,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,6BAAhC,UACA,mBAAGA,UAAU,yBACb,6CAIA,uBAEA,oBAAIA,UAAU,aAAd,gCACA,uBAIE,oBAAIkD,MAAM,mBAAV,SACF,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGC9C,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAME,oBAAI3C,UAAU,mBAAd,SACH,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMG,oBAAI3C,UAAU,mBAAd,SACJ,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGCI,KAAKvC,MAAM8E,gBACiB,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMM,uBAEP,oBAAI3C,UAAU,aAAd,iCACA,uBAGA,oBAAIkD,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACA,mBAAGkD,MAAM,yCACT,wDAWA,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,gDAUA,oBAAIkD,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,oCACb,gDAQA,4BAQCW,GAEE,oBAAIX,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SAC/B,qBAAIhD,UAAU,kCAAd,UAEA,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,6BAAhC,UACA,mBAAGA,UAAU,yBACb,6CAIA,uBAE4B,oBAAIA,UAAU,aAAd,gCACE,uBAE9B,oBAAIA,UAAU,mBAAd,SACA,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,0CACb,qDAGII,KAAKvC,MAAM8E,gBACc,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAOgC,oBAAIO,MAAM,mBAAV,SACjC,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,yCACT,kDAGI9C,KAAKvC,MAAM8E,gBACc,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMiC,oBAAI3C,UAAU,mBAAd,SAClC,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,wCACb,mDAGII,KAAKvC,MAAM8E,gBACc,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMkC,oBAAI3C,UAAU,mBAAd,SACnC,oBAAIA,UAAU,wBAAd,SACA,eAAC,IAAD,CAAME,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGA,UAAU,uCACb,mDAGII,KAAKvC,MAAM8E,gBACc,GAA5BvC,KAAKvC,MAAM8E,iBAET,sBAAM3C,UAAU,kCAAhB,SACFI,KAAKvC,MAAM8E,kBAEX,aAMqC,uBAEtC,oBAAI3C,UAAU,aAAd,iCACA,uBACA,oBAAIkD,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,8BAA8BF,UAAU,WAAjD,UACA,mBAAGkD,MAAM,0CACT,gEASA,oBAAIA,MAAM,mBAAV,SACA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACA,mBAAGkD,MAAM,yCACT,wDAWA,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,qCACT,gDAUA,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACA,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,mCACT,gDAQA,4BAW6BtC,GAEG,oBAAIZ,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACI,qBAAIhD,UAAU,kCAAd,UAEI,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,0BAAhC,UACI,mBAAGA,UAAU,yBACb,6CAIJ,uBAEA,oBAAIA,UAAU,aAAd,sBACA,uBAEA,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,sCACT,kDAIE9C,KAAKvC,MAAM2E,2BAC6B,GAAvCpC,KAAKvC,MAAM2E,4BAEV,sBAAMxC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM2E,6BAEX,aAOb,oBAAIU,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,oCACT,0DASZ,uBAEA,oBAAIlD,UAAU,aAAd,mCACA,uBAIA,qBAAIA,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACQ,mBAAGA,UAAU,yBACb,iDAEF,mBAAGA,UAAU,kCAInB,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,uBAAuBF,UAAU,WAA1C,UACI,mBAAGkD,MAAM,mCADb,oCAOR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,mCADb,sBAOR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,mCADb,sBAMR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,4BAA4BF,UAAU,WAA/C,UACI,mBAAGkD,MAAM,mCADb,6BAMR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,mCADb,2BAYR,qBAAIlD,UAAU,WAAd,UACA,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACQ,mBAAGA,UAAU,yBACb,iDAEF,mBAAGA,UAAU,kCAInB,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,qBAAqBF,UAAU,WAAxC,UACI,mBAAGkD,MAAM,mCADb,oCAOR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,eAAeF,UAAU,WAAlC,UACI,mBAAGkD,MAAM,mCADb,sBAOR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,eAAeF,UAAU,WAAlC,UACI,mBAAGkD,MAAM,mCADb,sBAMR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,0BAA0BF,UAAU,WAA7C,UACI,mBAAGkD,MAAM,mCADb,6BAMR,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,mCADb,kCAiBnBzC,GAEG,oBAAIT,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SAEI,qBAAIhD,UAAU,kCAAd,UAEI,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,kBAAhC,UACI,mBAAGA,UAAU,yBACb,6CAOJ,uBACA,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,oCACT,yDAOZ,uBACA,oBAAIlD,UAAU,aAAd,oBACA,uBAEA,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,UAAUF,UAAU,WAA7B,UACI,mBAAGkD,MAAM,oCACT,qDASZ,oBAAIA,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,qBAAqBF,UAAU,WAAxC,UACI,mBAAGkD,MAAM,yCACT,iDAIF9C,KAAKvC,MAAMsE,sBACwB,GAAlC/B,KAAKvC,MAAMsE,uBAEV,sBAAMnC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMsE,wBAEX,aAMb,oBAAIe,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,qCACT,iDAGD9C,KAAKvC,MAAM8D,gBACqB,GAA5BvB,KAAKvC,MAAM8D,iBAEV,sBAAM3B,UAAU,mCAAhB,SACHI,KAAKvC,MAAM8D,kBAEX,aASb,oBAAIuB,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,mCACT,iDAGD9C,KAAKvC,MAAMgE,gBACiB,GAA5BzB,KAAKvC,MAAMgE,iBAEV,sBAAM7B,UAAU,kCAAhB,SACHI,KAAKvC,MAAMgE,kBAEX,aAQL,oBAAIqB,MAAM,mBAAV,SAEJ,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAOhD,GAAG,kBAAiBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,uCACT,oDAGC9C,KAAKvC,MAAMoE,mBACkB,GAA/B7B,KAAKvC,MAAMoE,oBAEV,sBAAMjC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMoE,qBAEX,aASL,qBAAIiB,MAAM,mBAAV,UAEJ,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAOhD,GAAG,WAAUF,UAAU,WAA9B,UACI,mBAAGkD,MAAM,0CACT,qDAOR,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAOhD,GAAG,cAAaF,UAAU,WAAjC,UACI,mBAAGkD,MAAM,yCACT,oDASR,uBACA,oBAAIlD,UAAU,aAAd,sBACA,uBACT,oBAAIkD,MAAM,mBAAV,SACK,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,uBAAuBF,UAAU,WAA1C,UACI,mBAAGkD,MAAM,yCACT,iDAIC9C,KAAKvC,MAAMwE,wBAC2B,GAApCjC,KAAKvC,MAAMwE,yBAEV,sBAAMrC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMwE,0BAEX,aAMb,oBAAIa,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,cAAcF,UAAU,WAAjC,UACI,mBAAGkD,MAAM,oCACT,uDAQZ,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,qCACT,yCAID9C,KAAKvC,MAAMkE,iBACsB,GAA7B3B,KAAKvC,MAAMkE,kBAEV,sBAAM/B,UAAU,mCAAhB,SACHI,KAAKvC,MAAMkE,mBAEX,aAMb,oBAAImB,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,mCACT,yCAGD9C,KAAKvC,MAAM4E,iBACkB,GAA7BrC,KAAKvC,MAAM4E,kBAEV,sBAAMzC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM4E,mBAEX,GATG,iBAeR,uBAEA,oBAAIzC,UAAU,aAAd,iCACA,uBAEA,oBAAIkD,MAAM,mBAAV,SACJ,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,oCACT,qDAQJ,oBAAIA,MAAM,mBAAV,SACJ,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,wBAAwBF,UAAU,WAA3C,UACI,mBAAGkD,MAAM,yCACT,wDAUZ,oBAAIA,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,qCACT,gDAUZ,oBAAIA,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,mCACT,gDASrB,uBAEI,oBAAIlD,UAAU,aAAd,uBACH,uBACA,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,+CACL,kDAGE9C,KAAKvC,MAAM2E,2BAC6B,GAAvCpC,KAAKvC,MAAM2E,4BAEV,sBAAMxC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM2E,6BAEX,kBAWpBnB,GACK,oBAAIrB,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACA,qBAAIhD,UAAU,kCAAd,UAEF,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,eAAeF,UAAU,WAAlC,UACI,mBAAGkD,MAAM,2CACT,uDANV,SAkBLxC,GAED,oBAAIV,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACI,qBAAIhD,UAAU,kCAAd,UAEI,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,6BAAhC,UACI,mBAAGA,UAAU,yBACb,6CAIJ,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACA,mBAAGkD,MAAM,+CACL,2DAQZ,oBAAIlD,UAAU,aAAd,oBAGA,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,0CACT,iDAGC9C,KAAKvC,MAAMsE,sBACyB,GAAlC/B,KAAKvC,MAAMsE,uBAEV,sBAAMnC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMsE,wBAEX,aAMb,oBAAIe,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,sCACT,yCAEE9C,KAAKvC,MAAM8D,gBACkB,GAA5BvB,KAAKvC,MAAM8D,iBAEV,sBAAM3B,UAAU,mCAAhB,SACHI,KAAKvC,MAAM8D,kBAEX,aAMb,oBAAIuB,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,kBAAkBF,UAAU,WAArC,UACI,mBAAGkD,MAAM,uCACT,yCAEC9C,KAAKvC,MAAMgE,gBACmB,GAA5BzB,KAAKvC,MAAMgE,iBAEV,sBAAM7B,UAAU,kCAAhB,SACHI,KAAKvC,MAAMgE,kBAEX,aAMb,oBAAIqB,MAAM,wBAAV,SACY,eAAC,IAAD,CAAOhD,GAAG,WAAUF,UAAU,WAA9B,UACI,mBAAGkD,MAAM,0CACT,qDAOR,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAOhD,GAAG,cAAaF,UAAU,WAAjC,UACI,mBAAGkD,MAAM,yCACT,iDAQhB,oBAAIlD,UAAU,aAAd,sBAGA,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,qBAAqBF,UAAU,WAAxC,UACI,mBAAGkD,MAAM,0CACT,iDAGC9C,KAAKvC,MAAMwE,wBAC2B,GAApCjC,KAAKvC,MAAMwE,yBAEV,sBAAMrC,UAAU,kCAAhB,SACHI,KAAKvC,MAAMwE,0BAEX,aAMb,oBAAIa,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,sCACT,yCAEC9C,KAAKvC,MAAMkE,iBACoB,GAA7B3B,KAAKvC,MAAMkE,kBAEV,sBAAM/B,UAAU,mCAAhB,SACHI,KAAKvC,MAAMkE,mBAEX,aAKb,oBAAImB,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,oBAAoBF,UAAU,WAAvC,UACI,mBAAGkD,MAAM,uCACT,yCAEC9C,KAAKvC,MAAM4E,iBACoB,GAA7BrC,KAAKvC,MAAM4E,kBAEV,sBAAMzC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM4E,mBAEX,aAKnD,uBAE6B,oBAAIzC,UAAU,aAAd,iCACiB,uBAEA,oBAAIkD,MAAM,mBAAV,SACJ,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,iBAAiBF,UAAU,WAApC,UACI,mBAAGkD,MAAM,oCACT,qDAQJ,oBAAIA,MAAM,mBAAV,SACJ,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,wBAAwBF,UAAU,WAA3C,UACI,mBAAGkD,MAAM,yCACT,wDAWZ,oBAAIA,MAAM,mBAAV,SAEA,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,qCACT,gDAUZ,oBAAIA,MAAM,mBAAV,SAEI,oBAAIA,MAAM,wBAAV,SACQ,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACI,mBAAGkD,MAAM,mCACT,gDASf,uBAED,oBAAIlD,UAAU,aAAd,uBAEA,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,mBAAmBF,UAAU,WAAtC,UACA,mBAAGkD,MAAM,+CACL,kDAGE9C,KAAKvC,MAAM2E,2BAC6B,GAAvCpC,KAAKvC,MAAM2E,4BAEV,sBAAMxC,UAAU,kCAAhB,SACHI,KAAKvC,MAAM2E,6BAEX,kBAepB3B,GAEG,oBAAIb,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAO6C,iBAAe,QAAxG,SACI,qBAAIhD,UAAU,kCAAd,UAEI,eAAC,IAAD,CAAME,GAAG,aAAaF,UAAU,0BAAhC,UACI,mBAAGA,UAAU,yBACb,6CAIJ,oBAAIkD,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,WAAWF,UAAU,WAA9B,UACI,mBAAGkD,MAAM,wCACT,0DAOZ,oBAAIA,MAAM,mBAAV,SACI,oBAAIA,MAAM,wBAAV,SACI,eAAC,IAAD,CAAMhD,GAAG,WAAWF,UAAU,WAA9B,UACI,mBAAGkD,MAAM,uCACT,0E,GAj6FrC3C,aCDG4C,E,4JAgGpB,WACE,OACI,yBAAQD,MAAM,cAAd,UACA,0DAA8B,cAAC,IAAD,CAAMhD,GAAG,GAAT,gCAA9B,OADA,uBAGA,sBAAKgD,MAAM,uCAAX,UACE,wCADF,mB,GArG6B3C,aCwCtB6C,EAlCG,WAYhB,OANAC,qBAAU,cAIP,IAEE/F,aAAawB,QAAQ,wBAKxB,gCACE,cAAC,EAAD,IAEA,sBAAKkB,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,0BAOF,cAAC,EAAD,OAhBM,cAAC,IAAD,CAAUE,GAAI,Y,mDCfpBoD,EAAW,SAAAC,GACb,IAAKA,EACD,OACI,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAOSqD,E,kDACjB,WAAYrE,GAAQ,IAAD,8BACf,cAAMA,IACDsE,YAAc,EAAKA,YAAYjE,KAAjB,gBACnB,EAAKkE,iBAAmB,EAAKA,iBAAiBlE,KAAtB,gBACxB,EAAKmE,iBAAmB,EAAKA,iBAAiBnE,KAAtB,gBAExB,EAAK3B,MAAQ,CACXf,SAAU,GACVC,SAAU,GACV6G,SAAS,EACTC,qBAAqB,EACrBnE,QAAS,IAXI,E,oDAejB,SAAiBoE,GACf1D,KAAKf,SAAS,CACZvC,SAAUgH,EAAEC,OAAOR,U,8BAIvB,SAAiBO,GACf1D,KAAKf,SAAS,CACZtC,SAAU+G,EAAEC,OAAOR,U,+BAIvB,WAEE,GAAIjG,aAAawB,QAAQ,wBACvB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,iB,yBAG1B,SAAY4D,GAAI,IAAD,OACbA,EAAEE,iBAEF5D,KAAKf,SAAS,CACZK,QAAS,GACTkE,SAAS,EACTC,qBAAqB,IAIvBzD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAChCwE,EAAYC,MAAMnE,KAAKvC,MAAMf,SAAUsD,KAAKvC,MAAMd,UAAUI,MAC1D,WACAoC,OAAOf,SAAW,gBAEd,SAAAgG,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKqH,kBACpBF,EAAMpH,SAASC,KAAKqH,kBACxBF,EAAM9E,SACN8E,EAAMG,WAEV,EAAKtF,SAAS,CACVuE,SAAS,EACTlE,QAAS+E,EACTZ,qBAAqB,OAMjCzD,KAAKf,SAAS,CACVuE,SAAS,M,oBAMrB,WAAU,IAAD,OAIL,OACI,sBAAK5D,UAAU,6BAAf,UACKI,KAAKvC,MAAMgG,qBACJ,sBAAM7D,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,sBAAKA,UAAU,GAAf,UACI,sBAAKA,UAAU,aAAf,UACA,qBAAK4C,IAAKC,EAAMC,OAAO,QAAQC,IAAI,KAC/B,uBACA,eAAC,IAAD,CAAM7C,GAAG,GAAT,UAAY,oCAAZ,cAEJ,qBAAKF,UAAU,OAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,mBAAGA,UAAU,gBAAb,2CACA,uBACA,eAAC,IAAD,CACI4E,SAAUxE,KAAKqD,YACfoB,IAAK,SAAAC,GACD,EAAKb,KAAOa,GAHpB,UAOI,sBAAK9E,UAAU,mBAAf,UAEI,cAAC,IAAD,CAAO+E,KAAK,OAAOC,KAAK,WAAWhF,UAAU,eAAeiF,YAAY,WAAW1B,MAAOnD,KAAKvC,MAAMf,SACjGoI,SAAU9E,KAAKsD,iBACfyB,YAAa,CAAC7B,KAElB,qBAAKtD,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,sBAAMA,UAAU,uBAK5B,sBAAKA,UAAU,mBAAf,UACI,cAAC,IAAD,CAAO+E,KAAK,WAAWC,KAAK,WAAWhF,UAAU,eAAeiF,YAAY,WAAW1B,MAAOnD,KAAKvC,MAAMd,SACrGmI,SAAU9E,KAAKuD,iBACfwB,YAAa,CAAC7B,KAClB,qBAAKtD,UAAU,qBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,sBAAMA,UAAU,uBAI5B,uBAGA,qBAAKA,UAAU,aAAf,SACI,wBACIA,UAAU,4BACVoF,SAAUhF,KAAKvC,MAAM+F,QAFzB,SAOI,6CAKPxD,KAAKvC,MAAM6B,SACR,qBAAKM,UAAU,aAAf,SACI,qBAAKA,UAAU,qBAAqBG,KAAK,QAAzC,SACKC,KAAKvC,MAAM6B,YAIxB,cAAC,IAAD,CACI2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACD,EAAKX,SAAWW,uB,GA7JrBvE,aCfdgF,E,uKAEjB,WAGI,GAAIjI,aAAawB,QAAQ,wBACvB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,eAE1B,IAAMsF,EAASC,SAASC,cAAc,UACtCF,EAAO5C,IAAM,yCAEb,IAAM+C,EAAUF,SAASC,cAAc,UACvCC,EAAQ/C,IAAM,sBAEd,IAAMgD,EAAUH,SAASC,cAAc,UACvCE,EAAQhD,IAAM,yCAEd,IAAMiD,EAAUJ,SAASC,cAAc,UACvCG,EAAQjD,IAAM,4DAEd,IAAMkD,EAAUL,SAASC,cAAc,UACvCI,EAAQlD,IAAM,4CAEd,IAAMmD,EAAUN,SAASC,cAAc,UACvCK,EAAQnD,IAAM,0DAEd,IAAMoD,EAAUP,SAASC,cAAc,UACvCM,EAAQpD,IAAM,gDAEd,IAAMqD,EAAUR,SAASC,cAAc,UACvCO,EAAQrD,IAAK,8CAGb4C,EAAOU,OAAQ,EACfP,EAAQO,OAAQ,EAChBN,EAAQM,OAAQ,EAChBL,EAAQK,OAAQ,EAChBJ,EAAQI,OAAQ,EAChBH,EAAQG,OAAQ,EAChBF,EAAQE,OAAQ,EAChBD,EAAQC,OAAQ,EAEhBT,SAASU,KAAKC,YAAYZ,GAC1BC,SAASU,KAAKC,YAAYT,GAC1BF,SAASU,KAAKC,YAAYR,GAC1BH,SAASU,KAAKC,YAAYP,GAC1BJ,SAASU,KAAKC,YAAYN,GAC1BL,SAASU,KAAKC,YAAYL,GAC1BN,SAASU,KAAKC,YAAYJ,GAC1BP,SAASU,KAAKC,YAAYH,K,oBAI5B,WACI,OAAI3I,aAAawB,QAAQ,wBACb,cAAC,IAAD,CAAUoB,GAAI,eAK1B,sBAAKF,UAAU,gCAAf,UACI,sBAAMiD,KAAK,wCAAwCoD,IAAI,eAEvD,qBAAKrG,UAAU,8EAA8EsG,kBAAiB,IAAKC,GAAG,cAAtH,SACI,sBAAKvG,UAAU,YAAf,UACI,sBAAKA,UAAU,mBAAf,UACA,qBAAK4C,IAAI,mBAAmBE,OAAO,QAASC,IAAI,KAC5C,yBAAQ/C,UAAU,iBAAiB+E,KAAK,SAASyB,cAAY,WAAWC,gBAAc,QAAQC,aAAW,oBAAzG,UACI,sBAAM1G,UAAU,UAAhB,+BACA,sBAAMA,UAAU,wBAChB,sBAAMA,UAAU,wBAChB,sBAAMA,UAAU,8BAGxB,qBAAKA,UAAU,2BAAf,SACI,oBAAIA,UAAU,8BA8B1B,qBAAKA,UAAU,4BAA4B2G,gBAAc,OAAOtB,MAAO,CAAEuB,gBAAiB,iCAA1F,SACI,sBAAK5G,UAAU,YAAf,UACI,uBACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,WAAf,UACI,oBAAIA,UAAU,QAAd,4CACA,oGAEA,uBACA,cAAC,IAAD,CAAME,GAAG,SAASF,UAAU,oCAA5B,qBALJ,oBASQ,cAAC,IAAD,CAAME,GAAG,YAAYF,UAAU,oCAA/B,+BAQpB,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,mC,GAhIEO,a,OCMhBsG,E,kDAEjB,WAAY1H,GAAQ,IAAD,8BACf,cAAMA,IACDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXuC,qBAAoB,EACpBnE,QAAS,GACToH,WAAY,GACZC,aAAa,IARF,E,qDAWnB,WAAqB,IAAD,OAChB,IAAKzJ,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,0DACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUmC,EAAIvC,OAEjE,EAAKgC,SAAS,CACVyH,WAAYlH,EAAIvC,KAChBiE,WAAW,EACXiB,aAAa,OAIrBvF,IAAM2C,IAAI,0DACN,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAI3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,Y,0BAS7E,SAAayJ,GAAa,IAAD,OAErBxJ,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUqJ,IACtD1G,KAAKf,SAAS,CACVwE,qBAAqB,IAGzB,IACMjF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAChBsI,EAAYJ,EAAW7H,GAG7BjC,IAAM2C,IAAN,oEAAuEuH,EAAvE,KACE,CACEhK,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIvCzB,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUmC,EAAIvC,OAE7DkC,OAAOf,SAAW,gBAClB,EAAKa,SAAS,CACV0H,aAAcnH,EAAIvC,Y,oBAQ9B,WAAU,IAAD,OAEL,OAAKC,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,0BAASkB,UAAU,kBAAnB,UAEKI,KAAKvC,MAAMgG,qBACR,sBAAM7D,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKT,sBAAKA,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SAEKI,KAAKvC,MAAMyD,UACR,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGhD,qBAAKrH,UAAU,MAAf,SAEKI,KAAKvC,MAAMiJ,WAAWQ,KAAI,SAACC,EAAQC,GAAT,OAEvB,qBAAKxH,UAAU,kEAAf,SACI,sBAAKA,UAAU,iCAAf,UAEI,sBAAaA,UAAU,yCAAvB,UACKuH,EAAQjJ,MADb,iCAAUkJ,GAIV,qBAAKxH,UAAU,iBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,oBAAIA,UAAU,OAAd,SAAsB,4BAAIuH,EAAQjJ,UAClC,oBAAG0B,UAAU,qBAAb,UAAkC,6CAAlC,IAAuDuH,EAAQE,WAA/D,OACA,oBAAGzH,UAAU,qBAAb,UAAkC,uCAAlC,IAAiDuH,EAAQG,QAAzD,UAEJ,qBAAK1H,UAAU,oBAAf,SACI,qBAAK4C,IAAKC,EAAO8E,MAAM,OAAO7E,OAAO,OAAOC,IAAI,cAAc/C,UAAU,gCAIpF,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,aAAf,SACY,wBACCM,QAAS,EAAKyG,aAAavH,KAAK,EAAM+H,GACtCvH,UAAU,eACVoF,SAAU,EAAKvH,MAAM+F,QAHtB,+DAqBxC,qBAAK5D,UAAU,cAAf,SACI,qBAAK0G,aAAW,qCAQ5B,cAAC,EAAD,OApFI,cAAC,IAAD,CAAUxG,GAAI,U,GAxGMK,a,wBCV3BqH,EAAcC,0BCiCZC,EA7BG,SAAC,GAAgD,EAA9CC,WAA+C,IAAnC9I,EAAkC,EAAlCA,GAAI+F,EAA8B,EAA9BA,KAAMgD,EAAwB,EAAxBA,YAE/BC,GAFuD,EAAX1E,MAE3B2E,qBAAWN,GAA5BK,cACR,OAEI,sBAAKjI,UAAU,QAAf,UAEG,kCAASgF,EAAT,OACF,uBACAmD,UAAW,SAACC,GAAD,MAAS,CAAC,IAAK,IAAK,IAAK,KAAK1G,SAAS0G,EAAIC,MAAQD,EAAIpE,kBAClEe,KAAK,SACLuD,KAAK,MACLtI,UAAU,eACViF,YAAY,SACZsD,IAAK,EACLrD,SAAU,SAAAsD,GAAK,OAAIP,EAAahJ,EAAIuJ,IACpCjF,MAAOyE,EACP1E,UAAQ,IAGT,2BCQOmF,EA5BM,SAAC,GAAgD,EAA9CV,WAA+C,IAAnC9I,EAAkC,EAAlCA,GAAI+F,EAA8B,EAA9BA,KAAMgD,EAAwB,EAAxBA,YAElCC,GAF0D,EAAX1E,MAE9B2E,qBAAWN,GAA5BK,cACR,OAEI,sBAAKjI,UAAU,QAAf,UAEG,kCAASgF,EAAT,OACF,uBACAmD,UAAW,SAACC,GAAD,MAAS,CAAC,IAAK,IAAK,KAAK1G,SAAS0G,EAAIC,MAAQD,EAAIpE,kBAC7De,KAAK,SACLuD,KAAK,MACLtI,UAAU,eACViF,YAAY,SACZC,SAAU,SAAAsD,GAAK,OAAIP,EAAahJ,EAAIuJ,IACpCjF,MAAOyE,EACP1E,UAAQ,IAGT,2BCgBOoF,EApCK,SAAC,GAA2D,IAAD,IAAxDC,MAASZ,EAA+C,EAA/CA,WAAY9I,EAAmC,EAAnCA,GAAI+F,EAA+B,EAA/BA,KAAMzB,EAAyB,EAAzBA,MAAMyE,EAAmB,EAAnBA,YAExD,OAAQD,GACJ,IAAK,cACD,OAAQ,cAAC,EAAD,CACJ9I,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,IAGX,IAAK,SACD,OAAQ,cAAC,EAAD,CACJtE,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,EACPyE,YAAaA,IAErB,IAAK,aACL,OAAQ,cAAC,EAAD,CACJ/I,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,EACPyE,YAAaA,IAIrB,QACI,OAAO,OCKJY,EAnCa,SAAC,GAEnB,IAAD,IADLC,eAAkBd,EACb,EADaA,WAAY9I,EACzB,EADyBA,GAAI+F,EAC7B,EAD6BA,KAAMzB,EACnC,EADmCA,MAGxC,OAAQwE,GACJ,IAAK,cAQL,IAAK,SACD,OAAQ,cAAC,EAAD,CACJ9I,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,IAEf,IAAK,aACD,OAAQ,cAAC,EAAD,CACJtE,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,IAGf,QACI,OAAO,OC7BbD,EAAW,SAAAC,GACb,IAAKA,EACD,OACI,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAOS2I,E,kDAEjB,WAAY3J,GAAQ,IAAD,8BACf,cAAMA,IACD4J,cAAgB,EAAKA,cAAcvJ,KAAnB,gBACrB,EAAKwJ,YAAc,EAAKA,YAAYxJ,KAAjB,gBAEnB,EAAK3B,MAAQ,CACToL,OAAO,GACPrL,IAAI,GACJ0D,WAAW,EACX4H,WAAW,EACXC,SAAS,EACTC,WAAW,EACXlL,WAAU,GAZC,E,iDAgBnB,SAAc4F,GACV1D,KAAKf,SAAS,CACV4J,OAAQnF,EAAEC,OAAOR,U,yBAGzB,SAAYO,GACR1D,KAAKf,SAAS,CACVzB,IAAKkG,EAAEC,OAAOR,U,+BAItB,WACI,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAM1B,IACI,IAAMmJ,EAAiB7L,KAAKqB,MAAMvB,aAAawB,QAAQ,kBACjDwK,EAAa9L,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAE7CyK,EAAQF,EAAeG,YACvBtL,EAAYoL,EAAW9H,QAAQtD,UAIjCqL,GACAnJ,KAAKf,SAAS,CACVnB,UAAsB,YAAZA,EACVgL,UAAWK,EAAM7H,SAAS,MAC1ByH,QAASI,EAAM7H,SAAS,MACxB0H,UAAWG,EAAM7H,SAAS,WAIpC,MAAOoC,GAEL2F,QAAQC,IAAI5F,GAGhBxG,aAAaqM,WAAW,YACxBrM,aAAaqM,WAAW,Y,gCAG5B,WACI,IAAMC,EAAWxJ,KAAKvC,MAAMoL,OACtBY,EAASzJ,KAAKvC,MAAMD,IAE1B,GAAIgM,EAEJtM,aAAaC,QAAQ,WAAWqM,OAE1B,KAAGC,EAKL,OAAO,KAHPvM,aAAaC,QAAQ,SAASsM,M,oBAQtC,WAGK,IAAMC,EAAiBtM,KAAKqB,MAAMvB,aAAawB,QAAQ,kBACjDiL,EAAevM,KAAKqB,MAAMvB,aAAawB,QAAQ,gBAGtD,IAAKxB,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,MARrB,MAY+CE,KAAKvC,MAAjDqL,EAZH,EAYGA,UAAWC,EAZd,EAYcA,QAASC,EAZvB,EAYuBA,UAAUlL,EAZjC,EAYiCA,UAEtC,OACI,8BAECA,GACD,gCACKgL,GACG,qBAAKlJ,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBACD,uCAAS,iEACR,yBAAQ+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EACtDC,SAAU9E,KAAK2I,cACdzF,UAAQ,EACRC,MAAOnD,KAAKvC,MAAMoL,OAHtB,UAMI,wBAAQ1F,MAAM,GAAd,+BACCuG,GAAkBA,EAAexC,KAAI,SAAAzJ,GAAK,OAC1C,wBAAQ0F,MAAQ1F,EAAMoB,GAAtB,SAA2BpB,EAAMS,mBAQjD6K,GACG,qBAAKnJ,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACA,uCAAS,+DACL,yBAAQ+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EACrDC,SAAU9E,KAAK4I,YACf7D,YAAa,CAAC7B,GACdC,MAAOnD,KAAKvC,MAAMD,IAHtB,UAMI,wBAAQ2F,MAAM,GAAd,6BACCwG,GAAgBA,EAAazC,KAAI,SAAA1J,GAAG,OACpC,wBAAQ2F,MAAQ3F,EAAIqB,GAApB,SAAyBrB,EAAIU,mBAO7C8K,GACG,qBAAKpJ,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,iDACA,yBAAQ+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EACrDE,YAAa,CAAC7B,GADlB,UAGI,wBAAQC,MAAM,GAAd,oBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,QAAd,oC,GAvJqBhD,a,0CCiBhCyJ,G,yDAEjB,WAAY7K,GAAQ,IAAD,8BACf,cAAMA,IAoBb8K,2BAA4B,SAACnG,GAC1B,EAAKzE,SAAS,CACV6K,UAAWpG,EAAEC,OAAOR,SAvBL,EA2BvB4G,sBAAuB,SAACrG,GACpB,EAAKzE,SAAS,CACV+K,SAAUtG,EAAEC,OAAOR,SA7BJ,EAgCvB8G,cAAgB,SAAC7B,GAQb,IANA,IAAI8B,EAAQ9B,EAAMzE,OAAOuG,MAErBC,EAAM,GAEJC,EAAQ,CAAC,2BAA2B,oEAAoE,kBAAmB,kBAAkB,mBAAmB,kBAAkB,WAAY,WAAW,YAAY,YAAa,aAAc,aAE7OC,EAAI,EAAGA,EAAIH,EAAMxK,OAAQ2K,IAE1BD,EAAME,OAAM,SAAA3F,GAAI,OAAIuF,EAAMG,GAAG1F,OAASA,OAEtCwF,EAAIE,GAAKH,EAAMG,GAAG1F,KAAO,gCAGjC,IAAK,IAAI4F,EAAI,EAAGA,EAAIJ,EAAIzK,OAAQ6K,IAE5BC,IAAMpG,MAAM+F,EAAII,IAChBnC,EAAMzE,OAAOR,MAAQ,KAEzB,OAAO,GApDY,EAsDvBsH,cAAgB,SAACrC,GAEb,GADYA,EAAMzE,OAAOuG,MACfxK,OAAS,EAAG,CAIlB,OAFA0I,EAAMzE,OAAOR,MAAQ,KACrBqH,IAAME,KAFM,4CAGL,EAEX,OAAO,GA9DY,EAgEvBC,cAAgB,SAACvC,GAIb,IAHA,IAAI8B,EAAQ9B,EAAMzE,OAAOuG,MAErBC,EAAM,GACDE,EAAI,EAAGA,EAAIH,EAAMxK,OAAQ2K,IAC1BH,EAAMG,GAAGO,KAHN,MAIHT,EAAIE,GAAKH,EAAMG,GAAG1F,KAAO,8CAGjC,IAAK,IAAI4F,EAAI,EAAGA,EAAIJ,EAAIzK,OAAQ6K,IAE5BC,IAAMpG,MAAM+F,EAAII,IAChBnC,EAAMzE,OAAOR,MAAQ,KAEzB,OAAO,GA9EY,EAgFvB0H,gBAAkB,SAAAzC,GACd,IAAI8B,EAAQ9B,EAAMzE,OAAOuG,MACrB,EAAKO,cAAcrC,IAAU,EAAK6B,cAAc7B,IAAU,EAAKuC,cAAcvC,IAE7E,EAAKnJ,SAAS,CACV6L,aAAcZ,EACda,OAAQ,KAnFZ,EAAKC,eAAiB,EAAKA,eAAe5L,KAApB,gBAGtB,EAAK3B,MAAQ,CAET+F,SAAS,EACTyH,iBAAkB,EAClBC,qBAAsB,EACtBpB,UAAW,GACXE,SAAU,GACVmB,KAAM,KACNC,aAAa,EACbN,aAAc,KACdC,OAAQ,GAhBG,E,kDA0FvB,SAAgBrH,GAAI,IAAD,OACfA,EAAEE,iBAED5D,KAAKf,SAAS,CACTK,QAAS,GACTkE,SAAS,IAaf,IAVA,IACMhF,EADOpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC3BF,MAIZ6M,EAAW,IAAIrN,SAIXa,EADgBzB,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAC5B4M,mBACrBjB,EAAI,EAAGA,EAAIrK,KAAKvC,MAAMqN,aAAapL,OAAS2K,IACjDgB,EAASpN,OAAO,WAAY+B,KAAKvC,MAAMqN,aAAaT,IACpDgB,EAASpN,OAAO,QAAS+B,KAAKvC,MAAMqM,WACpCuB,EAASpN,OAAO,OAAQ+B,KAAKvC,MAAMuM,UACnCqB,EAASpN,OAAO,WAAYY,GAGhCjC,IAAMC,KAAK,yEAA0EwO,EAAU,CAE/FvO,QAAS,CACD,eAAgB,sBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,mBAChC,oCAAoC,GAGxC+M,iBAAkB,SAAAC,GACd,EAAKvM,SAAS,CACV8L,OAASS,EAAcT,OAASS,EAAcC,MAAQ,SAI7D1O,MAAK,SAAAyC,GAGFgL,IAAMkB,QAAQ,8BAGhB,EAAKzM,SAAS,CACTK,QAAS,GACTkE,SAAS,OAKfmI,OAAM,SAAAxB,GAEHK,IAAMpG,MAAM,kC,+BAOpB,WAWI,IAAKlH,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,a,oBAM9B,WAGI,OAAK5C,aAAawB,QAAQ,wBAKtB,gCACQ,uBACCsB,KAAKvC,MAAMmO,oBACR,sBAAMhM,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAMD,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,YAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,+BAEJ,sBAAKA,UAAU,YAAf,UAC4B,cAAC,IAAD,IAEA,eAACiM,EAAA,EAAD,CAAUC,IAAI,MAAMC,MAAM,UAAU5I,MAAOnD,KAAKvC,MAAMsN,OAAtD,UAAgEiB,KAAKC,MAAMjM,KAAKvC,MAAMsN,OAAQ,GAA9F,OACA,uBAEA,sBAAKnL,UAAU,QAAf,UAEI,2CACA,uBAAO+E,KAAK,OAAO/E,UAAU,eAC5BkF,SAAU9E,KAAK6J,2BACZ3G,UAAQ,OAEb,sBAAKtD,UAAU,QAAf,UAEK,yCACJ,uBAAO+E,KAAK,OAAO/E,UAAU,eAAekF,SAAU9E,KAAK+J,sBAC5D7G,UAAQ,OAGL,sBAAKtD,UAAU,QAAf,UAEJ,uBAAO+E,KAAK,OAAO/E,UAAU,eAAekF,SAAU9E,KAAK6K,gBAAiB1H,MAAOnD,KAAKvC,MAAM0N,KAC9FjI,UAAQ,IAHJ,oMAUF,uBACA,yBACAyB,KAAK,SACL/E,UAAU,yBACdoF,SAAUhF,KAAKvC,MAAMsN,OACrB7K,QAASF,KAAKgL,eAJV,qBAImC,mBAAGlI,MAAM,4CAEpC,uBACX,uCAAS,cAAC,IAAD,CAAMhD,GAAG,mBAAkBF,UAAU,sCAArC,SAEJ,qEAjEtD,cAAC,IAAD,CAAUE,GAAI,e,GAjLYK,cCsU/B+L,EAlVQ,SAACnN,GAGtB,IAAM8E,EAAOsI,mBACPpI,EAAWoI,mBAJe,EAMiBC,mBAAS,IAN1B,mBAMzBC,EANyB,KAMLC,EANK,OAOIF,oBAAS,GAPb,mBAOzBG,EAPyB,KAObC,EAPa,OAQFJ,mBAAS,IARP,mBAQzB9M,EARyB,KAQhBmN,EARgB,OASFL,oBAAS,GATP,mBASzB5I,EATyB,KAShBkJ,EATgB,KAW1BC,EAAkBvP,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAGlDkO,EAAgBxP,KAAKqB,MAAMvB,aAAawB,QAAQ,kBAChDmO,EAAsBD,EAAc/I,KAI1CZ,qBAAU,WAER,IACM4J,EADgBzP,KAAKqB,MAAMvB,aAAawB,QAAQ,kBACZmF,KAC1CyI,EAAmBO,KAGlB,IA2KH,IAAK3P,aAAawB,QAAQ,wBACxB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IAAMgN,EAAY1P,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAElD,OAEE,eAAC8I,EAAYuF,SAAb,CAAsB5J,MAAO,CAAE0E,aA1DZ,SAAC1B,EAAIiC,GAQxB,IANA,IAAM4E,EAAW,eAAQX,GACnBY,EAAG,YAAOZ,GAKPa,EAAI,EAAGA,EAAIF,EAAYtN,OAAQwN,IACtCD,EAAIE,KAAKH,EAAYE,IAIvB,IAAK,IAAI9F,EAAI,EAAGA,EAAI6F,EAAIvN,OAAQ0H,IAAK,CAInC,IAHA,IAAMzI,EAAWsO,EAAI7F,GAGZgG,EAAI,EAAGA,EAAIzO,EAAS0O,OAAO3N,OAAQ0N,IAAK,CAC/C,IAAM7E,EAAQ5J,EAAS0O,OAAOD,GAI1BjH,IADWoC,EAAP1J,KAEN0J,EAAK,MAAYH,EAAMzE,OAAOR,OAKlC,IAAK,IAAImK,EAAI,EAAGA,EAAI3O,EAAS4O,eAAe7N,OAAQ4N,IAIlD,IAHA,IAAME,EAAc7O,EAAS4O,eAAeD,GAGnCF,EAAI,EAAGA,EAAII,EAAYH,OAAO3N,OAAQ0N,IAAK,CAClD,IAAM5E,EAAsBgF,EAAYH,OAAOD,GAM3CjH,IADWqC,EAAP3J,KAEN2J,EAAmB,MAAYJ,EAAMzE,OAAOR,QAQpDjG,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUgP,MAUxD,UACE,cAAC,EAAD,IACA,sBAAKzM,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACE,cAAC,EAAD,IAAQ,uBACR,yBAAS7N,UAAU,UAAnB,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SAIGgN,EAAc/I,KAAKnE,OAElB,qBAAKE,UAAU,YAAf,SACE,eAAC,IAAD,CAAM4E,SA3JD,SAAC4D,GACpBA,EAAMxE,iBAEN6I,EAAW,IACXD,GAAc,GAEdC,EAAW,IACXC,GAAW,GAGX7I,EAAK6J,QAAQ5J,cAGb,IACMtF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAOhBmP,EAHgBvQ,KAAKqB,MAAMvB,aAAawB,QAAQ,kBAGhBG,GAGhC+O,EAAUxQ,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAG1CmP,EAAYC,OAAOC,OAAOH,GAE1BI,EADY5Q,KAAKqB,MAAMvB,aAAawB,QAAQ,yBACpB0C,QAExBoI,EAAWwE,EAAYvQ,MAIvBwQ,EACN,CACEC,UAAWP,EACXlE,OANauE,EAAYxQ,IAOzBgM,SAAUA,EACV3F,KAAMgK,GAGwC,IAA5C9J,EAAS2J,QAAQ1J,QAAQC,QAAQvE,QAGnC9C,IAAMC,KAAK,4DAA6DoR,EACtE,CACEnR,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAGvCzB,MAAK,SAAAyC,GAEAA,EAAIvC,MACNC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAE9DwP,EAAWjN,EAAIvC,KAAKkR,QACpB3B,GAAc,MAId,SAACpI,GACC,IAAMC,EACHD,EAAMpH,UACLoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACtB/J,EAAMgK,cACNhK,EAAMG,WAERkI,EAAWpI,GACXmI,GAAc,OA+EsB/H,IAAKZ,EAAnC,WACI0I,GACA,gCACE,iCAAQ,oBAAIzJ,MAAM,YAAV,SAAuB8J,EAAc1O,UAC7C,iCAAQ,oBAAG4E,MAAM,YAAT,UAAqB,kDAA2B8J,EAAcxD,YAAYiF,cAA1E,QAA+F,6CAAsBzB,EAAc0B,QAAQD,cAA3I,QAAgK,2CAAoBzB,EAAc2B,UAG1M,iCACgC,WAA7BzB,EAAU1L,QAAQtD,UAEnB,qBAAIgF,MAAM,YAAV,wDAAkEgK,EAAU1L,QAAQoN,YAApF,UAAwG1B,EAAU1L,QAAQqN,UAA1H,WACC,oBAAI3L,MAAM,YAAV,gCAGD,cAAC,EAAD,IAED+J,EAAoB3F,KAAI,SAAAwH,GAAO,OAC9B,sBAAK9O,UAAU,aAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,aAAd,UAA4B8O,EAAQ9J,KAApC,2CAC2D8J,EAAQC,iBACnE,qBAAI/O,UAAU,GAAd,qCAAsD8O,EAAQE,cAGhE,qBAAKhP,UAAU,YAAf,SAEE,qBAAKA,UAAU,MAAf,SAEI8O,EAAUA,EAAQrB,OAAOnG,KAAI,SAACqB,EAAOnB,GAAR,OAAc,cAAC,EAAD,CAAqBmB,MAAOA,GAAVnB,MACzD,SAITsH,EAAQnB,eAAerG,KAAI,SAAA2H,GAAW,OACrC,gCACE,oBAAIjP,UAAU,GAAd,SAAkBiP,EAAYjK,OAC9B,oBAAIhF,UAAU,GAAd,SAAkBiP,EAAYF,gBAC9B,oBAAI/O,UAAU,GAAd,SAAkBiP,EAAYlK,OAC9B,oBAAI/E,UAAU,GAAd,SAAkBiP,EAAYD,UAE9B,qBAAKhP,UAAU,SAAf,SAEE,qBAAKA,UAAU,MAAf,SAEIiP,EAAcA,EAAYxB,OAAOnG,KAAI,SAACuB,EAAgBrB,GAAjB,OAAuB,cAAC,EAAD,CAA6BqB,eAAgBA,GAAnBrB,MAClF,qBAWlB,qBAAKxH,UAAU,aAAf,SAEE,uCAAS,yBAAQA,UAAU,0BAA0BoF,SAAUxB,EAAtD,UACNA,GACC,sBAAM5D,UAAU,iCAElB,mDAMR,6BACE,iCACGN,GACC,qBAAKM,UAAU,aAAf,SACE,sBACEA,UACE2M,EAAa,sBAAwB,qBAEvCxM,KAAK,QAJP,UAOGT,EAED,cAAC,EAAD,IACCqN,EAAkBA,EAAgBmC,gBAAgBpP,QACjD,cAAC,IAAD,CACEQ,QAjRb,SAACkI,GAClBA,EAAMxE,iBAEN,IACMmL,EADkB3R,KAAKqB,MAAMvB,aAAawB,QAAQ,qBACjBoQ,gBAAgBjQ,GAIjDL,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAEtB5B,IAAM2C,IAAN,2DAA8DwP,EAA9D,KACE,CACEjS,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIvCzB,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,OAI3DkC,OAAOf,SAAW,sBAsPQwB,UAAU,0CAFZ,SAME,0DAMA,oBAAIA,UAAU,0CACdqF,MAAO,CAAE+J,gBAAiB,OAD1B,+DAUd,cAAC,IAAD,CAAa/J,MAAO,CAAEC,QAAS,QAAUT,IAAKV,SAGhD,iCAAQ,0EAQpB,cAAC,EAAD,Q,iBC5UAb,GAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAqCekP,G,kDAEnB,WAAYlQ,GAAQ,IAAD,8BACjB,cAAMA,IACDmQ,eAAiB,EAAKA,eAAe9P,KAApB,gBACtB,EAAK+P,kBAAoB,EAAKA,kBAAkB/P,KAAvB,gBACzB,EAAKgQ,iBAAmB,EAAKA,iBAAiBhQ,KAAtB,gBAExB,EAAKiQ,WAAa,EAAKA,WAAWjQ,KAAhB,gBAClB,EAAKuJ,cAAgB,EAAKA,cAAcvJ,KAAnB,gBACrB,EAAKkE,iBAAmB,EAAKA,iBAAiBlE,KAAtB,gBACxB,EAAKkQ,cAAgB,EAAKA,cAAclQ,KAAnB,gBACrB,EAAKmE,iBAAmB,EAAKA,iBAAiBnE,KAAtB,gBAExB,EAAKmQ,oBAAsB,EAAKA,oBAAoBnQ,KAAzB,gBAE3B,EAAKoQ,oBAAsB,EAAKA,oBAAoBpQ,KAAzB,gBAE3B,EAAKqQ,kBAAoB,EAAKA,kBAAkBrQ,KAAvB,gBAEzB,EAAK3B,MAAQ,CACXf,SAAU,GACVC,SAAU,GACVW,WAAY,GACZC,UAAW,GAEXC,IAAK,GACLkS,OAAQ,GAERhS,MAAO,GACPC,aAAc,GACd4O,YAAY,EACZjN,QAAS,GACTkE,SAAS,EACTmM,YAAY,EAEZ9R,eAAgB,GAChBD,SAAU,EAEVE,UAAW,GACXgL,WAAW,EACXC,SAAS,EACTC,WAAW,GAxCI,E,qDA8CnB,WAAqB,IAAD,OAMZvL,EAAQ,iBACdb,IAAM2C,IAAN,0DACE,CACEzC,QACA,CACE,eAAgB,mBAEhB,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAEtC8S,OACA,CACEnS,MAAOA,KAIVV,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,OAE3D,EAAKgC,SAAS,CACZ4Q,cAAerQ,EAAIvC,UAMzBL,IAAM2C,IAAN,wDACE,CACEzC,QACA,CACE,eAAgB,mBAEhB,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAEtC8S,OACA,CACEnS,MAAOA,KAIVV,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,UAG7DL,IAAM2C,IAAN,0DACE,CACEzC,QACA,CACE,eAAgB,mBAEhB,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAKvCC,MAAK,SAAAyC,GACJ,EAAKP,SAAS,CACZ6Q,WAAYtQ,EAAIvC,UAGtBL,IAAM2C,IAAN,+DACE,CACEzC,QACA,CACE,eAAgB,mBAEhB,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAKvCC,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUmC,EAAIvC,OAE1D,EAAKgC,SAAS,CACZ8Q,gBAAiBvQ,EAAIvC,UAI3BL,IAAM2C,IAAN,+DACE,CACEzC,QACA,CACE,eAAgB,mBAEhB,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAKvCC,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUmC,EAAIvC,OAE1D,EAAKgC,SAAS,CACZ+Q,UAAWxQ,EAAIvC,Y,gCAQvB,SAAmBgT,EAAWC,GAAY,IAAD,OAGnB9S,KAAKqB,MAAMvB,aAAawB,QAAQ,gBAKpD,IACE,GAAIwR,EAAUpS,YAAckC,KAAKvC,MAAMK,UAAW,CAChD,IAAMqD,EAAOnB,KAAKvC,MAAMK,UAEpBqD,GACFnB,KAAKf,SAAS,CACZ6J,UAAW3H,EAAKG,SAAS,WACzByH,QAAS5H,EAAKG,SAAS,WACvB0H,UAAW7H,EAAKG,SAAS,YAK/B,MAAOoC,GAEP2F,QAAQC,IAAI5F,GAId,IACE,GAAIwM,EAAUR,SAAW1P,KAAKvC,MAAMiS,OAAQ,CAC1C,IAAMS,EAAUnQ,KAAKvC,MAAMiS,OAEvBS,IACFnQ,KAAKf,SAAS,CAEZ0Q,YAAY,IAEd/S,IAAM2C,IAAN,wDACE,CACEzC,QACA,CACE,eAAgB,mBAEhB,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAEtC8S,OACA,CACEpG,SAAU2G,KAIbpT,MAAK,SAAAyC,GAEJ,EAAKP,SAAS,CACZ0Q,YAAY,EACZS,KAAM5Q,EAAIvC,YAQpB,MAAOyG,GAEP2F,QAAQC,IAAI5F,M,+BAOhB,SAAkBA,GAChB1D,KAAKf,SAAS,CACZ3B,WAAYoG,EAAEC,OAAOR,U,8BAGzB,SAAiBO,GACf1D,KAAKf,SAAS,CACZ1B,UAAWmG,EAAEC,OAAOR,U,wBAQxB,SAAWO,GACT1D,KAAKf,SAAS,CACZzB,IAAKkG,EAAEC,OAAOR,U,2BAGlB,SAAcO,GACZ1D,KAAKf,SAAS,CACZyQ,OAAQhM,EAAEC,OAAOR,U,8BAIrB,SAAiBO,GACf1D,KAAKf,SAAS,CACZvC,SAAUgH,EAAEC,OAAOR,U,2BAIvB,SAAcO,GACZ1D,KAAKf,SAAS,CACZvB,MAAOgG,EAAEC,OAAOR,U,8BAIpB,SAAiBO,GACf1D,KAAKf,SAAS,CACZtC,SAAU+G,EAAEC,OAAOR,U,iCAQvB,SAAoBO,GAClB1D,KAAKf,SAAS,CACZtB,aAAc+F,EAAEC,OAAOR,U,iCAG3B,SAAoBO,GAClB1D,KAAKf,SAAS,CACZpB,eAAgB6F,EAAEC,OAAOR,U,+BAa7B,SAAkBO,GAChB1D,KAAKf,SAAS,CACZnB,UAAW4F,EAAEC,OAAOR,U,4BAMxB,SAAeO,GAAI,IAAD,OAChBA,EAAEE,iBACF5D,KAAKf,SAAS,CACZK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEXxD,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAChCwE,EAAYmM,cACVrQ,KAAKvC,MAAMf,SACXsD,KAAKvC,MAAMd,SACXqD,KAAKvC,MAAMH,WACX0C,KAAKvC,MAAMF,UAEXyC,KAAKvC,MAAMD,IACXwC,KAAKvC,MAAMiS,OAEX1P,KAAKvC,MAAMC,MACXsC,KAAKvC,MAAME,aACXqC,KAAKvC,MAAMG,SACXoC,KAAKvC,MAAMI,eAGXmC,KAAKvC,MAAMK,WACXf,MACA,SAAAC,GACMA,EAASC,OACXC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUL,EAASC,OAC1DC,aAAaC,QAAQ,uBAAwBC,KAAKC,UAAUL,EAASC,QAEvE,EAAKgC,SAAS,CACZK,QAAStC,EAASC,KAAKqC,QACvBiN,YAAY,IAEdpN,OAAOf,SAAW,eAClBiL,QAAQC,IAAItM,EAASC,SAEvB,SAAAmH,GACE,IAAMC,EACHD,EAAMpH,UACLoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACtB/J,EAAM9E,SACN8E,EAAMG,WAER,EAAKtF,SAAS,CACZuE,SAAS,EACTlE,QAAS+E,OAKfrE,KAAKf,SAAS,CACZuE,SAAS,M,oBAMf,WAAU,IAAD,SACwBxD,KAAKvC,MAA5BqL,EADD,EACCA,UAAWC,EADZ,EACYA,QAGnB,OAEE,sBAAKnJ,UAAU,6BAAf,UACGI,KAAKvC,MAAMgG,qBACV,sBAAM7D,UAAU,GAAhB,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBACzD,qBAAK/C,UAAU,iBAAf,6CAKR,sBAAKA,UAAU,GAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAK4C,IAAKC,EAAMC,OAAO,QAAQC,IAAI,KACnC,uBACA,eAAC,IAAD,CAAM7C,GAAG,GAAT,UAAY,oCAAZ,cAEF,qBAAKF,UAAU,SAAf,SAEE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,4BAAf,UAEE,uBACA,eAAC,IAAD,CAAM4E,SAAUxE,KAAKkP,eAAgBzK,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAAM9E,UAAU,OAAOuG,GAAG,GAAvF,UACE,sBAAKvG,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SAEE,sBAAKA,UAAU,aAAf,UACE,+CACA,cAAC,IAAD,CAAO+E,KAAK,OAAOwB,GAAG,YAAYvG,UAAU,eAAeiF,YAAY,aAAa1B,MAAOnD,KAAKvC,MAAMH,WACpGwH,SAAU9E,KAAKmP,kBACfpK,YAAa,CAAC7B,WAGpB,qBAAKtD,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,8CACA,cAAC,IAAD,CAAO+E,KAAK,OAAOwB,GAAG,WAAWvG,UAAU,eAAeiF,YAAY,YAAY1B,MAAOnD,KAAKvC,MAAMF,UAClGuH,SAAU9E,KAAKoP,iBACfrK,YAAa,CAAC7B,cAItB,sBAAKtD,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SAEE,sBAAKA,UAAU,aAAf,UACE,0CACA,cAAC,IAAD,CAAO+E,KAAK,QAAQwB,GAAG,QAAQvG,UAAU,eAAeiF,YAAY,QAAQ1B,MAAOnD,KAAKvC,MAAMC,MAC5FoH,SAAU9E,KAAKsP,cACfvK,YAAa,CAAC7B,WAGpB,qBAAKtD,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,iDACA,cAAC,IAAD,CAAO+E,KAAK,MAAMwB,GAAG,cAAcvG,UAAU,eAAeiF,YAAY,eAAe1B,MAAOnD,KAAKvC,MAAME,aACvGmH,SAAU9E,KAAKuP,oBACfxK,YAAa,CAAC7B,cAyCtB,sBAAKtD,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SAEE,sBAAKA,UAAU,aAAf,UACE,8CACA,eAAC,IAAD,CACEA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKyP,kBACftM,MAAOnD,KAAKvC,MAAMK,UALpB,UAOE,wBAAQqF,MAAM,GAAd,wBACA,wBAAQA,MAAM,UAAd,gBAEA,wBAAQA,MAAM,UAAd,wBAON,qBAAKvD,UAAU,WAAf,SAEE,sBAAKA,UAAU,aAAf,UACE,gDAEA,eAAC,IAAD,CACEA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKwP,oBACfrM,MAAOnD,KAAKvC,MAAMI,eALpB,UAOE,wBAAQsF,MAAM,GAAd,wBACCnD,KAAKvC,MAAMsS,iBAAmB/P,KAAKvC,MAAMsS,gBAAgB7I,KAAI,SAAAoJ,GAAW,OACvE,wBAAQnN,MAAOmN,EAAYzR,GAA3B,SAAgCyR,EAAYpS,sBAOtD,sBAAK0B,UAAU,MAAf,UACGkJ,GACC,qBAAKlJ,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,0CACA,eAAC,IAAD,CAAQuD,MAAOnD,KAAKvC,MAAMiS,OACxB5K,SAAU9E,KAAK2I,cACf5D,YAAa,CAAC7B,IAAWyB,KAAK,OAAOwB,GAAG,QAAQvG,UAAU,eAF5D,UAGE,wBAAQuD,OAAK,EAAb,oBACCnD,KAAKvC,MAAMoS,eAAiB7P,KAAKvC,MAAMoS,cAAc3I,KAAI,SAAAzJ,GAAK,OAE7D,wBAAQ0F,MAAO1F,EAAMoB,GAArB,SAA0BpB,EAAMS,mBAQzC6K,GAEC,sBAAKnJ,UAAU,MAAf,UACA,qBAAKA,UAAU,WAAf,SACA,sBAAKA,UAAU,aAAf,UACE,0CACA,eAAC,IAAD,CAAQuD,MAAOnD,KAAKvC,MAAMiS,OACxB5K,SAAU9E,KAAK2I,cACf5D,YAAa,CAAC7B,IAAWyB,KAAK,OAAOwB,GAAG,QAAQvG,UAAU,eAF5D,UAGE,wBAAQuD,OAAK,EAAb,oBACCnD,KAAKvC,MAAMoS,eAAiB7P,KAAKvC,MAAMoS,cAAc3I,KAAI,SAAAzJ,GAAK,OAE7D,wBAAQ0F,MAAO1F,EAAMoB,GAArB,SAA0BpB,EAAMS,mBAOtC,qBAAK0B,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,wCACCI,KAAKvC,MAAMkS,YACV,sBAAM/P,UAAU,iCAElB,eAAC,IAAD,CAAQuD,MAAOnD,KAAKvC,MAAMD,IACxBsH,SAAU9E,KAAKqP,WACftK,YAAa,CAAC7B,IAAWyB,KAAK,OAAOwB,GAAG,QAAQvG,UAAU,eAF5D,UAIE,+CACCI,KAAKvC,MAAM8S,aAAevQ,KAAKvC,MAAM8S,YAAYrJ,KAAI,SAAA1J,GAAG,OACvD,wBAAQ2F,MAAO3F,EAAIqB,GAAnB,SAAwBrB,EAAIU,yBAUxC,qBAAK0B,UAAU,QA0Bf,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,6CACA,cAAC,IAAD,CAAO+E,KAAK,OAAOC,KAAK,WAAWhF,UAAU,eAAeiF,YAAY,WACtE1B,MAAOnD,KAAKvC,MAAMf,SAClBoI,SAAU9E,KAAKsD,iBACfyB,YAAa,CAAC7B,WAGpB,qBAAKtD,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,6CACA,cAAC,IAAD,CAAO+E,KAAK,WAAWC,KAAK,WAAWhF,UAAU,eAAeiF,YAAY,WAAW1B,MAAOnD,KAAKvC,MAAMd,SACvGmI,SAAU9E,KAAKuD,iBACfwB,YAAa,CAAC7B,cAItB,qBAAKtD,UAAU,aAAf,SACE,yBACEA,UAAU,qCACVoF,SAAUhF,KAAKvC,MAAM+F,QAFvB,UAIGxD,KAAKvC,MAAM+F,SACV,sBAAM5D,UAAU,qCAElB,iDAGJ,iCACGI,KAAKvC,MAAM6B,SACV,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACEI,KAAKvC,MAAM8O,WACP,sBACA,qBAENxM,KAAK,QANP,SAQGC,KAAKvC,MAAM6B,cAKpB,cAAC,IAAD,CACE2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKX,SAAWW,yB,GArpBKvE,aCkO5BqQ,GAvRE,SAACzR,GAAW,IAAD,EAIQqN,mBAAS,CAAC,CAAExH,KAAM,GAAI+J,cAAe,MAJ7C,mBAInB8B,EAJmB,KAIRC,EAJQ,OAMUtE,oBAAS,GANnB,mBAMnBG,EANmB,KAMPC,EANO,OAOIJ,mBAAS,IAPb,mBAOnB9M,EAPmB,KAOVmN,EAPU,OAQIL,oBAAS,GARb,mBAQVM,GARU,WAWpBiE,EAAoB,SAACjN,EAAGkN,GAAW,IAAD,EACdlN,EAAEC,OAAlBiB,EAD8B,EAC9BA,KAAMzB,EADwB,EACxBA,MACR0N,EAAI,YAAOJ,GACjBI,EAAKD,GAAOhM,GAAQzB,EACpBuN,EAAaG,IAWTC,EAAiB,WACrBJ,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAE7L,KAAM,GAAI+J,cAAe,QAGnDoC,EAAa,WAYjB,IATA,IACMvS,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGhBwS,EAAkB5T,KAAKqB,MAAMvB,aAAawB,QAAQ,oBAClDuS,EAAoBD,EAAgBnS,GAGpCqS,EAAe,GACZ9J,EAAI,EAAGA,EAAI4J,EAAgBnN,KAAKnE,OAAQ0H,IAC/C8J,EAAa/D,KAAK6D,EAAgBnN,KAAKuD,IAGzClK,aAAaC,QAAQ,SAAUC,KAAKC,UAAU6T,IAK9C,IADA,IAAMC,EAAa,GACV/J,EAAI,EAAGA,EAAIqJ,EAAU/Q,OAAQ0H,IACpC+J,EAAWhE,KAAKsD,EAAUrJ,IAM5B,IAAMgK,EAAiBrS,EAAMqS,eACvBC,EAASH,EAAaI,MAAK,qBAAG1M,OAAoBwM,KAGlDG,EAAcL,EAAaM,QAAO,SAAAC,GAAI,OAAIA,EAAK7M,OAASwM,KAIxDM,EAAYH,EAAYI,OAAON,GAE/BO,EAAeF,EAAUA,EAAUhS,OAAS,GAE5CmS,EAAQD,EAAavE,OAQrByE,EAAc,CAClBlN,KARWgN,EAAahN,KASxB+J,cARoBiD,EAAajD,cASjCC,QARcgD,EAAahD,QAS3BjK,KARWiN,EAAajN,KASxB0I,OARcwE,EAAMF,OAAOlB,IAcvB5M,EAAO0N,EAAYI,OAAOG,GAK1B/L,EACN,CACEgM,mBAAoBd,EACpB/C,UALcnP,EAAMiT,qBAKC,GAAGnT,GACxBgF,QAIFwF,QAAQC,IAAIvD,GAEZnJ,IAAMC,KAAK,yDAA0DkJ,EACrE,CACEjJ,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIvCzB,MAAK,SAAAyC,GAKJiN,EAAWjN,EAAIvC,KAAKkR,QACpB3B,GAAc,MAEd,SAACpI,GACC,IAAMC,EACHD,EAAMpH,UACLoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACtB/J,EAAM9E,QAAQA,SACd8E,EAAMG,WAERiI,GAAc,GACdE,GAAW,GACXD,EAAWpI,OAQnB,OACE,8BAGGoM,EAAUvJ,KAAI,SAACmD,EAAGjD,GACjB,OACE,gCACE,uBACA,sDACA,sBAAKxH,UAAU,MAAf,UAEE,qBAAKA,UAAU,QAAf,SAEE,uBACEA,UAAU,eACVgF,KAAK,OACLC,YAAY,mBACZ1B,MAAOkH,EAAEzF,KACTE,SAAU,SAAApB,GAAC,OAAIiN,EAAkBjN,EAAG0D,QAIxC,qBAAKxH,UAAU,QAAf,SACE,uBACE+E,KAAK,SACL/E,UAAU,eACVgF,KAAK,gBACLC,YAAY,sBACZ1B,MAAOkH,EAAEsE,cACT7J,SAAU,SAAApB,GAAC,OAAIiN,EAAkBjN,EAAG0D,WAvB5C,OA8BE,sBAAKxH,UAAU,UAAf,UACwB,IAArB6Q,EAAU/Q,QAAgB,wBAEzBE,UAAU,iBACVM,QAAS,kBAlKG,SAAA0Q,GACxB,IAAMC,EAAI,YAAOJ,GACjBI,EAAKoB,OAAOrB,EAAO,GACnBF,EAAaG,GA+JcqB,CAAkB9K,IAHR,eAD7B,WASMqJ,EAAU/Q,OAAS,IAAM0H,GAC3B,wBACExH,UAAU,kBAEVM,QAAS4Q,EAHX,4BAVJ,WAiBML,EAAU/Q,OAAS,IAAM0H,GAC3B,wBACExH,UAAU,kBAEVM,QAAS6Q,EAHX,8BAODzR,GACC,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACE2M,EAAa,sBAAwB,qBAEvCxM,KAAK,QAJP,SAOGT,kBC5Mf4D,GAAW,SAACC,GACd,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAOO4G,G,kDAEjB,WAAY5H,GAAQ,IAAD,8BACf,cAAMA,IACDoT,YAAc,EAAKA,YAAY/S,KAAjB,gBACnB,EAAKgT,eAAiB,EAAKA,eAAehT,KAApB,gBAEtB,EAAK3B,MAAQ,CACT+F,SAAS,EACTlE,QAAS,GACT4B,WAAW,EACXmR,qBAAsB,GACtBC,yBAAyB,EACzBC,sBAAsB,EACtBC,OAAO,IAZI,E,kDAoBnB,SAAe9O,GACX1D,KAAKf,SAAS,CACVuT,OAAQ9O,EAAEC,OAAOR,U,yBAIzB,SAAYO,GAAI,IAAD,OACXA,EAAEE,iBAEF5D,KAAKf,SAAS,CACVoT,qBAAsB,GACtBC,yBAAyB,EACzBC,sBAAsB,IAatB,IATA,IACM/T,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGhBwS,EAAkB5T,KAAKqB,MAAMvB,aAAawB,QAAQ,oBAClDuS,EAAoBD,EAAgBnS,GAGpC4T,EAAW,GACRrL,EAAI,EAAGA,EAAI4J,EAAgBnN,KAAKnE,OAAQ0H,IAC7CqL,EAAStF,KAAK6D,EAAgBnN,KAAKuD,IAGvC,IAAMrB,EACN,CACIgM,mBAAmBd,EACnB/C,UAAWlO,KAAKvC,MAAM+U,OACtB3O,KAAM4O,GAIVzS,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAElC9C,IAAMC,KAAK,yDAA0DkJ,EACjE,CACIjJ,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVoT,qBAAsB7S,EAAIvC,KAAKkR,OAC/BmE,yBAAyB,IAE7BnT,OAAOf,SAAW,cACdoB,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,UAGjE,SAAAmH,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACxB/J,EAAMmO,sBACNnO,EAAMG,WAEV,EAAKtF,SAAS,CACVsT,sBAAsB,EACtBjT,QAAS+E,OAKrBrE,KAAKf,SAAS,CACVsT,sBAAsB,M,+BAOlC,WAAqB,IAAD,OAChB,IAAKrV,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,iFACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,uBAAwBC,KAAKC,UAAUmC,EAAIvC,OAIpE,EAAKgC,SAAS,CACV+S,qBAAsBxS,EAAIvC,KAC1BiE,WAAW,EACXiB,aAAa,S,oBAO7B,WAAU,IAAD,OAGL,IAAKjF,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAG1B,IAAM4S,EAAiBtV,KAAKqB,MAAMvB,aAAawB,QAAQ,oBACjDiU,EAA2BD,EAAe7O,KAC1C+O,EAAeF,EAAexU,MAGpC,OACI,gCACI,cAAC,EAAD,IACA,sBAAK0B,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACI,cAAC,EAAD,IAAQ,uBACR,yBAAS7N,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SAEI,sBAAKA,UAAU,YAAf,UAEI,iCACKI,KAAKvC,MAAM4U,sBACR,qBAAKzS,UAAU,OAAf,SACI,qBACIA,UACII,KAAKvC,MAAM6U,wBACL,sBACA,qBAEVvS,KAAK,QANT,SAQI,mCAAOC,KAAKvC,MAAM4U,8BAKtC,iCAAQ,6BAAKO,MAIRD,GAA0BA,EAAyBzL,KAAK,SAAC2L,EAAgBzL,GAAjB,OACrD,sBAAKxH,UAAU,aAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAIA,UAAU,aAAd,UAA4BiT,EAAelE,cAA3C,mCAAyG,4BAAIkE,EAAejO,UAG5H,qBAAIhF,UAAU,GAAEqF,MAAO,CAAE6N,UAAW,UAApC,qCAAoFD,EAAejE,cAGvG,sBAAKhP,UAAU,YAAf,UAEKiT,EAAetF,eAAerG,KAAI,SAAA2H,GAAW,OAC1C,gCACI,oBAAIjP,UAAU,GAAd,SAAkBiP,EAAYjK,OAE9B,qBAAKhF,UAAU,MAAf,SACKiP,EAAYxB,OAAOnG,KAAI,SAAA6L,GAAiB,OACrC,sBAAKnT,UAAU,QAAf,UACI,oBAAIA,UAAU,GAAd,SAAkBmT,EAAkBpE,gBACpC,oBAAI/O,UAAU,GAAd,SAAkBmT,EAAkBpO,OACpC,oBAAI/E,UAAU,GAAd,SAAkBmT,EAAkBnE,UAEpC,uBAAOjK,KAAK,OAAO/E,UAAU,wBAAwBiF,YAAakO,EAAkBnO,KAAMI,UAAQ,IALtG,mDAK0J,qCAQ1K,uBACA,qBAAKpF,UAAU,MAAf,SACKiT,EAAexF,OAAOnG,KAAI,SAACmG,EAAOjG,GAAR,OAE9B,sBAAKxH,UAAU,QAAf,UACD,oBAAIA,UAAU,GAAd,SAAkByN,EAAOsB,gBACzB,oBAAI/O,UAAU,GAAd,SAAkByN,EAAO1I,OACzB,oBAAI/E,UAAU,GAAd,SAAkByN,EAAOuB,UACb,uBAAOjK,KAAK,OAAO/E,UAAU,wBAAwBiF,YAAawI,EAAOzI,KAAMI,UAAQ,IAJlG,mDAIsJ,+BAOvJ,cAAC,GAAD,CAAkBuD,MAAOsK,EAAgBzB,eAAgByB,EAAejO,KAAMoN,qBAAsB,EAAKvU,MAAMuU,sBAAhG5K,YAQ1BuL,EAAyBjT,OAE1B,sBAAKE,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,sBAEJ,qBAAKA,UAAU,YAAf,SAEA,cAAC,IAAD,CAAM4E,SAAUxE,KAAKmS,YAAa1N,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAA1D,UACE1E,KAAKvC,MAAM6U,yBACE,gCACH,qBAAK1S,UAAU,aAAf,SACI,eAAC,IAAD,CACIA,UAAU,eACVuG,GAAG,4BACDpB,YAAa,CAAC7B,IAChB4B,SAAU9E,KAAKoS,eACfjP,MAAOnD,KAAKvC,MAAM+U,OALtB,UAOA,wBAAQrP,MAAM,GAAd,wBAEKnD,KAAKvC,MAAMuU,sBAAwBhS,KAAKvC,MAAMuU,qBAAqB9K,KAAI,SAAAsL,GAAM,OAE1E,wBAAQrP,MAAOqP,EAAO3T,GAAtB,SAA2B2T,EAAOtU,gBAO1D,iCAKU,yBACI8G,SAAUhF,KAAKvC,MAAM8U,qBACrB3S,UAAU,0BACVM,QAASF,KAAKjB,MAAMiU,UAHxB,UAMKhT,KAAKvC,MAAM8U,sBACR,sBAAM3S,UAAU,iCAIpB,yDAIJ,iCACTI,KAAKvC,MAAM4U,sBACR,qBAAKzS,UAAU,OAAf,SACI,qBACIA,UACII,KAAKvC,MAAM6U,wBACL,sBACA,qBAEVvS,KAAK,QANT,SAQI,mCAAOC,KAAKvC,MAAM4U,8BAS5B,cAAC,IAAD,CACIpN,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACD,EAAKX,SAAWW,eAa5B,iCAAQ,qEAY9B,cAAC,EAAD,W,GA5U0BvE,aCdrB8S,G,kDAEjB,WAAYlU,GAAQ,IAAD,8BACf,cAAMA,IACDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACX5B,QAAS,GACT2T,QAAS,IANE,E,qDASnB,WAAqB,IAAD,OAChB,IAAK/V,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,iFACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUmC,EAAIvC,OAI1D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,oBA0C7B,WAEI,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,0BAASkB,UAAU,kBAAnB,UACI,uBACA,qBAAKA,UAAU,kBAAf,SAGI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UAEI,oBAAIA,UAAU,aAAd,qBACA,sBAAKA,UAAU,aAAf,UACI,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,WAAWhV,MAAM,WAAjF,SACI,mBAAG0B,UAAU,mBAEjB,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,SAAShV,MAAM,SAA/E,SACI,mBAAG0B,UAAU,yBAIxBI,KAAKvC,MAAMyD,UACR,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGhD,qBAAKrH,UAAU,gBAAf,SAEI,wBAAOA,UAAU,+BAAjB,UACI,gCACI,+BAEA,oBAAIqF,MAAO,CAAEsC,MAAO,MAApB,yBAMG,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,uBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,kBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,qBAGE,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,kBAID,iDAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAAQ3H,UAAU,cAAtC,yBAQPI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE1B,gCACI,+BAEI,+BACI,cAAC,IAAD,UACKA,EAAOtU,QAGZ,uBACA,+CACesU,EAAOlL,cAe1B,6BACI,cAAC,IAAD,UACKkL,EAAOW,uBAIhB,6BACI,cAAC,IAAD,UACKX,EAAOjE,SAIhB,6BACI,cAAC,IAAD,UACKiE,EAAOlE,YAIhB,6BACI,cAAC,IAAD,UACKkE,EAAOpJ,gBAOhB,qBAAIxJ,UAAU,mBAAd,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,wBAAwBG,KAAK,cAAcqT,gBAAe,GAAIC,gBAAe,EAAGC,gBAAe,GAAIrO,MAAO,CAAEsC,MAAM,GAAD,OAAKiL,EAAOe,SAAS,IAArB,UAGpI,gCACKf,EAAOe,SAAS,SAIzB,oBAAI3T,UAAU,gBAAd,SACI,sBAAMA,UAAU,sBAAhB,oBAEJ,oBAAIA,UAAU,oDA2BlD,cAAC,EAAD,OAlKI,cAAC,IAAD,CAAUE,GAAI,U,GAjFGK,aCGhBoC,G,kDACjB,WAAYxD,GAAQ,IAAD,8BACf,cAAMA,IACDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACX5B,QAAS,GACT2T,QAAS,GACTO,cAAc,GAPH,E,qDAUnB,WACI,IAAKtW,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAI1B,IACMtB,EADU0F,EAAY2C,iBACNrI,MAGhBkR,EAAS,iBACf9S,IAAM2C,IAAN,0DACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAAOiS,KAId3S,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,UAKrEL,IAAM2C,IAAN,wDACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAAOiS,KAId3S,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,Y,gCAKvE,WAAsB,IAAD,OAEfqF,EAAMlF,KAAKqB,MAAMvB,aAAawB,QAAQ,yBACtCF,EAAQ8D,EAAM9D,MAENV,EAAUwE,EAAMlB,QAAQtD,UACxBN,EAAK8E,EAAMlB,QAAQ5D,IACnBC,EAAO6E,EAAMlB,QAAQ3D,MAG3B,OAAQK,GACJ,IAAK,UACD,OAASlB,IAAM2C,IAAN,gGAAmG9B,GAC5G,CACIX,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,OAIzB,IAAK,UACD,OAAQvF,IAAM2C,IAAN,8FAAiG/B,GACzG,CACIV,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,OAGrB,IAAK,UACL,OAAQvF,IAAM2C,IAAN,iFACR,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,OAIzB,QACI,OAAO,Q,yBAIvB,SAAY8Q,GAER,IAAMlE,EAAiBkE,EAAQpU,GAGzBL,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8DwP,EAA9D,KACI,CACIjS,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAI3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,OAI7DkC,OAAOf,SAAW,uB,oBAI9B,WAAU,IAAD,OAEL,OAAKlB,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,0BAASkB,UAAU,kBAAnB,UAEKI,KAAKvC,MAAM+V,cACR,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKT,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,iBAAf,SACKI,KAAKvC,MAAMyD,UACR,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGhD,8BACCjH,KAAKvC,MAAMwV,QAAQvT,OACpB,qBAAKE,UAAU,MAAf,SACKI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAC,GAAO,OAE3B,qBAAKvH,UAAU,WAAf,SAEI,sBAAKA,UAAU,+BAAf,UAEI,sBAAKA,UAAU,sBAAsBqF,MAAO,CAAEwO,aAAc,SAAUC,UAAW,SAAU3H,MAAO,QAAS4H,OAAQ,kBAAmBC,QAAS,SAA/I,UACK,EAAKnW,MAAM0E,YACR,mCAEI,sBAAKvC,UAAU,yBAAf,UACI,mBAAGA,UAAU,oBAEb,iCAEI,cAACmH,EAAA,EAAD,CACI8M,GAAG,OACH7M,UAAU,OACV4D,KAAK,KACL7K,KAAK,SACL+T,cAAY,OACZ7M,QAAQ,mBAMxB,oBAAIrH,UAAU,OAAd,SAAqB,wBAIzB,cAAC,IAAD,CAEIM,QAAS,EAAK6T,YAAY3U,KAAK,EAAM+H,GACrCvH,UAAU,sBACVoF,SAAU,EAAKvH,MAAM+F,QACrByB,MAAO,CAAEwO,aAAc,SAAUC,UAAW,SAAU3H,MAAO,OAAQ4H,OAAQ,iBAAkBC,QAAS,SAL5G,kCAYA,uBACA,oBAAIhU,UAAU,oBAAd,SAAoCuH,EAAQjJ,QAC5C,uBACA,oBAAI0B,UAAU,oBAAd,SAAmCuH,EAAQiC,iBAG/C,qBAAKxJ,UAAU,cAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCuH,EAAQ9I,SAC5C,sBAAMuB,UAAU,mBAAhB,yBAKR,qBAAKA,UAAU,wBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCuH,EAAQ7I,aAC5C,sBAAMsB,UAAU,mBAAhB,6BAKR,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCuH,EAAQ5I,WAC5C,sBAAMqB,UAAU,mBAAhB,0CAelB,iCAAQ,qFAM9B,qBAAKA,UAAU,cAAf,SACI,qBAAK0G,aAAW,2BAAhB,SACI,oBAAI1G,UAAU,oDAgB9B,cAAC,EAAD,OA1II,cAAC,IAAD,CAAUE,GAAI,U,GA9KWK,a,SCGvC+C,GAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAOeiU,G,kDACnB,WAAYjV,GAAQ,IAAD,uBAEjB,cAAMA,IAoERkV,UAAY,SAAChX,GAGX,EAAKgC,SAAS,CACZiV,mBAAoB,GACpBC,uBAAuB,EACvBvI,oBAAoB,IAatB,IATA,IACMpN,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGhBwS,EAAkB5T,KAAKqB,MAAMvB,aAAawB,QAAQ,oBAClDuS,EAAoBD,EAAgBnS,GAGpCqS,EAAe,GACZ9J,EAAI,EAAGA,EAAI4J,EAAgBnN,KAAKnE,OAAQ0H,IAC/C8J,EAAa/D,KAAK6D,EAAgBnN,KAAKuD,IAGzClK,aAAaC,QAAQ,SAAUC,KAAKC,UAAU6T,IAK9C,IADA,IAAMC,EAAa,GACV/J,EAAI,EAAGA,EAAInK,EAAKyC,OAAQ0H,IAC/B+J,EAAWhE,KAAKlQ,EAAKmK,IAIvB,IAAMgK,EAAiBhU,KAAKqB,MAAMvB,aAAawB,QAAQ,mBACjD2S,EAASH,EAAaI,MAAK,qBAAG1M,OAAoBwM,KAOlDG,EAAcL,EAAaM,QAAO,SAAAC,GAAI,OAAIA,EAAK7M,OAASwM,KAKxDM,EAAYH,EAAYI,OAAON,GAE/BO,EAAeF,EAAUA,EAAUhS,OAAS,GAE5CmS,EAAQD,EAAavE,OAUrByE,EAAc,CAClBlN,KAVWgN,EAAahN,KAWxB+J,cAVoBiD,EAAajD,cAWjCC,QAVcgD,EAAahD,QAW3BjK,KAVWiN,EAAajN,KAWxB0I,OAVcwE,EAAMF,OAAO1U,IAgBvB4G,EAAO0N,EAAYI,OAAOG,GAK1B/L,EACN,CACEgM,mBAAoBd,EACpB/C,UAAW,EAAKzQ,MAAM+U,OACtB3O,QAKFwF,QAAQC,IAAIvD,GAEZ,EAAKlC,KAAKC,cACmC,IAAzC,EAAKC,SAASC,QAAQC,QAAQvE,OAEhC9C,IAAMC,KAAK,yDAA0DkJ,EACnE,CACEjJ,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAGvCzB,MAAK,SAAAyC,GACJ,EAAKP,SAAS,CACZiV,mBAAoB1U,EAAIvC,KAAKkR,OAC7BgG,uBAAuB,IAIrB3U,EAAIvC,MACNC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUmC,EAAIvC,UAI/D,SAAAmH,GACE,IAAMC,EACHD,EAAMpH,UACLoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACtB/J,EAAMwH,oBACNxH,EAAMG,WAER,EAAKtF,SAAS,CACZ2M,oBAAoB,EACpBtM,QAAS+E,OAKjB,EAAKpF,SAAS,CACZ2M,oBAAoB,KApMxB,EAAKwG,eAAiB,EAAKA,eAAehT,KAApB,gBAItB,EAAK3B,MAAQ,CACXR,KAAM,GACNmX,gBAAgB,EAChBC,qBAAqB,EACrBC,kBAAkB,EAClB3V,SAAU,GAEV6E,SAAS,EACTlE,QAAS,GACT4U,mBAAoB,GACpBC,uBAAuB,EACvBvI,oBAAoB,GAGtB,IAAM2I,EAAS,EAAKC,UAAUpV,KAAf,gBArBE,OAsBjBqV,gBAAaC,WAAU,SAAAjX,GAAK,OAAI8W,EAAO9W,EAAMR,SAtB5B,E,kDAyBnB,SAAeyG,GACb1D,KAAKf,SAAS,CACZuT,OAAQ9O,EAAEC,OAAOR,U,yBAQrB,WAGEnD,KAAKf,SAAS,CAEZmV,gBAAgB,M,8BAIpB,WACEpU,KAAKf,SAAS,CACZoV,qBAAqB,M,2BAIzB,WACErU,KAAKf,SAAS,CACZqV,kBAAkB,M,0BAItB,WACEtU,KAAKf,SAAS,CACZmV,gBAAgB,EAChBC,qBAAqB,EACrBC,kBAAkB,M,uBAItB,SAAUrX,GACR+C,KAAKf,SAAS,CACZhC,W,+BAyIJ,WAAqB,IAAD,OAElB,IAAKC,aAAawB,QAAQ,wBAExB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAI,qEACR,CACEzC,QACA,CACE,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAGvCzB,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,uBAAwBC,KAAKC,UAAUmC,EAAIvC,OAIlE,EAAKgC,SAAS,CACZ+S,qBAAsBxS,EAAIvC,KAC1BiE,WAAW,EACXiB,aAAa,S,oBAUrB,WAAU,IAAD,OAEHwS,EAAa,aACb3U,KAAKvC,MAAM2W,iBACbO,GAAc,iBAGhB,IAAIC,EAAkB,oBAClB5U,KAAKvC,MAAM4W,sBACbO,GAAmB,iBAGrB,IAAIC,EAAe,iBAKnB,OAJI7U,KAAKvC,MAAM6W,mBACbO,GAAgB,iBAKhB,qBAAKjV,UAAU,WAAWqF,MAAO,CAAE6P,OAAQ,OAAQvN,MAAO,OAA1D,SAGE,yBAAS3H,UAAU,iBAAnB,SAEE,sBAAKA,UAAU,kBAAf,UAKE,uBACA,wBAAQA,UAAU,qCAAqCqF,MAAO,CAAE8P,YAAa,QAAU7U,QAASF,KAAKgV,YAAY5V,KAAKY,MAAtH,+BACA,uBACCA,KAAKvC,MAAM2W,gBACV,qBAAKxU,UAAW+U,EAAYxO,GAAG,WAA/B,SACE,qBAAKvG,UAAU,wBAAf,SACE,sBAAKA,UAAU,gBAAf,UAEE,sBAAKA,UAAU,MAAf,UAEE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,aAAd,6BAGF,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,CAAM4E,SAAUxE,KAAKiU,UAAWxP,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAAxD,UAEE,qBAAK9E,UAAU,aAAf,SACE,eAAC,IAAD,CACEA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKoS,eACfjP,MAAOnD,KAAKvC,MAAM+U,OALpB,UAOE,wBAAQrP,MAAM,GAAd,wBAECnD,KAAKvC,MAAMuU,sBAAwBhS,KAAKvC,MAAMuU,qBAAqB9K,KAAI,SAAAsL,GAAM,OAE5E,wBAAQrP,MAAOqP,EAAO3T,GAAtB,SAA2B2T,EAAOtU,gBASxC,iCACG8B,KAAKvC,MAAMyW,oBACV,qBAAKtU,UAAU,OAAf,SACE,qBACEA,UACEI,KAAKvC,MAAM0W,sBACT,sBACA,qBAEJpU,KAAK,QANP,SAQE,mCAAOC,KAAKvC,MAAMyW,4BAM1B,cAAC,IAAD,CACEjP,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKX,SAAWW,eAY5B,qBAAK9E,UAAU,WAAf,SACE,cAAC,sBAAD,CACEqV,cAAc,GACdC,YAAY,IACZC,UAAU,OACVC,YAAa,GACbC,YAAY,OACZC,YAAY,8DACZC,YAAY,OACZ/Q,SAAUxE,KAAKiU,UACfuB,UAAWxV,KAAKjB,MAAMyW,UACtBvY,KAAM+C,KAAKvC,MAAMR,YAIvB,qBAAK2C,UAAU,eAAf,SACE,wBAAQ+E,KAAK,SAAS/E,UAAU,kBAAkB6V,eAAa,QAAQvV,QAASF,KAAK0V,aAAatW,KAAKY,MAAvG,4BAOTA,KAAKvC,MAAM6W,kBACV,qBAAK1U,UAAWiV,EAAhB,SACE,qBAAKjV,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,sBAAD,CACEqV,cAAc,GACdC,YAAY,IACZC,UAAU,OACVC,YAAa,GACbC,YAAY,OACZC,YAAY,IACZC,YAAY,OACZI,WAAW,EACXH,UAAWxV,KAAKjB,MAAMyW,UACtBI,cAAc,EAAM3Y,KAAM+C,KAAKvC,MAAMR,OAEvC,qBAAK2C,UAAU,eAAf,SACE,wBAAQ+E,KAAK,SAAS/E,UAAU,kBAAkB6V,eAAa,QAAQvV,QAASF,KAAK0V,aAAatW,KAAKY,MAAvG,4BAOTA,KAAKvC,MAAM4W,qBACV,qBAAKzU,UAAWgV,EAAhB,SACE,qBAAKhV,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,sBAAD,CACEqV,cAAc,GACdC,YAAY,GACZE,YAAa,GACbE,YAAY,IACZC,YAAY,OACZtY,KAAM+C,KAAKvC,MAAMR,KACjB4Y,eAAe,EACfL,UAAWxV,KAAKjB,MAAMyW,UACtBI,cAAc,IAEhB,qBAAKhW,UAAU,eAAf,SACE,wBAAQ+E,KAAK,SAAS/E,UAAU,kBAAkB6V,eAAa,QAAQvV,QAASF,KAAK0V,aAAatW,KAAKY,MAAvG,uC,GArZe8V,IAAM3V,WC1B9B4V,GAAQ,20yBCYAC,G,kDAEjB,WAAYjX,GAAQ,IAAD,8BACf,cAAMA,IACDkX,aAAe,EAAKA,aAAa7W,KAAlB,gBAGpB,EAAK3B,MAAQ,CACT+F,SAAS,EACTlE,QAAS,IAPE,E,gDAanB,SAAaoE,GAAI,IAAD,OACZA,EAAEE,iBAEF5D,KAAKf,SAAS,CACVK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,EACT0S,WAAW,IAIf,IACM1X,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGhB2X,EADY/Y,KAAKqB,MAAMvB,aAAawB,QAAQ,mBAClBzB,KAC1BmZ,EAAWD,EAAcC,SAEzBjT,EAAQnD,KAAKvC,MAAMS,MAKnB6H,EACN,CACIuF,mBAAoB6K,EAActX,GAClCgF,KAEI,CACI,CACIuS,WACAjT,MAAOA,KAQvBkG,QAAQC,IAAIvD,GAEZnJ,IAAMC,KAAK,+DAAgEkJ,EACvE,CACIjJ,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,OAG7D,EAAKgC,SAAS,CACVK,QAASE,EAAIvC,KAAKkR,OAClB5B,YAAY,EACZ/I,SAAS,EACT0S,WAAW,IAGf7M,QAAQC,IAAI9J,GACZ6J,QAAQC,IAAI9J,EAAIvC,KAAKkR,WAIrB,SAAA/J,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACxB/J,EAAM9E,SACN8E,EAAMG,WAEV,EAAKtF,SAAS,CACVsN,YAAY,EACZjN,QAAS+E,EACTb,SAAS,EACT0S,WAAW,S,+BAK/B,WACI,IAAKhZ,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,a,oBAI9B,WAEI,IAAK5C,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,MAG1B,IAAMuW,EAAiBjZ,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAGvD,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,0BAASkB,UAAU,kBAAnB,UACI,uBACA,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,MAAf,UAEI,qBAAKA,UAAU,WAAf,SAGI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,SAA4ByW,EAAezR,SAI/C,sBAAKhF,UAAU,YAAf,UACI,uBAEA,iCACI,qBAAKA,UAAU,MAAf,SACKyW,EAAehJ,OAAOnG,KAAI,SAAAmG,GAAM,OAE7B,sBAAKzN,UAAU,QAAf,UACI,uBAAO+E,KAAK,OAAO/E,UAAU,wBAAwBiF,YAAawI,EAAOzI,KAAMI,UAAQ,EAACmB,GAAG,iBAD/F,mDACgK,+BAKvKkQ,EAAe9I,eAAerG,KAAI,SAAA2H,GAAW,OACtC,gCACI,oBAAIjP,UAAU,GAAd,SAAkBiP,EAAYjK,OAC9B,qBAAKhF,UAAU,MAAf,SACKiP,EAAYxB,OAAOnG,KAAI,SAAA6L,GAAiB,OACrC,sBAAKnT,UAAU,QAAf,UACI,uBAAO+E,KAAK,OAAO/E,UAAU,wBAAwBiF,YAAakO,EAAkBnO,KAAMI,UAAQ,IADtG,mDAC0J,wCAQlL,+BAeZ,sBAAKpF,UAAU,WAAf,UAGI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,iBAIJ,sBAAKA,UAAU,YAAf,UACI,uBAEI,cAAC,oBAAD,IACA,cAAC,GAAD,CAAS4V,UAAWA,IAKxB,6BAQZ,kCAWZ,cAAC,EAAD,W,GArN0BrV,a,oBCDrBmW,G,kDAEjB,WAAYvX,GAAQ,IAAD,8BACf,cAAMA,IAcVwX,gBAAkB,SAAC7S,GACf,IAAM8S,EAAe9S,EAAE+S,SACjBC,EAASF,EAAe,EAAK/Y,MAAMkZ,QACzC,EAAK1X,SAAS,CACV2X,YAAaJ,EACbE,OAAQA,IACT,WACC,EAAKG,mBApBT,EAAKN,gBAAkB,EAAKA,gBAAgBnX,KAArB,gBAEvB,EAAK3B,MAAQ,CACTiZ,OAAQ,EACRI,UAAW,GACXC,aAAc,GACdJ,QAAS,GACTC,YAAa,EACb1V,WAAW,GAVA,E,gDA2BnB,WACI,IAAMjE,EAAO+C,KAAKvC,MAAMsZ,aAElBC,EAAQ/Z,EAAK+Z,MAAMhX,KAAKvC,MAAMiZ,OAAQ1W,KAAKvC,MAAMiZ,OAAS1W,KAAKvC,MAAMkZ,SAC3E3W,KAAKf,SAAS,CACVgY,UAAWjL,KAAKkL,KAAKja,EAAKyC,OAASM,KAAKvC,MAAMkZ,SAC9CG,UAAWE,M,+BAKnB,WACI,IAAK9Z,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAS1BE,KAAKmX,mB,4BAIT,WAAkB,IAAD,OAEP3Y,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAN,0DACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAK3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUmC,EAAIvC,OAEjE,IAAMma,EAAQ5X,EAAIvC,KAGZ+Z,EAAQI,EAAMJ,MAAM,EAAKvZ,MAAMiZ,OAAQ,EAAKjZ,MAAMiZ,OAAS,EAAKjZ,MAAMkZ,SAC5E,EAAK1X,SAAS,CACVgY,UAAWjL,KAAKkL,KAAKE,EAAM1X,OAAS,EAAKjC,MAAMkZ,SAC/CI,aAAcK,EACdC,kBAAmBL,EACnB9V,WAAW,S,oBAM3B,WAEI,OAAKhE,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACA,uBACI,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SACCI,KAAKvC,MAAMyD,UACZ,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAG5C,sBAAKrH,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,8BAGJ,qBAAKA,UAAU,YAAf,SACI,sBAAKuG,GAAG,mBAAmBvG,UAAU,mCAArC,UAAwE,qBAAKA,UAAU,MAAf,SAAqB,qBAAKA,UAAU,yBAErG,qBAAKA,UAAU,MAAf,SAAqB,sBAAKA,UAAU,YAAf,UAA2B,wBAAOuG,GAAG,WAAWvG,UAAU,0DAA0DG,KAAK,OAAOuX,mBAAiB,gBAAtH,UACnD,gCACI,qBAAIvX,KAAK,MAAT,UACA,oBAAIH,UAAU,UAAU2X,SAAU,EAAGC,gBAAc,WAAWC,QAAS,EAAGC,QAAS,EAAGpR,aAAW,6CAAjG,oBACA,oBAAI1G,UAAU,UAAU2X,SAAU,EAAGC,gBAAc,WAAWC,QAAS,EAAGC,QAAS,EAAGpR,aAAW,iDAAjG,uBACA,oBAAI1G,UAAU,UAAU2X,SAAU,EAAGC,gBAAc,WAAWC,QAAS,EAAGC,QAAS,EAAGpR,aAAW,oDAAjG,wBACA,oBAAI1G,UAAU,sBAAsB2X,SAAU,EAAGC,gBAAc,WAA/D,yBAIJ,uBAAO5X,UAAU,aAAjB,SACKI,KAAKvC,MAAM4Z,mBAAqBrX,KAAKvC,MAAM4Z,kBAAkBnQ,KAAI,SAAAsL,GAAM,OAEpE,+BACI,6BAAKA,EAAOpE,eACZ,6BACCoE,EAAOmF,YAIR,6BACKnF,EAAOoF,YAAY1Q,KAAI,SAAAvI,GAAQ,OAC/B,6BACCA,EAASiG,YAKf,qBAAIhF,UAAU,6BAAd,UAChB,eAAC,IAAD,CAAMA,UAAU,yBAAyBE,GAAG,IAA5C,UACI,mBAAGF,UAAU,kBADjB,UADgB,sBAcZ,6BAKJ,cAAC,KAAD,CACQiY,cAAe,OACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBf,UAAWjX,KAAKvC,MAAMwZ,UACtBgB,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAcnY,KAAKuW,gBACnB6B,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,mCAoBrD,cAAC,EAAD,OA1GI,cAAC,IAAD,CAAUxY,GAAI,U,GA5FSK,a,oBCArBoY,G,kDAElB,WAAYxZ,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT+a,SAAS,IAJE,E,qDAYnB,WACS,IAAKtb,aAAawB,QAAQ,wBAC3B,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IAAM0Y,EAAWpb,KAAKqB,MAAMvB,aAAawB,QAAQ,iBACjDsB,KAAKf,SAAS,CAEZuZ,SAAUA,EAASvb,S,oBAK3B,WAEI,OAAKC,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACI,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,8BAGJ,sBAAKA,UAAU,YAAf,UAEI,wBAAOuG,GAAG,MAAMrD,MAAM,QAAtB,UACI,gCACI,+BACI,yCACA,sCAFJ,+DAE6E,uBAEzE,8CAKR,gCACK9C,KAAKvC,MAAM+a,UAAYxY,KAAKvC,MAAM+a,SAAStR,KAAI,SAAAvI,GAAQ,OAEpD,+BACI,+BAEI,kCAAKA,EAAiC,QAAxBA,EAASgQ,cAAsB,MAE5ChQ,EAAS0O,OAAOnG,KAAI,SAAAuR,GAAQ,OACzB,gCACJ,uBAEKA,EAAiC,QAAxBA,EAAS9J,cAAsB,YAKjD,+BACI,4BAAIhQ,EAASiG,OAEb,uBACCjG,EAAS0O,OAAOnG,KAAI,SAAAqB,GAAK,OAChC,sBAAKtD,MAAO,CAAEyT,WAAY,WAA1B,UAEO,uBACKnQ,EAAM3D,cAOhB,uBACA,+BACA,uBAEKjG,EAAS0O,OAAOnG,KAAI,SAAAyR,GAAM,OACvB,gCACP,uBAEYA,EAAOC,yBAIpB,kCAWhB,8BACI,cAAC,KAAD,CACIhZ,UAAU,eACViZ,MAAM,MACNC,SAAS,eACTC,MAAM,QACNC,WAAW,oCAkB/C,cAAC,EAAD,OAjHI,cAAC,IAAD,CAAUlZ,GAAI,U,GA7BUK,aC6BvB8Y,G,kDAEhB,WAAYla,GAAQ,IAAD,8BACd,cAAMA,IACDmQ,eAAiB,EAAKA,eAAe9P,KAApB,gBACtB,EAAK+P,kBAAoB,EAAKA,kBAAkB/P,KAAvB,gBACzB,EAAKgQ,iBAAmB,EAAKA,iBAAiBhQ,KAAtB,gBACxB,EAAK8Z,gBAAkB,EAAKA,gBAAgB9Z,KAArB,gBACvB,EAAKiQ,WAAa,EAAKA,WAAWjQ,KAAhB,gBAClB,EAAKuJ,cAAgB,EAAKA,cAAcvJ,KAAnB,gBACrB,EAAKkE,iBAAmB,EAAKA,iBAAiBlE,KAAtB,gBACxB,EAAKkQ,cAAgB,EAAKA,cAAclQ,KAAnB,gBACrB,EAAKmE,iBAAmB,EAAKA,iBAAiBnE,KAAtB,gBACxB,EAAK+Z,YAAc,EAAKA,YAAY/Z,KAAjB,gBACnB,EAAKmQ,oBAAsB,EAAKA,oBAAoBnQ,KAAzB,gBAI3B,EAAK3B,MAAQ,CACRf,SAAU,GACVC,SAAU,GACVW,WAAY,GACZC,UAAW,GACX6b,QAAS,GACT5b,IAAK,GACLC,MAAO,GACP4b,IAAK,GACL3b,MAAO,GACPC,aAAc,GACd4O,YAAY,EACZjN,QAAS,GACTkE,SAAS,GA7BA,E,qDAmCnB,WACK,IAAKtG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,a,+BAKhC,SAAkB4D,GACb1D,KAAKf,SAAS,CACT3B,WAAYoG,EAAEC,OAAOR,U,8BAG/B,SAAiBO,GACZ1D,KAAKf,SAAS,CACT1B,UAAWmG,EAAEC,OAAOR,U,6BAG9B,SAAgBO,GACX1D,KAAKf,SAAS,CACTma,QAAS1V,EAAEC,OAAOR,U,wBAG5B,SAAWO,GACN1D,KAAKf,SAAS,CACTzB,IAAKkG,EAAEC,OAAOR,U,2BAGxB,SAAcO,GACT1D,KAAKf,SAAS,CACTxB,MAAOiG,EAAEC,OAAOR,U,8BAI1B,SAAiBO,GACZ1D,KAAKf,SAAS,CACTvC,SAAUgH,EAAEC,OAAOR,U,2BAI7B,SAAcO,GACT1D,KAAKf,SAAS,CACTvB,MAAOgG,EAAEC,OAAOR,U,8BAI1B,SAAiBO,GACZ1D,KAAKf,SAAS,CACTtC,SAAU+G,EAAEC,OAAOR,U,yBAG7B,SAAYO,GACP1D,KAAKf,SAAS,CACToa,IAAK3V,EAAEC,OAAOR,U,iCAGxB,SAAoBO,GACf1D,KAAKf,SAAS,CACTtB,aAAc+F,EAAEC,OAAOR,U,4BAIjC,SAAeO,GAAI,IAAD,OACbA,EAAEE,iBACF5D,KAAKf,SAAS,CACTK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEdxD,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,QAC7BwE,EAAYmM,cACPrQ,KAAKvC,MAAMf,SACXsD,KAAKvC,MAAMd,SACXqD,KAAKvC,MAAMH,WACX0C,KAAKvC,MAAMF,UACXyC,KAAKvC,MAAM2b,QACXpZ,KAAKvC,MAAMD,IACXwC,KAAKvC,MAAMA,MACXuC,KAAKvC,MAAM4b,IACXrZ,KAAKvC,MAAMC,MACXsC,KAAKvC,MAAME,cAEdZ,MACG,SAAAC,GACK,EAAKiC,SAAS,CACTK,QAAStC,EAASC,KAAKqC,QACvBiN,YAAY,OAGtB,SAAAnI,GACK,IAAMC,EACAD,EAAMpH,UACFoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACzB/J,EAAM9E,SACN8E,EAAMG,WAEX,EAAKtF,SAAS,CACTsN,YAAY,EACZjN,QAAS+E,S,oBAMlC,WAKK,OACK,gCACK,cAAC,EAAD,IAEA,sBAAKzE,UAAU,kBAAf,UACK,cAAC,EAAD,IACA,uBACA,yBAASA,UAAU,UAAnB,SACK,qBAAKA,UAAU,kBAAf,SACK,sBAAKA,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SAEK,qBAAKA,UAAU,iCAAf,SACK,sBAAKA,UAAU,wBAAf,UACK,qBAAKA,UAAU,cAAf,SACK,qBAAKA,UAAU,wCAAwC4C,IAAI,mCAAmCG,IAAI,OAEvG,oBAAI/C,UAAU,+BAAd,+BACA,mBAAGA,UAAU,yBAAb,+BAEA,sBAAKA,UAAU,YAAf,UAA2B,mCAAQ,mBAAGA,UAAU,qBAArB,gBAA6D,mBAAGA,UAAU,aAAb,oFAAoG,uBAAM,mCAAQ,mBAAGA,UAAU,+BAArB,eAAsE,mBAAGA,UAAU,aAAb,gCAAgD,uBAAM,mCAAQ,mBAAGA,UAAU,2BAArB,aAAgE,oBAAGA,UAAU,aAAb,UAA0B,sBAAMA,UAAU,iBAAhB,uBAAiD,sBAAMA,UAAU,kBAAhB,oBAA+C,sBAAMA,UAAU,eAAhB,wBAAgD,sBAAMA,UAAU,kBAAhB,iBAA4C,sBAAMA,UAAU,kBAAhB,wBAAoD,uBACnoB,mCAAQ,mBAAGA,UAAU,yBAArB,YACA,mBAAGA,UAAU,aAAb,4GASpB,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,OAAf,UACK,qBAAKA,UAAU,kBAAf,SACK,qBAAIA,UAAU,gBAAd,UACK,oBAAIA,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,6BAA6BiD,KAAK,YAAYuD,cAAY,MAA1E,wBACzB,oBAAIxG,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,WAAWiD,KAAK,YAAYuD,cAAY,MAAxD,wBACzB,oBAAIxG,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,WAAWiD,KAAK,YAAYuD,cAAY,MAAxD,6BAGnC,qBAAKxG,UAAU,YAAf,SACK,sBAAKA,UAAU,cAAf,UACK,sBAAKA,UAAU,kBAAkBuG,GAAG,WAApC,UAEK,qBAAKvG,UAAU,OAAf,SAGK,yiBAeL,qBAAKA,UAAU,qBASpB,qBAAKA,UAAU,WAAWuG,GAAG,WAA7B,SAEK,sBAAKvG,UAAU,4BAAf,UAEK,qBAAKA,UAAU,aAAf,SACK,sBAAMA,UAAU,YAAhB,4BAML,gCACK,mBAAGA,UAAU,+BACb,sBAAKA,UAAU,gBAAf,UACK,uBAAMA,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,iBAApC,YACA,qBAAIA,UAAU,kBAAd,UAAgC,cAAC,IAAD,CAAMiD,KAAK,IAAX,0BAAhC,wBACA,qBAAKjD,UAAU,gBAAf,uPAMA,sBAAKA,UAAU,kBAAf,UACK,cAAC,IAAD,CAAMiD,KAAK,IAAIjD,UAAU,yBAAzB,uBACA,cAAC,IAAD,CAAMiD,KAAK,IAAIjD,UAAU,wBAAzB,6BAMf,gCACK,mBAAGA,UAAU,wBACb,sBAAKA,UAAU,gBAAf,UACK,uBAAMA,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,iBAApC,iBACA,qBAAIA,UAAU,2BAAd,UAAyC,cAAC,IAAD,CAAMiD,KAAK,IAAX,yBAAzC,yCAMV,gCACK,mBAAGjD,UAAU,+BACb,sBAAKA,UAAU,gBAAf,UACK,uBAAMA,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,iBAApC,kBACA,qBAAIA,UAAU,kBAAd,UAAgC,cAAC,IAAD,CAAMiD,KAAK,IAAX,uBAAhC,6BACA,qBAAKjD,UAAU,gBAAf,8HAKA,qBAAKA,UAAU,kBAAf,SACK,cAAC,IAAD,CAAMiD,KAAK,IAAIjD,UAAU,kCAAzB,kCAMf,qBAAKA,UAAU,aAAf,SACK,sBAAMA,UAAU,aAAhB,2BAML,gCACK,mBAAGA,UAAU,4BACb,sBAAKA,UAAU,gBAAf,UACK,uBAAMA,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,iBAApC,iBACA,qBAAIA,UAAU,kBAAd,UAAgC,cAAC,IAAD,CAAMiD,KAAK,IAAX,sBAAhC,0BACA,sBAAKjD,UAAU,gBAAf,UACK,qBAAK4C,IAAI,+BAA+BG,IAAI,QAC5C,qBAAKH,IAAI,+BAA+BG,IAAI,QAC5C,qBAAKH,IAAI,+BAA+BG,IAAI,QAC5C,qBAAKH,IAAI,+BAA+BG,IAAI,iBAK3D,8BACK,mBAAG/C,UAAU,gCAK5B,qBAAKA,UAAU,WAAWuG,GAAG,WAA7B,SACK,uBAAMvG,UAAU,kBAAhB,UACK,sBAAKA,UAAU,iBAAf,UACK,uBAAO0Z,QAAQ,YAAY1Z,UAAU,0BAArC,kBACA,qBAAKA,UAAU,YAAf,SACK,uBAAO+E,KAAK,QAAQ/E,UAAU,eAAeuG,GAAG,YAAYtB,YAAY,cAGlF,sBAAKjF,UAAU,iBAAf,UACK,uBAAO0Z,QAAQ,aAAa1Z,UAAU,0BAAtC,mBACA,qBAAKA,UAAU,YAAf,SACK,uBAAO+E,KAAK,QAAQ/E,UAAU,eAAeuG,GAAG,aAAatB,YAAY,eAGnF,sBAAKjF,UAAU,iBAAf,UACK,uBAAO0Z,QAAQ,aAAa1Z,UAAU,0BAAtC,kBACA,qBAAKA,UAAU,YAAf,SACK,uBAAO+E,KAAK,OAAO/E,UAAU,eAAeuG,GAAG,aAAatB,YAAY,cAGlF,sBAAKjF,UAAU,iBAAf,UACK,uBAAO0Z,QAAQ,kBAAkB1Z,UAAU,0BAA3C,wBACA,qBAAKA,UAAU,YAAf,SACK,0BAAUA,UAAU,eAAeuG,GAAG,kBAAkBtB,YAAY,aAAa0U,aAAc,UAGzG,sBAAK3Z,UAAU,iBAAf,UACK,uBAAO0Z,QAAQ,cAAc1Z,UAAU,0BAAvC,oBACA,qBAAKA,UAAU,YAAf,SACK,uBAAO+E,KAAK,OAAO/E,UAAU,eAAeuG,GAAG,cAActB,YAAY,gBAGnF,qBAAKjF,UAAU,iBAAf,SACK,qBAAKA,UAAU,wBAAf,SACK,qBAAKA,UAAU,WAAf,SACK,kCACK,uBAAO+E,KAAK,aADjB,mBAC8C,cAAC,IAAD,CAAM9B,KAAK,IAAX,2CAK7D,qBAAKjD,UAAU,iBAAf,SACK,qBAAKA,UAAU,wBAAf,SACK,wBAAQ+E,KAAK,SAAS/E,UAAU,iBAAhC,iDAoB5D,cAAC,EAAD,W,GA7WqBO,aC7BpBqZ,G,kDAEhB,WAAYza,GAAQ,IAAD,8BACd,cAAMA,IAcXwX,gBAAkB,SAAC7S,GACd,IAAM8S,EAAe9S,EAAE+S,SACjBC,EAASF,EAAe,EAAK/Y,MAAMkZ,QACzC,EAAK1X,SAAS,CACT2X,YAAaJ,EACbE,OAAQA,IACV,WACE,EAAKG,mBApBV,EAAKN,gBAAkB,EAAKA,gBAAgBnX,KAArB,gBAEvB,EAAK3B,MAAQ,CACRiZ,OAAQ,EACRI,UAAW,GACXC,aAAc,GACdJ,QAAS,GACTC,YAAa,EACb1V,WAAW,GAVF,E,gDA2BnB,WACK,IAAMjE,EAAO+C,KAAKvC,MAAMsZ,aAElBC,EAAQ/Z,EAAK+Z,MAAMhX,KAAKvC,MAAMiZ,OAAQ1W,KAAKvC,MAAMiZ,OAAS1W,KAAKvC,MAAMkZ,SAC3E3W,KAAKf,SAAS,CACTgY,UAAWjL,KAAKkL,KAAKja,EAAKyC,OAASM,KAAKvC,MAAMkZ,SAC9CG,UAAWE,M,+BAKrB,WAEK,IAAK9Z,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE3B,IAAM2Z,EAAkBpU,SAASC,cAAc,UAC/CmU,EAAgBjX,IAAM,4DACtBiX,EAAgB3T,OAAQ,EACxBT,SAASU,KAAKC,YAAYyT,GAG1BzZ,KAAKmX,mB,4BAIV,WAAkB,IAAD,OAEN3Y,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAEtB5B,IAAM2C,IAAN,wDACK,CACKzC,QACA,CACK,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAQ7CzB,MAAK,SAAAyC,GACGA,EAAIvC,MACHC,aAAaC,QAAQ,4BAA6BC,KAAKC,UAAUmC,EAAIvC,OAE1E,IAAMma,EAAQ5X,EAAIvC,KAGZ+Z,EAAQI,EAAMJ,MAAM,EAAKvZ,MAAMiZ,OAAQ,EAAKjZ,MAAMiZ,OAAS,EAAKjZ,MAAMkZ,SAC5E,EAAK1X,SAAS,CACTgY,UAAWjL,KAAKkL,KAAKE,EAAM1X,OAAS,EAAKjC,MAAMkZ,SAC/CI,aAAcK,EACdoC,eAAgBxC,EAChB9V,WAAW,S,oBAM/B,WAEK,OAAKhE,aAAawB,QAAQ,wBAKrB,gCACK,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACK,uBACA,yBAASA,UAAU,UAAnB,SACK,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,uBACA,qBAAKA,UAAU,aAAf,SACK,sBAAKA,UAAU,6BAA6BqF,MAAO,CAAEsC,MAAO,KAA5D,UACK,uBAAO5C,KAAK,OAAOC,KAAK,eAAehF,UAAU,2BAA2BiF,YAAY,WACxF,qBAAKjF,UAAU,qBAAf,SACK,wBAAQ+E,KAAK,SAAS/E,UAAU,kBAAhC,SACK,mBAAGA,UAAU,8BAOtC,qBAAKA,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACK,oCACA,sCACA,sCACA,wCACA,6CAGV,gCACK,+BACK,qCACA,0CACA,2CACA,6BAAI,sBAAMA,UAAU,kBAAhB,wBACJ,oIAyBjE,cAAC,EAAD,OAhFG,cAAC,IAAD,CAAUE,GAAI,U,GAhGOK,aCwBtC+C,GAAW,SAAAC,GACb,IAAKA,EACD,OACI,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAMN2Z,GAAS,CACX,OAAU,CACN,CAAEvT,GAAI,GAAIwT,KAAM,cAChB,CAAExT,GAAI,KAAMwT,KAAM,MAClB,CAAExT,GAAI,KAAMwT,KAAM,MAClB,CAAExT,GAAI,KAAMwT,KAAM,MAClB,CAAExT,GAAI,KAAMwT,KAAM,OAEtB,SAAY,CACR,CAAExT,GAAI,GAAIwT,KAAM,cAChB,CAAExT,GAAI,OAAQwT,KAAM,QACpB,CAAExT,GAAI,OAAQwT,KAAM,UAGPC,G,kDAEjB,WAAY7a,GAAQ,IAAD,8BACf,cAAMA,IAsCV+F,SAAW,YAA4B,IAAf3B,EAAc,EAAxBQ,OAAUR,MACpB,EAAKlE,SAAS,CAAE4a,UAAW1W,KAtC3B,EAAK2W,cAAgB,EAAKA,cAAc1a,KAAnB,gBACrB,EAAK2a,gBAAkB,EAAKA,gBAAgB3a,KAArB,gBACvB,EAAK4a,eAAiB,EAAKA,eAAe5a,KAApB,gBACtB,EAAK6a,mBAAqB,EAAKA,mBAAmB7a,KAAxB,gBAC1B,EAAK8a,kBAAoB,EAAKA,kBAAkB9a,KAAvB,gBACzB,EAAK+a,gBAAkB,EAAKA,gBAAgB/a,KAArB,gBACvB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBACpB,EAAKuJ,cAAgB,EAAKA,cAAcvJ,KAAnB,gBACrB,EAAKib,aAAe,EAAKA,aAAajb,KAAlB,gBACpB,EAAK+S,YAAc,EAAKA,YAAY/S,KAAjB,gBACnB,EAAKkb,iBAAmB,EAAKA,iBAAiBlb,KAAtB,gBAExB,EAAK3B,MAAQ,CACTS,MAAO,GACPoQ,QAAS,GACTjQ,OAAQ,GACRkQ,KAAM,GACNnF,YAAa,GACb9K,WAAY,GACZC,SAAU,GACViF,SAAS,EACTlE,QAAS,GACToQ,OAAQ,GACR6K,KAAM,GACNrZ,WAAW,EACX4H,WAAW,EACXC,SAAS,EACTC,WAAW,EACXkL,mBAAoB,GACpBC,uBAAuB,EACvBvI,oBAAoB,EACpBiO,UAAW,YAjCA,E,iDA4CnB,SAAcnW,GACV1D,KAAKf,SAAS,CACVf,MAAOwF,EAAEC,OAAOR,U,6BAIxB,SAAgBO,GACZ1D,KAAKf,SAAS,CACVqP,QAAS5K,EAAEC,OAAOR,U,0BAI1B,SAAaO,GACT1D,KAAKf,SAAS,CACVsP,KAAM7K,EAAEC,OAAOR,U,+BAGvB,SAAkBO,GACd1D,KAAKf,SAAS,CACVX,WAAYoF,EAAEC,OAAOR,U,6BAG7B,SAAgBO,GACZ1D,KAAKf,SAAS,CACVV,SAAUmF,EAAEC,OAAOR,U,gCAG3B,SAAmBO,GACf1D,KAAKf,SAAS,CACVmK,YAAa1F,EAAEC,OAAOR,U,4BAI9B,SAAeO,GACX1D,KAAKf,SAAS,CACVZ,OAAQqF,EAAEC,OAAOR,U,2BAIzB,SAAcO,GACV1D,KAAKf,SAAS,CACVyQ,OAAQhM,EAAEC,OAAOR,U,0BAGzB,SAAaO,GACT1D,KAAKf,SAAS,CACVsb,KAAM7W,EAAEC,OAAOR,U,8BAGvB,SAAiBO,GACb1D,KAAKf,SAAS,CACVub,SAAU9W,EAAEC,OAAOR,U,yBAM3B,SAAYO,GAAI,IAAD,OACXA,EAAEE,iBAEF5D,KAAKf,SAAS,CACViV,mBAAoB,GACpBC,uBAAuB,EACvBvI,oBAAoB,IAKxB,IACMpN,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAKhBic,EADsBvd,aAAawB,QAAQ,iBAK3Cgc,EADoBxd,aAAawB,QAAQ,eAI3CX,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAAS+B,KAAKvC,MAAMS,OACpCH,EAASE,OAAO,UAAW+B,KAAKvC,MAAM6Q,SACtCvQ,EAASE,OAAO,OAAQ+B,KAAKvC,MAAM8Q,MACnCxQ,EAASE,OAAO,cAAe+B,KAAKvC,MAAM2L,aAC1CrL,EAASE,OAAO,aAAc+B,KAAKvC,MAAMa,YACzCP,EAASE,OAAO,WAAY+B,KAAKvC,MAAMc,UACvCR,EAASE,OAAO,SAAUwc,GAC1B1c,EAASE,OAAO,OAAQyc,GAExB1a,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAE9B9C,IAAMC,KAAK,0DACPkB,EACA,CACIjB,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACViV,mBAAoB1U,EAAIvC,KAAKkR,OAC7B7O,QAASE,EAAIvC,KAAKkR,OAClBgG,uBAAuB,IAKvB3U,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,UAG7D,SAAAmH,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACxB/J,EAAMwH,oBACNxH,EAAMG,WAEV,EAAKtF,SAAS,CACV2M,oBAAoB,EACpBtM,QAAS+E,OAKzBrE,KAAKf,SAAS,CACV2M,oBAAoB,M,+BAMhC,WAEI,IAAM+O,EAActV,SAASC,cAAc,UAM3C,GALAqV,EAAYnY,IAAM,2CAElBmY,EAAY7U,OAAQ,EACpBT,SAASU,KAAKC,YAAY2U,IAErBzd,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAI1B5C,aAAaC,QAAQ,gBADC,GAItBD,aAAaC,QAAQ,cADD,GAGpB,IAAMM,EAAQ,iBAGRe,EAFOoI,EAAYC,iBAENrI,MACnB5B,IAAM2C,IAAN,0DACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAAOA,KAIdV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,UAKrEL,IAAM2C,IAAN,wDACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAAOA,KAIdV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,UAKnEL,IAAM2C,IAAN,gEACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAAOA,KAIdV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUmC,EAAIvC,Y,gCAOtE,SAAmBgT,EAAWC,GAG1BhT,aAAaC,QAAQ,gBADC,GAGtBD,aAAaC,QAAQ,cADD,GAGpB,IACI,GAAI+S,EAAU9G,cAAgBpJ,KAAKvC,MAAM2L,YAAa,CAClD,IAAM3L,EAAQuC,KAAKvC,MAAM2L,YACrB3L,GACAuC,KAAKf,SAAS,CACV6J,UAAWrL,EAAM6D,SAAS,MAC1ByH,QAAStL,EAAM6D,SAAS,MACxB0H,UAAWvL,EAAM6D,SAAS,YAKxC,MAAOoC,GAEL2F,QAAQC,IAAI5F,M,oBAKpB,WAAU,IAAD,OAGL,IAAKxG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IAAM4J,EAAiBtM,KAAKqB,MAAMvB,aAAawB,QAAQ,kBAEjDkc,GADexd,KAAKqB,MAAMvB,aAAawB,QAAQ,gBAClCtB,KAAKqB,MAAMvB,aAAawB,QAAQ,gBAR9C,EAU0BsB,KAAKvC,MAA5BqL,EAVH,EAUGA,UAAWC,EAVd,EAUcA,QAGb8R,EAAUnB,GAAO1Z,KAAKvC,MAAMoc,WAGlC,OACI,gCACI,cAAC,EAAD,IACA,sBAAKja,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACI,cAAC,EAAD,IAAQ,uBAaR,yBAAS7N,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,YAAf,SAII,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,6BAEJ,qBAAKA,UAAU,YAAf,SAEI,eAAC,IAAD,CAAM4E,SAAUxE,KAAKmS,YAAa1N,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAA1D,WACM1E,KAAKvC,MAAM0W,uBACT,gCACI,sBAAKvU,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,oDACA,cAAC,IAAD,CAAO+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EACpD1B,MAAOnD,KAAKvC,MAAMS,MAClB4G,SAAU9E,KAAK8Z,cACf/U,YAAa,CAAC7B,WAK1B,qBAAKtD,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,4CACA,eAAC,IAAD,CAAQA,UAAU,gBAAgBiF,aAAW,EACzC1B,MAAOnD,KAAKvC,MAAMoc,UAClB/U,SAAU9E,KAAK8E,SACfC,YAAa,CAAC7B,IAHlB,UAKI,wBAAQC,MAAM,WAAd,uBACA,wBAAQA,MAAM,SAAd,4BAOZ,qBAAKvD,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,6CAEA,cAAC,IAAD,CAAQA,UAAU,eACduD,MAAOnD,KAAKvC,MAAM6Q,QAClBxJ,SAAU9E,KAAK+Z,gBACfhV,YAAa,CAAC7B,IAHlB,SAUK2X,EAAQ3T,KAAI,SAAA4T,GAAC,OAAI,wBAAmB3X,MAAO2X,EAAE3U,GAA5B,SAAiC2U,EAAEnB,MAAtBmB,EAAE3U,iBAMjD,sBAAKvG,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,0CACA,cAAC,IAAD,CAAO+E,KAAK,SAAS/E,UAAU,gBAAgBiF,aAAW,EACtD1B,MAAOnD,KAAKvC,MAAM8Q,KAClBzJ,SAAU9E,KAAKoa,aACfrV,YAAa,CAAC7B,IACdiF,IAAI,OACJ2D,IAAI,cAIhB,sBAAKlM,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,gDACA,cAAC,IAAD,CAAO+E,KAAK,OAAOoW,OAAO,aAAanb,UAAU,gBAAgBiF,aAAW,EACxE1B,MAAOnD,KAAKvC,MAAMa,WAClBwG,SAAU9E,KAAKka,kBACfnV,YAAa,CAAC7B,WAI1B,qBAAKtD,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,8CACA,cAAC,IAAD,CAAO+E,KAAK,OAAOoW,OAAO,aAAanb,UAAU,gBAAgBiF,aAAW,EACxE1B,MAAOnD,KAAKvC,MAAMc,SAClBuG,SAAU9E,KAAKma,gBACfpV,YAAa,CAAC7B,cAK9B,qBAAKtD,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,iDACA,eAAC,IAAD,CAAQ+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EACrDE,YAAa,CAAC7B,IACdC,MAAOnD,KAAKvC,MAAM2L,YAClBtE,SAAU9E,KAAKia,mBAHnB,UAKI,wBAAQ9W,MAAM,GAAd,oBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,QAAd,8BAOf2F,GACG,qBAAKlJ,UAAU,kBAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCAEI,+BACI,uCAEA,4CACP,cAAC,IAAD,CACeob,WAAW,0BACXC,KAAK,cACLC,gBAAiB,SAACC,GAEd,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,gBAAiBgU,IAK1CkK,aAAc,SAACF,GAGX,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,gBAAiBgU,IAG1CmK,eAAgB,SAACH,GAEb,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAIhDjG,aAAaC,QAAQ,gBAAiBgU,cAW1D,uBAAOvR,UAAU,aAAjB,SACK8J,EAAexC,KAAI,SAACzJ,EAAO2J,GAAR,OAEhB,+BACI,6BAAK3J,EAAMS,QACX,6BACI,uBACIyG,KAAK,WACL/E,UAAU,kBACVuD,MAAK,UAAK1F,EAAMoB,IAEhBkG,YAAa,CAAC7B,qBAY7C6F,GACG,qBAAKnJ,UAAU,kBAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,qCAEA,4CACP,cAAC,IAAD,CACeob,WAAW,0BACXC,KAAK,cACLC,gBAAiB,SAACC,GAEd,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,IAKxCkK,aAAc,SAACF,GAGX,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,IAGxCmK,eAAgB,SAACH,GAEb,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,cAUxD,uBAAOvR,UAAU,aAAjB,SACKgb,GAAcA,EAAW1T,KAAI,SAAA1J,GAAG,OAE7B,+BACI,qBAAIyH,MAAO,CAAE8G,MAAO,QAAS2M,WAAY,QAAzC,UAAoDlb,EAAIU,MAAxD,OACA,uBACCV,EAAI+d,UAAY/d,EAAI+d,SAASrU,KAAI,SAAAqT,GAAI,OAClC,+BACI,6BAAKA,EAAKrc,QACV,6BACI,uBACIyG,KAAK,WACL/E,UAAU,kBACVuD,MAAK,UAAKoX,EAAK1b,IACfkG,YAAa,CAAC7B,2BAuB9C,qBAAKtD,UAAU,MAAf,SACA,iCAEI,yBACIoF,SAAUhF,KAAKvC,MAAMmO,mBACrBhM,UAAU,+BAFd,UAMKI,KAAKvC,MAAMmO,oBACR,sBAAMhM,UAAU,iCAPxB,0BAkBpB,iCACKI,KAAKvC,MAAM6B,SACR,sBAAKM,UAAU,aAAf,UACI,qBACIA,UACII,KAAKvC,MAAM0W,sBAAwB,sBAAwB,qBAE/DpU,KAAK,QAJT,SAOKC,KAAKvC,MAAM6B,UAEfU,KAAKvC,MAAM0W,uBACZ,cAAC,IAAD,CACIvU,UAAU,kBACXE,GAAK,qBAFR,2BA+DZ,cAAC,IAAD,CACImF,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACD,EAAKX,SAAWW,wBAiBxD,cAAC,EAAD,W,GA/tBoBvE,aChDfqb,G,kDAEjB,WAAYzc,GAAQ,IAAD,8BACf,cAAMA,IACDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACX5B,QAAS,GACT2T,QAAS,IANE,E,qDASnB,WAAqB,IAAD,OAChB,IAAK/V,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,wDACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUmC,EAAIvC,OAI1D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,0BAM7B,SAAa8Q,GAGT/V,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU4V,IACpD,IACMzU,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAChBuQ,EAAiBkE,EAAQpU,GAC/BwK,QAAQC,IAAI2J,EAAQpU,IAOpBjC,IAAM2C,IAAN,oEAAuEwP,EAAvE,KACI,CACIjS,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAI3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,OAE7DoM,QAAQC,IAAI9J,EAAIvC,W,oBAQ5B,WAEI,OAAKC,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACT,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKpB,qBAAKA,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACK,oCACA,sCACA,sCACA,wCACA,6CAGV,gCACK,+BACK,qCACA,0CACA,2CACA,6BAAI,sBAAMA,UAAU,kBAAhB,wBACjB,qBAAIA,UAAU,GAAd,UACI,cAAC,IAAD,CAAMA,UAAU,0BAA0BE,GAAG,IAA7C,qBADJ,WAMpB,cAAC,IAAD,CAAMF,UAAU,yBAAyBE,GAAG,IAA5C,oBANoB,0CAqCxD,cAAC,EAAD,OAtFI,cAAC,IAAD,CAAUA,GAAI,U,GAnFYK,aCgBzBsb,G,kDAEjB,WAAY1c,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,GACT2I,kBAAkB,GAClBC,QAAQ,GACRC,OAAO,IAbI,E,mDAiBnB,SAAgBpY,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAGvB,SAAeO,GACd1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAEhB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MAEtB5B,IAAM2C,IAAI,4FACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUmC,EAAIvC,OAI1D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,2BAO7B,SAAcqQ,GAAQ,IAAD,OAEXuJ,EAAWvJ,EAAO3T,GAExB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmV,EAAO3T,KAC/D,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8Dwc,EAA9D,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,iBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAGhE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,Y,oBAQrC,WAAU,IAAD,OAEL,OAAKC,aAAawB,QAAQ,wBAMtB,gCACoB,cAAC,EAAD,IAEhB,cAAC,EAAD,IAEA,sBAAKkB,UAAU,kBAAf,UAES,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SAEc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UAEF,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCAEA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UAEZ,oBAAI1O,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QACrBtD,QAAS,EAAK8b,cAAc5c,KAAK,EAAMoT,GAH3C,mDAsC3E,cAAC,EAAD,OA5GI,cAAC,IAAD,CAAU1S,GAAI,U,GAvGSK,aCXrC+C,GAAW,SAACC,GACd,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAQOkc,G,kDAEjB,WAAYld,GAAQ,IAAD,8BACf,cAAMA,IAEDmd,cAAgB,EAAKA,cAAc9c,KAAnB,gBACrB,EAAK+c,eAAiB,EAAKA,eAAe/c,KAApB,gBACtB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACT2T,QAAS,GACT2I,kBAAmB,GACnBvd,OAAQ,GACRyd,OAAQ,GACRpJ,eAAgB,IAhBL,E,qDAwBnB,WACC,IAAKxV,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,a,4BAI5B,SAAe4D,GACX1D,KAAKf,SAAS,CACZZ,OAAQqF,EAAEC,OAAOR,U,4BAGxB,SAAeO,GACV1D,KAAKf,SAAS,CACT6c,OAAQpY,EAAEC,OAAOR,U,2BAG3B,SAAcO,GAAI,IAAD,OAEhBA,EAAEE,iBAEF,IAAM8O,EAAiBtV,KAAKqB,MAAMvB,aAAawB,QAAQ,wBAEtCgU,EAAe7T,GAShC,GAPAmB,KAAKf,SAAS,CACTK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEdxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAE/C,IAAI3B,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAU+B,KAAKvC,MAAMY,QACrCN,EAASE,OAAO,SAAUyU,EAAe7T,IACzCd,EAASE,OAAO,SAAU+B,KAAKvC,MAAMqe,QACjCzS,QAAQC,IAAIvL,GAEZ,IACMS,EADU0F,EAAY2C,iBACNrI,MACtB5B,IAAMC,KAAN,kEAA8EkB,EAEzE,CACKjB,QACA,CACK,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAE3CzB,MAEE,SAAAC,GAEK,EAAKiC,SAAS,CACTK,QAAStC,EAASC,KAAKkR,OACvB5B,YAAY,IAEjBpN,OAAOf,SAAW,0BAEvB,SAAAgG,GACK,IAAMC,EACAD,EAAMpH,UACFoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,MACpBmH,EAAM9E,SACN8E,EAAMG,WAEX,EAAKtF,SAAS,CACTuE,SAAS,EACTlE,QAAS+E,EACTZ,qBAAqB,YAMzCzD,KAAKf,SAAS,CACTuE,SAAS,M,oBAMnB,WAAU,IAAD,OAGL,IAAKtG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAG1B,IAAM4S,EAAiBtV,KAAKqB,MAAMvB,aAAawB,QAAQ,wBACjDiU,EAA2BD,EAAe7O,KAGhD,OACI,gCACI,cAAC,EAAD,IACA,sBAAKjE,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACI,cAAC,EAAD,IAAQ,uBACR,yBAAS7N,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SAEI,sBAAKA,UAAU,YAAf,UAGK+S,GAA0BA,EAAyBzL,KAAI,SAAA2L,GAAc,OAClE,sBAAKjT,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BiT,EAAejO,SAE/C,sBAAKhF,UAAU,YAAf,UAGI,qBAAKA,UAAU,MAAf,SACKiT,EAAexF,OAAOnG,KAAI,SAAAmG,GAAM,OAE7B,sBAAKzN,UAAU,QAAf,UACI,uBAAO+E,KAAK,OAAO/E,UAAU,wBAAwBiF,YAAawI,EAAOzI,KAAMI,UAAQ,IAD3F,mDAC+I,+BAItJ6N,EAAetF,eAAerG,KAAI,SAAA2H,GAAW,OAC1C,gCACI,oBAAIjP,UAAU,GAAd,SAAkBiP,EAAYjK,OAC9B,qBAAKhF,UAAU,MAAf,SACKiP,EAAYxB,OAAOnG,KAAI,SAAA6L,GAAiB,OACrC,sBAAKnT,UAAU,QAAf,UACI,uBAAO+E,KAAK,OAAO/E,UAAU,wBAAwBiF,YAAakO,EAAkBnO,KAAMI,UAAQ,IADtG,mDAC0J,8CAYtL,sBAAKpF,UAAU,aAAf,UACQ,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,SAA4B8S,EAAexU,UAE/C,qBAAK0B,UAAU,YAAf,SAII,sBAAKA,UAAU,MAAf,UACY,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UAEK,0CAFL,QAGsB8S,EAAenE,UAG1C,qBAAK3O,UAAU,WAAf,SAEK,sBAAKA,UAAU,aAAf,UACK,gDADL,QAEuB8S,EAAepU,gBAG3C,qBAAKsB,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,8CADL,QAEyB8S,EAAenU,cAI7C,qBAAKqB,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,iDADL,QAE0B8S,EAAetJ,iBAG9C,qBAAKxJ,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,4CADL,QAG0B8S,EAAe0J,YAAY1J,EAAe0J,WAAWlV,KAAI,SAAAwI,GAAM,OAChE,qCAAQA,EAAOxR,iBAI7C,qBAAK0B,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,0CADL,QAGI8S,EAAe6I,UAAY7I,EAAe6I,SAASrU,KAAI,SAAAwI,GAAM,OACzD,qCAAQA,EAAOxR,yBAanDyU,EAAyBjT,OAE1B,sBAAKE,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,sBAEJ,qBAAKA,UAAU,YAAf,SAGA,cAAC,IAAD,CACe4E,SAAUxE,KAAKkc,cACfzX,IAAK,SAAAC,GACA,EAAKb,KAAOa,GAHhC,SAOe,sBAAK9E,UAAU,YAAf,UAEK,qBAAKA,UAAU,aAAf,SAEK,eAAC,IAAD,CACKA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKmc,eACfhZ,MAAOnD,KAAKvC,MAAMY,OALvB,UAOK,gDACA,wBAAQ8E,MAAM,oBAAd,qBACA,wBAAQA,MAAM,oBAAd,yBAKV,qBAAKvD,UAAU,aAAf,SACK,cAAC,IAAD,CAAU+E,KAAK,SAASC,KAAK,SAAShF,UAAU,eAAeiF,YAAY,SAAS1B,MAAOnD,KAAKvC,MAAMqe,OACjGhX,SAAU9E,KAAK2b,eACf5W,YAAa,CAAC7B,QAGxB,uBAGA,qBAAKtD,UAAU,aAAf,SACK,wBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,SAOK,8CAGV,iCACbxD,KAAKvC,MAAM6B,SACV,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACEI,KAAKvC,MAAM8O,WACP,sBACA,qBAENxM,KAAK,QANP,SAQGC,KAAKvC,MAAM6B,cAMJ,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,eAehD,iCAAQ,qEAc9B,cAAC,EAAD,W,GA9U6BvE,aChBxBkc,G,kDAEjB,WAAYtd,GAAQ,IAAD,8BACf,cAAMA,IACDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACX5B,QAAS,GACTkE,SAAS,EACTyP,QAAS,IAPE,E,qDAUnB,WAAqB,IAAD,OAChB,IAAK/V,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,qEACN,CACIzC,QAEA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAIhE,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,0BAM7B,SAAa8Q,GAAU,IAAD,OAElBjT,KAAKf,SAAS,CACVuE,SAAS,IAGb,IACMhF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAChB0P,EAAY+E,EAAQpU,GAC1BwK,QAAQC,IAAI2J,EAAQpU,IAIpBjC,IAAM2C,IAAN,oEAAuE2O,EAAvE,KACI,CACIpR,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAK3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUmC,EAAIvC,OAG5DkC,OAAOf,SAAW,gBAClB,EAAKa,SAAS,S,oBA4B1B,WAAU,IAAD,OAEL,OAAK/B,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACCsB,KAAKvC,MAAM+F,SACJ,sBAAM5D,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,UAAf,SAAyB,mBAAGA,UAAU,wCAKtD,0BAASA,UAAU,kBAAnB,UAEI,uBACA,qBAAKA,UAAU,kBAAf,SAGI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UAEI,oBAAIA,UAAU,aAAd,uBACA,sBAAKA,UAAU,aAAf,UACI,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,WAAWhV,MAAM,WAAjF,SACI,mBAAG0B,UAAU,mBAEjB,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,SAAShV,MAAM,SAA/E,SACI,mBAAG0B,UAAU,yBAIxBI,KAAKvC,MAAMyD,UACR,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGhD,qBAAKrH,UAAU,gBAAf,SAEI,wBAAOA,UAAU,+BAAjB,UAEI,gCACI,+BAEA,oBAAIqF,MAAO,CAAEsC,MAAO,MAApB,yBAGG,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,uBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,mBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,iBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAAQ3H,UAAU,cAAtC,oBAIA,oBAAIqF,MAAO,CAAEsC,MAAO,MAApB,qBAIE,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,kBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,kBAOD,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,yBAKPvH,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE1B,gCACI,+BAEI,+BACI,cAAC,IAAD,UACKA,EAAOtU,QAGZ,0BAGJ,+BACI,cAAC,IAAD,UACCsU,EAAOmF,YAIR,0BAIJ,6BACI,cAAC,IAAD,UACCnF,EAAOhE,gBAIZ,6BACI,cAAC,IAAD,UACKgE,EAAO/D,cAIhB,oBAAI7O,UAAU,gBAAd,SACI,sBAAMA,UAAU,sBAAhB,oBAEJ,6BACI,cAAC,IAAD,UACK4S,EAAOlE,YAIhB,6BACI,cAAC,IAAD,UACKkE,EAAOjE,SAKhB,6BACI,cAAC,IAAD,UACKiE,EAAOpJ,gBAUhB,qBAAIxJ,UAAU,6BAAd,UACI,cAAC,IAAD,CACCA,UAAU,yBACVM,QAAS,EAAKoc,aAAald,KAAK,EAAMoT,GAFvC,qBADJ,mCAiCpC,cAAC,EAAD,OAlLI,cAAC,IAAD,CAAU1S,GAAI,U,GA3GaK,aCA1Bkc,G,kDAEjB,WAAYtd,GAAQ,IAAD,8BACf,cAAMA,IACDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACX5B,QAAS,GACTkE,SAAS,EACTyP,QAAS,IAPE,E,qDAUnB,WAAqB,IAAD,OAChB,IAAK/V,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,qEACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUmC,EAAIvC,OAI1D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,0BAM7B,SAAa8Q,GAAU,IAAD,OAElBjT,KAAKf,SAAS,CACVuE,SAAS,IAGb,IACMhF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAChB0P,EAAY+E,EAAQpU,GAI1BjC,IAAM2C,IAAN,4DACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OAAO,CACH1B,UAAUA,KAIjBnR,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUmC,EAAIvC,OAG5DkC,OAAOf,SAAW,iBAClB,EAAKa,SAAS,CACVuE,SAAS,S,oBAQzB,WAAU,IAAD,OAEL,OAAKtG,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACCsB,KAAKvC,MAAM+F,SACJ,sBAAM5D,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,UAAf,UAAyB,mBAAGA,UAAU,kCAAtC,qBAKhB,0BAASA,UAAU,kBAAnB,UAEI,uBACA,qBAAKA,UAAU,kBAAf,SAGI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UAEI,oBAAIA,UAAU,aAAd,qBACA,sBAAKA,UAAU,aAAf,UACI,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,WAAWhV,MAAM,WAAjF,SACI,mBAAG0B,UAAU,mBAEjB,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,SAAShV,MAAM,SAA/E,SACI,mBAAG0B,UAAU,yBAIxBI,KAAKvC,MAAMyD,UACR,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGhD,qBAAKrH,UAAU,gBAAf,SAEI,wBAAOA,UAAU,+BAAjB,UAEI,gCACI,+BAEA,oBAAIqF,MAAO,CAAEsC,MAAO,MAApB,yBAGG,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,gCAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,uBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,kBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,qBAGE,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,kBAID,iDAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAAQ3H,UAAU,cAAtC,oBAGA,oBAAIqF,MAAO,CAAEsC,MAAO,MAApB,yBAKPvH,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE1B,gCACI,+BAEI,+BACI,cAAC,IAAD,UACKA,EAAOtU,QAGZ,uBACA,+CACesU,EAAOlL,cAI1B,+BACI,cAAC,IAAD,UACKkL,EAAO+J,iBAGZ,uBACA,+CACe/J,EAAOgK,kCAI1B,6BACI,cAAC,IAAD,UACKhK,EAAOW,uBAIhB,6BACI,cAAC,IAAD,UACKX,EAAOjE,SAIhB,6BACI,cAAC,IAAD,UACKiE,EAAOlE,YAIhB,6BACI,cAAC,IAAD,UACKkE,EAAOpJ,gBAOhB,qBAAIxJ,UAAU,mBAAd,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,wBAAwBG,KAAK,cAAcqT,gBAAe,GAAIC,gBAAe,EAAGC,gBAAe,GAAIrO,MAAO,CAAEsC,MAAM,GAAD,OAAKiL,EAAOe,SAAS,IAArB,UAGpI,gCACKf,EAAOe,SAAS,SAIzB,oBAAI3T,UAAU,gBAAd,SACI,sBAAMA,UAAU,sBAAhB,oBAEJ,qBAAIA,UAAU,6BAAd,UACI,eAAC,IAAD,CACCA,UAAU,yBACVM,QAAS,EAAKoc,aAAald,KAAK,EAAMoT,GAFvC,UAKI,mBAAG5S,UAAU,kBALjB,UADJ,mCAkCpC,cAAC,EAAD,OAlLI,cAAC,IAAD,CAAUE,GAAI,U,GAxFaK,aCqB1Bsc,G,kDAEnB,WAAY1d,GAAQ,IAAD,8BACjB,cAAMA,IAGDtB,MAAQ,CAEXif,MAAM,GACNnQ,YAAY,EACZjN,QAAS,GACTkE,SAAS,EACTgQ,cAAa,GAVE,E,sDAenB,WAAqB,IAAD,OAClB,IAAKtW,aAAawB,QAAQ,wBACxB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAEvB,IACMtB,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAI,sEACV,CACEzC,QACA,CACE,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAGvCzB,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,QAASC,KAAKC,UAAUmC,EAAIvC,OAEnD,EAAKgC,SAAS,CACZyd,MAAOld,EAAIvC,KACXuG,SAAQ,IAGV6F,QAAQC,IAAI9J,EAAIvC,W,8BASrB,SAAiB0f,GAAO,IAAD,OAEfC,EAASD,EAAM9d,GACrBwK,QAAQC,IAAIqT,EAAM9d,IAClB,IACML,EADU0F,EAAY2C,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,qEAAwEqd,EAAxE,KACI,CACI9f,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,oBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUmC,EAAIvC,OAGnE,EAAKgC,SAAS,CACZ4d,gBAAiBrd,EAAIvC,Y,oBAWjC,WAAU,IAAD,OAIOG,KAAKqB,MAAMvB,aAAawB,QAAQ,UAK9C,OACE,gCACE,cAAC,EAAD,IAEA,sBAAKkB,UAAU,kBAAf,UACCI,KAAKvC,MAAM+V,cACI,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKnB,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACE,uBACCI,KAAKvC,MAAM+F,QACQ,mCACI,iCAAQ,cAACuD,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGtE,yBAASrH,UAAU,UAAnB,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,iCACA,qBAAKA,UAAU,kBAMjB,qBAAKA,UAAU,iCAAf,SAEE,wBAAOA,UAAU,gCAAjB,UACE,gCACE,+BACE,sCACA,uCACA,uCACA,qCACA,+CACA,6CACA,wCACA,6CAIHI,KAAKvC,MAAMif,OAAS1c,KAAKvC,MAAMif,MAAMxV,KAAI,SAAAyV,GAAK,OAE7C,gCACE,+BACE,+BAAKA,EAAMjgB,SAAX,UACA,6BAAKigB,EAAMhf,eACX,6BAAKgf,EAAMnO,cACX,6BAAKmO,EAAMlO,YACX,6BAAKkO,EAAMG,cACX,6BAAKH,EAAMI,oBACX,6BAAKJ,EAAMK,cACF,qBAAIpd,UAAU,GAAd,UACK,cAAC,IAAD,CACAA,UAAU,0BACToF,SAAU,EAAKvH,MAAM+F,QACtBtD,QAAS,EAAK+c,iBAAiB7d,KAAK,EAAMud,GAH1C,qBADL,0CAiC7B,cAAC,EAAD,W,GAlMoCxc,aCdtC+C,GAAW,SAACC,GACb,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAMMic,G,kDAEhB,WAAYjd,GAAQ,IAAD,8BACd,cAAMA,IACDmd,cAAgB,EAAKA,cAAc9c,KAAnB,gBACrB,EAAKsc,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAGtB,EAAK3B,MAAQ,CACR0E,aAAa,EACbjB,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACT2T,QAAS,GACT2I,kBAAmB,GACnBC,QAAS,GACTC,OAAQ,GACRoB,WAAY,IAhBH,E,mDAqBnB,SAAgBxZ,GACX1D,KAAKf,SAAS,CACTZ,OAAQqF,EAAEC,OAAOR,U,4BAG3B,SAAeO,GACV1D,KAAKf,SAAS,CACT6c,OAAQpY,EAAEC,OAAOR,U,+BAI3B,WACK,IAAKjG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,a,2BAKhC,SAAc4D,GAAI,IAAD,OAEZA,EAAEE,iBACexG,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAAjD,IACMwe,EAAa9f,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAUnD,GAPAsB,KAAKf,SAAS,CACTK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEdxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAI3C,IAAI3B,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAU+B,KAAKvC,MAAMY,QACrCN,EAASE,OAAO,SAAUif,EAAWre,IACrCd,EAASE,OAAO,SAAU+B,KAAKvC,MAAMqe,QAErC,IACMtd,EADU0F,EAAY2C,iBACNrI,MACtB5B,IAAMC,KAAN,kEAA6EkB,EAIxE,CACKjB,QACA,CACK,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAE3CzB,MAEE,SAAAC,GAEK,EAAKiC,SAAS,CACTK,QAAStC,EAASC,KAAKkR,OACvB5B,YAAY,IAGjBpN,OAAOf,SAAW,oBAIvB,SAAAgG,GACK,IAAMC,EACAD,EAAMpH,UACFoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,MACpBmH,EAAM9E,SACN8E,EAAMG,WAEX,EAAKtF,SAAS,CACTuE,SAAS,EACTlE,QAAS+E,EACTZ,qBAAqB,YAMzCzD,KAAKf,SAAS,CACTuE,SAAS,M,oBAKxB,WAAU,IAAD,OAEJ,IAAKtG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,MAE3B,IAAMod,EAAa9f,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAInD,OACK,gCACK,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACK,uBAWA,yBAASA,UAAU,UAAnB,SACK,qBAAKA,UAAU,kBAAf,SACK,qBAAKA,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAGpB,sBAAKA,UAAU,YAAf,UAEK,sBAAKA,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,2CADL,QAEsBsd,EAAWhf,WAItC,qBAAK0B,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,6CADL,QAEsBsd,EAAW5O,gBAI3C,sBAAK1O,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UAEK,0CAFL,QAGsBsd,EAAW3O,UAGtC,qBAAK3O,UAAU,WAAf,SAEK,sBAAKA,UAAU,aAAf,UACK,gDADL,QAEuBsd,EAAW5e,gBAGvC,qBAAKsB,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,8CADL,QAEyBsd,EAAW3e,cAIzC,qBAAKqB,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,iDADL,QAE0Bsd,EAAW9T,iBAG1C,qBAAKxJ,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,4CADL,QAG0Bsd,EAAWd,YAAYc,EAAWd,WAAWlV,KAAI,SAAAwI,GAAM,OACxD,qCAAQA,EAAOxR,iBAI7C,qBAAK0B,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,0CADL,QAG0Bsd,EAAW3B,UAAU2B,EAAW3B,SAASrU,KAAI,SAAAwI,GAAM,OACpD,qCAAQA,EAAOxR,uBAMvD,cAAC,IAAD,CACKsG,SAAUxE,KAAKkc,cACfzX,IAAK,SAAAC,GACA,EAAKb,KAAOa,GAHtB,SAOK,sBAAK9E,UAAU,YAAf,UAEK,sBAAKA,UAAU,aAAf,UACK,uBAAO0Z,QAAQ,4BAAf,oBACA,eAAC,IAAD,CACK1Z,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAK0b,gBACfvY,MAAOnD,KAAKvC,MAAMY,OALvB,UAOK,gDACA,wBAAQ8E,MAAM,oBAAoBvD,UAAU,eAA5C,qBACA,wBAAQuD,MAAM,oBAAoBvD,UAAU,cAA5C,0BAKV,qBAAKA,UAAU,aAAf,SACK,cAAC,IAAD,CAAU+E,KAAK,SAASC,KAAK,SAAShF,UAAU,eAAeiF,YAAY,SAAS1B,MAAOnD,KAAKvC,MAAMqe,OACjGhX,SAAU9E,KAAK2b,eACf5W,YAAa,CAAC7B,QAGxB,uBAGA,qBAAKtD,UAAU,aAAf,SACK,wBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,SAOK,8CAGV,iCACbxD,KAAKvC,MAAM6B,SACV,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACEI,KAAKvC,MAAM8O,WACP,sBACA,qBAENxM,KAAK,QANP,SAQGC,KAAKvC,MAAM6B,cAMJ,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,wBAqBlE,cAAC,EAAD,W,GA5SuBvE,aCAtBgd,G,kDAEjB,WAAYpe,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT8d,UAAW,GACXxB,kBAAkB,GAClBC,QAAQ,GACRC,OAAO,IAbI,E,mDAiBnB,SAAgBpY,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAGvB,SAAeO,GACd1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAChB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,8FACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUmC,EAAIvC,OAIjE,EAAKgC,SAAS,CACVme,UAAW5d,EAAIvC,KACfiE,WAAW,EACXiB,aAAa,S,6BAO7B,SAAgBqQ,GAAQ,IAAD,OAEbuJ,EAAWvJ,EAAO3T,GAExB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmV,EAAO3T,KAC/D,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8Dwc,EAA9D,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,mBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUmC,EAAIvC,OAGnE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,Y,oBAQrC,WAAU,IAAD,OAEL,OAAKC,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,kCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACK,uCACA,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAM2f,UAAUlW,KAAI,SAAAsL,GAAM,OAEhC,gCACK,+BACK,6BAAKA,EAAOtU,QACZ,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QACrBtD,QAAS,EAAK+b,gBAAgB7c,KAAK,EAAMoT,GAH7C,mDAsC3E,cAAC,EAAD,OAzGI,cAAC,IAAD,CAAU1S,GAAI,U,GArGaK,aCA1Bkd,G,kDAEjB,WAAYte,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,GACT2I,kBAAkB,GAClBC,QAAQ,GACRC,OAAO,IAbI,E,mDAiBnB,SAAgBpY,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAGvB,SAAeO,GACd1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAChB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAG1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,iFACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,OAI9D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,2BAO7B,SAAcqQ,GAAQ,IAAD,OAEXuJ,EAAWvJ,EAAO3T,GACxBwK,QAAQC,IAAIkJ,EAAO3T,IACnB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmV,EAAO3T,KAC/D,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8Dwc,EAA9D,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,iBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAGhE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,KACvBuW,cAAc,S,oBAO5B,WAAU,IAAD,OAEL,OAAKtW,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,8BACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,uDAsC3E,cAAC,EAAD,OAzGI,cAAC,IAAD,CAAU1D,GAAI,U,GAtGUK,aCAvBwB,G,kDAEjB,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,IARE,E,qDAcnB,WAAqB,IAAD,OAEnB,IAAK/V,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAN,2GAGI,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAIhE,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,oBAQ7B,WAAU,IAAD,OAEL,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,uDAqC3E,cAAC,EAAD,OAxGI,cAAC,IAAD,CAAU1D,GAAI,U,GAvDYK,aCAzBkC,G,kDAEjB,WAAYtD,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,GACT2I,kBAAkB,GAClBC,QAAQ,GACRC,OAAO,IAbI,E,mDAiBnB,SAAgBpY,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAGvB,SAAeO,GACd1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAChB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAN,wHAEI,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAIhE,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,2BAO7B,SAAcqQ,GAAQ,IAAD,OAEXuJ,EAAWvJ,EAAO3T,GACxBwK,QAAQC,IAAIkJ,EAAO3T,IACnB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmV,EAAO3T,KAC/D,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8Dwc,EAA9D,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,iBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAGhE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,KACvBuW,cAAc,S,oBAO5B,WAAU,IAAD,OAEL,OAAKtW,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,iBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,uDAsC3E,cAAC,EAAD,OAzGI,cAAC,IAAD,CAAU1D,GAAI,U,GAtGYK,a,SCEzBmd,G,kDAEjB,WAAYve,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBACtB,EAAK0a,cAAgB,EAAKA,cAAc1a,KAAnB,gBACrB,EAAK2a,gBAAkB,EAAKA,gBAAgB3a,KAArB,gBACvB,EAAK4a,eAAiB,EAAKA,eAAe5a,KAApB,gBACtB,EAAK6a,mBAAqB,EAAKA,mBAAmB7a,KAAxB,gBAC1B,EAAK8a,kBAAoB,EAAKA,kBAAkB9a,KAAvB,gBACzB,EAAK+a,gBAAkB,EAAKA,gBAAgB/a,KAArB,gBACvB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBACpB,EAAKuJ,cAAgB,EAAKA,cAAcvJ,KAAnB,gBACrB,EAAKib,aAAe,EAAKA,aAAajb,KAAlB,gBACpB,EAAKme,aAAe,EAAKA,aAAane,KAAlB,gBACpB,EAAKoe,aAAe,EAAKA,aAAape,KAAlB,gBAEpB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACT2T,QAAS,GACT2I,kBAAmB,GACnBC,QAAS,GACTC,OAAQ,GACR5d,MAAO,GACPoQ,QAAS,GACTjQ,OAAQ,GACRkQ,KAAM,GACNnF,YAAa,GACb9K,WAAY,GACZC,SAAU,GACVmR,OAAQ,GACR6K,KAAM,GACNzR,WAAW,EACXC,SAAS,EACTC,WAAW,GApCA,E,iDAyCnB,SAActF,GACV1D,KAAKf,SAAS,CACVf,MAAOwF,EAAEC,OAAOR,U,6BAIxB,SAAgBO,GACZ1D,KAAKf,SAAS,CACVqP,QAAS5K,EAAEC,OAAOR,U,0BAI1B,SAAaO,GACT1D,KAAKf,SAAS,CACVsP,KAAM7K,EAAEC,OAAOR,U,+BAGvB,SAAkBO,GACd1D,KAAKf,SAAS,CACVX,WAAYoF,EAAEC,OAAOR,U,6BAG7B,SAAgBO,GACZ1D,KAAKf,SAAS,CACVV,SAAUmF,EAAEC,OAAOR,U,gCAG3B,SAAmBO,GACf1D,KAAKf,SAAS,CACVmK,YAAa1F,EAAEC,OAAOR,U,4BAI9B,SAAeO,GACX1D,KAAKf,SAAS,CACVZ,OAAQqF,EAAEC,OAAOR,U,2BAIzB,SAAcO,GACV1D,KAAKf,SAAS,CACVyQ,OAAQhM,EAAEC,OAAOR,U,0BAGzB,SAAaO,GACT1D,KAAKf,SAAS,CACVsb,KAAM7W,EAAEC,OAAOR,U,6BAKvB,SAAgBO,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAG1B,SAAeO,GACX1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAChB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1BE,KAAKmX,iBACLnX,KAAKyd,eAEL,IACMjf,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,iFACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,OAI9D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,gCAK7B,SAAmB8N,EAAWC,GAG1BhT,aAAaC,QAAQ,gBADC,CAAC,EAAG,EAAG,IAG7BD,aAAaC,QAAQ,cADD,CAAC,EAAG,EAAG,IAI3B,IACI,GAAI+S,EAAU9G,cAAgBpJ,KAAKvC,MAAM2L,YAAa,CAClD,IAAM3L,EAAQuC,KAAKvC,MAAM2L,YACrB3L,GACAuC,KAAKf,SAAS,CACV6J,UAAWrL,EAAM6D,SAAS,MAC1ByH,QAAStL,EAAM6D,SAAS,MACxB0H,UAAWvL,EAAM6D,SAAS,YAKxC,MAAOoC,O,0BAMb,SAAaA,GAAI,IAAD,OAEZA,EAAEE,iBACexG,KAAKqB,MAAMvB,aAAawB,QAAQ,qBASjD,GAPAsB,KAAKf,SAAS,CACZK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEXxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAAC,IAAD,EAExCge,EAAmBtgB,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAMjD+b,EADsBvd,aAAawB,QAAQ,iBAK3Cgc,EADoBxd,aAAawB,QAAQ,eAIzCgR,EACF+K,EAAgBkD,MAAM,QAAQzW,IAAI0W,QAGhCrD,EACFG,EAAciD,MAAM,QAAQzW,IAAI0W,QAM9B7X,GAAI,GAENmI,UAAUwP,EAAiB7e,GAC3BX,MAAO8B,KAAKvC,MAAMS,OAAOwf,EAAiBxf,MAC1CoQ,QAAStO,KAAKvC,MAAM6Q,SAASoP,EAAiBpP,QAC9CC,KAAMvO,KAAKvC,MAAM8Q,MAAMmP,EAAiBnP,KACxCnF,YAAapJ,KAAKvC,MAAM2L,aAAasU,EAAiBtU,YACtD9K,WAAY0B,KAAKvC,MAAMa,YAAYof,EAAiBpf,WACpDC,SAAUyB,KAAKvC,MAAMc,UAAUmf,EAAiBnf,SAChDsf,SAAU,SATJ,6BAUM7d,KAAKvC,MAAM2L,aAAasU,EAAiBtU,aAV/C,2BAWKsG,GAASgO,EAAiBhO,QAX/B,yBAYE6K,GAAMmD,EAAiBnD,MAZzB,GAeVlR,QAAQC,IAAIvD,GACd,IACMvH,EADUoI,EAAYC,iBACNrI,MAEtB5B,IAAMC,KAAN,sEAAkFkJ,EAClF,CACEjJ,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIxCzB,MAEA,SAAAC,GAEE,EAAKiC,SAAS,CACZK,QAAS,+BACTiN,YAAY,IAEdpN,OAAOf,SAAW,qBAEpB,SAAAgG,GACE,IAAMC,EACHD,EAAMpH,UACLoH,EAAMpH,SAASC,MACfmH,EAAMpH,SAASC,KAAKqC,SACtB8E,EAAM9E,SACN8E,EAAMG,WAER,EAAKtF,SAAS,CACZuE,SAAS,EACTlE,QAAS+E,YAKfrE,KAAKf,SAAS,M,0BAOpB,SAAauT,GAAS,IAAD,OAEXuJ,EAAWvJ,EAAO3T,GAExB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmV,EAAO3T,KAC/D,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8Dwc,EAA9D,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,kBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,qBAAsBC,KAAKC,UAAUmC,EAAIvC,OAGlE,EAAKgC,SAAS,CACV2c,kBAAmBpc,EAAIvC,Y,0BAOvC,WACI,IAEMuB,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAN,wDACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAfE,oBAmBTV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,Y,4BAMvE,WACI,IAEMuB,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAN,0DACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAfE,oBAmBTV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,Y,oBAMzE,WAAU,IAAD,OAEL,OAAKC,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACI,uBACCI,KAAKvC,MAAM+V,cACR,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBACzD,qBAAK/C,UAAU,iBAAf,6CAKhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SACKI,KAAKvC,MAAMyD,UACR,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIhD,qBAAKrH,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,aAAd,4BACA,qBAAKA,UAAU,kBAKlBI,KAAKvC,MAAMyD,UACR,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACI,wBAAOA,UAAU,gCAAjB,UACI,gCACI,+BACI,uCACA,sCACA,sCACA,yCACA,4CACA,yCACA,8CAGPI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE1B,gCACI,+BACI,6BAAKA,EAAOtU,QACZ,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,6BAAKmL,EAAOsL,mBAAmBtL,EAAOsL,mBAAmBhC,OAAO,cAGhE,oBAAIlc,UAAU,GAAd,SACI,wBACIA,UAAU,sBACVoF,SAAU,EAAKvH,MAAM+F,QAEtBtD,QAAS,EAAKqd,aAAane,KAAK,EAAMoT,GAJzC,qDAsChE,cAAC,EAAD,OA5GI,cAAC,IAAD,CAAU1S,GAAI,U,GAtWUK,aCEvB4d,G,kDAEnB,WAAYhf,GAAQ,IAAD,8BACjB,cAAMA,IAGDtB,MAAQ,CAEXif,MAAM,GACNO,iBAAiB,GACjB1Q,YAAY,EACZjN,QAAS,GACTkE,SAAS,GAVM,E,qDAenB,WAAqB,IAAD,OAClB,IAAKtG,aAAawB,QAAQ,wBAExB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAGxB,IACMtB,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAI,iFACV,CACEzC,QACA,CACE,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAGvCzB,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,QAASC,KAAKC,UAAUmC,EAAIvC,OAEnD,EAAKgC,SAAS,CACZyd,MAAOld,EAAIvC,KACXuG,SAAQ,S,8BAYd,SAAiBmZ,GAAO,IAAD,OAEfC,EAASD,EAAM9d,GAGfL,EADU0F,EAAY2C,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,qEAAwEqd,EAAxE,KACI,CACI9f,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,mBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUmC,EAAIvC,OAGnE,EAAKgC,SAAS,CACZ4d,gBAAiBrd,EAAIvC,Y,oBAWjC,WAAU,IAAD,OAIOG,KAAKqB,MAAMvB,aAAawB,QAAQ,UAE9C,OAAKxB,aAAawB,QAAQ,wBAOxB,gCACE,cAAC,EAAD,IAEA,sBAAKkB,UAAU,kBAAf,UACE,cAAC,EAAD,IAECI,KAAKvC,MAAM+V,cACE,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKnB,sBAAKA,UAAU,YAAf,UACE,uBACCI,KAAKvC,MAAM+F,QACQ,mCACI,iCAAQ,cAACuD,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGtE,yBAASrH,UAAU,UAAnB,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,iCACA,qBAAKA,UAAU,kBAMjB,qBAAKA,UAAU,iCAAf,SAEE,wBAAOA,UAAU,gCAAjB,UACE,gCACE,+BACE,sCACA,uCACA,uCACA,qCACA,+CACA,6CACA,wCACA,6CAIHI,KAAKvC,MAAMif,OAAS1c,KAAKvC,MAAMif,MAAMxV,KAAI,SAAAyV,GAAK,OAE7C,gCACE,+BACE,+BAAKA,EAAMjgB,SAAX,UACA,6BAAKigB,EAAMhf,eACX,6BAAKgf,EAAMnO,cACX,6BAAKmO,EAAMlO,YACX,6BAAKkO,EAAMG,cACX,6BAAKH,EAAMI,oBACX,6BAAKJ,EAAMK,cACF,qBAAIpd,UAAU,GAAd,UACK,wBAAQA,UAAU,uBAClBoF,SAAU,EAAKvH,MAAM+F,QACrBtD,QAAS,EAAK+c,iBAAiB7d,KAAK,EAAMud,GAF1C,oBADL,0CAgC7B,cAAC,EAAD,OAnGQ,cAAC,IAAD,CAAU7c,GAAI,e,GApGcK,aCNvB6d,G,kDAEnB,WAAYjf,GAAQ,IAAD,8BACjB,cAAMA,IAGDtB,MAAQ,CACX6B,QAAS,GACTkE,SAAS,EACT0Q,mBAAoB,GACpBC,uBAAuB,EACvBvI,oBAAoB,EACpB4G,OAAQ,GACRyL,KAAK,SAXU,E,qDAkBnB,WAAqB,IAAD,OAClB,IAAK/gB,aAAawB,QAAQ,wBACxB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,yEACR,CACEzC,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,MAK7BzB,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUmC,EAAIvC,OAE1D,EAAKgC,SAAS,CACZQ,aAAcD,EAAIvC,KAAKyC,OACvBJ,QAASE,EAAIvC,KACbuG,SAAS,S,8BASjB,SAAiBlE,GAAS,IAAD,OAEvBU,KAAKvC,MAAMwgB,KAAM,OAEjB,IAAMC,EAAW5e,EAAQT,GAGzB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUiC,EAAQT,KAChE,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAGlB5W,IAAM2C,IAAN,2EAA8E2e,EAA9E,KACI,CACIphB,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,oBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,uBAAwBC,KAAKC,UAAUmC,EAAIvC,OAGpE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,KACvBuW,cAAc,OAKlB,IAAIzV,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQ+B,KAAKvC,MAAMwgB,MACnCrhB,IAAMuhB,MAAN,0EAA+ED,EAA/E,KAA2FngB,EAC7F,CACIjB,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUmC,EAAIvC,Y,oBAQ9D,WAAU,IAAD,OAGP,OAAKC,aAAawB,QAAQ,wBAQxB,gCACE,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACE,cAAC,EAAD,IAAQ,uBACR,yBAAS7N,UAAU,UAAnB,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAMA,UAAU,iCAAhB,sBAEA,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,qBACA,qBAAKA,UAAU,aAAf,SACE,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,WAAhE,SACE,mBAAGtT,UAAU,wBAInB,qBAAKA,UAAU,gBAAf,SACE,qBAAIA,UAAU,4BAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,eAAC,IAAD,CAAME,GAAG,iBAAiBF,UAAU,WAApC,UACE,mBAAGA,UAAU,iBADf,SAER,sBAAMA,UAAU,+BAAhB,SAAgDI,KAAKvC,MAAMgC,oBAGrD,oBAAIG,UAAU,WAAd,SACE,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACE,mBAAGA,UAAU,oBADf,aAKF,oBAAIA,UAAU,WAAd,SACE,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACE,mBAAGA,UAAU,qBADf,yBAWV,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,uBAAO+E,KAAK,OAAO/E,UAAU,eAAeiF,YAAY,gBACxD,qBAAKjF,UAAU,qBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,mBAAGA,UAAU,8BAQvB,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,mBAAf,UAEE,wBAAQ+E,KAAK,SAAS/E,UAAU,yCAAhC,SAAyE,mBAAGA,UAAU,oBAEtF,sBAAKA,UAAU,YAAf,UACE,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,uBAEf,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,mBAEf,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,sBAIjB,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,sBAEf,sBAAKA,UAAU,cAAf,UACGI,KAAKvC,MAAMgC,aACtB,sBAAKG,UAAU,YAAf,UACY,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,0BAEf,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,oCAOrB,qBAAKA,UAAU,oCAAf,SACGI,KAAKvC,MAAM+F,QACV,sBAAM5D,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKP,uBAAOA,UAAU,kCAAjB,SACE,gCACCI,KAAKvC,MAAM6B,SAAWU,KAAKvC,MAAM6B,QAAQ4H,KAAI,SAAA5H,GAAO,OACnD,+BACE,6BACE,sBAAKM,UAAU,iBAAf,UACE,uBAAO+E,KAAK,WAAW4U,cAAY,EAACpT,GAAG,WACvC,uBAAOmT,QAAQ,gBAGnB,oBAAI1Z,UAAU,eAAd,SAA6B,mBAAGiD,KAAK,IAAR,SAAY,mBAAGjD,UAAU,iCACtD,oBAAIA,UAAU,eAAd,SACA,cAAC,IAAD,CACAM,QAAS,EAAKke,iBAAiBhf,KAAK,EAAME,GAD1C,SAEEA,EAAQ+e,gBACV,qBAAIze,UAAU,kBAAd,UAAgC,4BAAIN,EAAQgf,UAA5C,iBACA,oBAAI1e,UAAU,uBACd,oBAAIA,UAAU,eAAd,SAA8BN,EAAQgI,yBAUhD,qBAAK1H,UAAU,kBAAf,SACE,sBAAKA,UAAU,mBAAf,UAEE,wBAAQ+E,KAAK,SAAS/E,UAAU,yCAAhC,SACE,mBAAGA,UAAU,oBAEf,sBAAKA,UAAU,YAAf,UACE,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,uBAEf,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,mBAEf,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,sBAIjB,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,sBAEf,sBAAKA,UAAU,cAAf,qBAER,sBAAKA,UAAU,YAAf,UACY,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,0BAEf,wBAAQ+E,KAAK,SAAS/E,UAAU,yBAAhC,SACE,mBAAGA,UAAU,mDAiBjC,cAAC,EAAD,OAzLM,cAAC,IAAD,CAAUE,GAAI,e,GArHeK,aCEtBoe,G,kDAEjB,WAAYxf,GAAQ,IAAD,8BAEf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT8d,UAAW,GACXxB,kBAAkB,GAClBC,QAAQ,GACRC,OAAO,IAdI,E,mDAkBnB,SAAgBpY,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAGvB,SAAeO,GACd1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAChB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,wHACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,OAI9D,EAAKgC,SAAS,CACVme,UAAW5d,EAAIvC,KACfiE,WAAW,EACXiB,aAAa,S,6BAO7B,SAAgBqQ,GAAQ,IAAD,OAEbuJ,EAAWvJ,EAAO3T,GAExB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmV,EAAO3T,KAC/D,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8Dwc,EAA9D,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,gBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,qBAAsBC,KAAKC,UAAUmC,EAAIvC,OAGlE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,Y,oBAQrC,WAAU,IAAD,OAEL,OAAKC,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,kCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACK,uCACA,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAM2f,UAAUlW,KAAI,SAAAsL,GAAM,OAEhC,gCACK,+BACK,6BAAKA,EAAOtU,QACZ,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QACrBtD,QAAS,EAAK+b,gBAAgB7c,KAAK,EAAMoT,GAH7C,mDAsC3E,cAAC,EAAD,OAzGI,cAAC,IAAD,CAAU1S,GAAI,U,GAtGUK,aCXtC+C,GAAW,SAACC,GACd,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAQOye,G,kDAEjB,WAAYzf,GAAQ,IAAD,8BACf,cAAMA,IAEDmd,cAAgB,EAAKA,cAAc9c,KAAnB,gBACrB,EAAK+c,eAAiB,EAAKA,eAAe/c,KAApB,gBACtB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACT2T,QAAS,GACT2I,kBAAmB,GACnBvd,OAAQ,GACRyd,OAAQ,GACR2C,mBAAoB,IAhBT,E,qDAwBnB,WACC,IAAKvhB,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,a,4BAG5B,SAAe4D,GACX1D,KAAKf,SAAS,CACZZ,OAAQqF,EAAEC,OAAOR,U,4BAGxB,SAAeO,GACV1D,KAAKf,SAAS,CACT6c,OAAQpY,EAAEC,OAAOR,U,2BAG3B,SAAcO,GAAI,IAAD,OAEhBA,EAAEE,iBAEF,IAEM/E,EAFqBzB,KAAKqB,MAAMvB,aAAawB,QAAQ,uBAE/BG,GAS5B,GAPAmB,KAAKf,SAAS,CACTK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEdxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAE/C,IAAI3B,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAU+B,KAAKvC,MAAMY,QACrCN,EAASE,OAAO,SAAWY,GAC3Bd,EAASE,OAAO,SAAU+B,KAAKvC,MAAMqe,QACjCzS,QAAQC,IAAIvL,GAEZ,IACMS,EADU0F,EAAY2C,iBACNrI,MACtB5B,IAAMC,KAAN,kEAA8EkB,EAEzE,CACKjB,QACA,CACK,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAE3CzB,MAEE,SAAAC,GAEK,EAAKiC,SAAS,CACTK,QAAStC,EAASC,KAAKkR,OACvB5B,YAAY,IAEjBpN,OAAOf,SAAW,qBAEvB,SAAAgG,GACK,IAAMC,EACAD,EAAMpH,UACFoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,MACpBmH,EAAM9E,SACN8E,EAAMG,WAEX,EAAKtF,SAAS,CACTuE,SAAS,EACTlE,QAAS+E,EACTZ,qBAAqB,YAMzCzD,KAAKf,SAAS,CACTuE,SAAS,M,oBAMnB,WAAU,IAAD,OAGL,IAAKtG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAG1B,IAAM2e,EAAqBrhB,KAAKqB,MAAMvB,aAAawB,QAAQ,uBACrDggB,EAA+BD,EAAmB5a,KAGxD,OACI,gCACI,cAAC,EAAD,IACA,sBAAKjE,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACI,cAAC,EAAD,IAAQ,uBACR,yBAAS7N,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SAEI,sBAAKA,UAAU,YAAf,UAGK8e,GAA8BA,EAA6BxX,KAAI,SAAA2L,GAAc,OAC1E,sBAAKjT,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BiT,EAAejO,SAE/C,sBAAKhF,UAAU,YAAf,UAGI,qBAAKA,UAAU,MAAf,SACKiT,EAAexF,OAAOnG,KAAI,SAAAmG,GAAM,OAE7B,sBAAKzN,UAAU,QAAf,UACI,uBAAO+E,KAAK,OAAO/E,UAAU,wBAAwBiF,YAAawI,EAAOzI,KAAMI,UAAQ,IAD3F,mDAC+I,+BAItJ6N,EAAetF,eAAerG,KAAI,SAAA2H,GAAW,OAC1C,gCACI,oBAAIjP,UAAU,GAAd,SAAkBiP,EAAYjK,OAC9B,qBAAKhF,UAAU,MAAf,SACKiP,EAAYxB,OAAOnG,KAAI,SAAA6L,GAAiB,OACrC,sBAAKnT,UAAU,QAAf,UACI,uBAAO+E,KAAK,OAAO/E,UAAU,wBAAwBiF,YAAakO,EAAkBnO,KAAMI,UAAQ,IADtG,mDAC0J,8CAYtL,sBAAKpF,UAAU,aAAf,UACQ,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,SAA4B6e,EAAmBvgB,UAEnD,qBAAK0B,UAAU,YAAf,SAII,sBAAKA,UAAU,MAAf,UACY,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UAEK,0CAFL,QAGsB6e,EAAmBlQ,UAG9C,qBAAK3O,UAAU,WAAf,SAEK,sBAAKA,UAAU,aAAf,UACK,gDADL,QAEuB6e,EAAmBngB,gBAG/C,qBAAKsB,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,8CADL,QAEyB6e,EAAmBlgB,cAIjD,qBAAKqB,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,iDADL,QAE0B6e,EAAmBrV,iBAGlD,qBAAKxJ,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,4CADL,QAG0B6e,EAAmBrC,YAAYqC,EAAmBrC,WAAWlV,KAAI,SAAAwI,GAAM,OACxE,qCAAQA,EAAOxR,iBAI7C,qBAAK0B,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,0CADL,QAGI6e,EAAmBlD,UAAYkD,EAAmBlD,SAASrU,KAAI,SAAAwI,GAAM,OACjE,qCAAQA,EAAOxR,yBAanDwgB,EAA6Bhf,OAE9B,sBAAKE,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,sBAEJ,qBAAKA,UAAU,YAAf,SAGA,cAAC,IAAD,CACe4E,SAAUxE,KAAKkc,cACfzX,IAAK,SAAAC,GACA,EAAKb,KAAOa,GAHhC,SAOe,sBAAK9E,UAAU,YAAf,UAEK,qBAAKA,UAAU,aAAf,SAEK,eAAC,IAAD,CACKA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKmc,eACfhZ,MAAOnD,KAAKvC,MAAMY,OALvB,UAOK,gDACA,wBAAQ8E,MAAM,kBAAd,qBACA,wBAAQA,MAAM,kBAAd,yBAKV,qBAAKvD,UAAU,aAAf,SACK,cAAC,IAAD,CAAU+E,KAAK,SAASC,KAAK,SAAShF,UAAU,eAAeiF,YAAY,SAAS1B,MAAOnD,KAAKvC,MAAMqe,OACjGhX,SAAU9E,KAAK2b,eACf5W,YAAa,CAAC7B,QAGxB,uBAGA,qBAAKtD,UAAU,aAAf,SACK,wBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,SAOK,8CAGV,iCACbxD,KAAKvC,MAAM6B,SACV,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACEI,KAAKvC,MAAM8O,WACP,sBACA,qBAENxM,KAAK,QANP,SAQGC,KAAKvC,MAAM6B,cAMJ,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,eAehD,iCAAQ,qEAc9B,cAAC,EAAD,W,GA7U0BvE,aCArBwe,G,kDAEjB,WAAY5f,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,IARE,E,qDAcnB,WAAqB,IAAD,OACnB,IAAK/V,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAN,6FAEI,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAIhE,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,oBAS7B,WAAU,IAAD,OAEL,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,iBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,uDAsC3E,cAAC,EAAD,OAzGI,cAAC,IAAD,CAAU1D,GAAI,U,GAtDUK,aCAvBye,G,kDAEjB,WAAY7f,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,IARE,E,qDAcnB,WAAqB,IAAD,OAEnB,IAAK/V,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,iFACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,OAI9D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,oBAS7B,WAAU,IAAD,OAEL,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,8BACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,uDAsC3E,cAAC,EAAD,OAzGI,cAAC,IAAD,CAAU1D,GAAI,U,GAtDUK,aCAvB0e,G,kDAEjB,WAAY9f,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,IARE,E,qDAanB,WAAqB,IAAD,OACnB,IAAK/V,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAN,2GAGI,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAIhE,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,oBAO7B,WAAU,IAAD,OAEL,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,uDAqC3E,cAAC,EAAD,OAxGI,cAAC,IAAD,CAAU1D,GAAI,U,GApDYK,aCAzB2e,G,kDAEjB,WAAY/f,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,IARE,E,qDAcnB,WAAqB,IAAD,OACnB,IAAK/V,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAN,wHAEI,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAIhE,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,oBAQ7B,WAAU,IAAD,OAEL,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,iBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,uDAqC3E,cAAC,EAAD,OAxGI,cAAC,IAAD,CAAU1D,GAAI,U,GArDYK,aCAzB4e,G,kDAEjB,WAAYhgB,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT8d,UAAW,IARA,E,qDAcnB,WAAqB,IAAD,OACnB,IAAKlgB,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,8FACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUmC,EAAIvC,OAIjE,EAAKgC,SAAS,CACVme,UAAW5d,EAAIvC,KACfiE,WAAW,EACXiB,aAAa,S,oBAS7B,WAAU,IAAD,OAEL,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,kCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACK,uCACA,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAM2f,UAAUlW,KAAI,SAAAsL,GAAM,OAEhC,gCACK,+BACK,6BAAKA,EAAOtU,QACZ,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,sDAqC3E,cAAC,EAAD,OAxGI,cAAC,IAAD,CAAU1D,GAAI,U,GArDeK,aCA5Byb,G,kDAEjB,WAAY7c,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,IARE,E,qDAcnB,WAAqB,IAAD,OACnB,IAAK/V,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MAEtB5B,IAAM2C,IAAI,4FACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUmC,EAAIvC,OAI1D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,oBAQ7B,WAAU,IAAD,OAEL,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UAEF,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,sDAqC3E,cAAC,EAAD,OAvGI,cAAC,IAAD,CAAU1D,GAAI,U,GArDaK,aCF1Bie,G,kDAEnB,WAAYrf,GAAQ,IAAD,8BACjB,cAAMA,IAGDtB,MAAQ,CACX6B,QAAS,GACTkE,SAAS,EACT0Q,mBAAoB,GACpBC,uBAAuB,EACvBvI,oBAAoB,EACpB4G,OAAQ,IAVO,E,qDAiBnB,WAAqB,IAAD,OAClB,IAAKtV,aAAawB,QAAQ,wBACxB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,iEACR,CACEzC,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,MAK7BzB,MAAK,SAAAyC,GACAA,EAAIvC,MACNC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUmC,EAAIvC,OAE1D,EAAKgC,SAAS,CACZQ,aAAcD,EAAIvC,KAAKyC,OACvBJ,QAASE,EAAIvC,KACbuG,SAAS,S,oBAYjB,WAGE,IAAKtG,aAAawB,QAAQ,wBACxB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IAAMkf,EAAuB5hB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBACvDugB,EAAiBD,EAAqB1f,QAAQ0X,MAAM,IAAK,KACzDkI,EAAqBF,EAAqB1f,QAAQ0X,MAAM,GAAI,KAElE,OACE,gCACE,cAAC,EAAD,IACA,sBAAKpX,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACE,cAAC,EAAD,IAAQ,uBACR,yBAAS7N,UAAU,UAAnB,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAMA,UAAU,iCAAhB,sBAEA,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,qBACA,qBAAKA,UAAU,aAAf,SACE,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,WAAhE,SACE,mBAAGtT,UAAU,wBAInB,qBAAKA,UAAU,gBAAf,SACE,qBAAIA,UAAU,4BAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,eAAC,IAAD,CAAME,GAAG,iBAAiBF,UAAU,WAApC,UACE,mBAAGA,UAAU,iBADf,SAER,sBAAMA,UAAU,+BAAhB,SAAgDI,KAAKvC,MAAMgC,oBAGrD,oBAAIG,UAAU,WAAd,SACE,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACE,mBAAGA,UAAU,oBADf,aAKF,oBAAIA,UAAU,WAAd,SACE,oBAAGiD,KAAK,IAAIjD,UAAU,WAAtB,UACE,mBAAGA,UAAU,qBADf,yBAWV,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,+BACA,sBAAKA,UAAU,aAAf,UACE,mBAAGiD,KAAK,IAAIjD,UAAU,eAAe1B,MAAM,WAA3C,SAAsD,mBAAG0B,UAAU,0BACnE,mBAAGiD,KAAK,IAAIjD,UAAU,eAAe1B,MAAM,OAA3C,SAAkD,mBAAG0B,UAAU,iCAInE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,6BAAKof,EAAqBV,UAC1B,2DACZ,sBAAM1e,UAAU,gCAAhB,SAAiDof,EAAqB1X,gBAG5D,sBAAK1H,UAAU,uBAAf,UACE,4BAAIsf,EAAmBlI,MAAM,EAAG,MAEhC,qBAAK/R,MAAO,CAAEka,WAAY,YAA1B,SAAyCF,IAEzC,wCAAU,uBAAOC,EAAmBlI,MAAM,EAAG,aAKjD,sBAAKpX,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,yBAAQ+E,KAAK,SAAS/E,UAAU,kBAAhC,UAAkD,mBAAGA,UAAU,iBAA/D,YACA,yBAAQ+E,KAAK,SAAS/E,UAAU,kBAAhC,UAAkD,mBAAGA,UAAU,iBAA/D,iBAEF,yBAAQ+E,KAAK,SAAS/E,UAAU,kBAAhC,UAAkD,mBAAGA,UAAU,qBAA/D,aACA,yBAAQ+E,KAAK,SAAS/E,UAAU,kBAAhC,UAAkD,mBAAGA,UAAU,iBAA/D,4BAaZ,cAAC,EAAD,W,GA3JsCO,aCOzBif,G,kDAEjB,WAAYrgB,GAAQ,IAAD,8BACf,cAAMA,IAmBb8K,2BAA6B,SAACnG,GAC3B,EAAKzE,SAAS,CACV6K,UAAWpG,EAAEC,OAAOR,SAtBL,EA0BvB4G,sBAAwB,SAACrG,GACrB,EAAKzE,SAAS,CACV+K,SAAUtG,EAAEC,OAAOR,SA5BJ,EA+BvB8G,cAAgB,SAAC7B,GAQb,IANA,IAAI8B,EAAQ9B,EAAMzE,OAAOuG,MAErBC,EAAM,GAEJC,EAAQ,CAAC,kBAAmB,kBAAkB,mBAAmB,WAAY,WAAW,YAAY,YAAa,aAAc,aAE5HC,EAAI,EAAGA,EAAIH,EAAMxK,OAAQ2K,IAE1BD,EAAME,OAAM,SAAA3F,GAAI,OAAIuF,EAAMG,GAAG1F,OAASA,OAEtCwF,EAAIE,GAAKH,EAAMG,GAAG1F,KAAO,gCAGjC,IAAK,IAAI4F,EAAI,EAAGA,EAAIJ,EAAIzK,OAAQ6K,IAE5BC,IAAMpG,MAAM+F,EAAII,IAChBnC,EAAMzE,OAAOR,MAAQ,KAEzB,OAAO,GAnDY,EAqDvBsH,cAAgB,SAACrC,GAEb,GADYA,EAAMzE,OAAOuG,MACfxK,OAAS,EAAG,CAIlB,OAFA0I,EAAMzE,OAAOR,MAAQ,KACrBqH,IAAME,KAFM,4CAGL,EAEX,OAAO,GA7DY,EA+DvBC,cAAgB,SAACvC,GAIb,IAHA,IAAI8B,EAAQ9B,EAAMzE,OAAOuG,MAErBC,EAAM,GACDE,EAAI,EAAGA,EAAIH,EAAMxK,OAAQ2K,IAC1BH,EAAMG,GAAGO,KAHN,MAIHT,EAAIE,GAAKH,EAAMG,GAAG1F,KAAO,8CAGjC,IAAK,IAAI4F,EAAI,EAAGA,EAAIJ,EAAIzK,OAAQ6K,IAE5BC,IAAMpG,MAAM+F,EAAII,IAChBnC,EAAMzE,OAAOR,MAAQ,KAEzB,OAAO,GA7EY,EA+EvB0H,gBAAkB,SAAAzC,GACd,IAAI8B,EAAQ9B,EAAMzE,OAAOuG,MACrB,EAAKO,cAAcrC,IAAU,EAAK6B,cAAc7B,IAAU,EAAKuC,cAAcvC,IAE7E,EAAKnJ,SAAS,CACV6L,aAAcZ,EACda,OAAQ,KArFG,EAyFvBC,eAAiB,WAOb,IALA,IACMxM,EADOpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC3BF,MAEZ6M,EAAW,IAAIrN,SAEZqM,EAAI,EAAGA,EAAI,EAAK5M,MAAMqN,aAAapL,OAAQ2K,IAChDgB,EAASpN,OAAO,WAAY,EAAKR,MAAMqN,aAAaT,IACpDgB,EAASpN,OAAO,QAAS,EAAKR,MAAMqM,WACpCuB,EAASpN,OAAO,OAAQ,EAAKR,MAAMuM,UAEvCpN,IAAMC,KAAK,+EAAgFwO,EAAU,CACjGvO,QAAS,CACL,eAAgB,sBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,mBAChC,oCAAoC,GAExC+M,iBAAkB,SAAAC,GACd,EAAKvM,SAAS,CACV8L,OAASS,EAAcT,OAASS,EAAcC,MAAQ,SAI7D1O,MAAK,SAAAyC,GAEF6J,QAAQC,IAAI9J,GACZgL,IAAMkB,QAAQ,8BACdvM,OAAOf,SAAW,kBAGrBuN,OAAM,SAAAxB,GAEHK,IAAMpG,MAAM,iCAvHhB,EAAK3G,MAAQ,CAET+F,SAAS,EACTyH,iBAAkB,EAClBC,qBAAsB,EACtBpB,UAAW,GACXE,SAAU,GACVmB,KAAM,KACNC,aAAa,EACbN,aAAc,KACdC,OAAQ,GAfG,E,qDAoInB,WAEI,IAAK7N,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,a,oBAM9B,WAGI,OAAK5C,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACI,cAAC,EAAD,IAAQ,uBACPzN,KAAKvC,MAAMmO,oBACR,sBAAMhM,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKT,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,YAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,0CAEJ,qBAAKA,UAAU,YAAf,SACI,eAAC,IAAD,WACwB,cAAC,IAAD,IACA,eAACiM,EAAA,EAAD,CAAUC,IAAI,MAAMC,MAAM,UAAU5I,MAAOnD,KAAKvC,MAAMsN,OAAtD,UAAgEiB,KAAKC,MAAMjM,KAAKvC,MAAMsN,OAAQ,GAA9F,OACA,uBACA,sBAAKnL,UAAU,aAAf,UACA,sBAAKA,UAAU,QAAf,UAEI,2CACA,uBAAO+E,KAAK,OAAO/E,UAAU,eAAekF,SAAU9E,KAAK6J,2BACvD3G,UAAQ,OAEZ,sBAAKtD,UAAU,QAAf,UAEA,yCACA,uBAAO+E,KAAK,OAAO/E,UAAU,eAAekF,SAAU9E,KAAK+J,sBAC3D7G,UAAQ,OAGR,uBACA,qBAAKtD,UAAU,QAAf,SAEA,uBAAO+E,KAAK,OAAO7B,MAAM,eAAegC,SAAU9E,KAAK6K,gBAAiB1H,MAAOnD,KAAKvC,MAAM0N,YAI9F,wBAAQxG,KAAK,SAAS7B,MAAM,kBAAkB5C,QAASF,KAAKgL,eAA5D,uCAcpD,cAAC,EAAD,OApEI,cAAC,IAAD,CAAUlL,GAAI,e,GAnJYK,aCbxC+C,I,OAAW,SAACC,GACb,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,uCAMM8c,G,kDAEhB,WAAY9d,GAAQ,IAAD,8BACd,cAAMA,IACDsgB,eAAiB,EAAKA,eAAejgB,KAApB,gBACtB,EAAKkgB,eAAiB,EAAKA,eAAelgB,KAApB,gBAGtB,EAAK3B,MAAQ,CACR0E,aAAa,EACbjB,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACTigB,OAAO,GACPtM,QAAS,GACT2I,kBAAmB,GACnBC,QAAS,GACTC,OAAQ,GACRoB,WAAY,IAhBH,E,kDAqBnB,SAAexZ,GACV1D,KAAKf,SAAS,CACTsgB,OAAQ7b,EAAEC,OAAOR,U,+BAK3B,WACK,IAAKjG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE3B,IAAMsF,EAASC,SAASC,cAAc,UACtCF,EAAO5C,IAAM,8CACb4C,EAAOU,OAAQ,EACfT,SAASU,KAAKC,YAAYZ,K,4BAG/B,SAAe1B,GAAI,IAAD,OAEbA,EAAEE,iBACF,IACM/E,EADsBzB,KAAKqB,MAAMvB,aAAawB,QAAQ,wBAC9BG,GAS9B,GAPAmB,KAAKf,SAAS,CACTK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEdxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAI3C,IAAI3B,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAU+B,KAAKvC,MAAM8hB,QAErC,IACM/gB,EADU0F,EAAY2C,iBACNrI,MACtB5B,IAAMuhB,MAAN,oEAAyEtf,EAAzE,KAA+Ed,EAI1E,CACKjB,QACA,CACK,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAE3CzB,MAEE,SAAAC,GAEK,EAAKiC,SAAS,CACTK,QAAS,+BACTiN,YAAY,IAEjBpN,OAAOf,SAAW,qBAIvB,SAAAgG,GACK,IAAMC,EACAD,EAAMpH,UACFoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,MACpBmH,EAAM9E,SACN8E,EAAMG,WAEX,EAAKtF,SAAS,CACTuE,SAAS,EACTlE,QAAS+E,EACTZ,qBAAqB,YAMzCzD,KAAKf,SAAS,CACTuE,SAAS,M,oBAKxB,WAAU,IAAD,OAEJ,IAAKtG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,MAE3B,IAAM0f,EAAsBpiB,KAAKqB,MAAMvB,aAAawB,QAAQ,wBAEtD+gB,EAAK,gCAEX,OAEK,gCACA,cAAC,EAAD,IAEA,sBAAK7f,UAAU,kBAAf,UACK,cAAC,EAAD,IACA,uBACA,yBAASA,UAAU,UAAnB,SACK,qBAAKA,UAAU,kBAAf,SACK,sBAAKA,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SAEK,qBAAKA,UAAU,iCAAf,SACK,sBAAKA,UAAU,wBAAf,UAEK,oBAAIA,UAAU,+BAAd,SAA8C4f,EAAoBE,WAClE,mBAAG9f,UAAU,yBAAb,SAAuC4f,EAAoBG,eAC3D,mBAAG/f,UAAU,yBAAb,SAAuC4f,EAAoBD,SAE3D,sBAAK3f,UAAU,YAAf,UAA2B,mCAAQ,mBAAGA,UAAU,qBAArB,kBAC3B,mBAAGA,UAAU,aAAb,SAA2B4f,EAAoBzC,oBAAsB,uBAKrE,uBAAM,mCAAQ,mBAAGnd,UAAU,+BAArB,YACN,mBAAGA,UAAU,aAAb,SAA2B4f,EAAoBhR,cAAgB,uBAC1D,mCAAQ,mBAAG5O,UAAU,+BAArB,UACA,mBAAGA,UAAU,aAAb,SAA2B4f,EAAoB/Q,eAEpD,cAAC,IAAD,CACKjK,SAAUxE,KAAKqf,eACf5a,IAAK,SAAAC,GACA,EAAKb,KAAOa,GAHtB,SAOK,sBAAK9E,UAAU,YAAf,UAEK,sBAAKA,UAAU,aAAf,UACK,uBAAO0Z,QAAQ,4BAAf,2BACA,eAAC,IAAD,CACK1Z,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKsf,eACfnc,MAAOnD,KAAKvC,MAAM8hB,OALvB,UAOK,gDACA,wBAAQpc,MAAM,MAAMvD,UAAU,eAA9B,sBACA,wBAAQuD,MAAM,KAAKvD,UAAU,cAA7B,8BAIV,qBAAKA,UAAU,aAAf,SACK,wBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,SAOK,8CAGV,iCACbxD,KAAKvC,MAAM6B,SACV,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACEI,KAAKvC,MAAM8O,WACP,sBACA,qBAENxM,KAAK,QANP,SAQGC,KAAKvC,MAAM6B,cAMJ,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,iBAenD,qBAAK9E,UAAU,WAAf,SACK,sBAAKA,UAAU,OAAf,UAEK,qBAAKA,UAAU,kBAAf,SACK,cAAC,IAAD,UACA,oBAAIA,UAAU,gBAAd,SACA,oBAAIA,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,aAAakF,SAAU9E,KAAKsf,eAAgBnc,MAAOnD,KAAKvC,MAAM8hB,OAAQnZ,cAAY,MAAlG,8BAQ7BoZ,EAAoBI,2BAA2BlgB,OAEhD,qBAAKE,UAAU,YAAf,SACK,qBAAKA,UAAU,cAAf,SACK,sBAAKA,UAAU,kBAAkBuG,GAAG,WAApC,UAE8B,qBAAKvG,UAAU,uBAAf,SACK,oBAAIA,UAAU,0DAAd,SACC4f,EAAoBI,2BAA2B1Y,KAAI,SAAA7B,GAAQ,OAEvD,+BACK,sBAAMzF,UAAU,0BAAhB,SAA0C,mBAAGA,UAAU,sBACvD,sBAAKA,UAAU,0BAAf,UACK,oBAAGiD,KAAM4c,EAAKpa,EAASA,SAAUzF,UAAU,0BAA0BigB,UAAQ,EAA7E,UAA8E,mBAAGjgB,UAAU,qBAA3F,IAAkHyF,EAASya,QAC3H,uBAAMlgB,UAAU,wCAAhB,UACK,+BAAOyF,EAASnH,QAChB,mBAAG2E,KAAM4c,EAAKpa,EAASA,SAASzF,UAAU,qCAAqCigB,SAAUJ,EAAKpa,EAASA,SAAvG,SAAiH,mBAAGzF,UAAU,gDAahL,qBAAKA,UAAU,yBAYxE,iCACF,mGAgBc,cAAC,EAAD,W,GAnS8BO,aCTvC+C,GAAW,SAACC,GACb,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAMMkd,G,kDAEhB,WAAYle,GAAQ,IAAD,8BACd,cAAMA,IACDghB,gBAAkB,EAAKA,gBAAgB3gB,KAArB,gBACvB,EAAK4gB,iBAAkB,EAAKA,iBAAiB5gB,KAAtB,gBACvB,EAAKigB,eAAgB,EAAKA,eAAejgB,KAApB,gBAGrB,EAAK3B,MAAQ,CACRyD,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACT2gB,QAAQ,GACRriB,SAAS,IAZA,E,mDAmBnB,SAAgB8F,GACX1D,KAAKf,SAAS,CACTghB,QAASvc,EAAEC,OAAOR,U,8BAG5B,SAAiBO,GACZ1D,KAAKf,SAAS,CACTrB,SAAU8F,EAAEC,OAAOR,U,+BAM7B,WACK,IAAKjG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE3B,IAAMsF,EAASC,SAASC,cAAc,UACtCF,EAAO5C,IAAM,8CACb4C,EAAOU,OAAQ,EACfT,SAASU,KAAKC,YAAYZ,K,4BAG/B,SAAe1B,GAAI,IAAD,OAWb,GATAA,EAAEE,iBAEF5D,KAAKf,SAAS,CACTK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEdxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAI3C,IAAI3B,EAAW,IAAIC,SACnBD,EAASE,OAAO,UAAW+B,KAAKvC,MAAMwiB,SACtCliB,EAASE,OAAO,WAAY+B,KAAKvC,MAAMG,UAEvC,IACMY,EADU0F,EAAY2C,iBACNrI,MACtB5B,IAAMC,KAAN,6DAAwEkB,EAEnE,CACKjB,QACA,CACK,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAE3CzB,MAEE,SAAAC,GAEK,EAAKiC,SAAS,CACTK,QAAStC,EAASC,KAAKkR,OACvB5B,YAAY,IAEjBpN,OAAOf,SAAW,kBACHiL,QAAQC,IAAItM,EAASC,SAGzC,SAAAmH,GACK,IAAMC,EACAD,EAAMpH,UACFoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,MACpBmH,EAAM9E,SACN8E,EAAMG,WAEX,EAAKtF,SAAS,CACTuE,SAAS,EACTlE,QAAS+E,YAM7BrE,KAAKf,SAAS,CACTuE,SAAS,M,oBAKxB,WAAU,IAAD,OAEJ,IAAKtG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,MAE3B,IAAM0f,EAAsBpiB,KAAKqB,MAAMvB,aAAawB,QAAQ,wBAEtD+gB,EAAK,gCAEX,OAEK,gCACA,cAAC,EAAD,IAEA,sBAAK7f,UAAU,kBAAf,UACK,cAAC,EAAD,IACA,uBACA,yBAASA,UAAU,UAAnB,SACK,qBAAKA,UAAU,kBAAf,SACK,sBAAKA,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SAEK,qBAAKA,UAAU,iCAAf,SACK,sBAAKA,UAAU,wBAAf,UAEK,oBAAIA,UAAU,+BAAd,SAA8C4f,EAAoBE,WAClE,mBAAG9f,UAAU,yBAAb,SAAuC4f,EAAoBG,eAC3D,mBAAG/f,UAAU,yBAAb,SAAuC4f,EAAoBD,SAE3D,sBAAK3f,UAAU,YAAf,UAA2B,mCAAQ,mBAAGA,UAAU,qBAArB,kBAC3B,mBAAGA,UAAU,aAAb,SAA2B4f,EAAoBzC,oBAAsB,uBAAM,mCAC3E,mBAAGnd,UAAU,qBAD8D,aAE3E,mBAAGA,UAAU,aAAb,SAA2B4f,EAAoBxC,cAE/C,uBAAM,mCAAQ,mBAAGpd,UAAU,+BAArB,YACN,mBAAGA,UAAU,aAAb,SAA2B4f,EAAoBhR,cAAgB,uBAC1D,mCAAQ,mBAAG5O,UAAU,+BAArB,UACA,mBAAGA,UAAU,aAAb,SAA2B4f,EAAoB/Q,eAEpD,cAAC,IAAD,CACKjK,SAAUxE,KAAKqf,eACf5a,IAAK,SAAAC,GACA,EAAKb,KAAOa,GAHtB,SAOK,sBAAK9E,UAAU,YAAf,UAEA,sBAAKA,UAAU,aAAf,UACU,uBAAO0Z,QAAQ,4BAAf,kBACA,eAAC,IAAD,CACK1Z,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAK+f,gBACf5c,MAAOnD,KAAKvC,MAAMwiB,QALvB,UAOM,gDAED,wBAAQ9c,MAAOqc,EAAoBre,KAAMvB,UAAU,eAAnD,SAAoE4f,EAAoB9iB,iBAIlG,sBAAKkD,UAAU,aAAf,UACK,uBAAO0Z,QAAQ,4BAAf,mBACA,eAAC,IAAD,CACK1Z,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKggB,iBACf7c,MAAOnD,KAAKvC,MAAMG,SALvB,UAOK,gDACA,wBAAQuF,MAAO,EAAGvD,UAAU,eAA5B,8BAKV,qBAAKA,UAAU,aAAf,SACK,wBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,SAOK,8CAGV,iCACbxD,KAAKvC,MAAM6B,SACV,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACEI,KAAKvC,MAAM8O,WACP,sBACA,qBAENxM,KAAK,QANP,SAQGC,KAAKvC,MAAM6B,cAMJ,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,iBAenD,qBAAK9E,UAAU,WAAf,SACK,sBAAKA,UAAU,OAAf,UACK,qBAAKA,UAAU,kBAAf,SACK,cAAC,IAAD,UACA,oBAAIA,UAAU,gBAAd,SACA,oBAAIA,UAAU,WAAd,SAAyB,cAAC,IAAD,CAAMA,UAAU,aAAakF,SAAU9E,KAAKsf,eAAgBnc,MAAOnD,KAAKvC,MAAM8hB,OAAQnZ,cAAY,MAAlG,8BAO7BoZ,EAAoBI,2BAA2B1Y,KAAI,SAAA7B,GAAQ,OAE5D,qBAAKzF,UAAU,YAAf,SACK,qBAAKA,UAAU,cAAf,SACK,sBAAKA,UAAU,kBAAkBuG,GAAG,WAApC,UAE8B,qBAAKvG,UAAU,uBAAf,SACK,oBAAIA,UAAU,0DAAd,SACK,+BACK,sBAAMA,UAAU,0BAAhB,SAA0C,mBAAGA,UAAU,sBACvD,sBAAKA,UAAU,0BAAf,UACK,oBAAGiD,KAAM4c,EAAKpa,EAASA,SAAUzF,UAAU,0BAA0BigB,UAAQ,EAA7E,UAA8E,mBAAGjgB,UAAU,qBAA3F,IAAkHyF,EAASya,QAC3H,uBAAMlgB,UAAU,wCAAhB,UACK,+BAAOyF,EAASnH,QAChB,mBAAG2E,KAAM4c,EAAKpa,EAASA,SAASzF,UAAU,qCAAqCigB,SAAUJ,EAAKpa,EAASA,SAAvG,SAAiH,mBAAGzF,UAAU,6CAYhL,qBAAKA,UAAU,2CAwB5D,cAAC,EAAD,W,GAvS+BO,aCPxC+C,GAAW,SAAAC,GACZ,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCASMmgB,G,kDAEhB,WAAYnhB,GAAQ,IAAD,8BACd,cAAMA,IACDohB,eAAiB,EAAKA,eAAe/gB,KAApB,gBACtB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBAEpB,EAAK3B,MAAQ,CACR8Q,KAAM,GACNhC,YAAY,EACZjN,QAAS,GACTkE,SAAS,GATA,E,gDAiBnB,SAAaE,GACR1D,KAAKf,SAAS,CACTsP,KAAM7K,EAAEC,OAAOR,U,4BAIzB,SAAeO,GAAI,IAAD,OACbA,EAAEE,iBAEF5D,KAAKf,SAAS,CACTK,QAAS,GACViN,YAAY,EACZ/I,SAAS,IAKT,IACMhF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGtBwB,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAElC9C,IAAM2C,IAAN,iFAAoFS,KAAKvC,MAAM8Q,MAE3F,CACEzR,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIzCzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVK,QAASE,EAAIvC,KAAKqC,QAClBiN,YAAY,IAEdlD,QAAQC,IAAI9J,EAAIvC,MAElBkC,OAAOf,SAAW,+BACdoB,EAAIvC,MACJC,aAAaC,QAAQ,8BAA+BC,KAAKC,UAAUmC,EAAIvC,UAG3E,SAAAmH,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACxB/J,EAAMwH,oBACNxH,EAAMG,WAEV,EAAKtF,SAAS,CACVuE,SAAS,EACTlE,QAAS+E,OAKzBrE,KAAKf,SAAS,CACVuE,SAAS,M,oBAQtB,WAAU,IAAD,OAEJ,OACK,gCACA,cAAC,EAAD,IACK,cAAC,EAAD,IACA,sBAAK5D,UAAU,kBAAf,UACA,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,+BAIJ,uBACA,cAAC,IAAD,CAAM4E,SAAUxE,KAAKmgB,eAAgB1b,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAAM9E,UAAU,OAAOuG,GAAG,GAAvF,SACA,mCACK,qBAAKvG,UAAU,QAAf,SAEU,sBAAKA,UAAU,aAAf,UACK,yCAEA,eAAC,IAAD,CACKA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKoa,aACfjX,MAAOnD,KAAKvC,MAAM8Q,KALvB,UAOK,wBAAQpL,MAAM,GAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,0BAMnC,uBAGe,qBAAKvD,UAAU,aAAf,SACK,yBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,UAKK,4CALL,WAMMxD,KAAKvC,MAAM+F,SACP,sBAAM5D,UAAU,0CAI/B,iCACMI,KAAKvC,MAAM6B,SACP,qBAAKM,UAAU,aAAf,SACK,qBACKA,UACKI,KAAKvC,MAAM8O,WACJ,sBACA,qBAEZxM,KAAK,QANV,SAQMC,KAAKvC,MAAM6B,cAKhC,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,+B,GAnL1BvE,aCrBvBigB,G,kDAElB,WAAYrhB,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACX2iB,4BAA4B,GAC5Blf,WAAW,GALE,E,qDAenB,WACS,IAAKhE,aAAawB,QAAQ,wBAC3B,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IAAM0Y,EAAWpb,KAAKqB,MAAMvB,aAAawB,QAAQ,gCACjDsB,KAAKf,SAAS,CAEZmhB,4BAA6B5H,EAASvb,KACtCsR,KAAKiK,EAASjK,S,oBAMtB,WAKI,OAHAlF,QAAQC,IAAItJ,KAAKvC,MAAM8Q,MACvBlF,QAAQC,IAAItJ,KAAKvC,MAAM2iB,6BAElBljB,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACI,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,gDAIJ,sBAAKA,UAAU,YAAf,UAEI,wBAAOuG,GAAG,MAAMrD,MAAM,QAAtB,UAEI,kCAEA,iCAAQ,sBAAKmC,MAAO,CAAEyO,UAAW,SAAUgF,WAAW,QAA9C,4FAAsI,uBAAtI,wBACR,uBAEI,qBAAIzT,MAAO,CAAE+J,gBAAiB,WAA9B,UACI,yCACA,sCAGA,+BAAKhP,KAAKvC,MAAM8Q,KAAhB,WACA,+BAAKvO,KAAKvC,MAAM8Q,KAAhB,UACA,oCAAOvO,KAAKvC,MAAM8Q,QAClB,oCAAOvO,KAAKvC,MAAM8Q,QAClB,oCAAOvO,KAAKvC,MAAM8Q,QAClB,oCAAOvO,KAAKvC,MAAM8Q,cAK1B,gCAEKvO,KAAKvC,MAAM2iB,6BAA+BpgB,KAAKvC,MAAM2iB,4BAA4BlZ,KAAI,SAAAvI,GAAQ,OAE1F,+BACI,+BAEI,kCAAKA,EAAiC,QAAxBA,EAASgQ,cAAsB,MAE5ChQ,EAAS0O,OAAOnG,KAAI,SAAAuR,GAAQ,OACzB,8BAGCA,EAAiC,QAAxBA,EAAS9J,cAAsB,WAKjD,+BAEI,4BAAIhQ,EAASiG,OAEb,uBACJ,uBALA,mEAKsEjG,EAAS0O,OAAOnG,KAAI,SAAAqB,GAAK,OACjG,qBAAKtD,MAAO,CAAEyT,WAAY,WAA1B,SAGYnQ,EAAM3D,aAQhB,+BACA,uBACA,uBAEKjG,EAAS0O,OAAOnG,KAAI,SAAAyR,GAAM,OACvB,8BAGKA,EAAO0H,aAIpB,+BACA,uBACA,uBACK1hB,EAAS0O,OAAOnG,KAAI,SAAAyR,GAAM,OACvB,8BAGKA,EAAO2H,aAIpB,+BACA,uBACA,uBACK3hB,EAAS0O,OAAOnG,KAAI,SAAAyR,GAAM,OACvB,8BAGKA,EAAO4H,WAIpB,+BACA,uBACA,uBACK5hB,EAAS0O,OAAOnG,KAAI,SAAAyR,GAAM,OACvB,8BAGKA,EAAO6H,WAIpB,+BACA,uBACA,uBACK7hB,EAAS0O,OAAOnG,KAAI,SAAAyR,GAAM,OACvB,8BAGKA,EAAO8H,WAInB,+BACA,uBACD,uBACK9hB,EAAS0O,OAAOnG,KAAI,SAAAyR,GAAM,OACvB,8BAGKA,EAAO+H,WAIpB,kCAWhB,8BACI,cAAC,KAAD,CACI9gB,UAAU,eACViZ,MAAM,MACNC,SAAS,8BACTC,MAAM,QACNC,WAAW,oCAkB/C,cAAC,EAAD,OAvLI,cAAC,IAAD,CAAUlZ,GAAI,U,GArCwBK,aCApCwgB,G,kDAElB,WAAY5hB,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACXkjB,YAAY,GACZzf,WAAW,GALE,E,qDAenB,WACS,IAAKhE,aAAawB,QAAQ,wBAC3B,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IAAM0Y,EAAWpb,KAAKqB,MAAMvB,aAAawB,QAAQ,gBACjDsB,KAAKf,SAAS,CAET0hB,YAAanI,EAASvb,KACzBsR,KAAKiK,EAASjK,S,oBAMtB,WAKI,OAHAlF,QAAQC,IAAItJ,KAAKvC,MAAM8Q,MACvBlF,QAAQC,IAAItJ,KAAKvC,MAAMkjB,aAElBzjB,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACI,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,sDAIJ,sBAAKA,UAAU,iCAAf,UACC,wBAAOuG,GAAG,MAAKvG,UAAU,gCAAzB,UAEO,kCAEA,iCAAQ,sBAAKqF,MAAO,CAAEyO,UAAW,SAAUgF,WAAW,QAA9C,kGAA4I,uBAA5I,wBACR,uBAEe,+BAEK,uBACA,oBAAIzT,MAAO,CAAEyO,UAAW,UAAxB,0BACA,uBACA,uBAEA,6CACA,uBACA,uBACA,qBAAIzO,MAAO,CAAE+J,gBAAiB,WAA9B,8BAA6DhP,KAAKvC,MAAM8Q,QACxE,oBAAItJ,MAAO,CAAE+J,gBAAiB,aAC9B,oBAAI/J,MAAO,CAAE+J,gBAAiB,aAC9B,6CACA,uBACA,uBACA,6CACA,uBACA,uBACA,qBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,oBAAmDhP,KAAKvC,MAAM8Q,KAA9D,OACA,oBAAItJ,MAAO,CAAE+J,gBAAiB,aAC9B,oBAAI/J,MAAO,CAAE+J,gBAAiB,gBAI9C,+BACA,oBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,mBACA,2CACA,yCACA,oBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,mBACA,2CACA,yCACA,oBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,mBACA,2CACA,yCACA,oBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,mBACA,2CACA,yCACA,oBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,mBACA,2CACA,yCACA,oBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,mBACA,2CACA,yCACA,oBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,mBACA,8CAMJ,gCAEKhP,KAAKvC,MAAMkjB,aAAe3gB,KAAKvC,MAAMkjB,YAAYzZ,KAAI,SAAAvI,GAAQ,OAC1D,+BACA,6BACI,4BAAIA,EAASA,aAKb,6BACCA,EAASiiB,eAGV,6BACCjiB,EAASkiB,iBAGV,oBAAI5b,MAAO,CAAE+J,gBAAiB,WAA9B,SACCrQ,EAASmiB,aAKV,6BACCniB,EAASoiB,eAGV,6BACCpiB,EAASqiB,iBAGV,oBAAI/b,MAAO,CAAE+J,gBAAiB,WAA9B,SACCrQ,EAASsiB,aAIV,6BACCtiB,EAASuiB,aAGV,6BACCviB,EAASwiB,eAGV,oBAAIlc,MAAO,CAAE+J,gBAAiB,WAA9B,SACCrQ,EAASyiB,WAKV,6BACCziB,EAAS0iB,aAGT,6BACA1iB,EAAS2iB,eAGV,oBAAIrc,MAAO,CAAE+J,gBAAiB,WAA9B,SACCrQ,EAAS4iB,WAMX,6BACE5iB,EAAS6iB,aAGV,6BACC7iB,EAAS8iB,eAGV,oBAAIxc,MAAO,CAAE+J,gBAAiB,WAA9B,SACCrQ,EAAS+iB,WAIV,6BACC/iB,EAASgjB,aAGV,6BACChjB,EAASijB,eAGV,oBAAI3c,MAAO,CAAE+J,gBAAiB,WAA9B,SACCrQ,EAASkjB,WAGV,6BACCljB,EAASmjB,oBAc1B,8BACI,cAAC,KAAD,CACIliB,UAAU,eACViZ,MAAM,MACNC,SAAS,cACTC,MAAM,QACNC,WAAW,oCAkB/C,cAAC,EAAD,OAnNI,cAAC,IAAD,CAAUlZ,GAAI,U,GArCQK,aCSpC+C,GAAW,SAAAC,GACZ,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCASMgiB,G,kDAEhB,WAAYhjB,GAAQ,IAAD,8BACd,cAAMA,IACDohB,eAAiB,EAAKA,eAAe/gB,KAApB,gBACtB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBAEpB,EAAK3B,MAAQ,CACR8Q,KAAM,GACNhC,YAAY,EACZjN,QAAS,GACTkE,SAAS,GATA,E,gDAiBnB,SAAaE,GACR1D,KAAKf,SAAS,CACTsP,KAAM7K,EAAEC,OAAOR,U,4BAIzB,SAAeO,GAAI,IAAD,OACbA,EAAEE,iBAEF5D,KAAKf,SAAS,CACTK,QAAS,GACViN,YAAY,EACZ/I,SAAS,IAKT,IACMhF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGtBwB,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAElC9C,IAAM2C,IAAN,6EAAgFS,KAAKvC,MAAM8Q,MAEvF,CACEzR,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIzCzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVK,QAASE,EAAIvC,KAAKqC,QAClBiN,YAAY,IAEdlD,QAAQC,IAAI9J,EAAIvC,MAElBkC,OAAOf,SAAW,eACdoB,EAAIvC,MACJC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,UAG3D,SAAAmH,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACxB/J,EAAMwH,oBACNxH,EAAMG,WAEV,EAAKtF,SAAS,CACVuE,SAAS,EACTlE,QAAS+E,OAKzBrE,KAAKf,SAAS,CACVuE,SAAS,M,oBAQtB,WAAU,IAAD,OAEJ,OACK,gCACA,cAAC,EAAD,IACK,cAAC,EAAD,IACA,sBAAK5D,UAAU,kBAAf,UACA,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,+BAIJ,uBACA,cAAC,IAAD,CAAM4E,SAAUxE,KAAKmgB,eAAgB1b,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAAM9E,UAAU,OAAOuG,GAAG,GAAvF,SACA,mCACK,qBAAKvG,UAAU,QAAf,SAEU,sBAAKA,UAAU,aAAf,UACK,yCAEA,eAAC,IAAD,CACKA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKoa,aACfjX,MAAOnD,KAAKvC,MAAM8Q,KALvB,UAOK,wBAAQpL,MAAM,GAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,0BAMnC,uBAGe,qBAAKvD,UAAU,aAAf,SACK,yBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,UAKK,4CALL,WAMMxD,KAAKvC,MAAM+F,SACP,sBAAM5D,UAAU,0CAI/B,iCACMI,KAAKvC,MAAM6B,SACP,qBAAKM,UAAU,aAAf,SACK,qBACKA,UACKI,KAAKvC,MAAM8O,WACJ,sBACA,qBAEZxM,KAAK,QANV,SAQMC,KAAKvC,MAAM6B,cAKhC,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,+B,GAnL9BvE,aCZnC+C,GAAW,SAAAC,GACZ,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCASMiiB,G,kDAEhB,WAAYjjB,GAAQ,IAAD,8BACd,cAAMA,IACDohB,eAAiB,EAAKA,eAAe/gB,KAApB,gBACtB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBAEpB,EAAK3B,MAAQ,CACR8Q,KAAM,GACNhC,YAAY,EACZjN,QAAS,GACTkE,SAAS,GATA,E,gDAiBnB,SAAaE,GACR1D,KAAKf,SAAS,CACTsP,KAAM7K,EAAEC,OAAOR,U,4BAIzB,SAAeO,GAAI,IAAD,OACbA,EAAEE,iBAEF5D,KAAKf,SAAS,CACTK,QAAS,GACViN,YAAY,EACZ/I,SAAS,IAKT,IACMhF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGtBwB,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAElC9C,IAAM2C,IAAN,6EAAgFS,KAAKvC,MAAM8Q,MAEvF,CACEzR,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIzCzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVK,QAASE,EAAIvC,KAAKqC,QAClBiN,YAAY,IAEdlD,QAAQC,IAAI9J,EAAIvC,MAElBkC,OAAOf,SAAW,eACdoB,EAAIvC,MACJC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,UAG3D,SAAAmH,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACxB/J,EAAMwH,oBACNxH,EAAMG,WAEV,EAAKtF,SAAS,CACVuE,SAAS,EACTlE,QAAS+E,OAKzBrE,KAAKf,SAAS,CACVuE,SAAS,M,oBAQtB,WAAU,IAAD,OAEJ,OACK,gCACA,cAAC,EAAD,IACK,cAAC,EAAD,IACA,sBAAK5D,UAAU,kBAAf,UACA,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,+BAIJ,uBACA,cAAC,IAAD,CAAM4E,SAAUxE,KAAKmgB,eAAgB1b,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAAM9E,UAAU,OAAOuG,GAAG,GAAvF,SACA,mCACK,qBAAKvG,UAAU,QAAf,SAEU,sBAAKA,UAAU,aAAf,UACK,yCAEA,eAAC,IAAD,CACKA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKoa,aACfjX,MAAOnD,KAAKvC,MAAM8Q,KALvB,UAOK,wBAAQpL,MAAM,GAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,0BAMnC,uBAGe,qBAAKvD,UAAU,aAAf,SACK,yBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,UAKK,4CALL,WAMMxD,KAAKvC,MAAM+F,SACP,sBAAM5D,UAAU,0CAI/B,iCACMI,KAAKvC,MAAM6B,SACP,qBAAKM,UAAU,aAAf,SACK,qBACKA,UACKI,KAAKvC,MAAM8O,WACJ,sBACA,qBAEZxM,KAAK,QANV,SAQMC,KAAKvC,MAAM6B,cAKhC,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,+B,GAnL9BvE,aCrBnB8hB,G,kDAElB,WAAYljB,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACXwkB,YAAY,GACZC,iBAAiB,GACjBhhB,WAAW,GANE,E,qDAgBnB,WAAqB,IAAD,OACX,IAAKhE,aAAawB,QAAQ,wBAC3B,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAEblD,IAAMulB,OAAO,CACtBC,QAAS,WAEV7iB,IAAI,iBACFxC,MAAK,SAAAyC,GAKF,EAAKP,SAAS,CAEVgjB,YAAaziB,EAAIvC,KAAKA,KACtBilB,iBAAiB1iB,EAAIvC,KAAKA,KAC1BsR,KAAK/O,EAAIvC,KAAKsR,Y,oBAiB9B,WAKI,OAHAlF,QAAQC,IAAItJ,KAAKvC,MAAM8Q,MACvBlF,QAAQC,IAAItJ,KAAKvC,MAAMwkB,aAElB/kB,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACI,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,6DAIJ,sBAAKA,UAAU,YAAf,UAEI,wBAAOuG,GAAG,MAAMrD,MAAM,QAAtB,UAEI,kCAEA,iCAAQ,sBAAKmC,MAAO,CAAEyO,UAAW,SAAUgF,WAAW,QAA9C,2EAAqH,uBAArH,wBACR,uBAEA,qBAAIzT,MAAO,CAAE+J,gBAAiB,WAA9B,UACQ,qCACA,8CASR,gCAEKhP,KAAKvC,MAAMwkB,aAAejiB,KAAKvC,MAAMwkB,YAAY/a,KAAI,SAAAvI,GAAQ,OAE1D,+BACI,6BACMA,EAAS0jB,MAGf,6BACM1jB,EAASlB,QAGf,6BACMkB,EAASlB,QAITkB,EAAS1B,KAAKiK,KAAI,SAAAuE,GAAK,OACxB,6BAAKA,EAAM6W,4BA8BhC,8BACI,cAAC,KAAD,CACI1iB,UAAU,eACViZ,MAAM,MACNC,SAAS,8BACTC,MAAM,QACNC,WAAW,oCAkB/C,cAAC,EAAD,OAnHI,cAAC,IAAD,CAAUlZ,GAAI,U,GA1DQK,aCSpC+C,GAAW,SAAAC,GACZ,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCASMwiB,G,kDAEhB,WAAYxjB,GAAQ,IAAD,8BACd,cAAMA,IACDohB,eAAiB,EAAKA,eAAe/gB,KAApB,gBACtB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBACpB,EAAKojB,oBAAsB,EAAKA,oBAAoBpjB,KAAzB,gBAE3B,EAAK3B,MAAQ,CACR8Q,KAAM,GACNhC,YAAY,EACZjN,QAAS,GACTkE,SAAS,EACT4F,YAAY,IAXH,E,gDAkBnB,SAAa1F,GACR1D,KAAKf,SAAS,CACTsP,KAAM7K,EAAEC,OAAOR,U,iCAGzB,SAAoBO,GACf1D,KAAKf,SAAS,CACTmK,YAAa1F,EAAEC,OAAOR,U,4BAKhC,SAAeO,GAAI,IAAD,OACbA,EAAEE,iBAEF5D,KAAKf,SAAS,CACTK,QAAS,GACViN,YAAY,EACZ/I,SAAS,IAKT,IACMhF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGtBwB,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAElC9C,IAAM2C,IAAN,8EAAiFS,KAAKvC,MAAM8Q,KAA5F,wBAAgHvO,KAAKvC,MAAM2L,aAEvH,CACEtM,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIzCzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVK,QAASE,EAAIvC,KAAKqC,QAClBiN,YAAY,IAIhBpN,OAAOf,SAAW,0BACdoB,EAAIvC,MACJC,aAAaC,QAAQ,yBAA0BC,KAAKC,UAAUmC,EAAIvC,UAGtE,SAAAmH,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACxB/J,EAAMwH,oBACNxH,EAAMG,WAEV,EAAKtF,SAAS,CACVuE,SAAS,EACTlE,QAAS+E,OAKzBrE,KAAKf,SAAS,CACVuE,SAAS,M,oBAQtB,WAAU,IAAD,OAEJ,OACK,gCACA,cAAC,EAAD,IACK,cAAC,EAAD,IACA,sBAAK5D,UAAU,kBAAf,UACA,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,+BAIJ,uBACA,cAAC,IAAD,CAAM4E,SAAUxE,KAAKmgB,eAAgB1b,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAAM9E,UAAU,OAAOuG,GAAG,GAAvF,SACA,mCACA,qBAAKvG,UAAU,QAAf,SAEyB,sBAAKA,UAAU,aAAf,UACK,gDAEA,eAAC,IAAD,CACKA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKwiB,oBACfrf,MAAOnD,KAAKvC,MAAM2L,YALvB,UAOK,wBAAQjG,MAAM,GAAd,wBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,wBAIT,qBAAKvD,UAAU,QAAf,SAED,sBAAKA,UAAU,aAAf,UACK,yCAEA,eAAC,IAAD,CACKA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKoa,aACfjX,MAAOnD,KAAKvC,MAAM8Q,KALvB,UAOK,wBAAQpL,MAAM,GAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,0BAM7C,uBAGe,qBAAKvD,UAAU,aAAf,SACK,yBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,UAKK,4CALL,WAMMxD,KAAKvC,MAAM+F,SACP,sBAAM5D,UAAU,0CAI/B,iCACMI,KAAKvC,MAAM6B,SACP,qBAAKM,UAAU,aAAf,SACK,qBACKA,UACKI,KAAKvC,MAAM8O,WACJ,sBACA,qBAEZxM,KAAK,QANV,SAQMC,KAAKvC,MAAM6B,cAKhC,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,+B,GA5MnBvE,aCrB9BsiB,G,kDAElB,WAAY1jB,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACXglB,uBAAuB,GACvBvhB,WAAW,GALE,E,qDAenB,WACS,IAAKhE,aAAawB,QAAQ,wBAC3B,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IAAM0Y,EAAWpb,KAAKqB,MAAMvB,aAAawB,QAAQ,2BACjDsB,KAAKf,SAAS,CAETwjB,uBAAwBjK,EAASvb,KACjCsR,KAAKiK,EAASjK,KACdmU,YAAYlK,EAASpP,gB,oBAMhC,WAKI,OAHAC,QAAQC,IAAItJ,KAAKvC,MAAM8Q,MACvBlF,QAAQC,IAAItJ,KAAKvC,MAAMglB,wBAElBvlB,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACI,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,oCAIJ,sBAAKA,UAAU,iCAAf,UACC,wBAAOuG,GAAG,MAAKvG,UAAU,gCAAzB,UAEO,kCAEA,iCAAQ,sBAAKqF,MAAO,CAAEyO,UAAW,SAAUgF,WAAW,QAA9C,sCAAiF1Y,KAAKvC,MAAMilB,YAA5F,IAAyG,uBAAzG,SACR,uBAGI,+BAYgB,uCACA,qCACA,sCACA,sCAEA,8CAMpB,gCAEK1iB,KAAKvC,MAAMglB,wBAA0BziB,KAAKvC,MAAMglB,uBAAuBvb,KAAI,SAAAvI,GAAQ,OAChF,+BACA,6BACI,4BAAIA,EAASlB,UAGb,6BACA,4BAAIkB,EAASnB,QAKb,6BACCmB,EAAS0hB,OAGV,6BACC1hB,EAAS2hB,OAOV,6BACC3hB,EAASmjB,oBAc1B,8BACI,cAAC,KAAD,CACIliB,UAAU,eACViZ,MAAM,MACNC,SAAS,yBACTC,MAAM,QACNC,WAAW,oCAkB/C,cAAC,EAAD,OAvHI,cAAC,IAAD,CAAUlZ,GAAI,U,GAtCmBK,aCA/BwiB,G,kDAElB,WAAY5jB,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACXklB,eAAe,GACfzhB,WAAW,GALE,E,qDAenB,WACS,IAAKhE,aAAawB,QAAQ,wBAC3B,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IAAM0Y,EAAWpb,KAAKqB,MAAMvB,aAAawB,QAAQ,mBACjDsB,KAAKf,SAAS,CAET0jB,eAAgBnK,EAASvb,KACzBsR,KAAKiK,EAASjK,S,oBAMzB,WAKI,OAHAlF,QAAQC,IAAItJ,KAAKvC,MAAM8Q,MACvBlF,QAAQC,IAAItJ,KAAKvC,MAAMklB,gBAElBzlB,aAAawB,QAAQ,wBAKtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACI,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,iCAIJ,sBAAKA,UAAU,iCAAf,UACC,wBAAOuG,GAAG,MAAKvG,UAAU,gCAAzB,UAEO,kCAEA,iCAAQ,sBAAKqF,MAAO,CAAEyO,UAAW,SAAUgF,WAAW,QAA9C,+BAAyE,uBAAzE,SACR,uBAGe,+BACA,oBAAIzT,MAAO,CAAE+J,gBAAiB,WAA9B,sBACX,yCACA,2CACA,oBAAI/J,MAAO,CAAE+J,gBAAiB,WAA9B,yBAQJ,gCAEKhP,KAAKvC,MAAMklB,gBAAkB3iB,KAAKvC,MAAMklB,eAAezb,KAAI,SAAAvI,GAAQ,OAChE,+BACA,6BACI,4BAAIA,EAASA,aAKb,6BACCA,EAASikB,UAGV,6BACCjkB,EAASkkB,YAGV,oBAAI5d,MAAO,CAAE+J,gBAAiB,WAA9B,SACCrQ,EAAS8M,mBAe1B,8BACI,cAAC,KAAD,CACI7L,UAAU,eACViZ,MAAM,MACNC,SAAS,yBACTC,MAAM,QACNC,WAAW,oCAkB/C,cAAC,EAAD,OArGI,cAAC,IAAD,CAAUlZ,GAAI,U,GArCWK,aCSvC+C,GAAW,SAAAC,GACZ,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCASM+iB,G,kDAEhB,WAAY/jB,GAAQ,IAAD,8BACd,cAAMA,IACDohB,eAAiB,EAAKA,eAAe/gB,KAApB,gBACtB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBAEpB,EAAK3B,MAAQ,CACR8Q,KAAM,GACNhC,YAAY,EACZjN,QAAS,GACTkE,SAAS,GATA,E,gDAiBnB,SAAaE,GACR1D,KAAKf,SAAS,CACTsP,KAAM7K,EAAEC,OAAOR,U,4BAIzB,SAAeO,GAAI,IAAD,OACbA,EAAEE,iBAEF5D,KAAKf,SAAS,CACTK,QAAS,GACViN,YAAY,EACZ/I,SAAS,IAKT,IACMhF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAGtBwB,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAElC9C,IAAM2C,IAAN,kFAAqFS,KAAKvC,MAAM8Q,MAE5F,CACEzR,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIzCzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACVK,QAASE,EAAIvC,KAAKqC,QAClBiN,YAAY,IAEdlD,QAAQC,IAAI9J,EAAIvC,MAElBkC,OAAOf,SAAW,kBACdoB,EAAIvC,MACJC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,UAG9D,SAAAmH,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACxB/J,EAAMwH,oBACNxH,EAAMG,WAEV,EAAKtF,SAAS,CACVuE,SAAS,EACTlE,QAAS+E,OAKzBrE,KAAKf,SAAS,CACVuE,SAAS,M,oBAQtB,WAAU,IAAD,OAEJ,OACK,gCACA,cAAC,EAAD,IACK,cAAC,EAAD,IACA,sBAAK5D,UAAU,kBAAf,UACA,uBACA,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,+BAIJ,uBACA,cAAC,IAAD,CAAM4E,SAAUxE,KAAKmgB,eAAgB1b,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAAM9E,UAAU,OAAOuG,GAAG,GAAvF,SACA,mCACK,qBAAKvG,UAAU,QAAf,SAEU,sBAAKA,UAAU,aAAf,UACK,yCAEA,eAAC,IAAD,CACKA,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAKoa,aACfjX,MAAOnD,KAAKvC,MAAM8Q,KALvB,UAOK,wBAAQpL,MAAM,GAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,0BAMnC,uBAGe,qBAAKvD,UAAU,aAAf,SACK,yBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,UAKK,4CALL,WAMMxD,KAAKvC,MAAM+F,SACP,sBAAM5D,UAAU,0CAI/B,iCACMI,KAAKvC,MAAM6B,SACP,qBAAKM,UAAU,aAAf,SACK,qBACKA,UACKI,KAAKvC,MAAM8O,WACJ,sBACA,qBAEZxM,KAAK,QANV,SAQMC,KAAKvC,MAAM6B,cAKhC,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,+B,GAnL3BvE,aCtBvB4iB,G,kDAEjB,WAAYhkB,GAAQ,IAAD,8BACf,cAAMA,IACDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACX5B,QAAS,GACT2T,QAAS,IANE,E,qDASnB,WAAqB,IAAD,OAChB,IAAK/V,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,wDACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUmC,EAAIvC,OAI1D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,oBA0C7B,WAEI,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,0BAASkB,UAAU,kBAAnB,UACI,uBACA,qBAAKA,UAAU,kBAAf,SAGI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UAEI,oBAAIA,UAAU,aAAd,qBACA,sBAAKA,UAAU,aAAf,UACI,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,WAAWhV,MAAM,WAAjF,SACI,mBAAG0B,UAAU,mBAEjB,wBAAQ+E,KAAK,SAAS/E,UAAU,eAAesT,mBAAiB,SAAShV,MAAM,SAA/E,SACI,mBAAG0B,UAAU,yBAIxBI,KAAKvC,MAAMyD,UACR,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGhD,qBAAKrH,UAAU,gBAAf,SAEI,wBAAOA,UAAU,+BAAjB,UACI,gCACI,+BAEA,oBAAIqF,MAAO,CAAEsC,MAAO,MAApB,yBAMG,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,uBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,kBAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,qBAGE,oBAAItC,MAAO,CAAEsC,MAAO,MAApB,kBAID,iDAGA,oBAAItC,MAAO,CAAEsC,MAAO,MAAQ3H,UAAU,cAAtC,oBAGA,oBAAIqF,MAAO,CAAEsC,MAAO,MAApB,yBAKPvH,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE1B,gCACI,+BAEI,+BACI,cAAC,IAAD,UACKA,EAAOtU,QAGZ,uBACA,+CACesU,EAAOlL,cAe1B,6BACI,cAAC,IAAD,UACKkL,EAAOW,uBAIhB,6BACI,cAAC,IAAD,UACKX,EAAOjE,SAIhB,6BACI,cAAC,IAAD,UACKiE,EAAOlE,YAIhB,6BACI,cAAC,IAAD,UACKkE,EAAOpJ,gBAOhB,qBAAIxJ,UAAU,mBAAd,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,wBAAwBG,KAAK,cAAcqT,gBAAe,GAAIC,gBAAe,EAAGC,gBAAe,GAAIrO,MAAO,CAAEsC,MAAM,GAAD,OAAKiL,EAAOe,SAAS,IAArB,UAGpI,gCACKf,EAAOe,SAAS,SAIzB,oBAAI3T,UAAU,gBAAd,SACI,sBAAMA,UAAU,sBAAhB,oBAEJ,qBAAIA,UAAU,6BAAd,UACI,eAAC,IAAD,CAAMA,UAAU,yBAAyBE,GAAG,IAA5C,UACI,mBAAGF,UAAU,kBADjB,UADJ,mCA2BpC,cAAC,EAAD,OAlKI,cAAC,IAAD,CAAUE,GAAI,U,GAjFMK,aCwBzB6iB,GA7BE,SAAC,GAAgD,EAA9Crb,WAA+C,IAAnC9I,EAAkC,EAAlCA,GAAI+F,EAA8B,EAA9BA,KAAMgD,EAAwB,EAAxBA,YAAazE,EAAW,EAAXA,MAE3C0E,EAAiBC,qBAAWN,GAA5BK,aAER,OAEI,sBAAKjI,UAAU,QAAf,UAEIgF,EAFJ,MAEY,wBAAOK,MAAO,CAAE8G,MAAO,QAAvB,qBAA6C5I,EAAMoB,WAAW0e,QAAQ,wBAAyB,KAA/F,OACX,uBACAlb,UAAW,SAACC,GAAD,MAAS,CAAC,IAAK,IAAK,IAAK,KAAK1G,SAAS0G,EAAIC,MAAQD,EAAIpE,kBAClEe,KAAK,SACLuD,KAAK,MACLtI,UAAU,eACVuI,IAAK,EAELrD,SAAU,SAAAsD,GAAK,OAAIP,EAAahJ,EAAIuJ,IACpCjF,MAAOyE,IAGR,2BCOOsb,GA3BY,SAAC,GAAgD,EAA9Cvb,WAA+C,IAAnC9I,EAAkC,EAAlCA,GAAI+F,EAA8B,EAA9BA,KAAMgD,EAAwB,EAAxBA,YAAazE,EAAW,EAAXA,MAErD0E,EAAiBC,qBAAWN,GAA5BK,aACR,OAEI,sBAAKjI,UAAU,QAAf,UAEIgF,EAFJ,MAEY,wBAAOK,MAAO,CAAE8G,MAAO,QAAvB,qBAA6C5I,EAA7C,OACX,uBACA4E,UAAW,SAACC,GAAD,MAAS,CAAC,IAAK,IAAK,KAAK1G,SAAS0G,EAAIC,MAAQD,EAAIpE,kBAC7De,KAAK,SACLuD,KAAK,MACLtI,UAAU,eAEVkF,SAAU,SAAAsD,GAAK,OAAIP,EAAahJ,EAAIuJ,IACpCjF,MAAOyE,IAGR,2BCiBOub,GAnCQ,SAAC,GAA+C,IAAD,IAA5C5a,MAASZ,EAAmC,EAAnCA,WAAY9I,EAAuB,EAAvBA,GAAI+F,EAAmB,EAAnBA,KAAMzB,EAAa,EAAbA,MAErD,OAAQwE,GACJ,IAAK,SACD,OAAQ,cAAC,GAAD,CACJ9I,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,IAGX,IAAK,aACL,OAAQ,cAAC,GAAD,CACJtE,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,IAGf,IAAK,cACD,OAAQ,cAAC,EAAD,CACJtE,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,IAIf,QACI,OAAO,OCFJigB,GA3BW,SAAC,GAAmD,IAAD,IAAhDC,UAAa1b,EAAmC,EAAnCA,WAAY9I,EAAuB,EAAvBA,GAAI+F,EAAmB,EAAnBA,KAAMzB,EAAa,EAAbA,MAE5D,OAAQwE,GACJ,IAAK,SACD,OAAQ,cAAC,GAAD,CACJ9I,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,IAGf,IAAK,cACD,OAAQ,cAAC,GAAD,CACJtE,GAAIA,EACJ+F,KAAMA,EACN+C,WAAYA,EACZxE,MAAOA,IAIf,QACI,OAAO,OCuSJmgB,GA9SM,SAACvkB,GAGpB,IAAM8E,EAAOsI,mBACPpI,EAAWoI,mBAJa,EAMmBC,mBAAS,IAN5B,mBAMvBC,EANuB,KAMHC,EANG,OAOMF,oBAAS,GAPf,mBAOvBG,EAPuB,KAOXC,EAPW,OAQAJ,mBAAS,IART,mBAQvB9M,EARuB,KAQdmN,EARc,OASAL,oBAAS,GATT,mBASvB5I,EATuB,KASdkJ,EATc,KAaxB6W,EAAenmB,KAAKqB,MAAMvB,aAAawB,QAAQ,iBAC/CmO,EAAsB0W,EAAa3L,YAIzC3U,qBAAU,WAER,IACM4J,EADezP,KAAKqB,MAAMvB,aAAawB,QAAQ,iBACZkZ,YACzCtL,EAAmBO,KAGlB,IAqIH,IAAK3P,aAAawB,QAAQ,wBACxB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAEP1C,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAAjD,IACI+gB,EAAK,gCACT,OAEE,eAACjY,EAAYuF,SAAb,CAAsB5J,MAAO,CAAE0E,aAzDZ,SAAC1B,EAAIiC,GAOxB,IALA,IAAM4E,EAAW,eAAQX,GACnBY,EAAG,YAAOZ,GAIPa,EAAI,EAAGA,EAAIF,EAAYtN,OAAQwN,IACtCD,EAAIE,KAAKH,EAAYE,IAIvB,IAAK,IAAI9F,EAAI,EAAGA,EAAI6F,EAAIvN,OAAQ0H,IAAK,CAInC,IAHA,IAAMzI,EAAWsO,EAAI7F,GAGZgG,EAAI,EAAGA,EAAIzO,EAAS0O,OAAO3N,OAAQ0N,IAAK,CAC/C,IAAM7E,EAAQ5J,EAAS0O,OAAOD,GAI1BjH,IADWoC,EAAP1J,KAEN0J,EAAK,MAAYH,EAAMzE,OAAOR,OAKlC,IAAK,IAAImK,EAAI,EAAGA,EAAI3O,EAAS4O,gBAAgB5O,EAAS4O,eAAe7N,OAAU4N,IAI7E,IAHA,IAAME,EAAc7O,EAAS4O,eAAeD,GAGnCF,EAAI,EAAGA,EAAII,EAAYH,QAAQG,EAAYH,OAAO3N,OAAU0N,IAAK,CACxE,IAAM5E,EAAsBgF,EAAYH,OAAOD,GAM3CjH,IADWqC,EAAP3J,KAEN2J,EAAmB,MAAYJ,EAAMzE,OAAOR,QAQpDjG,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUgP,MAUxD,UACE,cAAC,EAAD,IACA,sBAAKzM,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACE,cAAC,EAAD,IAAQ,uBACR,yBAAS7N,UAAU,UAAnB,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SAKE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,CAAM4E,SAtJC,SAAC4D,GACpBA,EAAMxE,iBAEN6I,EAAW,IACXD,GAAc,GAEdC,EAAW,IACXC,GAAW,GAGX7I,EAAK6J,QAAQ5J,cAGb,IACMtF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAIhB+kB,EAAenmB,KAAKqB,MAAMvB,aAAawB,QAAQ,iBAG/C8kB,EAAiBD,EAAa1kB,GAC9B2K,EAAW+Z,EAAa9lB,MACxBgM,EAAS8Z,EAAaE,IACtBC,EAAaH,EAAa1f,KAE1B+J,EAAUxQ,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAG1CmP,EAAYC,OAAOC,OAAOH,GAK1BK,GAJW7Q,KAAKqB,MAAMvB,aAAawB,QAAQ,yBACrB0C,QAI5B,CACEuiB,YAAaH,EACb/Z,OAAQA,EACRD,SAAUA,EACV3F,KAAMgK,GAAa6V,IAG2B,IAA5C3f,EAAS2J,QAAQ1J,QAAQC,QAAQvE,QAGnC9C,IAAMC,KAAK,0DAA2DoR,EACpE,CACEnR,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAGvCzB,MAAK,SAAAyC,GAEAA,EAAIvC,MACNC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAE9DwP,EAAWjN,EAAIvC,KAAKkR,QACpB3B,GAAc,MAEd,SAACpI,GACC,IAAMC,EACHD,EAAMpH,UACLoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACtB/J,EAAMgK,cACNhK,EAAMG,WAERkI,EAAWpI,GACXmI,GAAc,OA6EoB/H,IAAKZ,EAAnC,WACI0I,GACA,gCACE,iCAAQ,oBAAIzJ,MAAM,YAAV,SAAuBygB,EAAarlB,UAC5C,iCAAQ,oBAAG4E,MAAM,YAAT,UAAqB,kDAA2BygB,EAAana,YAAYiF,cAAzE,QAA8F,6CAAsBkV,EAAajV,QAAQD,cAAzI,QAA8J,2CAAoBkV,EAAahV,UACvM,iCAAQ,oBAAGzL,MAAM,YAAT,UAAqB,gDAAyBygB,EAAa5L,UAAUtJ,cAAc,6CAAsBkV,EAAajV,QAAQD,cAA9H,QAAmJ,mDAA4BkV,EAAaK,qBAGnM/W,EAAoB3F,KAAI,SAAAwH,GAAO,OAC9B,sBAAK9O,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,aAAd,SAA4B8O,EAAQ9J,SAEtC,qBAAKhF,UAAU,YAAf,SAEE,qBAAKA,UAAU,MAAf,SAEI8O,EAAUA,EAAQrB,OAAOnG,KAAI,SAACqB,EAAOnB,GAAR,OAAc,cAAC,GAAD,CAAwBmB,MAAOA,GAAVnB,MAC5D,SAITsH,EAAQnB,eAAerG,KAAI,SAAA2H,GAAW,OACrC,gCACE,oBAAIjP,UAAU,GAAd,SAAkBiP,EAAYjK,OAC9B,qBAAKhF,UAAU,SAAf,SACE,qBAAKA,UAAU,MAAf,SAEIiP,EAAYxB,QAAUwB,EAAYxB,OAAOnG,KAAI,SAACmc,EAAWjc,GAAZ,OAAkB,cAAC,GAAD,CAA4Bic,UAAWA,GAAdjc,sBAUpG,qBAAKxH,UAAU,YAAf,SACC2jB,EAAaM,qBAAqBN,EAAaM,qBAAqBnkB,QAEnE,qBAAKE,UAAU,cAAf,SACE,sBAAKA,UAAU,kBAAkBuG,GAAG,WAApC,UAEE,qBAAKvG,UAAU,uBAAf,SACE,oBAAIA,UAAU,0DAAd,SACC2jB,EAAaM,qBAAqB3c,KAAI,SAAA7B,GAAQ,OAE7C,+BACE,sBAAMzF,UAAU,0BAAhB,SAA0C,mBAAGA,UAAU,sBACvD,sBAAKA,UAAU,0BAAf,UACE,oBAAGiD,KAAM4c,EAAOpa,EAASA,SAAUzF,UAAU,0BAA0BigB,UAAQ,EAA/E,UAAgF,mBAAGjgB,UAAU,qBAA7F,IAAoHyF,EAASya,QAC7H,uBAAMlgB,UAAU,wCAAhB,UACE,+BAAOyF,EAASnH,QAChB,mBAAG2E,KAAM4c,EAAOpa,EAASA,SAAUzF,UAAU,qCAAqCigB,SAAUJ,EAAOpa,EAASA,SAA5G,SAAsH,mBAAGzF,UAAU,gDAa7I,qBAAKA,UAAU,uBAW1C,uCAAS,mBAAGA,UAAU,iDAAmD,oBAAIqF,MAAO,CAAE8G,MAAO,OAApB,oFAGtD,qBAAKnM,UAAU,aAAf,SAEE,uCAAS,yBAAQA,UAAU,0BAA0BoF,SAAUxB,EAAtD,UACNA,GACC,sBAAM5D,UAAU,iCAElB,sDAMR,6BACE,iCACGN,GACC,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACE2M,EAAa,sBAAwB,qBAEvCxM,KAAK,QAJP,SAMGT,UAQX,cAAC,IAAD,CAAa2F,MAAO,CAAEC,QAAS,QAAUT,IAAKV,kBAS1D,cAAC,EAAD,QCzTe+f,G,kDAEhB,aAAe,IAAD,8BACT,gBAYFhf,SAAW,SAACpB,EAAGqgB,GACb,EAAK9kB,SAAS,CACZhC,KAAM,EAAKQ,MAAMR,KAAKiK,KAAI,SAAC4T,EAAE1T,GAC3B,OAAGA,IAAM2c,EACArgB,EAAEC,OAAOR,MAEX2X,QAnBF,EAwBXkJ,aAAe,kBAAM3a,QAAQC,IAAIlM,KAAKqB,MAAM,EAAKhB,SArB/C,EAAKA,MAAQ,CACXR,KAAM,CAAC,CACL,KAAQ,OACP,CACD,KAAQ,QAPH,E,0CA0BX,WAAU,IAAD,OACP,OACE,gCAAM+C,KAAKvC,MAAMR,KAAKiK,KAAI,SAAC4T,EAAE1T,GAC3B,OAAO,gCAAK,uBACX,0BAAUtC,SAAU,SAAApB,GAAC,OAAI,EAAKoB,SAASpB,EAAG0D,IAA1C,SACEhK,KAAKC,UAAUyd,WAKpB,uBACA,wBAAQ5a,QAASF,KAAKgkB,aAAtB,8B,GAvCsB7jB,aCe5B+C,GAAW,SAAAC,GACb,IAAKA,EACD,OACI,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAMN2Z,GAAS,CACX,OAAU,CACN,CAAEvT,GAAI,GAAIwT,KAAM,cAChB,CAAExT,GAAI,KAAMwT,KAAM,MAClB,CAAExT,GAAI,KAAMwT,KAAM,MACpB,CAAExT,GAAI,KAAMwT,KAAM,MAClB,CAAExT,GAAI,KAAMwT,KAAM,OAEpB,SAAY,CACR,CAAExT,GAAI,GAAIwT,KAAM,cAClB,CAAExT,GAAI,OAAQwT,KAAM,QACpB,CAAExT,GAAI,OAAQwT,KAAM,UAGLsK,G,kDAEjB,WAAYllB,GAAQ,IAAD,8BACf,cAAMA,IA4BN+F,SAAW,YAA4B,IAAf3B,EAAc,EAAxBQ,OAAUR,MACtB,EAAKlE,SAAS,CAAE4a,UAAW1W,KA5B7B,EAAK+gB,iBAAmB,EAAKA,iBAAiB9kB,KAAtB,gBACxB,EAAK2a,gBAAkB,EAAKA,gBAAgB3a,KAArB,gBACvB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBACpB,EAAK+S,YAAc,EAAKA,YAAY/S,KAAjB,gBACnB,EAAK6a,mBAAqB,EAAKA,mBAAmB7a,KAAxB,gBAC1B,EAAKkb,iBAAmB,EAAKA,iBAAiBlb,KAAtB,gBAExB,EAAK3B,MAAQ,CACTkB,SAAU,GACV2P,QAAS,GACTC,KAAM,GAEN/K,SAAS,EACTlE,QAAS,GACT8J,YAAY,GACZlI,WAAW,EACX4H,WAAW,EACXE,WAAW,EACXkL,mBAAoB,GACpBC,uBAAuB,EACvBvI,oBAAoB,EACpBiO,UAAW,YAvBA,E,oDAkCnB,SAAiBnW,GACb1D,KAAKf,SAAS,CACVN,SAAU+E,EAAEC,OAAOR,U,6BAI3B,SAAgBO,GACZ1D,KAAKf,SAAS,CACVqP,QAAS5K,EAAEC,OAAOR,U,0BAI1B,SAAaO,GACT1D,KAAKf,SAAS,CACVsP,KAAM7K,EAAEC,OAAOR,U,8BAIvB,SAAiBO,GACb1D,KAAKf,SAAS,CACVub,SAAU9W,EAAEC,OAAOR,U,gCAG3B,SAAmBO,GACf1D,KAAKf,SAAS,CACVmK,YAAa1F,EAAEC,OAAOR,U,yBAM9B,SAAYO,GAAI,IAAD,OACXA,EAAEE,iBAEF5D,KAAKf,SAAS,CACViV,mBAAoB,GACpBC,uBAAuB,EACvBvI,oBAAoB,IAKpB,IACMpN,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAOlBT,GAJuBb,aAAawB,QAAQ,iBAIjC,IAAIV,UACnBD,EAASE,OAAO,WAAY+B,KAAKvC,MAAMkB,UACvCZ,EAASE,OAAO,UAAW+B,KAAKvC,MAAM6Q,SACtCvQ,EAASE,OAAO,OAAQ+B,KAAKvC,MAAM8Q,MAInCvO,KAAK6D,KAAKC,cACmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAElC9C,IAAMC,KAAK,qEACXkB,EACI,CACIjB,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACF,EAAKP,SAAS,CACViV,mBAAoB1U,EAAIvC,KAAKkR,OAC7BgG,uBAAuB,IAEzB9K,QAAQC,IAAI9J,EAAIvC,MAElBkC,OAAOf,SAAW,UACdoB,EAAIvC,MACJC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUmC,EAAIvC,UAGjE,SAAAmH,GACI,IAAMC,EACDD,EAAMpH,UACHoH,EAAMpH,SAASC,KAAKqC,SACpB8E,EAAMpH,SAASC,KAAKqC,SACxB8E,EAAMwH,oBACNxH,EAAMG,WAEV,EAAKtF,SAAS,CACV2M,oBAAoB,EACpBtM,QAAS+E,OAKzBrE,KAAKf,SAAS,CACV2M,oBAAoB,M,+BAchC,WAEI,IAAK1O,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAI1B5C,aAAaC,QAAQ,gBADC,GAItBD,aAAaC,QAAQ,cADD,GAGpB,IAAMM,EAAQ,iBAGRe,EAFOoI,EAAYC,iBAENrI,MACnB5B,IAAM2C,IAAN,0DACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAAOA,KAIdV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,UAKrEL,IAAM2C,IAAN,wDACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAAOA,KAIdV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,UAK/DL,IAAM2C,IAAN,gEACA,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAAOA,KAIdV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUmC,EAAIvC,Y,gCAOtE,SAAmBgT,EAAWC,GAG1BhT,aAAaC,QAAQ,gBADC,GAGtBD,aAAaC,QAAQ,cADD,GAGpB,IACI,GAAI+S,EAAU9G,cAAgBpJ,KAAKvC,MAAM2L,YAAa,CAClD,IAAM3L,EAAQuC,KAAKvC,MAAM2L,YACrB3L,GACAuC,KAAKf,SAAS,CACV6J,UAAWrL,EAAM6D,SAAS,MAC1B0H,UAAWvL,EAAM6D,SAAS,YAKxC,MAAOoC,GAEL2F,QAAQC,IAAI5F,M,oBAKpB,WAAU,IAAD,OAGL,IAAKxG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IAAM4J,EAAiBtM,KAAKqB,MAAMvB,aAAawB,QAAQ,kBAEjDkc,GADexd,KAAKqB,MAAMvB,aAAawB,QAAQ,gBAClCtB,KAAKqB,MAAMvB,aAAawB,QAAQ,gBAR9C,EAU4BsB,KAAKvC,MAA9BqL,EAVH,EAUGA,UAAWE,EAVd,EAUcA,UAGX6R,EAAUnB,GAAO1Z,KAAKvC,MAAMoc,WAGpC,OACI,gCACI,cAAC,EAAD,IACA,sBAAKja,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACI,cAAC,EAAD,IAAQ,uBACPzN,KAAKvC,MAAMmO,oBACR,sBAAMhM,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKT,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SAEI,sBAAKA,UAAU,YAAf,UAEA,iCACqBI,KAAKvC,MAAMyW,oBACR,qBAAKtU,UAAU,OAAf,SACI,qBACIA,UACII,KAAKvC,MAAM0W,sBACT,sBACA,qBAENpU,KAAK,QANT,SAQI,mCAAOC,KAAKvC,MAAMyW,4BAK9C,sBAAKtU,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,iDAEJ,qBAAKA,UAAU,YAAf,SAEI,eAAC,IAAD,CAAM4E,SAAUxE,KAAKmS,YAAa1N,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAA1D,UACI,sBAAK9E,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qDAEA,eAAC,IAAD,CAAQA,UAAU,gBAAgBiF,aAAW,EACzC1B,MAAOnD,KAAKvC,MAAMkB,SAClBmG,SAAU9E,KAAKkkB,iBACfnf,YAAa,CAAC7B,IAHlB,UAKE,wBAAQC,MAAM,GAAd,wBAEF,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,0BAAd,2CAKR,qBAAKvD,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,4CACA,eAAC,IAAD,CAASA,UAAU,gBAAgBiF,aAAW,EAC1C1B,MAAOnD,KAAKvC,MAAMoc,UAClB/U,SAAU9E,KAAK8E,SACfC,YAAa,CAAC7B,IAHlB,UAKC,wBAAQC,MAAM,WAAd,uBACA,wBAAQA,MAAM,SAAd,4BAOT,qBAAKvD,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACA,6CAEI,cAAC,IAAD,CAAQA,UAAU,eACjBuD,MAAOnD,KAAKvC,MAAM6Q,QAClBxJ,SAAU9E,KAAK+Z,gBACfhV,YAAa,CAAC7B,IAHf,SAUK2X,EAAQ3T,KAAI,SAAA4T,GAAC,OAAI,wBAAmB3X,MAAO2X,EAAE3U,GAA5B,SAAiC2U,EAAEnB,MAAtBmB,EAAE3U,iBAMjD,qBAAKvG,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,0CACA,cAAC,IAAD,CAAO+E,KAAK,SAAS/E,UAAU,gBAAgBiF,aAAW,EACtD1B,MAAOnD,KAAKvC,MAAM8Q,KAClBzJ,SAAU9E,KAAKoa,aACfrV,YAAa,CAAC7B,aAM7B4F,GACG,qBAAKlJ,UAAU,kBAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCAEI,+BACI,uCAEA,4CACC,cAAC,IAAD,CACOob,WAAW,0BACXC,KAAK,cACLC,gBAAiB,SAACC,GAEd,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,gBAAiBgU,IAK1CkK,aAAc,SAACF,GAGX,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,gBAAiBgU,IAG1CmK,eAAgB,SAACH,GAEb,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAIhDjG,aAAaC,QAAQ,gBAAiBgU,cAW1D,uBAAOvR,UAAU,aAAjB,SACK8J,EAAexC,KAAI,SAACzJ,EAAO2J,GAAR,OAEhB,+BACI,6BAAK3J,EAAMS,QACX,6BACI,uBACIyG,KAAK,WACL/E,UAAU,kBACVuD,MAAK,UAAK1F,EAAMoB,IAEhBkG,YAAa,CAAC7B,qBAY9C8F,GACI,qBAAKpJ,UAAU,kBAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,qCAEA,4CACC,cAAC,IAAD,CACOob,WAAW,0BACXC,KAAK,cACLC,gBAAiB,SAACC,GAEd,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,IAKxCkK,aAAc,SAACF,GAGX,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,IAGxCmK,eAAgB,SAACH,GAEb,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,cAUxD,uBAAOvR,UAAU,aAAjB,SACKgb,GAAcA,EAAW1T,KAAI,SAAA1J,GAAG,OAE7B,+BACI,qBAAIyH,MAAO,CAAE8G,MAAO,QAAS2M,WAAW,QAAxC,UAAkDlb,EAAIU,MAAtD,OACA,uBACCV,EAAI+d,UAAY/d,EAAI+d,SAASrU,KAAI,SAAAqT,GAAI,OACtC,+BACJ,6BAAKA,EAAKrc,QACV,6BACQ,uBACIyG,KAAK,WACL/E,UAAU,kBACVuD,MAAK,UAAKoX,EAAK1b,IACfkG,YAAa,CAAC7B,2BAuB9C,iCACI,qBAAKtD,UAAU,MAAf,SACI,yBACIoF,SAAUhF,KAAKvC,MAAMmO,mBACrBhM,UAAU,qCAFd,UAKKI,KAAKvC,MAAMmO,oBACR,sBAAMhM,UAAU,iCANxB,uBAYR,cAAC,IAAD,CACIqF,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACD,EAAKX,SAAWW,yBAiBxD,cAAC,EAAD,W,GAxkB2BvE,aCftBgkB,G,kDAEjB,WAAYplB,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,GACT2I,kBAAkB,GAClBC,QAAQ,GACRC,OAAO,IAbI,E,mDAiBnB,SAAgBpY,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAGvB,SAAeO,GACd1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAEhB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MAEtB5B,IAAM2C,IAAI,mEACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAIhE,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,sCAO7B,SAAyBqQ,GAAQ,IAAD,OAEtBuJ,EAAWvJ,EAAO3T,GAGlBL,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAGlB5W,IAAM2C,IAAN,uFAA0Fwc,GACtF,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,4BAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,uBAAwBC,KAAKC,UAAUmC,EAAIvC,OAGpE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,Y,oBAQrC,WAAU,IAAD,OAEL,OAAKC,aAAawB,QAAQ,wBAMtB,gCACoB,cAAC,EAAD,IAEhB,cAAC,EAAD,IAEA,sBAAKkB,UAAU,kBAAf,UAES,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SAEc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UAEF,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,0CAEK,sCACA,yCAEA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAO7T,WAEP,6BAAK6T,EAAOjE,OACZ,6BAAKiE,EAAOlE,UAEZ,oBAAI1O,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QACrBtD,QAAS,EAAKkkB,yBAAyBhlB,KAAK,EAAMoT,GAHtD,mDAsC3E,cAAC,EAAD,OA5GI,cAAC,IAAD,CAAU1S,GAAI,U,GAvGsBK,aCgPzCkkB,GAvPkB,SAACtlB,GAGhC,IAAM8E,EAAOsI,mBACPpI,EAAWoI,mBAJyB,EAMuBC,mBAAS,IANhC,mBAMnCkY,EANmC,KAMPC,EANO,OAONnY,oBAAS,GAPH,mBAOnCG,EAPmC,KAOvBC,EAPuB,OAQhBJ,mBAAS,IARO,mBAQnClO,EARmC,KAQ5BsmB,EAR4B,OASZpY,mBAAS,IATG,mBASnC9M,EATmC,KAS1BmN,EAT0B,OAUZL,oBAAS,GAVG,mBAUnC5I,EAVmC,KAU1BkJ,EAV0B,KAkBpCE,EAAgBxP,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAChDmO,EAAsBD,EAAc/I,KAI1CZ,qBAAU,WAER,IAAM2J,EAAgBxP,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAEtD6lB,EAD4B3X,KAK3B,IA6GH,IAAK1P,aAAawB,QAAQ,wBACxB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IAAMgN,EAAW1P,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAEjD,OAEE,eAAC8I,EAAYuF,SAAb,CAAsB5J,MAAO,CAAE0E,aA7BZ,SAAC1B,EAAIiC,GAMtB,IAJF,IAAM4E,EAAW,eAAQsX,GAIdlX,EAAI,EAAGA,EAAIJ,EAAYnJ,KAAKnE,OAAQ0N,IAAK,CAChD,IAAM7E,EAAQyE,EAAYnJ,KAAKuJ,GAK3BjH,IADWoC,EAAP1J,KAEN0J,EAAK,OAAaH,EAAMzE,OAAOR,OAMrCjG,aAAaC,QAAQ,2BAA4BC,KAAKC,UAAUinB,MAUhE,UACE,cAAC,EAAD,IACA,sBAAK1kB,UAAU,kBAAkBqF,MAAO,CAAEwI,UAAW,MAArD,UACE,cAAC,EAAD,IAAQ,uBACR,yBAAS7N,UAAU,UAAnB,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SAIGgN,EAAc/I,KAAKnE,OAEpB,qBAAKE,UAAU,YAAf,SACE,eAAC,IAAD,CAAM4E,SA/HC,SAAC4D,GACpBA,EAAMxE,iBAEN6I,EAAW,IACXD,GAAc,GAEdC,EAAW,IACXC,GAAW,GAGX7I,EAAK6J,QAAQ5J,cAGb,IACMtF,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MAUhBoP,GANgBxQ,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAGhBG,GAGtBzB,KAAKqB,MAAMvB,aAAawB,QAAQ,8BAK1CsP,EADW5Q,KAAKqB,MAAMvB,aAAawB,QAAQ,yBACrB0C,QAEtBoI,EAAWwE,EAAYvQ,MAIvBwQ,GAHSD,EAAYxQ,IAI3B,CACEU,MAAOA,EACPgQ,UAAWN,EAAQM,UACnB1E,SAAUA,EACV3F,KAAM+J,EAAQ/J,OAGhBwF,QAAQC,IAAI2E,GACoC,IAA5ClK,EAAS2J,QAAQ1J,QAAQC,QAAQvE,QAGnC9C,IAAMC,KAAK,2EAA4EoR,EACrF,CACEnR,QACA,CACE,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAGvCzB,MAAK,SAAAyC,GAEAA,EAAIvC,MACNC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAE9DwP,EAAWjN,EAAIvC,KAAKkR,QACpB3B,GAAc,MAId,SAACpI,GACC,IAAMC,EACHD,EAAMpH,UACLoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,KAAKkR,QACtB/J,EAAMgK,cACNhK,EAAMG,WAERkI,EAAWpI,GACXmI,GAAc,OAkDoB/H,IAAKZ,EAAnC,WACI0I,GACA,gCACE,iCAAQ,oBAAIzJ,MAAM,YAAV,SAAuB8J,EAAcjO,aAC7C,iCAAQ,oBAAImE,MAAM,YAAV,SAAuB8J,EAAc0B,YAC7C,iCAAQ,oBAAIxL,MAAM,YAAV,SAAuB8J,EAAc2B,SAC7C,iCAAQ,qBAAIzL,MAAM,YAAV,wDAAkEgK,EAAU1L,QAAQoN,YAApF,eAER,sBAAK5O,UAAU,aAAf,UACQ,0CAEA,uBAAQ+E,KAAK,OACX/E,UAAU,eACVuD,MAAOjF,EACP4G,SAjKR,SAACpB,GACrB,IAAMxF,EAAQwF,EAAEC,OAAOR,MACvBqhB,EAAStmB,IAgKmBgF,UAAQ,EACR2B,YAAY,0BAExB,uBACGgI,EAAoB3F,KAAK,SAACud,EAASrd,GAAV,OACxB,sBAAKxH,UAAU,aAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,aAAd,UAA4B6kB,EAAQvmB,MAApC,2CAC6DumB,EAAQC,UACrE,qBAAI9kB,UAAU,GAAd,qCAAsD6kB,EAAQ7V,cAGhE,qBAAKhP,UAAU,YAAf,SAEE,qBAAKA,UAAU,MAAf,SACM,cAAC,EAAD,CAAqB2I,MAAOkc,GAAVrd,aAS9B,qBAAKxH,UAAU,aAAf,SAEE,uCAAS,yBAAQA,UAAU,0BAA0BoF,SAAUxB,EAAtD,UACNA,GACC,sBAAM5D,UAAU,iCAElB,qDAMR,6BACE,iCACGN,GACC,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACE2M,EAAa,sBAAwB,qBAEvCxM,KAAK,QAJP,SAMGT,UAUX,cAAC,IAAD,CAAa2F,MAAO,CAAEC,QAAS,QAAUT,IAAKV,SAG9D,iCAAQ,0EAQJ,cAAC,EAAD,QC3Oe4gB,G,kDAEjB,WAAY5lB,GAAQ,IAAD,8BACf,cAAMA,IAEDtB,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACTqlB,eAAgB,IARL,E,qDAcnB,WAAqB,IAAD,OACnB,IAAKznB,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAExB,IACMtB,EADUoI,EAAYC,iBACNrI,MAEtB5B,IAAM2C,IAAI,uFACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,OAI9D,EAAKgC,SAAS,CACV0lB,eAAgBnlB,EAAIvC,KACpBiE,WAAW,EACXiB,aAAa,S,oBAQ7B,WAAU,IAAD,OAEL,OAAKjF,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UAEF,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMknB,eAAezd,KAAI,SAAAsL,GAAM,OAErC,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,sDAqC3E,cAAC,EAAD,OArGI,cAAC,IAAD,CAAU1D,GAAI,U,GArDUK,aCAvBykB,G,kDAEjB,WAAY7lB,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,GACT2I,kBAAkB,GAClBC,QAAQ,GACRC,OAAO,IAbI,E,mDAiBnB,SAAgBpY,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAGvB,SAAeO,GACd1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAChB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAG1B,IACMtB,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,4FACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,OAI9D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,2BAO7B,SAAcqQ,GAAQ,IAAD,OAEXuJ,EAAWvJ,EAAO3T,GACxBwK,QAAQC,IAAIkJ,EAAO3T,IACnB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmV,EAAO3T,KAC/D,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8Dwc,EAA9D,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,iBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAGhE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,KACvBuW,cAAc,S,oBAO5B,WAAU,IAAD,OAEL,OAAKtW,aAAawB,QAAQ,wBAMtB,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACS,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SACc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UACP,mCACK,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,8BACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCACK,sCACA,sCACA,yCACA,4CACA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QACP,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,oBAAIzH,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QAFzB,uDAsC3E,cAAC,EAAD,OAzGI,cAAC,IAAD,CAAU1D,GAAI,U,GAtGWK,aCExB0kB,G,kDAEjB,WAAY9lB,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBACtB,EAAK0a,cAAgB,EAAKA,cAAc1a,KAAnB,gBACrB,EAAK2a,gBAAkB,EAAKA,gBAAgB3a,KAArB,gBACvB,EAAK4a,eAAiB,EAAKA,eAAe5a,KAApB,gBACtB,EAAK6a,mBAAqB,EAAKA,mBAAmB7a,KAAxB,gBAC1B,EAAK8a,kBAAoB,EAAKA,kBAAkB9a,KAAvB,gBACzB,EAAK+a,gBAAkB,EAAKA,gBAAgB/a,KAArB,gBACvB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBACpB,EAAKuJ,cAAgB,EAAKA,cAAcvJ,KAAnB,gBACrB,EAAKib,aAAe,EAAKA,aAAajb,KAAlB,gBACpB,EAAKme,aAAe,EAAKA,aAAane,KAAlB,gBACpB,EAAKoe,aAAe,EAAKA,aAAape,KAAlB,gBAEpB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACT2T,QAAS,GACT2I,kBAAmB,GACnBC,QAAS,GACTC,OAAQ,GACR5d,MAAO,GACPoQ,QAAS,GACTjQ,OAAQ,GACRkQ,KAAM,GACNnF,YAAa,GACb9K,WAAY,GACZC,SAAU,GACVmR,OAAQ,GACR6K,KAAM,GACNzR,WAAW,EACXC,SAAS,EACTC,WAAW,GApCA,E,iDAyCnB,SAActF,GACV1D,KAAKf,SAAS,CACVf,MAAOwF,EAAEC,OAAOR,U,6BAIxB,SAAgBO,GACZ1D,KAAKf,SAAS,CACVqP,QAAS5K,EAAEC,OAAOR,U,0BAI1B,SAAaO,GACT1D,KAAKf,SAAS,CACVsP,KAAM7K,EAAEC,OAAOR,U,+BAGvB,SAAkBO,GACd1D,KAAKf,SAAS,CACVX,WAAYoF,EAAEC,OAAOR,U,6BAG7B,SAAgBO,GACZ1D,KAAKf,SAAS,CACVV,SAAUmF,EAAEC,OAAOR,U,gCAG3B,SAAmBO,GACf1D,KAAKf,SAAS,CACVmK,YAAa1F,EAAEC,OAAOR,U,4BAI9B,SAAeO,GACX1D,KAAKf,SAAS,CACVZ,OAAQqF,EAAEC,OAAOR,U,2BAIzB,SAAcO,GACV1D,KAAKf,SAAS,CACVyQ,OAAQhM,EAAEC,OAAOR,U,0BAGzB,SAAaO,GACT1D,KAAKf,SAAS,CACVsb,KAAM7W,EAAEC,OAAOR,U,6BAKvB,SAAgBO,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAG1B,SAAeO,GACX1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAChB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1BE,KAAKmX,iBACLnX,KAAKyd,eAEL,IACMjf,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,4FACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,OAI9D,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,gCAK7B,SAAmB8N,EAAWC,GAG1BhT,aAAaC,QAAQ,gBADC,CAAC,EAAG,EAAG,IAG7BD,aAAaC,QAAQ,cADD,CAAC,EAAG,EAAG,IAI3B,IACI,GAAI+S,EAAU9G,cAAgBpJ,KAAKvC,MAAM2L,YAAa,CAClD,IAAM3L,EAAQuC,KAAKvC,MAAM2L,YACrB3L,GACAuC,KAAKf,SAAS,CACV6J,UAAWrL,EAAM6D,SAAS,MAC1ByH,QAAStL,EAAM6D,SAAS,MACxB0H,UAAWvL,EAAM6D,SAAS,YAKxC,MAAOoC,O,0BAMb,SAAaA,GAAI,IAAD,OAEZA,EAAEE,iBACexG,KAAKqB,MAAMvB,aAAawB,QAAQ,qBASjD,GAPAsB,KAAKf,SAAS,CACZK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEXxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAAC,IAAD,EAExCge,EAAmBtgB,KAAKqB,MAAMvB,aAAawB,QAAQ,qBAMjD+b,EADsBvd,aAAawB,QAAQ,iBAK3Cgc,EADoBxd,aAAawB,QAAQ,eAIzCgR,EACF+K,EAAgBkD,MAAM,QAAQzW,IAAI0W,QAGhCrD,EACFG,EAAciD,MAAM,QAAQzW,IAAI0W,QAM9B7X,GAAI,GAENmI,UAAUwP,EAAiB7e,GAC3BX,MAAO8B,KAAKvC,MAAMS,OAAOwf,EAAiBxf,MAC1CoQ,QAAStO,KAAKvC,MAAM6Q,SAASoP,EAAiBpP,QAC9CC,KAAMvO,KAAKvC,MAAM8Q,MAAMmP,EAAiBnP,KACxCnF,YAAapJ,KAAKvC,MAAM2L,aAAasU,EAAiBtU,YACtD9K,WAAY0B,KAAKvC,MAAMa,YAAYof,EAAiBpf,WACpDC,SAAUyB,KAAKvC,MAAMc,UAAUmf,EAAiBnf,SAChDsf,SAAU,SATJ,6BAUM7d,KAAKvC,MAAM2L,aAAasU,EAAiBtU,aAV/C,2BAWKsG,GAASgO,EAAiBhO,QAX/B,yBAYE6K,GAAMmD,EAAiBnD,MAZzB,GAeVlR,QAAQC,IAAIvD,GACd,IACMvH,EADUoI,EAAYC,iBACNrI,MAEtB5B,IAAMC,KAAN,sEAAkFkJ,EAClF,CACEjJ,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIxCzB,MAEA,SAAAC,GAEE,EAAKiC,SAAS,CACZK,QAAS,+BACTiN,YAAY,IAEdpN,OAAOf,SAAW,qBAEpB,SAAAgG,GACE,IAAMC,EACHD,EAAMpH,UACLoH,EAAMpH,SAASC,MACfmH,EAAMpH,SAASC,KAAKqC,SACtB8E,EAAM9E,SACN8E,EAAMG,WAER,EAAKtF,SAAS,CACZuE,SAAS,EACTlE,QAAS+E,YAKfrE,KAAKf,SAAS,M,0BAOpB,SAAauT,GAAS,IAAD,OAEXuJ,EAAWvJ,EAAO3T,GACxBwK,QAAQC,IAAIkJ,EAAO3T,IACnB3B,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmV,EAAO3T,KAC/D,IACML,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,2DAA8Dwc,EAA9D,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GAEEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAGhE,EAAKgC,SAAS,CACV2c,kBAAmBpc,EAAIvC,KACvBuW,cAAc,S,0BAM9B,WACI,IAEMhV,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAN,wDACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAfE,oBAmBTV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,Y,4BAMvE,WACI,IAEMuB,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAN,0DACI,CACIzC,QACA,CACI,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAExCoR,OACA,CACInS,MAfE,oBAmBTV,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,Y,oBAMzE,WAAU,IAAD,OAEL,IAAKC,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,MAE1B,IAAM4J,EAAiBtM,KAAKqB,MAAMvB,aAAawB,QAAQ,kBACjDiL,EAAevM,KAAKqB,MAAMvB,aAAawB,QAAQ,gBANhD,EAQ0BsB,KAAKvC,MAA5BqL,EARH,EAQGA,UAAWC,EARd,EAQcA,QAGnB,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKnJ,UAAU,kBAAf,UACI,uBACCI,KAAKvC,MAAM+V,cACR,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBACzD,qBAAK/C,UAAU,iBAAf,6CAKhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SAEI,qBAAKA,UAAU,MAAf,SAEI,qBAAKA,UAAU,SAAf,SACKI,KAAKvC,MAAMyD,UACR,mCACI,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAIhD,qBAAKrH,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,aAAd,4BACA,qBAAKA,UAAU,kBAKlBI,KAAKvC,MAAMyD,UACR,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACI,wBAAOA,UAAU,gCAAjB,UACI,gCACI,+BACI,uCACA,sCACA,sCACA,yCACA,4CACA,yCACA,8CAGPI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE1B,gCACI,+BACI,6BAAKA,EAAOtU,QACZ,6BAAKsU,EAAOpJ,cACZ,6BAAKoJ,EAAOjE,OACZ,6BAAKiE,EAAOlE,UACZ,6BAAI,sBAAM1O,UAAU,kBAAhB,SAAmC4S,EAAOnL,eAC9C,6BAAKmL,EAAOsL,mBAAmBtL,EAAOsL,mBAAmBhC,OAAO,cAGhE,qBAAIlc,UAAU,GAAd,UACI,wBACIA,UAAU,sBACVoF,SAAU,EAAKvH,MAAM+F,QACrB4C,cAAY,QACZ0e,cAAY,YACb5kB,QAAS,EAAKqd,aAAane,KAAK,EAAMoT,GALzC,oBASC,qBAAK5S,UAAU,aAAauG,GAAG,WAAY4e,aAAW,OAAOhlB,KAAK,SAAlE,SACG,qBAAKH,UAAU,wBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAd,2BACA,wBAAQ+E,KAAK,SAAS/E,UAAU,QAAQ6V,eAAa,QAAQnP,aAAW,QAAxE,SACI,sBAAMwN,cAAY,OAAlB,uBAGP,EAAKrW,MAAM+V,aACR,iCAAQ,cAACzM,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,8BACI,qBAAKrH,UAAU,aAAf,SAEQ,eAAC,IAAD,CAAM4E,SAAU,EAAKgZ,aAAc/Y,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAA3D,UACI,sBAAK9E,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,2CACA,cAAC,IAAD,CAAO+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EACpD1B,MAAO,EAAK1F,MAAMme,kBAAkB1d,MACpC4G,SAAU,EAAKgV,qBAK3B,qBAAKla,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,8CAAiB,EAAKnC,MAAMme,kBAAkBtN,WAC9C,eAAC,IAAD,CAAQ1O,UAAU,gBAAgBiF,aAAW,EACzC1B,MAAO,EAAK1F,MAAMme,kBAAkBtN,QACpCxJ,SAAU,EAAKiV,gBAFnB,UAKI,wBAAQ5W,MAAM,GAAd,oBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,2BAKhB,sBAAKvD,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,0CACA,cAAC,IAAD,CAAO+E,KAAK,SAAS/E,UAAU,gBAAgBiF,aAAW,EACtD1B,MAAO,EAAK1F,MAAMme,kBAAkBrN,KACpCzJ,SAAU,EAAKsV,oBAK3B,sBAAKxa,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,gDACA,cAAC,IAAD,CAAO+E,KAAK,OAAOoW,OAAO,aAAanb,UAAU,gBAAgBiF,aAAW,EACxE1B,MAAO,EAAK1F,MAAMme,kBAAkBtd,WACpCwG,SAAU,EAAKoV,yBAK3B,qBAAKta,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,8CACA,cAAC,IAAD,CAAO+E,KAAK,OAAOoW,OAAO,aAAanb,UAAU,gBAAgBiF,aAAW,EACxE1B,MAAO,EAAK1F,MAAMme,kBAAkBrd,SACpCuG,SAAU,EAAKqV,0BAM/B,qBAAKva,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,iDACA,eAAC,IAAD,CAAQ+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EAErD1B,MAAO,EAAK1F,MAAM2L,YAClBtE,SAAU,EAAKmV,mBAHnB,UAKI,wBAAQ9W,MAAM,GAAd,oBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,QAAd,8BAKf2F,GACG,qBAAKlJ,UAAU,kBAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCAEI,+BACI,uCAEA,4CACK,cAAC,IAAD,CACGob,WAAW,0BACXC,KAAK,cACLC,gBAAiB,SAACC,GAEd,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,gBAAiBgU,IAK1CkK,aAAc,SAACF,GAGX,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,gBAAiBgU,IAG1CmK,eAAgB,SAACH,GAEb,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAIhDjG,aAAaC,QAAQ,gBAAiBgU,cAW1D,uBAAOvR,UAAU,aAAjB,SACK8J,EAAexC,KAAI,SAACzJ,EAAO2J,GAAR,OAEhB,+BACI,6BAAK3J,EAAMS,QACX,6BACI,uBACIyG,KAAK,WACL/E,UAAU,kBACVuD,MAAK,UAAK1F,EAAMoB,qBAa/CkK,GACG,qBAAKnJ,UAAU,kBAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,qCAEA,4CACM,cAAC,IAAD,CACEob,WAAW,0BACXC,KAAK,cACLC,gBAAiB,SAACC,GAEd,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,IAKxCkK,aAAc,SAACF,GAGX,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,IAGxCmK,eAAgB,SAACH,GAEb,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IACjD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGhDjG,aAAaC,QAAQ,cAAegU,cAUxD,uBAAOvR,UAAU,aAAjB,SACK+J,GAAgBA,EAAazC,KAAI,SAAA1J,GAAG,OACjC,+BACI,6BAAKA,EAAIU,QACT,6BACI,uBACIyG,KAAK,WACL/E,UAAU,kBACVuD,MAAK,UAAK3F,EAAIqB,qBAY9C,iCACK,EAAKpB,MAAM6B,SACR,qBAAKM,UAAU,OAAf,SACI,qBACIA,UACI,EAAKnC,MAAM8O,WACL,sBACA,qBAEVxM,KAAK,QANT,SAQI,mCAAO,EAAKtC,MAAM6B,iBAIlC,iCAEQ,sBAAKM,UAAU,uCAAf,UACI,wBAAQ+E,KAAK,SAAS/E,UAAU,kBAAkB6V,eAAa,QAA/D,mBACA,yBACAzQ,SAAU,EAAKvH,MAAMmO,mBACrBhM,UAAU,qCAFV,UAKC,EAAKnC,MAAMmO,oBACR,sBAAMhM,UAAU,iCANpB,mBAFJ,gIAcR,cAAC,IAAD,CACIqF,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACD,EAAKX,SAAWW,qDA4CxH,cAAC,EAAD,W,GAnvB6BvE,aCXvC+C,GAAW,SAACC,GACb,IAAKA,EACA,OACK,qBAAKvD,UAAU,qBAAqBG,KAAK,QAAzC,sCAMMilB,G,kDAEhB,WAAYjmB,GAAQ,IAAD,8BACd,cAAMA,IACDmd,cAAgB,EAAKA,cAAc9c,KAAnB,gBACrB,EAAKsc,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAGtB,EAAK3B,MAAQ,CACR0E,aAAa,EACbjB,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACT2T,QAAS,GACT2I,kBAAmB,GACnBC,QAAS,GACTC,OAAQ,GACRoB,WAAY,IAhBH,E,mDAqBnB,SAAgBxZ,GACX1D,KAAKf,SAAS,CACTZ,OAAQqF,EAAEC,OAAOR,U,4BAG3B,SAAeO,GACV1D,KAAKf,SAAS,CACT6c,OAAQpY,EAAEC,OAAOR,U,+BAI3B,WACK,IAAKjG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,a,2BAKhC,SAAc4D,GAAI,IAAD,OAEZA,EAAEE,iBACF,IAAMqhB,EAAoB7nB,KAAKqB,MAAMvB,aAAawB,QAAQ,sBAU1D,GAPAsB,KAAKf,SAAS,CACTK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEdxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAS3C,IAAMqG,EAAK,CACNmI,UAAW+W,EAAkBpmB,GAC5BR,OAAQ2B,KAAKvC,MAAMY,OACpByd,OAAQ9b,KAAKvC,MAAMqe,QAOlBtd,EADU0F,EAAY2C,iBACNrI,MACtB5B,IAAMC,KAAN,oEAA+EkJ,EAI1E,CACKjJ,QACA,CACK,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAE3CzB,MAEE,SAAAC,GAEK,EAAKiC,SAAS,CACTK,QAAStC,EAASC,KAAKkR,OACvB5B,YAAY,IAGjBpN,OAAOf,SAAW,2BAIvB,SAAAgG,GACK,IAAMC,EACAD,EAAMpH,UACFoH,EAAMpH,SAASC,KAAKkR,QACpB/J,EAAMpH,SAASC,MACpBmH,EAAM9E,SACN8E,EAAMG,WAEX,EAAKtF,SAAS,CACTuE,SAAS,EACTlE,QAAS+E,EACTZ,qBAAqB,YAMzCzD,KAAKf,SAAS,CACTuE,SAAS,M,oBAKxB,WAAU,IAAD,OAEJ,IAAKtG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,MAE3B,IAAMmlB,EAAoB7nB,KAAKqB,MAAMvB,aAAawB,QAAQ,sBAI1D,OACK,gCACK,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKkB,UAAU,kBAAf,UACK,uBAWA,yBAASA,UAAU,UAAnB,SACK,qBAAKA,UAAU,kBAAf,SACK,qBAAKA,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAGpB,sBAAKA,UAAU,YAAf,UAEK,sBAAKA,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,8CADL,QAEsBqlB,EAAkBtmB,cAI7C,qBAAKiB,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,6CADL,QAEsBqlB,EAAkB3W,gBAIlD,sBAAK1O,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UAEK,0CAFL,QAGsBqlB,EAAkB1W,UAK7C,qBAAK3O,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,2CADL,QAGyB,qCAAQqlB,EAAkBzW,oBAGxD,qBAAK5O,UAAU,WAAf,SACK,qBAAKA,UAAU,aAAf,SACCqlB,EAAkBrN,aAAaqN,EAAkBrN,YAAY1Q,KAAI,SAAAwI,GAAM,OAEnE,sCAASA,EAAOlS,IAAhB,aACoB,qCAAQkS,EAAOvM,sBAMvD,cAAC,IAAD,CACKqB,SAAUxE,KAAKkc,cACfzX,IAAK,SAAAC,GACA,EAAKb,KAAOa,GAHtB,SAOK,sBAAK9E,UAAU,YAAf,UAEK,sBAAKA,UAAU,aAAf,UACK,uBAAO0Z,QAAQ,4BAAf,oBACA,eAAC,IAAD,CACK1Z,UAAU,eACVuG,GAAG,4BACHpB,YAAa,CAAC7B,IACd4B,SAAU9E,KAAK0b,gBACfvY,MAAOnD,KAAKvC,MAAMY,OALvB,UAOK,gDACA,wBAAQ8E,MAAM,WAAWvD,UAAU,eAAnC,qBACA,wBAAQuD,MAAM,WAAWvD,UAAU,cAAnC,0BAKV,qBAAKA,UAAU,aAAf,SACK,cAAC,IAAD,CAAU+E,KAAK,SAASC,KAAK,SAAShF,UAAU,eAAeiF,YAAY,SAAS1B,MAAOnD,KAAKvC,MAAMqe,OACjGhX,SAAU9E,KAAK2b,eACf5W,YAAa,CAAC7B,QAGxB,uBAGA,qBAAKtD,UAAU,aAAf,SACK,wBACKA,UAAU,yBACVoF,SAAUhF,KAAKvC,MAAM+F,QAF1B,SAOK,8CAGV,iCACbxD,KAAKvC,MAAM6B,SACV,qBAAKM,UAAU,aAAf,SACE,qBACEA,UACEI,KAAKvC,MAAM8O,WACP,sBACA,qBAENxM,KAAK,QANP,SAQGC,KAAKvC,MAAM6B,cAMJ,cAAC,IAAD,CACK2F,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,wBAqBlE,cAAC,EAAD,W,GAhS8BvE,aCA7B+kB,G,kDAEjB,WAAYnmB,GAAQ,IAAD,8BACf,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBAEtB,EAAK3B,MAAQ,CACT0E,aAAa,EACbjB,WAAW,EACXsC,SAAQ,EACRlE,QAAS,GACT2T,QAAS,GACT2I,kBAAkB,GAClBC,QAAQ,GACRC,OAAO,IAbI,E,mDAiBnB,SAAgBpY,GACZ1D,KAAKf,SAAS,CACV4c,QAASnY,EAAEC,OAAOR,U,4BAGvB,SAAeO,GACd1D,KAAKf,SAAS,CACV6c,OAAQpY,EAAEC,OAAOR,U,+BAGzB,WAAqB,IAAD,OAEhB,IAAKjG,aAAawB,QAAQ,wBACtB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE1B,IACMtB,EADUoI,EAAYC,iBACNrI,MAEtB5B,IAAM2C,IAAI,uFACN,CACIzC,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACEA,EAAIvC,MACJC,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUmC,EAAIvC,OAIhE,EAAKgC,SAAS,CACVgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,2BAO7B,SAAcqQ,GAAQ,IAAD,OAEXuJ,EAAWvJ,EAAO3T,GAGlBL,EADUoI,EAAYC,iBACNrI,MAEtBwB,KAAKf,SAAS,CACVuU,cAAc,IAElB5W,IAAM2C,IAAN,sFAAyFwc,EAAzF,KACI,CACIjf,QACA,CACI,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG3CzB,MAAK,SAAAyC,GACFL,OAAOf,SAAW,wBAEdoB,EAAIvC,MACJC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUmC,EAAIvC,OAGjE,EAAKgC,SAAS,CACZ2c,kBAAmBpc,EAAIvC,Y,oBAQrC,WAAU,IAAD,OAEL,OAAKC,aAAawB,QAAQ,wBAMtB,gCACoB,cAAC,EAAD,IAEhB,cAAC,EAAD,IAEA,sBAAKkB,UAAU,kBAAf,UAES,uBACCI,KAAKvC,MAAM+V,cACb,sBAAM5T,UAAU,GAAhB,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACV,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBAClD,qBAAK/C,UAAU,iBAAf,6CAKb,yBAASA,UAAU,UAAnB,SAEc,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SACMI,KAAKvC,MAAMyD,UAEF,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAGjD,qBAAKrH,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,gCACA,qBAAKA,UAAU,kBAKnBI,KAAKvC,MAAMyD,UACZ,iCAAQ,cAAC6F,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAE5C,qBAAKrH,UAAU,iCAAf,SACK,wBAAOA,UAAU,gCAAjB,UACK,gCACK,+BACA,uCAEK,sCACA,yCAEA,8CAGTI,KAAKvC,MAAMwV,QAAQ/L,KAAI,SAAAsL,GAAM,OAE9B,gCACK,+BACA,6BAAKA,EAAOtU,QAEP,6BAAKsU,EAAOjE,OACZ,6BAAKiE,EAAOlE,UAEZ,oBAAI1O,UAAU,GAAd,SACM,wBACIA,UAAU,kBACVoF,SAAU,EAAKvH,MAAM+F,QACrBtD,QAAS,EAAK8b,cAAc5c,KAAK,EAAMoT,GAH3C,mDAsC3E,cAAC,EAAD,OA5GI,cAAC,IAAD,CAAU1S,GAAI,U,GAtGgBK,aCE7BglB,G,kDAEhB,WAAYpmB,GAAQ,IAAD,8BACd,cAAMA,IACD2c,gBAAkB,EAAKA,gBAAgBtc,KAArB,gBACvB,EAAKuc,eAAiB,EAAKA,eAAevc,KAApB,gBACtB,EAAK0a,cAAgB,EAAKA,cAAc1a,KAAnB,gBACrB,EAAK2a,gBAAkB,EAAKA,gBAAgB3a,KAArB,gBACvB,EAAK4a,eAAiB,EAAKA,eAAe5a,KAApB,gBACtB,EAAK6a,mBAAqB,EAAKA,mBAAmB7a,KAAxB,gBAC1B,EAAK8a,kBAAoB,EAAKA,kBAAkB9a,KAAvB,gBACzB,EAAK+a,gBAAkB,EAAKA,gBAAgB/a,KAArB,gBACvB,EAAKgb,aAAe,EAAKA,aAAahb,KAAlB,gBACpB,EAAKuJ,cAAgB,EAAKA,cAAcvJ,KAAnB,gBACrB,EAAKib,aAAe,EAAKA,aAAajb,KAAlB,gBACpB,EAAKoe,aAAe,EAAKA,aAAape,KAAlB,gBAEpB,EAAK3B,MAAQ,CACR0E,aAAa,EACbjB,WAAW,EACXsC,SAAS,EACTlE,QAAS,GACT2T,QAAS,GACT2I,kBAAmB,GACnBC,QAAS,GACTC,OAAQ,GACR5d,MAAO,GACPoQ,QAAS,GACTjQ,OAAQ,GACRkQ,KAAM,GACNnF,YAAa,GACb9K,WAAY,GACZC,SAAU,GACVmR,OAAQ,GACR6K,KAAM,GACNzR,WAAW,EACXC,SAAS,EACTC,WAAW,GAnCF,E,iDAwCnB,SAActF,GACT1D,KAAKf,SAAS,CACTf,MAAOwF,EAAEC,OAAOR,U,6BAI1B,SAAgBO,GACX1D,KAAKf,SAAS,CACTqP,QAAS5K,EAAEC,OAAOR,U,0BAI5B,SAAaO,GACR1D,KAAKf,SAAS,CACTsP,KAAM7K,EAAEC,OAAOR,U,+BAGzB,SAAkBO,GACb1D,KAAKf,SAAS,CACTX,WAAYoF,EAAEC,OAAOR,U,6BAG/B,SAAgBO,GACX1D,KAAKf,SAAS,CACTV,SAAUmF,EAAEC,OAAOR,U,gCAG7B,SAAmBO,GACd1D,KAAKf,SAAS,CACTmK,YAAa1F,EAAEC,OAAOR,U,4BAIhC,SAAeO,GACV1D,KAAKf,SAAS,CACTZ,OAAQqF,EAAEC,OAAOR,U,2BAI3B,SAAcO,GACT1D,KAAKf,SAAS,CACTyQ,OAAQhM,EAAEC,OAAOR,U,0BAG3B,SAAaO,GACR1D,KAAKf,SAAS,CACTsb,KAAM7W,EAAEC,OAAOR,U,6BAKzB,SAAgBO,GACX1D,KAAKf,SAAS,CACT4c,QAASnY,EAAEC,OAAOR,U,4BAG5B,SAAeO,GACV1D,KAAKf,SAAS,CACT6c,OAAQpY,EAAEC,OAAOR,U,+BAK3B,WAAqB,IAAD,OACf,IAAKjG,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,WAE3BE,KAAKmX,iBACLnX,KAAKyd,eAEL,IACMjf,EADUoI,EAAYC,iBACNrI,MACtB5B,IAAM2C,IAAI,iFACL,CACKzC,QACA,CACK,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAG7CzB,MAAK,SAAAyC,GACGA,EAAIvC,MACHC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUmC,EAAIvC,OAI/D,EAAKgC,SAAS,CACTgU,QAASzT,EAAIvC,KACbiE,WAAW,EACXiB,aAAa,S,gCAKjC,SAAmB8N,EAAWC,GAGzBhT,aAAaC,QAAQ,gBADC,CAAC,EAAG,EAAG,IAG7BD,aAAaC,QAAQ,cADD,CAAC,EAAG,EAAG,IAI3B,IACK,GAAI+S,EAAU9G,cAAgBpJ,KAAKvC,MAAM2L,YAAa,CACjD,IAAM3L,EAAQuC,KAAKvC,MAAM2L,YACrB3L,GACCuC,KAAKf,SAAS,CACT6J,UAAWrL,EAAM6D,SAAS,MAC1ByH,QAAStL,EAAM6D,SAAS,MACxB0H,UAAWvL,EAAM6D,SAAS,YAK5C,MAAOoC,O,0BAMd,SAAaA,GAAI,IAAD,OAEXA,EAAEE,iBACexG,KAAKqB,MAAMvB,aAAawB,QAAQ,qBASjD,GAPAsB,KAAKf,SAAS,CACTK,QAAS,GACTiN,YAAY,EACZ/I,SAAS,IAEdxD,KAAK6D,KAAKC,cAEmC,IAAzC9D,KAAK+D,SAASC,QAAQC,QAAQvE,OAAc,CAAC,IAAD,EAErC0lB,EAAqBhoB,KAAKqB,MAAMvB,aAAawB,QAAQ,uBAMrD+b,EADsBvd,aAAawB,QAAQ,iBAK3Cgc,EADoBxd,aAAawB,QAAQ,eAIzCgR,EACD+K,EAAgBkD,MAAM,QAAQzW,IAAI0W,QAGjCrD,EACDG,EAAciD,MAAM,QAAQzW,IAAI0W,QAM/B7X,GAAI,GAELmI,UAAWkX,EAAmBvmB,GAC9BX,MAAO8B,KAAKvC,MAAMS,OAASknB,EAAmBlnB,MAC9CoQ,QAAStO,KAAKvC,MAAM6Q,SAAW8W,EAAmB9W,QAClDC,KAAMvO,KAAKvC,MAAM8Q,MAAQ6W,EAAmB7W,KAC5CnF,YAAapJ,KAAKvC,MAAM2L,aAAegc,EAAmBhc,YAC1D9K,WAAY0B,KAAKvC,MAAMa,YAAc8mB,EAAmB9mB,WACxDC,SAAUyB,KAAKvC,MAAMc,UAAY6mB,EAAmB7mB,SACpDsf,SAAU,SATL,6BAUQ7d,KAAKvC,MAAM2L,aAAegc,EAAmBhc,aAVrD,2BAWMsG,GAAU0V,EAAmB1V,QAXnC,yBAYI6K,GAAQ6K,EAAmB7K,MAZ/B,GAiBJ/b,EADUoI,EAAYC,iBACNrI,MAEtB5B,IAAMC,KAAN,sEAAkFkJ,EAC7E,CACKjJ,QACA,CACK,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,KAIjDzB,MAEG,SAAAC,GAEK,EAAKiC,SAAS,CACTK,QAAS,+BACTiN,YAAY,IAEjBpN,OAAOf,SAAW,qBAEvB,SAAAgG,GACK,IAAMC,EACAD,EAAMpH,UACFoH,EAAMpH,SAASC,MACfmH,EAAMpH,SAASC,KAAKqC,SACzB8E,EAAM9E,SACN8E,EAAMG,WAEX,EAAKtF,SAAS,CACTuE,SAAS,EACTlE,QAAS+E,YAKxBrE,KAAKf,SAAS,M,0BAQxB,WACK,IAEMT,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAN,wDACK,CACKzC,QACA,CACK,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAEzCoR,OACA,CACKnS,MAfD,oBAmBRV,MAAK,SAAAyC,GACGA,EAAIvC,MACHC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUmC,EAAIvC,Y,4BAM3E,WACK,IAEMuB,EADUpB,KAAKqB,MAAMvB,aAAawB,QAAQ,yBAC1BF,MACtB5B,IAAM2C,IAAN,0DACK,CACKzC,QACA,CACK,eAAgB,mBAChB,cAAgB,SAAhB,OAA0B0B,GAC1B,8BAA+B,IAC/B,+BAAgC,wBAChC,oCAAoC,GAEzCoR,OACA,CACKnS,MAfD,oBAmBRV,MAAK,SAAAyC,GACGA,EAAIvC,MACHC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUmC,EAAIvC,Y,oBAM7E,WAAU,IAAD,OAEJ,IAAKC,aAAawB,QAAQ,wBACrB,OAAQ,cAAC,IAAD,CAAUoB,GAAI,MAG3B,IAAMslB,EAAqBhoB,KAAKqB,MAAMvB,aAAawB,QAAQ,uBACrDgL,EAAiBtM,KAAKqB,MAAMvB,aAAawB,QAAQ,kBACjDiL,EAAevM,KAAKqB,MAAMvB,aAAawB,QAAQ,gBARjD,EAU2BsB,KAAKvC,MAA5BqL,EAVJ,EAUIA,UAAWC,EAVf,EAUeA,QAGnB,OACK,gCACK,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKnJ,UAAU,kBAAf,UACK,uBACCI,KAAKvC,MAAM+V,cACP,sBAAM5T,UAAU,GAAhB,SACK,qBAAKA,UAAU,kBAAf,SACK,sBAAKA,UAAU,WAAf,UACK,uCAAS,qBAAK4C,IAAKC,EAAMC,OAAO,OAAOC,IAAI,QAAc,uBACzD,qBAAK/C,UAAU,iBAAf,6CAKpB,yBAASA,UAAU,UAAnB,SACK,qBAAKA,UAAU,kBAAf,SAEK,qBAAKA,UAAU,MAAf,SAEK,qBAAKA,UAAU,SAAf,SAGU,qBAAKA,UAAU,MAAf,SACK,qBAAKA,UAAU,SAAf,SACK,sBAAKA,UAAU,OAAf,UACK,sBAAKA,UAAU,cAAf,UACK,oBAAIA,UAAU,aAAd,4BACA,qBAAKA,UAAU,kBAOpB,qBAAKA,UAAU,YAAf,SAEK,eAAC,IAAD,CAAM4E,SAAUxE,KAAKwd,aAAc/Y,IAAK,SAAAC,GAAO,EAAKb,KAAOa,GAA3D,UACK,sBAAK9E,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,2CACA,cAAC,IAAD,CAAO+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EACnD1B,MAAOiiB,EAAmBlnB,MAC1B4G,SAAU9E,KAAK8Z,qBAK9B,qBAAKla,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,8CAAiBwlB,EAAmB9W,WACpC,eAAC,IAAD,CAAQ1O,UAAU,gBAAgBiF,aAAW,EACxC1B,MAAOiiB,EAAmB9W,QAC1BxJ,SAAU9E,KAAK+Z,gBAFpB,UAKK,wBAAQ5W,MAAM,GAAd,oBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,2BAKpB,sBAAKvD,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UAEK,0CACA,cAAC,IAAD,CAAO+E,KAAK,SAAS/E,UAAU,gBAAgBiF,aAAW,EACrD1B,MAAOiiB,EAAmB7W,KAC1BzJ,SAAU9E,KAAKoa,oBAK9B,sBAAKxa,UAAU,MAAf,UACK,qBAAKA,UAAU,WAAf,SAEK,sBAAKA,UAAU,aAAf,UACK,gDACA,cAAC,IAAD,CAAO+E,KAAK,OAAOoW,OAAO,aAAanb,UAAU,gBAAgBiF,aAAW,EACvE1B,MAAOiiB,EAAmB9mB,WAC1BwG,SAAU9E,KAAKka,yBAK9B,qBAAKta,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,8CACA,cAAC,IAAD,CAAO+E,KAAK,OAAOoW,OAAO,aAAanb,UAAU,gBAAgBiF,aAAW,EACvE1B,MAAOiiB,EAAmB7mB,SAC1BuG,SAAU9E,KAAKma,0BAMnC,qBAAKva,UAAU,WAAf,SACK,sBAAKA,UAAU,aAAf,UACK,iDACA,eAAC,IAAD,CAAQ+E,KAAK,OAAO/E,UAAU,gBAAgBiF,aAAW,EAEpD1B,MAAOnD,KAAKvC,MAAM2L,YAClBtE,SAAU9E,KAAKia,mBAHpB,UAKK,wBAAQ9W,MAAM,GAAd,oBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,QAAd,8BAKnB2F,GACI,qBAAKlJ,UAAU,kBAAf,SACK,wBAAOA,UAAU,QAAjB,UACK,gCAEK,+BACK,uCAEA,4CACqC,cAAC,IAAD,CAC3Bob,WAAW,0BACXC,KAAK,cACLC,gBAAiB,SAACC,GAEb,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IAChD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGjDjG,aAAaC,QAAQ,gBAAiBgU,IAK3CkK,aAAc,SAACF,GAGV,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IAChD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGjDjG,aAAaC,QAAQ,gBAAiBgU,IAG3CmK,eAAgB,SAACH,GAEZ,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IAChD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAIjDjG,aAAaC,QAAQ,gBAAiBgU,cAW/D,uBAAOvR,UAAU,aAAjB,SACM8J,EAAexC,KAAI,SAACzJ,EAAO2J,GAAR,OAEf,+BACK,6BAAK3J,EAAMS,QACX,6BACK,uBACKyG,KAAK,WACL/E,UAAU,kBACVuD,MAAK,UAAK1F,EAAMoB,qBAavDkK,GACI,qBAAKnJ,UAAU,kBAAf,SACK,wBAAOA,UAAU,QAAjB,UACK,gCACK,+BACK,qCAEA,4CACsC,cAAC,IAAD,CAC5Bob,WAAW,0BACXC,KAAK,cACLC,gBAAiB,SAACC,GAEb,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IAChD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGjDjG,aAAaC,QAAQ,cAAegU,IAKzCkK,aAAc,SAACF,GAGV,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IAChD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGjDjG,aAAaC,QAAQ,cAAegU,IAGzCmK,eAAgB,SAACH,GAEZ,IADA,IAAMhK,EAAa,GACV/J,EAAI,EAAGA,EAAI+T,EAAYC,aAAa1b,OAAQ0H,IAChD+J,EAAWhE,KAAKgO,EAAYC,aAAahU,GAAGjE,OAGjDjG,aAAaC,QAAQ,cAAegU,cAU7D,uBAAOvR,UAAU,aAAjB,SACM+J,GAAgBA,EAAazC,KAAI,SAAA1J,GAAG,OAChC,+BACK,6BAAKA,EAAIU,QACT,6BACK,uBACKyG,KAAK,WACL/E,UAAU,kBACVuD,MAAK,UAAK3F,EAAIqB,qBAYtD,iCACMmB,KAAKvC,MAAM6B,SACP,qBAAKM,UAAU,OAAf,SACK,qBACKA,UACKI,KAAKvC,MAAM8O,WACJ,sBACA,qBAEZxM,KAAK,QANV,SAQK,mCAAOC,KAAKvC,MAAM6B,iBAItC,iCAGU,yBACK0F,SAAUhF,KAAKvC,MAAMmO,mBACrBhM,UAAU,kCAFf,UAKMI,KAAKvC,MAAMmO,oBACP,sBAAMhM,UAAU,iCAN1B,cAYV,cAAC,IAAD,CACKqF,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACA,EAAKX,SAAWW,4BA2BjF,cAAC,EAAD,W,GA7oBwBvE,aC2Q7BklB,GA7NE,WACb,OACG,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrgB,IACjC,cAAC,IAAD,CAAQogB,KAAK,WAAWC,UAAWrgB,IAGnC,cAAC,IAAD,CAAOmgB,OAAK,EAACC,KAAK,IAAIC,UAAWpiB,IACjC,cAAC,IAAD,CAAQmiB,KAAK,SAASC,UAAWpiB,IAGjC,cAAC,IAAD,CAAOkiB,OAAK,EAACC,KAAK,IAAIC,UAAWxiB,IACjC,cAAC,IAAD,CAAQuiB,KAAK,aAAaC,UAAWxiB,IAOrC,cAAC,IAAD,CAAOsiB,OAAK,EAACC,KAAK,IAAIC,UAAW/e,IACjC,cAAC,IAAD,CAAQ8e,KAAK,cAAcC,UAAW/e,IAEtC,cAAC,IAAD,CAAO6e,OAAK,EAACC,KAAK,IAAIC,UAAWtZ,IACjC,cAAC,IAAD,CAAQqZ,KAAK,kBAAkBC,UAAWtZ,IAE1C,cAAC,IAAD,CAAOoZ,OAAK,EAACC,KAAK,IAAIC,UAAWvW,KACjC,cAAC,IAAD,CAAQsW,KAAK,YAAYC,UAAWvW,KAErC,cAAC,IAAD,CAAOqW,OAAK,EAACC,KAAK,IAAIC,UAAW7e,KAChC,cAAC,IAAD,CAAQ4e,KAAK,gBAAgBC,UAAW7e,KAExC,cAAC,IAAD,CAAO2e,OAAK,EAACC,KAAK,IAAIC,UAAWvS,KACjC,cAAC,IAAD,CAAQsS,KAAK,WAAWC,UAAWvS,KAEnC,cAAC,IAAD,CAAOqS,OAAK,EAACC,KAAK,IAAIC,UAAWjjB,KACjC,cAAC,IAAD,CAAQgjB,KAAK,mBAAmBC,UAAWjjB,KAG3C,cAAC,IAAD,CAAO+iB,OAAK,EAACC,KAAK,IAAIC,UAAWxP,KACjC,cAAC,IAAD,CAAQuP,KAAK,gBAAgBC,UAAWxP,KAExC,cAAC,IAAD,CAAOsP,OAAK,EAACC,KAAK,IAAIC,UAAWlP,KACjC,cAAC,IAAD,CAAQiP,KAAK,iBAAiBC,UAAWlP,KAEzC,cAAC,IAAD,CAAOgP,OAAK,EAACC,KAAK,IAAIC,UAAWjN,KACjC,cAAC,IAAD,CAAQgN,KAAK,iBAAiBC,UAAWjN,KAEzC,cAAC,IAAD,CAAO+M,OAAK,EAACC,KAAK,IAAIC,UAAWvM,KACjC,cAAC,IAAD,CAAQsM,KAAK,WAAWC,UAAWvM,KAEnC,cAAC,IAAD,CAAOqM,OAAK,EAACC,KAAK,IAAIC,UAAWhM,KACjC,cAAC,IAAD,CAAQ+L,KAAK,kBAAkBC,UAAWhM,KAE1C,cAAC,IAAD,CAAO8L,OAAK,EAACC,KAAK,IAAIC,UAAW5L,KACjC,cAAC,IAAD,CAAQ2L,KAAK,UAAUC,UAAW5L,KAElC,cAAC,IAAD,CAAO0L,OAAK,EAACC,KAAK,IAAIC,UAAWhK,KACjC,cAAC,IAAD,CAAQ+J,KAAK,oBAAoBC,UAAWhK,KAE5C,cAAC,IAAD,CAAO8J,OAAK,EAACC,KAAK,IAAIC,UAAW/J,KACjC,cAAC,IAAD,CAAQ8J,KAAK,iBAAiBC,UAAW/J,KAEzC,cAAC,IAAD,CAAO6J,OAAK,EAACC,KAAK,IAAIC,UAAWvJ,KACjC,cAAC,IAAD,CAAQsJ,KAAK,mBAAmBC,UAAWvJ,KAG3C,cAAC,IAAD,CAAOqJ,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,cAAC,IAAD,CAAQF,KAAK,mBAAmBC,UAAWC,KAE3C,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,IAAIC,UAAWE,KACjC,cAAC,IAAD,CAAQH,KAAK,oBAAoBC,UAAWE,KAE5C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,IAAIC,UAAW/I,KACjC,cAAC,IAAD,CAAQ8I,KAAK,kBAAkBC,UAAW/I,KAE1C,cAAC,IAAD,CAAO6I,OAAK,EAACC,KAAK,IAAIC,UAAWxJ,KACjC,cAAC,IAAD,CAAQuJ,KAAK,iBAAiBC,UAAWxJ,KAEzC,cAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,IAAIC,UAAWrI,KACjC,cAAC,IAAD,CAAQoI,KAAK,qBAAqBC,UAAWrI,KAE7C,cAAC,IAAD,CAAOmI,OAAK,EAACC,KAAK,IAAIC,UAAWnI,KACjC,cAAC,IAAD,CAAQkI,KAAK,kBAAkBC,UAAWnI,KAE1C,cAAC,IAAD,CAAOiI,OAAK,EAACC,KAAK,IAAIC,UAAW7jB,KACjC,cAAC,IAAD,CAAQ4jB,KAAK,oBAAoBC,UAAW7jB,KAE5C,cAAC,IAAD,CAAO2jB,OAAK,EAACC,KAAK,IAAIC,UAAWnjB,KACjC,cAAC,IAAD,CAAQkjB,KAAK,oBAAoBC,UAAWnjB,KAE5C,cAAC,IAAD,CAAOijB,OAAK,EAACC,KAAK,IAAIC,UAAWlI,KACjC,cAAC,IAAD,CAAQiI,KAAK,kBAAkBC,UAAWlI,KAE1C,cAAC,IAAD,CAAOgI,OAAK,EAACC,KAAK,IAAIC,UAAWzH,KACjC,cAAC,IAAD,CAAQwH,KAAK,kBAAkBC,UAAWzH,KAE1C,cAAC,IAAD,CAAOuH,OAAK,EAACC,KAAK,IAAIC,UAAWxH,KACjC,cAAC,IAAD,CAAQuH,KAAK,iBAAiBC,UAAWxH,KAEzC,cAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,IAAIC,UAAWjH,KACjC,cAAC,IAAD,CAAQgH,KAAK,kBAAkBC,UAAWjH,KAE1C,cAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,IAAIC,UAAWhH,KACjC,cAAC,IAAD,CAAQ+G,KAAK,gBAAgBC,UAAWhH,KAExC,cAAC,IAAD,CAAO8G,OAAK,EAACC,KAAK,IAAIC,UAAW7G,KACjC,cAAC,IAAD,CAAQ4G,KAAK,kBAAkBC,UAAW7G,KAE1C,cAAC,IAAD,CAAO2G,OAAK,EAACC,KAAK,IAAIC,UAAW5G,KACjC,cAAC,IAAD,CAAQ2G,KAAK,kBAAkBC,UAAW5G,KAE1C,cAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,IAAIC,UAAW3G,KACjC,cAAC,IAAD,CAAQ0G,KAAK,oBAAoBC,UAAW3G,KAE5C,cAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,IAAIC,UAAW1G,KACjC,cAAC,IAAD,CAAQyG,KAAK,oBAAoBC,UAAW1G,KAE5C,cAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,IAAIC,UAAWzG,KACjC,cAAC,IAAD,CAAQwG,KAAK,uBAAuBC,UAAWzG,KAE/C,cAAC,IAAD,CAAOuG,OAAK,EAACC,KAAK,IAAIC,UAAW5J,KACjC,cAAC,IAAD,CAAQ2J,KAAK,qBAAqBC,UAAW5J,KAE7C,cAAC,IAAD,CAAO0J,OAAK,EAACC,KAAK,IAAIC,UAAWpH,KACjC,cAAC,IAAD,CAAQmH,KAAK,oBAAoBC,UAAWpH,KAE5C,cAAC,IAAD,CAAOkH,OAAK,EAACC,KAAK,IAAIC,UAAWpG,KACjC,cAAC,IAAD,CAAQmG,KAAK,eAAeC,UAAWpG,KAEvC,cAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,IAAIC,UAAW3I,KACjC,cAAC,IAAD,CAAQ0I,KAAK,mBAAmBC,UAAW3I,KAE3C,cAAC,IAAD,CAAOyI,OAAK,EAACC,KAAK,IAAIC,UAAWvI,KACjC,cAAC,IAAD,CAAQsI,KAAK,oBAAoBC,UAAWvI,KAE5C,cAAC,IAAD,CAAOqI,OAAK,EAACC,KAAK,IAAIC,UAAWtF,KACjC,cAAC,IAAD,CAAQqF,KAAK,qBAAqBC,UAAWtF,KAE7C,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAIC,UAAWpF,KACjC,cAAC,IAAD,CAAQmF,KAAK,+BAA+BC,UAAWpF,KAEvD,cAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,IAAIC,UAAW7E,KACjC,cAAC,IAAD,CAAQ4E,KAAK,eAAeC,UAAW7E,KAEvC,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,IAAIC,UAAWzD,KACjC,cAAC,IAAD,CAAQwD,KAAK,eAAeC,UAAWzD,KAEvC,cAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,IAAIC,UAAWxD,KACjC,cAAC,IAAD,CAAQuD,KAAK,eAAeC,UAAWxD,KAEvC,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,IAAIC,UAAWvD,KACjC,cAAC,IAAD,CAAQsD,KAAK,eAAeC,UAAWvD,KAEvC,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,IAAIC,UAAWjD,KACjC,cAAC,IAAD,CAAQgD,KAAK,0BAA0BC,UAAWjD,KAElD,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAIC,UAAW/C,KACjC,cAAC,IAAD,CAAQ8C,KAAK,0BAA0BC,UAAW/C,KAElD,cAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,IAAIC,UAAW7C,KACjC,cAAC,IAAD,CAAQ4C,KAAK,kBAAkBC,UAAW7C,KAE1C,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,IAAIC,UAAW1C,KACjC,cAAC,IAAD,CAAQyC,KAAK,kBAAkBC,UAAW1C,KAG1C,cAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,IAAIC,UAAW5b,IACjC,cAAC,IAAD,CAAQ2b,KAAK,oBAAoBC,UAAW5b,IAE5C,cAAC,IAAD,CAAO0b,OAAK,EAACC,KAAK,IAAIC,UAAWzC,KACjC,cAAC,IAAD,CAAQwC,KAAK,cAAcC,UAAWzC,KAEtC,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,IAAIC,UAAWlC,KACjC,cAAC,IAAD,CAAQiC,KAAK,gBAAgBC,UAAWlC,KAExC,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,IAAIC,UAAW1B,KACjC,cAAC,IAAD,CAAQyB,KAAK,QAAQC,UAAW1B,KAEhC,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAIC,UAAWvB,KACjC,cAAC,IAAD,CAAQsB,KAAK,iBAAiBC,UAAWvB,KAGzC,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,IAAIC,UAAWrB,KACjC,cAAC,IAAD,CAAQoB,KAAK,8BAA8BC,UAAWrB,KAGtD,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAIC,UAAWnB,KACjC,cAAC,IAAD,CAAQkB,KAAK,4BAA4BC,UAAWnB,KAEpD,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAWb,KACjC,cAAC,IAAD,CAAQY,KAAK,kBAAkBC,UAAWb,KAE1C,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAIC,UAAWb,KACjC,cAAC,IAAD,CAAQY,KAAK,kBAAkBC,UAAWb,KAE1C,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAIC,UAAWZ,KACjC,cAAC,IAAD,CAAQW,KAAK,mBAAmBC,UAAWZ,KAE3C,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWX,KACjC,cAAC,IAAD,CAAQU,KAAK,mBAAmBC,UAAWX,KAE3C,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAIC,UAAWR,KACjC,cAAC,IAAD,CAAQO,KAAK,wBAAwBC,UAAWR,KAGhD,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWN,KACjC,cAAC,IAAD,CAAQK,KAAK,wBAAwBC,UAAWN,KAEhD,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWL,KACjC,cAAC,IAAD,CAAQI,KAAK,kBAAkBC,UAAWL,SCtRtC,SAASQ,KAEtB,OACE,8BACE,cAAC,IAAD,UAEA,cAAC,GAAD,QCCcC,QACW,cAA7BzmB,OAAOf,SAASynB,UAEe,UAA7B1mB,OAAOf,SAASynB,UAEhB1mB,OAAOf,SAASynB,SAASlI,MACvB,2DCRNmI,IAASC,OACP,cAACJ,GAAD,IACAtgB,SAAS2gB,eAAe,iBDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMppB,MAAK,SAAAqpB,GACjCA,EAAaC,kB","file":"static/js/main.a2802a28.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst Url ='https://gfso.chinikiguard.com/accounts/api/jwt/';\r\n\r\nclass AuthService {\r\n\r\n \r\n  login(username, password) {\r\n    \r\n\r\n    return axios.post( Url, { username,  password },  { headers: { \r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n    'Access-Control-Allow-Credentials': true }, }   )\r\n    \r\n      .then(response => {\r\n        if (response.data) {\r\n          localStorage.setItem(\"_WannanGfsoCbnUserNe\", JSON.stringify(response.data));\r\n        }\r\n        // console.log(response.data)\r\n        return response.data;\r\n      }\r\n      \r\n      );\r\n    \r\n  }\r\n\r\n //handle logout\r\n  // logout() {\r\n  //   localStorage.removeItem(\"user\");\r\n  //   localStorage.removeItem(\"token\");\r\n  // }\r\n//create new user\r\n  createNewUser( username,password,first_name,last_name,\r\n    // address, \r\n    lga,state,\r\n    // dob,\r\n    email,phone_number,group_pk,\r\n    // branch_pk,\r\n    designation_pk,\r\n    // staff_number,\r\n    user_type) {\r\n//     const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n// const token = mytoken.token;\r\n\r\nlet formData = new FormData();\r\n        formData.append('username', username);\r\n        formData.append('password', password);\r\n        formData.append('first_name', first_name);\r\n        formData.append('last_name', last_name);\r\n        // formData.append('address', address);\r\n        formData.append('lga', lga);\r\n        // formData.append('dob', dob);\r\n        formData.append('state', state);\r\n        formData.append('email', email);\r\n        formData.append('phone_number', phone_number);\r\n        formData.append('group_pk', group_pk);\r\n        formData.append('designation_pk', designation_pk);\r\n        // formData.append('branch_pk', branch_pk);\r\n        // formData.append('staff_number', staff_number);\r\n        formData.append('user_type', user_type);\r\n        \r\n        \r\n\r\n    return axios.post('https://gfso.chinikiguard.com/accounts/api/create-user/',formData, {\r\n     \r\n    },\r\n    {  \r\n      headers: { \r\n      'Content-Type':'application/json',\r\n       'Access-Control-Allow-Origin': '*',\r\n       'Access-Control-Allow-Methods': 'POST, GET,HEAD,OPTIONS',\r\n       'Access-Control-Allow-Credentials': true \r\n      }, \r\n    }   \r\n    )\r\n  }\r\n\r\n  //this handle projects\r\n  RegisterProject(title,description,location,status,start_date,due_date){\r\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\nconst token = mytoken.token;\r\n     return  axios.post(\"https://ecological.chinikiguard.com/projects/api/create/\", {\r\n\r\n     title,\r\n     description,\r\n     location,\r\n     status,\r\n     start_date,\r\n     due_date,\r\n  },\r\n  \r\n  { \r\n    \r\n    \r\n    headers: { \r\n    'Authorization': `Token ${token}`,\r\n     'Access-Control-Allow-Origin': '*',\r\n     'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n     'Access-Control-Allow-Credentials': true \r\n    }, \r\n  }   \r\n  )\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n//this handle survey creation\r\nCreateSurvey(title,category,status,origin){\r\n\r\n  const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n  const token = mytoken.token;\r\n  return  axios.post(\"https://gfso.chinikiguard.com/survey/api/create/survey/\", {\r\n\r\n  title,\r\n  category,\r\n  status,\r\n  origin,\r\n},\r\n\r\n{ \r\n \r\n \r\n headers: { \r\n 'Authorization': `Token ${token}`,\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\r\n  'Access-Control-Allow-Credentials': true \r\n }, \r\n}   \r\n)\r\n\r\n.then(response => {\r\n  if (response.data) {\r\n    localStorage.setItem(\"survey_pk\", JSON.stringify(response.data.pk));\r\n  }\r\n  // console.log(response.data)\r\n  return response.data;\r\n}\r\n\r\n);\r\n\r\n\r\n\r\n\r\n}\r\n\r\n  \r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n  }\r\n}\r\n\r\n\r\nexport default new AuthService();","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch,Redirect } from \"react-router-dom\";\r\nimport authService from '../services/auth.service';\r\nimport axios from 'axios'\r\n\r\nclass Header extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.routeChange = this.routeChange.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n\r\n  this.state = {\r\n      message: []\r\n  };\r\n  }\r\n  // state = {\r\n  //   navigate: false\r\n  // };\r\n  componentDidMount() {\r\n\r\n\r\n    const user = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n    const token = user.token;\r\n    //call the States and LGAS at the first \r\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/?read=no',\r\n      {\r\n        headers:\r\n        {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Token ${token}`,\r\n        },\r\n\r\n      },\r\n    )\r\n      .then(res => {\r\n        if (res.data) {\r\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\r\n        }\r\n        this.setState({\r\n          notification: res.data.length,\r\n          message: res.data\r\n        });\r\n        // console.log(res.data)                  \r\n\r\n      })\r\n\r\n      \r\n  }\r\n  logOut() {\r\n   localStorage.clear();\r\n    window.location = \"/\"\r\n    //  (<Redirect to=\"/login\" />)\r\n  }\r\n  routeChange = () => {\r\n    this.setState({ navigate: true });\r\n    window.location = \"/dashboard\"\r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    // const { navigate } = this.state;\r\n\r\n    return (\r\n\r\n      <Switch>\r\n        {/* {currentUser && ( */}\r\n\r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n          {/* Left navbar links */}\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-widget=\"pushmenu\" to=\"#\" role=\"button\"><i className=\"fas fa-bars\" /></Link>\r\n            </li>\r\n            {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n      <a href=\"../../index3.html\" className=\"nav-link\">Home</a>\r\n    </li> */}\r\n            {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n      <a href=\"#\" className=\"nav-link\">Menu</a>\r\n    </li> */}\r\n          </ul>\r\n          {/* Right navbar links */}\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {/* Navbar Search */}\r\n\r\n            {/* Messages Dropdown Menu */}\r\n            <li className=\"nav-item\">\r\n              <Link  to=\"/Notifications\" className=\"nav-link\"  >\r\n                <i className=\"fas fa-bell\" />\r\n                <span className=\"badge badge-danger navbar-badge\">{this.state.notification}</span>\r\n              </Link>\r\n             \r\n            </li>\r\n\r\n\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-widget=\"fullscreen\" to=\"#\" role=\"button\">\r\n                <i className=\"fas fa-expand-arrows-alt\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" data-slide=\"true\" data-widget=\"control-sidebar\" onClick={this.logOut}  >\r\n                <span>Sign Out</span> &nbsp;\r\n        <i className=\"fas fa-user-alt\" />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n      </Switch>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/cbn.ec9a327b.png\";","import React, { Component } from 'react'\r\nimport { Link, Switch } from 'react-router-dom';\r\nimport Logo from '../cbn.png'\r\nimport authService from '../services/auth.service';\r\nimport axios from 'axios'\r\n\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n            Group1_Branch: false,\r\n            Group2: false,\r\n            Respondent: false,\r\n            Approver: false,\r\n            Data_Management_team:false,\r\n            current_User: undefined,\r\n            BranchDataChecker:false,\r\n            HqDataChecker:false,\r\n             FinalDataChecker:false,\r\n             HqDataChecker2:false,\r\n             SuperAdmin:false,\r\n            NewUser:false,\r\n            myloading: true,\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        \r\n\r\n        const user = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n        const token = user.token\r\n\r\n      \r\n        //check User Group\r\n        if (user) {\r\n            this.setState({\r\n                current_User: user.profile,\r\n                NewUser:user.profile.user_groups.includes(\"NewUser\"),\r\n                Group1_Branch: user.profile.user_groups.includes(\"Group 1/Branch\"),\r\n                Group2: user.profile.user_groups.includes(\"Group 2\"),\r\n                Respondent: user.profile.user_groups.includes(\"Respondent\"),\r\n                Approver: user.profile.user_groups.includes(\"Approver\"),\r\n                Data_Management_team: user.profile.user_groups.includes(\"Data Management team\"), \r\n                BranchDataChecker: user.profile.user_groups.includes(\"BranchDataChecker\"), \r\n                HqDataChecker: user.profile.user_groups.includes(\"HqDataChecker\"), \r\n                FinalDataChecker: user.profile.user_groups.includes(\"FinalDataChecker\"), \r\n                SuperAdmin: user.profile.user_groups.includes(\"SuperAdmin\"), \r\n                HqDataChecker2: user.profile.user_groups.includes(\"HqDataChecker2\"), \r\n                \r\n                          \r\n            });\r\n           \r\n            \r\n        // const token = user.token;\r\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/menus-counts/\",\r\n        {\r\n            headers:\r\n            {\r\n                'Authorization': `Token ${token}`,\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                'Access-Control-Allow-Credentials': true\r\n            },\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                ApprovedSurveys: res.data.approved_surveys,\r\n                RejectedSurveys: res.data.rejected_surveys,\r\n                ApprovedTemplate: res.data.approved_template_surveys,\r\n                Pendingdeployement: res.data.pending_deployed_surveys,\r\n                PendingApprovalSurvey: res.data.pending_approval_surveys,\r\n                PendingApprovalTemplate: res.data.pending_template_approval_surveys,\r\n                myloading: false,\r\n                warningLoad: true,\r\n                pending_approval_responses:res.data.pending_approval_responses\r\n                // \"total_surveys\": 6,\r\n            // \"active_surveys\": 6,\r\n            // \"closed_surveys\": 0,\r\n            // \"deployed_surveys\": 6,\r\n            // \"all_lga_surveys\": 6,\r\n            // \"all_state_surveys\": 0,\r\n            // \"total_response\": 15,\r\n            // \"approved_responses\": 1,\r\n            // \"rejected_responses\": 1\r\n          \r\n            });\r\n        })\r\n\r\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&rejected=yes`,\r\n        {\r\n            headers:\r\n            {\r\n                'Authorization': `Token ${token}`,\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                'Access-Control-Allow-Credentials': true\r\n            },\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                RejectedTemplate: res.data.length,\r\n                myloading: false,\r\n                warningLoad: true,\r\n            });\r\n        })\r\n\r\n   \r\n        \r\n            \r\n            \r\n\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        const Check = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n        const token = Check.token\r\n\r\n        const user_type = Check.profile.user_type\r\n        const lga = Check.profile.lga\r\n        const state = Check.profile.state\r\n        const Hq = state && lga\r\n\r\n            switch (user_type) {\r\n                case 'sg_user':\r\n                    return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&states=${state}`,\r\n                    {\r\n                        headers:\r\n                        {\r\n                            'Authorization': `Token ${token}`,\r\n                            'Access-Control-Allow-Origin': '*',\r\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                            'Access-Control-Allow-Credentials': true\r\n                        },\r\n                    })\r\n                    .then(res => {\r\n                        this.setState({\r\n                            AvailableSurvey: res.data.length,\r\n                            myloading: false,\r\n                            warningLoad: true,\r\n                        });\r\n                    })\r\n             \r\n                    case 'lg_user':\r\n                        return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&lgas=${lga}`,\r\n                        {\r\n                            headers:\r\n                            {\r\n                                'Authorization': `Token ${token}`,\r\n                                'Access-Control-Allow-Origin': '*',\r\n                                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                                'Access-Control-Allow-Credentials': true\r\n                            },\r\n                        })\r\n                        .then(res => {\r\n                            this.setState({\r\n                                AvailableSurvey: res.data.length,\r\n                                myloading: false,\r\n                                warningLoad: true,\r\n                            });\r\n                        })\r\n                        case 'hq_user':\r\n                            return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open`,\r\n                            {\r\n                                headers:\r\n                                {\r\n                                    'Authorization': `Token ${token}`,\r\n                                    'Access-Control-Allow-Origin': '*',\r\n                                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n                                    'Access-Control-Allow-Credentials': true\r\n                                },\r\n                            })\r\n                            .then(res => {\r\n                                this.setState({\r\n                                    AvailableSurvey: res.data.length,\r\n                                    myloading: false,\r\n                                    warningLoad: true,\r\n                                });\r\n                            })\r\n                    \r\n                default:\r\n                    return null;\r\n            }\r\n        \r\n        }  \r\n           \r\n\r\n\r\n    render() {\r\n        const { NewUser, current_User,SuperAdmin,BranchDataChecker, HqDataChecker,HqDataChecker2,FinalDataChecker,Group1_Branch, Group2,Respondent,Approver,Data_Management_team } = this.state;\r\n\r\n\r\n        return (\r\n\r\n            <Switch>\r\n                \r\n                {/* {current_User ||NewUser && ( */}\r\n\r\n\r\n                    <aside className=\"main-sidebar sidebar-light-success elevation-4 \">\r\n\r\n                        {/* Brand Logo */}\r\n                        <Link to=\"/dashboard\" className=\"brand-link\">\r\n                            <center> <img src={Logo} height=\"100px\" alt=\"\"/></center><br />\r\n                            <center> <span className=\"brand-text font-weight-light text-yellow\"><h3><b>GFSO</b></h3></span></center>\r\n                        </Link>\r\n\r\n                        <div className=\"sidebar\">\r\n                                {/* admin sidebar */}\r\n                        {SuperAdmin && (\r\n                            \r\n                            <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                   <li className=\"nav-item has-treeview menu-open\">\r\n                            \r\n                            <Link to=\"/dashboard\" className=\"nav-link active bg-dark\">\r\n                            <i className=\"nav-icon fas fa-home\" />\r\n                            <p>\r\n                            Dashboard\r\n                            </p>\r\n                            </Link>\r\n                            <hr/>\r\n                            \r\n                           \r\n                            <h1 className=\"nav-header\">GROUP 1</h1>\r\n                            <hr/>\r\n                            \r\n                            \r\n                                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-user\" />\r\n                            <p>\r\n                            RESPONDENT\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentInfo\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-info text-green\"></i>\r\n                                                    <p>\r\n                                                    Update Respondent \r\n                                                 </p>\r\n                                                </Link>\r\n                                            </li>\r\n                            </ul>\r\n                            \r\n              \r\n                            \r\n                            </li>\r\n                            \r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-poll-h\" />\r\n                            <p>\r\n                            SURVEY\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/Deploy\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                            Create Survey\r\n                            \r\n                            </Link>\r\n                            </li>\r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveThisSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                        <p>\r\n                                                        \r\n    \r\n                                                     Pending Approval\r\n                                                     {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                  Approved Surveys \r\n                                                  {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected Surveys \r\n                                                      {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/SurveyToDeploy\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-clock-o text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Pending Deployement\r\n                                                        {this.state.Pendingdeployement\r\n                                                      ?this.state.Pendingdeployement!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Pendingdeployement}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n\r\n    </p>\r\n\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                            </ul>\r\n                            <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Ongoing Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/Allsurveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-bar text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        All Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                            \r\n                            </li>\r\n                            \r\n                            \r\n                            {/* LG */}\r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-copy\" />\r\n                            <p>\r\n                            TEMPLATE\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveThisTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                       \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ViewSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Template\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedTemplate\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                      {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                           \r\n                                                </ul>  \r\n                                                <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-minus\" />\r\n                            <p>\r\n                            PENSION & DEDUCT.\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/PensionSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Survey\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprovePension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                        </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                          \r\n\r\n                                        \r\n                           \r\n      \r\n                            </li>\r\n                                             \r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n\r\n                            <i className=\"nav-icon fas fa-reply\" />\r\n                            <p>\r\n                            RESPONSES\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n\r\n                             <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        </li>\r\n                            <hr/>\r\n  \r\n                            <h1 className=\"nav-header\">GROUP 2</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-user\" />\r\n                            <p>\r\n                            RESPONDENT\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                                        <li class=\"nav-item has-treeview\">\r\n                                            <Link to=\"/RespondentList\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                <p>\r\n                                                    Approve  Respondent\r\n\r\n</p>\r\n                                            </Link>\r\n                                        </li>\r\n                                    </ul>\r\n                             \r\n              \r\n                            \r\n                            </li>\r\n                          \r\n                           <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-poll-h\" />\r\n                            <p>\r\n                            SURVEY\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                           \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval\r\n                                                    \r\n                                                    {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                     Approved\r\n                                                     {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected\r\n                                                    {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Ongoing Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/Allsurveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-bar text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        All Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                        </ul>\r\n                                        \r\n                            \r\n                            </li>\r\n                            \r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-copy\" />\r\n                            <p>\r\n                            TEMPLATE\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                           \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                    Approved \r\n                                                    {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected \r\n                                                    {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n\r\n                            </li>\r\n                            \r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-minus\" />\r\n                            <p>\r\n                            PENSION & DEDUCT.\r\n\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                           \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/PensionSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Survey\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprovePension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                        </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                                <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n\r\n                            <i className=\"nav-icon fas fa-reply\" />\r\n                            <p>\r\n                            RESPONSES\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n\r\n                             <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        </li>\r\n                                         <hr/>\r\n\r\n                                        <h1 className=\"nav-header\">RESPONDENT</h1>\r\n                                         <hr/>\r\n                             <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-calendar\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n<p>\r\n   Fill Survey Response\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!=0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n                                 <ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n<p>\r\n   Pending Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!=0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n                                  <ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon far fa-circle text-success\"></i>\r\n<p>\r\n   Approved Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!=0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n                                   <ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon far fa-circle text-danger\"></i>\r\n<p>\r\n   Rejected Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!=0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul>                             \r\n                            </li>\r\n\r\n                                         <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-minus\" />\r\n                            <p>\r\n                            PENSION & DEDUCT.\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            <ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/PensiondeductionSurveyList\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n<p>\r\n  Fill Pension & Deduction\r\n   \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n<ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/PensionPending\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n<p>\r\n\r\nPending Approval \r\n\r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n\r\n<ul class=\"nav nav-treeview\">\r\n\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-check text-green\"></i>\r\n<p>\r\n\r\n\r\nApproved \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n\r\n</ul>  \r\n<ul class=\"nav nav-treeview\">\r\n\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/RejectedPension\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-times text-red\"></i>\r\n<p>\r\n\r\nRejected  \r\n</p>\r\n</Link>\r\n</li>\r\n\r\n</ul>  \r\n<hr/>\r\n\r\n\r\n</li>\r\n                                        {/* <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> */}\r\n                                        <h1 className=\"nav-header\">APPROVER</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-reply\" />\r\n                            <p>\r\n                            RESPONSES\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-info\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                         \r\n                                                        Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-info\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                         \r\n                                                        Approved Responses\r\n                                         </p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                        <a href=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-file\" />\r\n                                                <p>\r\n                                                REPORTS\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </a>\r\n                             <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n\r\n                                        <a href=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-copy\" />\r\n                                                <p>\r\n                                                    State Government\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </a>\r\n                                           \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/GenerateRecurrentSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Recurrent & C. Expenditure\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchCOFOGSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    COFOG Report\r\n                                                    \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchSSGFFSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SSGFF Report\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchPensiondeductionSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Deduction & pension\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchLGEONSPWSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SG Expenditure  \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        <li className=\"nav-item\">\r\n                                        <a href=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-copy\" />\r\n                                                <p>\r\n                                                    Local Government\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </a>\r\n                                           \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/GenerateRecurrent\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Recurrent & C. Expenditure\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchCOFOG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    COFOG Report\r\n                                                    \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchSSGFF\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SSGFF Report\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchPensiondeduction\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Deduction & pension\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchLGEONSPW\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    LGAs Expenditure  \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        </li>\r\n                                        </li>\r\n                                    </ul>                \r\n                                    </li>\r\n                                    <hr/>\r\n\r\n                            <h1 className=\"nav-header\">BRANCH CHECKS</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-eye\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                            \r\n                                 </li>\r\n                                 <h1 className=\"nav-header\">HQ  CHECKS 1</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-eye\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                            \r\n                                 </li>\r\n                          \r\n                                 <h1 className=\"nav-header\">HQ CHECKS 2</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-eye\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                            \r\n                                 </li>\r\n\r\n                                 <h1 className=\"nav-header\">FINAL HQ CHECKS</h1>\r\n                            <hr/>\r\n                            <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"nav-icon fas fa-eye\" />\r\n                            <p>\r\n                            ANNUAL & HALF-YEAR\r\n                            <i className=\"fas fa-angle-left right\" />\r\n                            </p>\r\n                            </a>\r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul>                              \r\n                                 </li>\r\n\r\n                            </li>   \r\n                            </li>\r\n                            \r\n                             </ul>\r\n                               )}\r\n                            \r\n                            {/* Sidebar Menu */}\r\n                         <nav className=\"mt-2\">\r\n                            {BranchDataChecker && (\r\n\r\n                             <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                  <li className=\"nav-item has-treeview menu-open\">\r\n\r\n               <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n              <i className=\"nav-icon fas fa-home\" />\r\n               <p>\r\n               Dashboard\r\n               </p>\r\n               </Link>\r\n              <hr/>\r\n\r\n              <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                <hr/>\r\n\r\n                          \r\n                             \r\n                               <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                             <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                             <hr/>\r\n                            \r\n                             \r\n                             <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             \r\n                             Pending Approval \r\n                             \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                             \r\n                             \r\n                             <ul class=\"nav nav-treeview\">\r\n                             \r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n\r\n                                 <p>\r\n                             \r\n                             \r\n                             Approved \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             \r\n                             </ul>  \r\n                             <ul class=\"nav nav-treeview\">\r\n                             \r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-red\"></i>\r\n                             <p>\r\n                             \r\n                             Rejected  \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             \r\n                             </ul>  \r\n                             <hr/>\r\n                             \r\n                             \r\n                             \r\n                             </li>\r\n                             \r\n                             </ul>\r\n                              )}\r\n\r\n                        {HqDataChecker && (\r\n\r\n                             <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                  <li className=\"nav-item has-treeview menu-open\">\r\n\r\n               <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n              <i className=\"nav-icon fas fa-home\" />\r\n               <p>\r\n               Dashboard\r\n               </p>\r\n               </Link>\r\n              <hr/>\r\n\r\n              <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                <hr/>\r\n\r\n                          \r\n                             \r\n                               <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             Pending Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             Approved Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                 <ul className=\"nav nav-treeview\">\r\n                             <li className=\"nav-item has-treeview\">\r\n                             <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                             <p>\r\n                             Rejected Responses\r\n                             \r\n                             {this.state.AvailableSurvey\r\n                             ?this.state.AvailableSurvey!=0\r\n                             \r\n                             && <span className=\"badge badge-danger navbar-badge\">\r\n                             {this.state.AvailableSurvey}\r\n                             </span>\r\n                             :\"\"}  \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                                    <hr/>\r\n                             \r\n                             <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                             <hr/>\r\n                             \r\n                             \r\n                             <ul class=\"nav nav-treeview\">\r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                             <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                             <p>\r\n                             \r\n                             Pending Approval \r\n                             \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             </ul> \r\n                             \r\n                             \r\n                             <ul class=\"nav nav-treeview\">\r\n                             \r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                             <p>\r\n                             \r\n                             \r\n                             Approved \r\n                             \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             \r\n                             </ul>  \r\n                             <ul class=\"nav nav-treeview\">\r\n                             \r\n                             <li class=\"nav-item has-treeview\">\r\n                             <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                             <i className=\"nav-icon far fa-circle text-red\"></i>\r\n                             <p>\r\n                             \r\n                             Rejected  \r\n                             </p>\r\n                             </Link>\r\n                             </li>\r\n                             \r\n                             </ul>  \r\n                             <hr/>\r\n                             \r\n                             \r\n                             \r\n                             </li>\r\n                             \r\n                             </ul>\r\n                              )}\r\n                             {HqDataChecker2 && (\r\n\r\n                          <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                          <li className=\"nav-item has-treeview menu-open\">\r\n                          \r\n                          <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n                          <i className=\"nav-icon fas fa-home\" />\r\n                          <p>\r\n                          Dashboard\r\n                          </p>\r\n                          </Link>\r\n                          <hr/>\r\n                          \r\n                          <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                          <hr/>\r\n                          \r\n                          \r\n                          \r\n                            <ul class=\"nav nav-treeview\">\r\n                          <li class=\"nav-item has-treeview\">\r\n                          <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                          <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                          <p>\r\n                          Pending Responses\r\n                          \r\n                          {this.state.AvailableSurvey\r\n                          ?this.state.AvailableSurvey!=0\r\n                          \r\n                          && <span className=\"badge badge-danger navbar-badge\">\r\n                          {this.state.AvailableSurvey}\r\n                          </span>\r\n                          :\"\"}  \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          </ul> \r\n                             <ul className=\"nav nav-treeview\">\r\n                          <li className=\"nav-item has-treeview\">\r\n                          <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                          <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                          <p>\r\n                          Approved Responses\r\n                          \r\n                          {this.state.AvailableSurvey\r\n                          ?this.state.AvailableSurvey!=0\r\n                          \r\n                          && <span className=\"badge badge-danger navbar-badge\">\r\n                          {this.state.AvailableSurvey}\r\n                          </span>\r\n                          :\"\"}  \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          </ul> \r\n                              <ul className=\"nav nav-treeview\">\r\n                          <li className=\"nav-item has-treeview\">\r\n                          <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                          <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                          <p>\r\n                          Rejected Responses\r\n                          \r\n                          {this.state.AvailableSurvey\r\n                          ?this.state.AvailableSurvey!=0\r\n                          \r\n                          && <span className=\"badge badge-danger navbar-badge\">\r\n                          {this.state.AvailableSurvey}\r\n                          </span>\r\n                          :\"\"}  \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          </ul> \r\n                                 <hr/>\r\n                          \r\n                          <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                          <hr/>\r\n                          \r\n                          \r\n                          <ul class=\"nav nav-treeview\">\r\n                          <li class=\"nav-item has-treeview\">\r\n                          <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                          <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                          <p>\r\n                          \r\n                          Pending Approval \r\n                          \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          </ul> \r\n                          \r\n                          \r\n                          <ul class=\"nav nav-treeview\">\r\n                          \r\n                          <li class=\"nav-item has-treeview\">\r\n                          <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                          <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                          <p>\r\n                          \r\n                          \r\n                          Approved \r\n                          \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          \r\n                          </ul>  \r\n                          <ul class=\"nav nav-treeview\">\r\n                          \r\n                          <li class=\"nav-item has-treeview\">\r\n                          <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                          <i className=\"nav-icon far fa-circle text-red\"></i>\r\n                          <p>\r\n                          \r\n                          Rejected  \r\n                          </p>\r\n                          </Link>\r\n                          </li>\r\n                          \r\n                          </ul>  \r\n                          <hr/>\r\n                          \r\n                          \r\n                          \r\n                          </li>\r\n                          \r\n                          </ul>\r\n                           )}\r\n                          \r\n                               {FinalDataChecker && (\r\n\r\n                              <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                            <li className=\"nav-item has-treeview menu-open\">\r\n                            \r\n                            <Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n                            <i className=\"nav-icon fas fa-home\" />\r\n                            <p>\r\n                            Dashboard\r\n                            </p>\r\n                            </Link>\r\n                            <hr/>\r\n                            \r\n                            <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                            <hr/>\r\n                            \r\n                            \r\n                            \r\n                              <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                            <p>\r\n                            Pending Responses\r\n                            \r\n                            {this.state.AvailableSurvey\r\n                            ?this.state.AvailableSurvey!=0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.AvailableSurvey}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                               <ul className=\"nav nav-treeview\">\r\n                            <li className=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                            <p>\r\n                            Approved Responses\r\n                            \r\n                            {this.state.AvailableSurvey\r\n                            ?this.state.AvailableSurvey!=0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.AvailableSurvey}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                                <ul className=\"nav nav-treeview\">\r\n                            <li className=\"nav-item has-treeview\">\r\n                            <Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-danger\"></i>\r\n                            <p>\r\n                            Rejected Responses\r\n                            \r\n                            {this.state.AvailableSurvey\r\n                            ?this.state.AvailableSurvey!=0\r\n                            \r\n                            && <span className=\"badge badge-danger navbar-badge\">\r\n                            {this.state.AvailableSurvey}\r\n                            </span>\r\n                            :\"\"}  \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                                   <hr/>\r\n                            \r\n                            <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                            <hr/>\r\n                            \r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/PensionPending\" className=\"nav-link\">\r\n                            <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                            <p>\r\n                            \r\n                            Pending Approval \r\n                            \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            </ul> \r\n                            \r\n                            \r\n                            <ul class=\"nav nav-treeview\">\r\n                            \r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-success\"></i>\r\n                            <p>\r\n                            \r\n                            \r\n                            Approved \r\n                            \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            \r\n                            </ul>  \r\n                            <ul class=\"nav nav-treeview\">\r\n                            \r\n                            <li class=\"nav-item has-treeview\">\r\n                            <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                            <i className=\"nav-icon far fa-circle text-red\"></i>\r\n                            <p>\r\n                            \r\n                            Rejected  \r\n                            </p>\r\n                            </Link>\r\n                            </li>\r\n                            \r\n                            </ul>  \r\n                            <hr/>\r\n                            \r\n                            \r\n                            \r\n                            </li>\r\n                            \r\n                            </ul>\r\n                             )}\r\n                            {Respondent && (\r\n\r\n                               <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n<li className=\"nav-item has-treeview menu-open\">\r\n\r\n<Link to=\"/dashboard\" className=\"nav-link active bg-warning\">\r\n<i className=\"nav-icon fas fa-home\" />\r\n<p>\r\nDashboard\r\n</p>\r\n</Link>\r\n<hr/>\r\n\r\n                            <h1 className=\"nav-header\">ANNUAL & HALF-YEAR</h1>\r\n                              <hr/>\r\n\r\n<ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n<p>\r\n   Fill Survey Response\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!=0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n                                 <ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n<p>\r\n   Pending Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!=0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n                                  <ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon far fa-circle text-success\"></i>\r\n<p>\r\n   Approved Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!=0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n                                   <ul className=\"nav nav-treeview\">\r\n<li className=\"nav-item has-treeview\">\r\n<Link to=\"/AvailableSurvey\" className=\"nav-link\">\r\n<i className=\"nav-icon far fa-circle text-danger\"></i>\r\n<p>\r\n   Rejected Responses\r\n   \r\n   {this.state.AvailableSurvey\r\n?this.state.AvailableSurvey!=0\r\n\r\n&& <span className=\"badge badge-danger navbar-badge\">\r\n{this.state.AvailableSurvey}\r\n</span>\r\n:\"\"}  \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n                                      <hr/>\r\n\r\n<h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n<hr/>\r\n<ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/PensiondeductionSurveyList\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-bullhorn text-warning\"></i>\r\n<p>\r\n  Fill Pension & Deduction\r\n   \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n<ul class=\"nav nav-treeview\">\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/PensionPending\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n<p>\r\n\r\nPending Approval \r\n\r\n\r\n</p>\r\n</Link>\r\n</li>\r\n</ul> \r\n\r\n\r\n<ul class=\"nav nav-treeview\">\r\n\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-check text-green\"></i>\r\n<p>\r\n\r\n\r\nApproved \r\n\r\n</p>\r\n</Link>\r\n</li>\r\n\r\n</ul>  \r\n<ul class=\"nav nav-treeview\">\r\n\r\n<li class=\"nav-item has-treeview\">\r\n<Link to=\"/RejectedPension\" className=\"nav-link\">\r\n<i class=\"nav-icon fas fa-times text-red\"></i>\r\n<p>\r\n\r\nRejected  \r\n</p>\r\n</Link>\r\n</li>\r\n\r\n</ul>  \r\n<hr/>\r\n\r\n\r\n\r\n</li>\r\n\r\n</ul>\r\n                               )}\r\n\r\n\r\n                                \r\n                            {Approver && (\r\n\r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active bg-info\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n</p>\r\n                                        </Link>\r\n                                        <hr/>\r\n\r\n                                        <h1 className=\"nav-header\">RESPONSE</h1>\r\n                                        <hr/>\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-info\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                         \r\n                                                        Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-info\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                         \r\n                                                        Approved Responses\r\n                                         </p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        <hr/>\r\n\r\n                                        <h1 className=\"nav-header\">GENERATE MGT. REPORTS</h1>\r\n                                        <hr/>\r\n\r\n                                              {/* SG */}\r\n                                        \r\n                                        <li className=\"nav-item\">\r\n                                        <a href=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-copy\" />\r\n                                                <p>\r\n                                                    State Government\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </a>\r\n                                           \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/GenerateRecurrentSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Recurrent & C. Expenditure\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchCOFOGSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    COFOG Report\r\n                                                    \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchSSGFFSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SSGFF Report\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchPensiondeductionSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Deduction & pension\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchLGEONSPWSG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SG Expenditure  \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        </li>\r\n\r\n\r\n                                         {/* LG */}\r\n                                        <li className=\"nav-item\">\r\n                                        <a href=\"#\" className=\"nav-link\">\r\n                                                <i className=\"nav-icon fas fa-copy\" />\r\n                                                <p>\r\n                                                    Local Government\r\n                                              <i className=\"fas fa-angle-left right\" />\r\n                                                </p>\r\n                                            </a>\r\n                                           \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/GenerateRecurrent\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Recurrent & C. Expenditure\r\n\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchCOFOG\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    COFOG Report\r\n                                                    \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchSSGFF\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    SSGFF Report\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchPensiondeduction\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    Deduction & pension\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SearchLGEONSPW\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-file text-info\"></i>\r\n                                                    LGAs Expenditure  \r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        </li>\r\n\r\n\r\n                                      \r\n                                    </li>\r\n\r\n                                </ul>\r\n                            )}\r\n\r\n                            {Group1_Branch && (\r\n\r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    \r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n                                        </p>\r\n                                        </Link>\r\n\r\n                                       \r\n                                        {/* group1 */}\r\n                                        <hr/>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentInfo\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-info text-green\"></i>\r\n                                                    <p>\r\n                                                    Update Respondent \r\n                                                 </p>\r\n                                                </Link>\r\n                                            </li>\r\n                                            \r\n                                        </ul>\r\n                                        <hr/>\r\n                                        <h1 className=\"nav-header\">SURVEY</h1>\r\n                                        <hr/>\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/Deploy\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n                                                    Create Survey \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApproveThisSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                        <p>\r\n                                                        \r\n    \r\n                                                     Pending Approval\r\n                                                     {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                  Approved Surveys \r\n                                                  {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul> \r\n                                            \r\n                                            \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedSurvey\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected Surveys \r\n                                                      {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/SurveyToDeploy\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-clock-o text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Pending Deployement\r\n                                                        {this.state.Pendingdeployement\r\n                                                      ?this.state.Pendingdeployement!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.Pendingdeployement}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n                                                      \r\n\r\n    </p>\r\n\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Ongoing Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/Allsurveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-bar text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        All Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul> \r\n                                                <hr/> \r\n                                                <h1 className=\"nav-header\">TEMPLATE</h1>\r\n                                                <hr/>\r\n                                       <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveThisTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                       \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ViewSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Template\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedTemplate\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedTemplate\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                      {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                             \r\n                                                <hr/>\r\n\r\n                                                <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                                                <hr/>\r\n\r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/PensionSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Survey\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprovePension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                      \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                        <p>\r\n                                                        \r\n    \r\n                                                      Approved \r\n                                                      \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                \r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                        <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                                                            <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                            <p>\r\n                                                             \r\n                                                          Rejected  \r\n                                                            </p>\r\n                                                        </Link>\r\n                                                    </li>\r\n                                               \r\n                                                    </ul>  \r\n                                             \r\n                                       <hr/>\r\n\r\n                                           <h1 className=\"nav-header\">RESPONSES</h1>\r\n                                        <hr/>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-success\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>  \r\n                                    </li>\r\n                                </ul>\r\n                            )}\r\n\r\n\r\n                                {NewUser && (\r\n                                      <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                      <li className=\"nav-item has-treeview menu-open\">\r\n  \r\n                                    <ul class=\"nav nav-treeview\">\r\n                                        <li class=\"nav-item has-treeview\">\r\n                                            <Link to=\"/UserUploads\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-paperclip text-warning\"></i>\r\n                                                <p>\r\n                                                    Supporting Docs\r\n\r\n                                          </p>\r\n                                            </Link>\r\n                                            </li>\r\n                                    </ul> </li>\r\n                                    </ul>\r\n\r\n                                )}\r\n                                  {/* group 2 */}\r\n\r\n                                {Group2 && (\r\n                                    \r\n                                <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                    <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                        <Link to=\"/dashboard\" className=\"nav-link active bg-primary\">\r\n                                            <i className=\"nav-icon fas fa-home\" />\r\n                                            <p>\r\n                                                Dashboard\r\n    </p>\r\n                                        </Link>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/RespondentList\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  Approve  Respondent  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        {/* <hr/> */}\r\n                                        <h1 className=\"nav-header\">SURVEY</h1>\r\n                                        {/* <hr/> */}\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval\r\n                                                    \r\n                                                    {this.state.PendingApprovalSurvey\r\n                                                      ?this.state.PendingApprovalSurvey!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalSurvey}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                     Approved\r\n                                                     {this.state.ApprovedSurveys\r\n                                                      ?this.state.ApprovedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/SurveyRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected\r\n                                                    {this.state.RejectedSurveys\r\n                                                      ?this.state.RejectedSurveys!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedSurveys}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/surveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-line text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        Ongoing Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link  to=\"/Allsurveys\"className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-chart-bar text-green\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                        All Surveys  \r\n    \r\n    </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                        {/* <hr/> */}\r\n                                        <h1 className=\"nav-header\">TEMPLATE</h1>\r\n                                        {/* <hr/> */}\r\n\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateToApprove\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning  text-warning\"></i>\r\n                                                    <p>\r\n                                                    Pending Approval \r\n                                                    \r\n                                                    {this.state.PendingApprovalTemplate\r\n                                                      ?this.state.PendingApprovalTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.PendingApprovalTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}\r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateApproved\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check  text-green\"></i>\r\n                                                    <p>\r\n                                                    Approved \r\n                                                    {this.state.ApprovedTemplate\r\n                                                      ?this.state.ApprovedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-success navbar-badge\">\r\n                                                    {this.state.ApprovedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/TemplateRejected\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-times  text-danger\"></i>\r\n                                                    <p>\r\n                                                    Rejected \r\n                                                    {this.state.RejectedTemplate\r\n                                                      ?this.state.RejectedTemplate!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.RejectedTemplate}\r\n                                                    </span>\r\n                                                    :\"\"}   \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n  <hr/>\r\n\r\n                               <h1 className=\"nav-header\">PENSION & DEDUCTION</h1>\r\n                                                <hr/>\r\n\r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/PensionSurvey\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-plus text-green\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Deploy Survey\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                                \r\n                                                <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ListToApprovePension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-warning text-warning\"></i>\r\n                                                    <p>\r\n                                                     \r\n                                                    Pending Approval \r\n                                                    \r\n                                                    \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul> \r\n                                        \r\n                                        \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                        <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApprovedPension\" className=\"nav-link\">\r\n                                                    <i class=\"nav-icon fas fa-check text-green\"></i>\r\n                                                    <p>\r\n                                                    \r\n\r\n                                                  Approved \r\n                                                  \r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                       \r\n                                            </ul>  \r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            \r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/RejectedPension\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-times text-red\"></i>\r\n                                                        <p>\r\n                                                         \r\n                                                      Rejected  \r\n                                                        </p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                           \r\n                                                </ul>  \r\n                                          \r\n                                         <hr/>\r\n\r\n                                        <h1 className=\"nav-header\">RESPONSES</h1>\r\n{/* <hr/> */}\r\n                                        <ul class=\"nav nav-treeview\">\r\n                                            <li class=\"nav-item has-treeview\">\r\n                                                <Link to=\"/ApproveResponse\" className=\"nav-link\">\r\n                                                <i class=\"nav-icon fas fa-check-circle  text-primary\"></i>\r\n                                                    <p>\r\n                                                  \r\n                                                    Pending Responses\r\n                                                     {this.state.pending_approval_responses\r\n                                                      ?this.state.pending_approval_responses!=0\r\n\r\n                                                     && <span className=\"badge badge-danger navbar-badge\">\r\n                                                    {this.state.pending_approval_responses}\r\n                                                    </span>\r\n                                                    :\"\"}  \r\n\r\n</p>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                       \r\n                                    </li>\r\n\r\n                                </ul>\r\n                                )}\r\n                                \r\n                            \r\n                               \r\n                               \r\n                                {Data_Management_team && (\r\n\r\n                                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                                        <li className=\"nav-item has-treeview menu-open\">\r\n\r\n                                            <Link to=\"/dashboard\" className=\"nav-link active bg-pink\">\r\n                                                <i className=\"nav-icon fas fa-home\" />\r\n                                                <p>\r\n                                                    Dashboard\r\n</p>\r\n                                            </Link>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-paperclip text-pink\"></i>\r\n                                                        <p>\r\n                                                        Develop Capability\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <ul class=\"nav nav-treeview\">\r\n                                                <li class=\"nav-item has-treeview\">\r\n                                                    <Link to=\"/Profile\" className=\"nav-link\">\r\n                                                        <i class=\"nav-icon fas fa-bullhorn text-pink\"></i>\r\n                                                        <p>\r\n                                                           Manage Reports\r\n\r\n</p>\r\n                                                    </Link>\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                )}\r\n                            </nav>\r\n                            {/* /.sidebar-menu */}\r\n                        </div>\r\n                        {/* /.sidebar */}\r\n\r\n\r\n\r\n                    </aside>\r\n\r\n                {/* )} */}\r\n            </Switch>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n\r\n \r\nexport default  class Footer extends Component {\r\n\r\n  // componentDidMount() {\r\n    \r\n  //   const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\r\n  //   const token = mytoken.token;\r\n  //   //call the States and LGAS at the first \r\n  //   const state = \"Ahmad loophole\";\r\n  //   axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n  //       params:\r\n  //       {\r\n  //         state: state\r\n  //       }\r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\r\n  //       }\r\n  //       // console.log(res.data)                  \r\n\r\n  //     })\r\n  //     axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n  //       params:\r\n  //       {\r\n  //         state: state\r\n  //       }\r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\r\n  //       }\r\n  //     }); \r\n  //     axios.get(`https://gfso.chinikiguard.com/accounts/api/branch/list/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n       \r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       this.setState({\r\n  //         BranchList: res.data,\r\n  //     });\r\n  //     });\r\n  //     axios.get(`https://gfso.chinikiguard.com/accounts/api/designation/list/`,\r\n  //     {\r\n  //       headers:\r\n  //       {\r\n  //         'Content-Type': 'application/json',\r\n  //         'Authorization': `Token ${token}`,\r\n  //         'Access-Control-Allow-Origin': '*',\r\n  //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\r\n  //         'Access-Control-Allow-Credentials': true\r\n  //       },\r\n       \r\n  //     },\r\n  //   )\r\n  //     .then(res => {\r\n  //       if (res.data) {\r\n  //         localStorage.setItem(\"designations\", JSON.stringify(res.data));\r\n  //     }\r\n  //       this.setState({\r\n  //         DesignationList: res.data,\r\n  //     });\r\n  //     });\r\n\r\n\r\n\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n        <footer class=\"main-footer\">\r\n        <strong>Copyright &copy; 2021 <Link to=\"\">BeeSoft Technology</Link>.</strong>\r\n        All rights reserved.\r\n        <div class=\"float-right d-none d-sm-inline-block\">\r\n          <b>Version</b> 1.0.0\r\n        </div>\r\n      </footer>\r\n \r\n );\r\n}\r\n}","import React, {  useEffect } from \"react\";\r\n// import { Line, Bar, Pie, Doughnut, HorizontalBar, Radar } from \"react-chartjs-2\";\r\n// import axios from \"axios\";\r\n// import Spinner from 'react-bootstrap/Spinner'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\n\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  \r\n \r\n \r\n  //using the functions\r\n  useEffect(() => {\r\n\r\n  \r\n   \r\n  }, []);\r\n\r\n  if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\r\n    return (<Redirect to={'/login'} />)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"content-wrapper\">\r\n        <Menu />\r\n        <br />\r\n        {/* Info boxes */}\r\n\r\n       \r\n\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Logo from '../cbn.png'\r\n\r\n\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n    \r\n        this.state = {\r\n          username: \"\",\r\n          password: \"\",\r\n          loading: false,\r\n          ViewTemplateloading: false,\r\n          message: \"\"\r\n        };\r\n      }\r\n    \r\n      onChangeUsername(e) {\r\n        this.setState({\r\n          username: e.target.value\r\n        });\r\n      }\r\n    \r\n      onChangePassword(e) {\r\n        this.setState({\r\n          password: e.target.value\r\n        });\r\n      }\r\n    \r\n      componentDidMount(){\r\n\r\n        if (localStorage.getItem('_WannanGfsoCbnUserNe')) {\r\n          return (<Redirect to={'/dashboard'} />)\r\n      }\r\n      }\r\n      handleLogin(e) {\r\n        e.preventDefault();\r\n        \r\n        this.setState({\r\n          message: \"\",\r\n          loading: true,\r\n          ViewTemplateloading: true,\r\n\r\n        });\r\n    \r\n        this.form.validateAll();\r\n    \r\n        if (this.checkBtn.context._errors.length === 0) {\r\n          AuthService.login(this.state.username, this.state.password).then(\r\n            () => {\r\n            window.location = \"/dashboard\"\r\n            },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data.non_field_errors &&\r\n                            error.response.data.non_field_errors) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: resMessage,\r\n                        ViewTemplateloading: false,\r\n\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // const {loading} = this.state;\r\n        \r\n        return (\r\n            <div className=\"hold-transition login-page\">\r\n                {this.state.ViewTemplateloading && (\r\n                        <span className=\"\">\r\n                            <div className=\"overlay-wrapper\">\r\n                                <div className=\"overlay \">         \r\n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\r\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\r\n                            </div>\r\n\r\n                        </span>\r\n                     )}\r\n                <div className=\"\">\r\n                    <div className=\"login-logo\">\r\n                    <img src={Logo} height=\"100px\" alt=\"\" />\r\n                        <br />\r\n                        <Link to=\"\"><b>CBN</b> GFSO</Link>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body login-card-body\">\r\n                            <p className=\"login-box-msg\">Sign in to start your session</p>\r\n                            <br />\r\n                            <Form\r\n                                onSubmit={this.handleLogin}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n\r\n                                <div className=\"input-group mb-4\">\r\n\r\n                                    <Input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"username\" value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        validations={[required]}\r\n                                    />\r\n                                    <div className=\" input-group-append\">\r\n                                        <div className=\"input-group-text\">\r\n                                            <span className=\"fas fa-user\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"input-group mb-4\">\r\n                                    <Input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        validations={[required]} />\r\n                                    <div className=\"input-group-append\">\r\n                                        <div className=\"input-group-text\">\r\n                                            <span className=\"fas fa-lock\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        disabled={this.state.loading}\r\n                                    >\r\n                                        {/* {this.state.loading && (\r\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                        )} */}\r\n                                        <span>Login</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n\r\n                            </Form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {  Link, Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Landing extends Component {\r\n\r\n    componentDidMount () {\r\n\r\n        \r\n        if (localStorage.getItem('_WannanGfsoCbnUserNe')) {\r\n          return (<Redirect to={'/dashboard'} />)\r\n      }\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"./Landing/assets/js/core/jquery.min.js\";\r\n\r\n      const script1 = document.createElement(\"script\");\r\n      script1.src = \"./Landing/assets/./\";\r\n\r\n      const script2 = document.createElement(\"script\");\r\n      script2.src = \"./Landing/assets/js/core/popper.min.js\";\r\n      \r\n      const script3 = document.createElement(\"script\");\r\n      script3.src = \"./Landing/assets/js/core/bootstrap-material-design.min.js\";\r\n      \r\n      const script4 = document.createElement(\"script\");\r\n      script4.src = \"./Landing/assets/js/plugins/moment.min.js\";\r\n\r\n      const script5 = document.createElement(\"script\");\r\n      script5.src = \"./Landing/assets/js/plugins/bootstrap-datetimepicker.js\";\r\n\r\n      const script7 = document.createElement(\"script\");\r\n      script7.src = \"./Landing/assets/js/plugins/nouislider.min.js\";\r\n\r\n      const script0 = document.createElement(\"script\");\r\n      script0.src =\"./Landing/assets/js/material-kit.js?v=2.0.7\";\r\n      \r\n        \r\n      script.async = true;\r\n      script1.async = true;\r\n      script2.async = true;\r\n      script3.async = true;\r\n      script4.async = true;\r\n      script5.async = true;\r\n      script7.async = true;\r\n      script0.async = true;\r\n      \r\n      document.body.appendChild(script);\r\n      document.body.appendChild(script1);\r\n      document.body.appendChild(script2);\r\n      document.body.appendChild(script3);\r\n      document.body.appendChild(script4);\r\n      document.body.appendChild(script5);\r\n      document.body.appendChild(script7);\r\n      document.body.appendChild(script0);\r\n    }\r\n  \r\n\r\n    render() {\r\n        if (localStorage.getItem('_WannanGfsoCbnUserNe')) {\r\n            return (<Redirect to={'/dashboard'} />)\r\n          }\r\n\r\n    return (\r\n\r\n        <div className=\"landing-page sidebar-collapse\"  >\r\n            <link href=\"./assets/css/material-kit.css?v=2.0.7\" rel=\"stylesheet\" />\r\n\r\n            <nav className=\"navbar navbar-transparent navbar-color-on-scroll fixed-top navbar-expand-lg\" color-on-scroll={100} id=\"sectionsNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-translate\">\r\n                    <img src=\"dist/img/cbn.png\" height=\"100px\"  alt=\"\"/>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"sr-only\">Toggle navigation</span>\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"dropdown nav-item\">\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/login\" className=\"btn btn-primary btn-raised btn-sm\" data-toggle=\"dropdown\">\r\n                                    Sign In\r\n            </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" rel=\"tooltip\" title data-placement=\"bottom\" href=\"\" target=\"_blank\" data-original-title=\"\">\r\n                                    <i className=\"\" />\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" rel=\"tooltip\" title data-placement=\"bottom\" href=\"\" target=\"_blank\" data-original-title=\"\">\r\n                                    <i className=\"\" />\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/register\" className=\"btn btn-success btn-raised btn-sm\" data-toggle=\"dropdown\">\r\n                                    Sign Up\r\n            </Link>\r\n\r\n                            </li> */}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n            <div className=\"page-header header-filter\" data-parallax=\"true\" style={{ backgroundImage: 'url(\"./assets/img/cbnbg.jpg\")' }}>\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h1 className=\"title\">Statistics Automation Project </h1>\r\n                            <h4> Statistics Data Ingestion Project For the Central Bank of Nigeria\r\n</h4>\r\n                            <hr />\r\n                            <Link to=\"/login\" className=\"btn btn-primary btn-raised btn-lg\" >\r\n                                    Sign In\r\n            </Link>\r\n            &nbsp;&nbsp; &nbsp;&nbsp;\r\n                                <Link to=\"/Register\" className=\"btn btn-success btn-raised btn-lg\" >\r\n                                    Sign Up\r\n            </Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"main main-raised\">\r\n                <div className=\"container\">\r\n                    <div className=\"section text-center\">\r\n\r\n\r\n                    </div></div></div></div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n}","import React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nexport default class ViewSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            ViewTemplateloading:false,\n            message: \"\",\n            SurveyList: [],\n            EditTemplate:[]\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/template/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveyTemplate\", JSON.stringify(res.data));\n                }\n                this.setState({\n                    SurveyList: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n            axios.get('https://gfso.chinikiguard.com/locations/api/list/state/',\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n    \n                })\n                .then(res => {\n                    if (res.data) {\n                        localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                    }\n                    // console.log(res.data)\n                })\n    \n           \n    \n    }\n\n    EditTemplate(SurveyList) {\n\n        localStorage.setItem(\"SingleTemplate\", JSON.stringify(SurveyList));\n        this.setState({\n            ViewTemplateloading: true,\n        });\n\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        const Temple_pk = SurveyList.pk;\n        // console.log(SurveyList.pk)\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${Temple_pk}/`,\n          {\n            headers:\n            {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${token}`,\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n              'Access-Control-Allow-Credentials': true\n            },\n           \n          })\n          .then(res => {\n            if (res.data) {\n              localStorage.setItem(\"Templatedetails\", JSON.stringify(res.data));\n            }\n            window.location = \"/EditTemplate\"\n            this.setState({\n                EditTemplate: res.data,\n                \n              });\n          })\n\n\n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\">                                        \n                    {/* Default box */}\n                    {this.state.ViewTemplateloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <div className=\"card card-solid\">\n                        \n                        <div className=\"card-body pb-0\">\n                            \n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n                                <div className=\"row\">\n                                       \n                                    {this.state.SurveyList.map((surveys,i )=> (\n\n                                        <div className=\"col-12 col-sm-6 col-md-4 d-flex align-items-stretch flex-column\">\n                                            <div className=\"card bg-light d-flex flex-fill\">\n                                         \n                                                <div key={i} className=\"card-header text-muted border-bottom-0\">\n                                                    {surveys.title}\n                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     \n                                                </div>\n                                                <div className=\"card-body pt-0\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-7\">\n                                                            <h2 className=\"lead\" ><b>{surveys.title}</b></h2>\n                                                            <p className=\"text-muted text-sm\"><b>Created by: </b> {surveys.created_by} </p>\n                                                            <p className=\"text-muted text-sm\"><b>Date: </b> {surveys.created} </p>\n                                                        </div>\n                                                        <div className=\"col-5 text-center\">\n                                                            <img src={Logo}  width=\"70px\" height=\"50px\" alt=\"user-avatar\" className=\"img-circle img-fluid\" />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"card-footer\">\n                                                    <div className=\"text-right\">\n                                                                <button \n                                                                 onClick={this.EditTemplate.bind(this, surveys)}\n                                                                 className=\"btn btn-info\"\n                                                                 disabled={this.state.loading}\n\n                                                                 >\n                                        \n                                                                  Review & Deploy Template &nbsp;&nbsp;\n\n                                                                </button>\n                                                        \n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        {/* /.card-body */}\n                        <div className=\"card-footer\">\n                            <nav aria-label=\"Contacts Page Navigation\">\n\n                            </nav>\n                        </div>\n                        {/* /.card-footer */}\n                    </div>\n                    {/* /.card */}\n                </section>\n                <Footer />\n            </div>\n        );\n    }\n}","import { createContext } from 'react';\nexport const FormContext = createContext();\n\n","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n\n  \n \nconst TextInput = ({ input_type, pk, name, field_value ,value}) => {\n    // console.log(field_value)\n    const  {handleChange}  = useContext(FormContext)\n    return (\n\n        <div className=\"col-4\">\n\n           <label >{name} </label>\n         <input\n         onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n         type=\"number\" \n         step=\"any\"\n         className=\"form-control\"  \n         placeholder=\"number\"\n         min={0}  \n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         required\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default TextInput\n","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n\n  \n \nconst SelectOption = ({ input_type, pk, name, field_value ,value}) => {\n    // console.log(field_value)\n    const  {handleChange}  = useContext(FormContext)\n    return (\n\n        <div className=\"col-4\">\n\n           <label >{name} </label>\n         <input\n         onKeyDown={(evt) => [\"e\", \"E\", \"+\"].includes(evt.key) && evt.preventDefault()}\n         type=\"number\" \n         step=\"any\"\n         className=\"form-control\"  \n         placeholder=\"number\"\n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         required\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default SelectOption\n","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElement = ({ field: { input_type, pk, name, value,field_value }}) => {\n  \n    switch (input_type) {\n        case 'text_input_':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n            case 'number':\n                return (<TextInput\n                    pk={pk}\n                    name={name}\n                    input_type={input_type}\n                    value={value}\n                    field_value={field_value}\n                />)\n            case 'accounting':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n                field_value={field_value}\n            />)\n        \n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElement\n","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElementCategory = ( { \n    field_category: { input_type, pk, name, value, }},\n    ) => {\n  \n    switch (input_type) {\n        case 'text_input_':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'number':\n            return (<TextInput\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n        case 'text_area_':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElementCategory\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class CheckSurveyTypeResponse extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLga = this.onChangeLga.bind(this);\n\n        this.state = {\n            statee:\"\",\n            lga:\"\",\n            myloading: false,\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n            user_type:false\n        };\n    }\n\n    onChangeState(e) {\n        this.setState({\n            statee: e.target.value\n        });\n    }\n    onChangeLga(e) {\n        this.setState({\n            lga: e.target.value\n        });\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n         // console.log(res.data)   \n\n        // check for the value selected and show the related content\n        try {\n            const TargetResponse = JSON.parse(localStorage.getItem('Surveydetails'));\n            const TargetUser = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n\n            const check = TargetResponse.survey_type\n            const user_type = TargetUser.profile.user_type\n\n\n\n            if (check) {\n                this.setState({\n                    user_type:user_type===\"hq_user\",\n                    statesGov: check.includes(\"sg\"),\n                    lgasGov: check.includes(\"lg\"),\n                    othersGov: check.includes(\"other\"),\n                });\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n\n        localStorage.removeItem(\"state_pk\");\n        localStorage.removeItem(\"lga_pk\");\n\n    }\n    componentDidUpdate() {\n        const state_pk = this.state.statee\n        const lga_pk = this.state.lga\n       \n        if (state_pk) {\n\n        localStorage.setItem(\"state_pk\",state_pk);\n\n        }else if(lga_pk){\n\n            localStorage.setItem(\"lga_pk\",lga_pk);\n\n        }else{\n            return null;\n        }    \n    }\n\n\n    render() {\n\n         //get the list of state and LGAS  in the localStorage\n         const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n         const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n         \n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov, othersGov,user_type } = this.state;\n\n        return (\n            <div>\n\n            {user_type && (\n            <div>\n                {statesGov && (\n                    <div className=\"col-sm-12\">\n                        <div className=\"form-group\">\n                            <hr/>\n                           <center> <label> Which state are you from</label></center>\n                            <select type=\"text\" className=\"form-control \" placeholder\n                               onChange={this.onChangeState}\n                                required\n                                value={this.state.statee}\n\n                            >\n                                <option value=\"\">Select your State</option>\n                                {List_Of_States && List_Of_States.map(state => (\n                                 <option value= {state.pk}>{state.title}</option>\n\n                             ))}\n                            </select>\n                        </div>\n                    </div>\n\n                )}\n                {lgasGov && (\n                    <div className=\"col-sm-12\">\n                        <div className=\"form-group\">\n                        <center> <label> Which LGA are you from</label></center>\n                            <select type=\"text\" className=\"form-control \" placeholder\n                                onChange={this.onChangeLga}\n                                validations={[required]}\n                                value={this.state.lga}\n\n                            >\n                                <option value=\"\">Select your LGA</option>\n                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                 <option value= {lga.pk}>{lga.title}</option>\n\n                             ))}\n                            </select>\n                        </div>\n                    </div>\n                )}\n                {othersGov && (\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label> Survey Type</label>\n                            <select type=\"text\" className=\"form-control \" placeholder \n                                validations={[required]}\n                            >\n                                <option value=\"\">Select</option>\n                                <option value=\"SG\">SG</option>\n                                <option value=\"LG\">LG</option>\n                                <option value=\"OTHER\">OTHER</option>\n                            </select>\n                        </div>\n                    </div>\n                )}\n            </div>\n             \n             ) }\n            </div>\n            );   \n                }\n}","\nimport React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\nimport authService from '../services/auth.service';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class SurveyAttachment extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.onClickHandler = this.onClickHandler.bind(this);\n        \n        \n        this.state = {\n           \n            loading: false,\n            uploadPercentage: 0,\n            uploadFilePercentage: 0,\n            Filetitle: '',\n            FileInfo: '',\n            file: null,\n            loadingFile: false,\n            selectedFile: null,\n            loaded: 0\n        };\n    }\n\n //My new Smart Upload  \n handleFileTitleChangeSmart =(e)=>{\n    this.setState({\n        Filetitle: e.target.value\n    })\n};\n\nhandleInfoChangeSmart= (e)=> {\n    this.setState({\n        FileInfo: e.target.value\n    })\n};\ncheckMimeType = (event) => {\n    //getting file object\n    let files = event.target.files\n    //define message container\n    let err = []\n    // list allow mime type\n    const types = ['application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/pdf', 'application/doc','application/docx','application/xls','file/pdf', 'file/doc','file/docx','image/png', 'image/jpeg', 'image/gif']\n    // loop access array\n    for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n            // create error message and assign to container   \n            err[x] = files[x].type + ' is not a supported format\\n';\n        }\n    };\n    for (var z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nmaxSelectFile = (event) => {\n    let files = event.target.files\n    if (files.length > 3) {\n        const msg = 'Only 3 images can be uploaded at a time'\n        event.target.value = null\n        toast.warn(msg)\n        return false;\n    }\n    return true;\n}\ncheckFileSize = (event) => {\n    let files = event.target.files\n    let size = 10000000\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n            err[x] = files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n    };\n    for (var z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nonChangeHandler = event => {\n    var files = event.target.files\n    if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        // if return true allow to setState\n        this.setState({\n            selectedFile: files,\n            loaded: 0\n        })\n    }\n}\nonClickHandler (e) {\n    e.preventDefault();\n\n     this.setState({\n          message: \"\",\n          loading: true,\n\n        });\n    const user = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token= user.token \n\n\n\n    const Formdata = new FormData()\n    // const Surveydetails = JSON.parse(localStorage.getItem('Response_Success'));\n    \n        const survey_response=JSON.parse(localStorage.getItem('Response_Success'));\n        const pk= survey_response.survey_response_pk\n    for (var x = 0; x<  this.state.selectedFile.length ; x++) {\n        Formdata.append('document', this.state.selectedFile[x])\n        Formdata.append('title', this.state.Filetitle);\n        Formdata.append('info', this.state.FileInfo);\n        Formdata.append('response', pk);\n        \n    }\n    axios.post(\"https://gfso.chinikiguard.com/survey/api/add/survey-response/document/\", Formdata, {\n        \n    headers: {\n            'content-type': 'multipart/form-data',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n        },\n        \n        onUploadProgress: ProgressEvent => {\n            this.setState({\n                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n            })\n        },\n    })\n        .then(res => {\n            // then print response status\n          //   console.log(res)\n            toast.success('File successfully uploaded')\n          //   window.location = \"/UserUploads\"\n\n          this.setState({\n               message: \"\",\n               loading: true,\n     \n             });\n        })\n        \n        .catch(err => {\n            // then print response status\n            toast.error('Failed to Upload the File')\n        })\n}\n//end file upload\n\n   \n\n    componentDidMount() {\n\n     // const scriptdashboard = document.createElement(\"script\");\n     // scriptdashboard.src = \"./plugins/dropzone/min/dropzone.min.js\";\n     // scriptdashboard.async = true;\n     // document.body.appendChild(scriptdashboard); \n     // const scriptdashboardjquery = document.createElement(\"script\");\n     // scriptdashboardjquery.src = \"./plugins/jquery/jquery.min.js\";\n     // scriptdashboardjquery.async = true;\n     // document.body.appendChild(scriptdashboardjquery);\n     //    console.log(\"hey im here\",Surveydetails.pk)\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n        return (\n            <div>\n                    <br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    \n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Attach Document</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                                                    <ToastContainer />\n\n                                                                    <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded, 2)}%</Progress>\n                                                                    <br />\n                                                                \n                                                                    <div className=\"col-4\">\n\n                                                                        <label > Title</label>\n                                                                        <input type=\"text\" className=\"form-control\"\n                                                                         onChange={this.handleFileTitleChangeSmart} \n                                                                            required />\n                                                                       </div>\n                                                                       <div className=\"col-4\">\n\n                                                                            <label >Info</label>\n                                                                        <input type=\"text\" className=\"form-control\" onChange={this.handleInfoChangeSmart} \n                                                                       required />\n                                                                          </div>\n                                                                          \n                                                                          <div className=\"col-4\">\n                                                                        \n                                                                      <input type=\"file\" className=\"form-control\" onChange={this.onChangeHandler} value={this.state.file}  \n                                                                      required/>\n                                                                      xls,xlsx,pdf,doc,docx,png,jpeg,  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                                                     \n                                                                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                                                         Max.size : 10mb\n\n                                                                      </div>\n                                                                        <br/>\n                                                                        <button \n                                                                        type=\"button\" \n                                                                        className=\"btn btn-info btn-block\" \n                                                                    disabled={this.state.loaded}\n                                                                    onClick={this.onClickHandler} > Attach <i class=\"nav-icon fas fa-paperclip text-white\"></i>                                                        \n                                                                                </button>\n                                                                                <br/>\n                                                                     <center> <Link to=\"/AvailableSurvey\"className=\" btn btn-primary btn-lg float-left \" >\n                                   \n                                                                          <span>Back to Surveys</span>\n                                                                              </Link></center> \n                                                    \n                                                                    </div>\n                                                                  \n                                                                    \n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        \n            </div>\n        );\n    }\n}\n\n","\nimport { useState, useEffect, useRef } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport FormElement from './FormElement';\nimport FormElementCategory from './FormElementCategory';\nimport { FormContext } from './FormContext';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport axios from 'axios'\nimport CheckSurveyTypeResponse from './CheckSurveyTypeResponse';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport SurveyAttachment from './SurveyAttachment';\n\n\n\n//hey i will use react hook here\nconst CompleteSurvey = (props) => {\n\n\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [Get_Survey_Details, Set_Survey_Details] = useState({});\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const singleSurveyPks = JSON.parse(localStorage.getItem('Response_Success'));\n\n  // Call_Survey_Details form localStorage\n  const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n  const Call_Survey_Details = Surveydetails.form;\n\n\n\n  useEffect(() => {\n    // Call_Survey_Details form localStorage\n    const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n    const Call_Survey_Details = Surveydetails.form;\n    Set_Survey_Details(Call_Survey_Details)\n\n\n  }, [])\n\n  const handleNext = (event) => {\n    event.preventDefault();\n\n    const singleSurveyPks = JSON.parse(localStorage.getItem('Response_Success'));\n    const singleSurveyPk = singleSurveyPks.get_next_survey.pk;\n\n    // console.log(Surveys.pk)\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n\n    axios.get(`https://gfso.chinikiguard.com/survey/api/details/${singleSurveyPk}/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n\n      })\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n        }\n\n        // console.log(res.data)\n        window.location = \"/CompleteSurvey\"\n\n      })\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    setMessage(\"\");\n    setLoading(true);\n\n\n    form.current.validateAll();\n\n    //get the user from the localstorage\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    // const state= mytoken\n\n    //get single survey details\n    const Surveydetails = JSON.parse(localStorage.getItem('Surveydetails'));\n\n    //get the survey Pk  to send as require survey_pk\n    const SurveydetailsPk = Surveydetails.pk\n\n    //Save all user responses of the survey  to LocalStorage\n    const to_Send = JSON.parse(localStorage.getItem('Response_to_Send'))\n\n    // returns an array of a given object's own enumerable property values\n    const I_to_Send = Object.values(to_Send);\n    const checkUser = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const checkUserpk = checkUser.profile\n    //user state_pk\n    const state_pk = checkUserpk.state\n    const lga_pk = checkUserpk.lga\n\n    //Response Body to send to Mallam Ahmad\n    const Responsebody =\n    {\n      survey_pk: SurveydetailsPk,\n      lga_pk: lga_pk,\n      state_pk: state_pk,\n      form: I_to_Send\n    }\n\n    if (checkBtn.current.context._errors.length === 0) {\n\n      // console.log(Responsebody);\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/create/response/\", Responsebody,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n\n          if (res.data) {\n            localStorage.setItem(\"Response_Success\", JSON.stringify(res.data));\n          }\n          setMessage(res.data.detail);\n          setSuccessful(true);\n          // window.location = \"/AvailableSurvey\"\n\n        },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.survey_title ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      // console.log(Get_Survey_Details)\n    }\n  }\n\n  //this handle the change user typing\n  const handleChange = (id, event) => {\n\n    const newElements = { ...Get_Survey_Details }\n    const arr = [...Get_Survey_Details];\n    // console.log({ ...Get_Survey_Details })\n\n\n    //convert the categories objects to array\n    for (let n = 0; n < newElements.length; n++) {\n      arr.push(newElements[n]);\n    }\n\n    //first array to loop through the categories\n    for (let i = 0; i < arr.length; i++) {\n      const category = arr[i];\n\n      //second array to loop through the field\n      for (let j = 0; j < category.fields.length; j++) {\n        const field = category.fields[j];\n\n        //check the pk for each field\n        const { pk } = field;\n        if (id === pk) {\n          field['value'] = event.target.value;\n        }\n      }\n\n      //first array to loop through the SubCategories\n      for (let h = 0; h < category.sub_categories.length; h++) {\n        const SubCategory = category.sub_categories[h];\n\n        //second array to loop through the fields of SubCategory\n        for (let j = 0; j < SubCategory.fields.length; j++) {\n          const FormElementCategory = SubCategory.fields[j];\n          // console.log(FormElementCategory)\n\n\n          //check the pk for each field\n          const { pk } = FormElementCategory;\n          if (id === pk) {\n            FormElementCategory['value'] = event.target.value;\n          }\n        }\n      }\n    }\n    //sub_categories\n\n    //Save the result to the localStorage\n    localStorage.setItem(\"Response_to_Send\", JSON.stringify(Get_Survey_Details));\n  }\n\n  if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n    return (<Redirect to={'/login'} />)\n  }\n  const checkUser = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n\n  return (\n\n    <FormContext.Provider value={{ handleChange }}>\n      <Header />\n      <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n        <Menu /><br />\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {/* <div className=\"card card-\"> */}\n              {/* left column */}\n\n              {Surveydetails.form.length ?\n\n                <div className=\"col-md-12\">\n                  <Form onSubmit={handleSubmit} ref={form}>\n                    {!successful && (\n                      <div>\n                        <center><h1 class=\"mt-4 mb-2\">{Surveydetails.title}</h1></center>\n                        <center><p class=\"mt-4 mb-2\"><b>Survey Type: &nbsp;</b>{Surveydetails.survey_type.toUpperCase()}&nbsp; <b>Period: &nbsp;</b>{Surveydetails.quarter.toUpperCase()}&nbsp; <b>Year: &nbsp;</b>{Surveydetails.year}</p></center>\n                       \n\n                        <center>\n                          {checkUser.profile.user_type!=\"hq_user\" ?\n\n                          <h5 class=\"mt-4 mb-2\">Make sure you are filling this survey from {checkUser.profile.state_title} state {checkUser.profile.lga_title} Lga </h5>\n                          :<h5 class=\"mt-4 mb-2\">Welcome HQ Staff</h5>}\n\n                          </center>\n                          <CheckSurveyTypeResponse />\n\n                        {Call_Survey_Details.map(myfield => (\n                          <div className=\"card card-\">\n                            <div className=\"card-header\">\n                              <h3 className=\"card-title\">{myfield.name}\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{myfield.economic_code}</h3>\n                              <h6 className=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{myfield.heading}</h6>\n\n                            </div>\n                            <div className=\"card-body\">\n                              {/* <h6 className=\"\">{myfield.type}</h6> */}\n                              <div className=\"row\">\n                                {\n                                  myfield ? myfield.fields.map((field, i) => <FormElement key={i} field={field} />)\n                                    : null\n                                }\n                              </div>\n                            </div>\n                            {myfield.sub_categories.map(subCategory => (\n                              <div>\n                                <h6 className=\"\">{subCategory.name}</h6>\n                                <h6 className=\"\">{subCategory.economic_code}</h6>\n                                <h6 className=\"\">{subCategory.type}</h6>\n                                <h6 className=\"\">{subCategory.heading}</h6>\n\n                                <div className=\"col-12\">\n\n                                  <div className=\"row\">\n                                    {\n                                      subCategory ? subCategory.fields.map((field_category, i) => <FormElementCategory key={i} field_category={field_category} />)\n                                        : null\n                                    }\n                                  </div>\n                                </div>\n                              </div>\n                            ))}\n\n\n                          </div>\n                        ))}\n\n                        <div className=\"form-group\">\n                          {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\n                          <center> <button className=\"btn btn-primary btn-lg \" disabled={loading}>\n                            {loading && (\n                              <span className=\"spinner-grow spinner-grow-sm\"></span>\n                            )}\n                            <span>Next</span>\n                          </button>\n                          </center>\n                        </div>\n                      </div>\n                    )}\n                    <h3>\n                      <center>\n                        {message && (\n                          <div className=\"form-group\">\n                            <div\n                              className={\n                                successful ? \"alert alert-success\" : \"alert alert-danger\"\n                              }\n                              role=\"alert\"\n                            >\n                           \n                              {message}\n\n                              <SurveyAttachment />\n                              {singleSurveyPks ? singleSurveyPks.get_next_survey.length &&\n                                <Link\n                                  onClick={handleNext}\n                                  className=\"btn  btn btn-primary btn-lg float-right\"\n                                // style={{ borderRadius: '0.25em', textAlign: 'center', color: 'blue', border: '2px solid blue', padding: '0.5em' }}\n\n                                >\n                                  <span>\n                                    Next Survey &nbsp;&nbsp;\n                                  </span>\n\n\n                                </Link>\n                                : <h6 className=\"btn  btn btn-primary btn-lg float-right\"\n                                  style={{ backgroundColor: 'red' }}>\"No Next Survey Available for this Year\"</h6>}\n\n                            </div>\n                          </div>\n                        )}\n                      </center>\n\n                    </h3>\n\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                  </Form>\n                </div>\n                : <center><h2>No  Survey Template Available</h2></center>\n\n              }\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </FormContext.Provider>\n  );\n}\n\nexport default CompleteSurvey;\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\nexport default class CreateNewUser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\n    this.onChangeLastName = this.onChangeLastName.bind(this);\n    // this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeLG = this.onChangeLG.bind(this);\n    this.onChangeState = this.onChangeState.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    // this.onChangeDob = this.onChangeDob.bind(this);\n    this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n    // this.onChangeBranch = this.onChangeBranch.bind(this);\n    this.onChangeDesignation = this.onChangeDesignation.bind(this);\n    // this.onChangeStaffNumber = this.onChangeStaffNumber.bind(this);\n    this.onChangeuser_type = this.onChangeuser_type.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      // address: \"\",\n      lga: \"\",\n      states: \"\",\n      // dob: \"\",\n      email: \"\",\n      phone_number: \"\",\n      successful: false,\n      message: \"\",\n      loading: false,\n      Lgaloading: false,\n      // branch_pk:\"\",\n      designation_pk: \"\",\n      group_pk: 6,\n      // staff_number:\"\",\n      user_type: \"\",\n      statesGov: false,\n      lgasGov: false,\n      othersGov: false,\n\n    };\n  }\n\n\n  componentDidMount() {\n\n    // const token = \"bd7cfc4fa97ec7a61fff4dd69fad8f548f2d86dd\";\n    // localStorage.setItem(\"token\", JSON.stringify(token));\n\n    //call the States and LGAS at the first \n    const state = \"Ahmad loophole\";\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n        }\n        this.setState({\n          List_Of_State: res.data,\n        });\n\n        // console.log(res.data)                  \n\n      })\n    axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n        params:\n        {\n          state: state\n        }\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n        }\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/branch/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n\n      },\n    )\n      .then(res => {\n        this.setState({\n          BranchList: res.data,\n        });\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/designation/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"designations\", JSON.stringify(res.data));\n        }\n        this.setState({\n          DesignationList: res.data,\n        });\n      });\n\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/users/group/list/`,\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          // 'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"designations\", JSON.stringify(res.data));\n        }\n        this.setState({\n          GroupList: res.data,\n        });\n      });\n\n\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    // const GetUsers = JSON.parse(localStorage.getItem('Users'));\n    const list_of_lga = JSON.parse(localStorage.getItem('List_Of_Lga'))\n    // const token = JSON.parse(localStorage.getItem('token'));\n\n    // const Lgas = list_of_lga.filter(item => item.state === statepk);\n    // localStorage.setItem(\"LGAS\", JSON.stringify(Lgas));\n    try {\n      if (prevState.user_type !== this.state.user_type) {\n        const user = this.state.user_type\n\n        if (user) {\n          this.setState({\n            statesGov: user.includes(\"sg_user\"),\n            lgasGov: user.includes(\"lg_user\"),\n            othersGov: user.includes(\"other\"),\n          });\n        }\n      }\n\n    } catch (e) {\n\n      console.log(e);\n    }\n\n\n    try {\n      if (prevState.states !== this.state.states) {\n        const statepk = this.state.states\n\n        if (statepk) {\n          this.setState({\n\n            Lgaloading: true\n          });\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n              headers:\n              {\n                'Content-Type': 'application/json',\n                // 'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n              },\n              params:\n              {\n                state_pk: statepk\n              }\n            },\n          )\n            .then(res => {\n\n              this.setState({\n                Lgaloading: false,\n                Lgas: res.data,\n              });\n\n            });\n        }\n\n      }\n\n    } catch (e) {\n\n      console.log(e);\n    }\n\n\n\n  }\n\n  onChangeFirstName(e) {\n    this.setState({\n      first_name: e.target.value\n    });\n  }\n  onChangeLastName(e) {\n    this.setState({\n      last_name: e.target.value\n    });\n  }\n  // onChangeAddress(e) {\n  //   this.setState({\n  //     address: e.target.value\n  //   });\n  // }\n  onChangeLG(e) {\n    this.setState({\n      lga: e.target.value\n    });\n  }\n  onChangeState(e) {\n    this.setState({\n      states: e.target.value\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n  // onChangeDob(e) {\n  //   this.setState({\n  //     dob: e.target.value\n  //   });\n  // }\n  onChangePhoneNumber(e) {\n    this.setState({\n      phone_number: e.target.value\n    });\n  }\n  onChangeDesignation(e) {\n    this.setState({\n      designation_pk: e.target.value\n    });\n  }\n  // onChangeBranch(e) {\n  //   this.setState({\n  //     branch_pk: e.target.value\n  //   });\n  // }  \n  // onChangeStaffNumber(e) {\n  //   this.setState({\n  //     staff_number: e.target.value\n  //   });\n  // } \n  onChangeuser_type(e) {\n    this.setState({\n      user_type: e.target.value\n    });\n  }\n\n\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false,\n      loading: true\n    });\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.createNewUser(\n        this.state.username,\n        this.state.password,\n        this.state.first_name,\n        this.state.last_name,\n        // this.state.address,\n        this.state.lga,\n        this.state.states,\n        // this.state.dob,\n        this.state.email,\n        this.state.phone_number,\n        this.state.group_pk,\n        this.state.designation_pk,\n        // this.state.branch_pk,\n        // this.state.staff_number,\n        this.state.user_type\n      ).then(\n        response => {\n          if (response.data) {\n            localStorage.setItem(\"tempoUser\", JSON.stringify(response.data));\n            localStorage.setItem(\"_WannanGfsoCbnUserNe\", JSON.stringify(response.data));\n          }\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n          window.location = \"/UserUploads\"\n          console.log(response.data)\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data.detail &&\n              error.response.data.detail) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n\n  }\n\n  render() {\n    const { statesGov, lgasGov } = this.state;\n    // const list_of_lga = JSON.parse(localStorage.getItem('List_Of_Lga'))\n\n    return (\n\n      <div className=\"hold-transition login-page\">\n        {this.state.ViewTemplateloading && (\n          <span className=\"\">\n            <div className=\"overlay-wrapper\">\n              <div className=\"overlay \">\n                <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n            </div>\n\n          </span>\n        )}\n        <div className=\"\">\n          <div className=\"login-logo\">\n            <img src={Logo} height=\"100px\" alt=\"\" />\n            <br />\n            <Link to=\"\"><b>CBN</b> GFSO</Link>\n          </div>\n          <div className=\"col-12\">\n\n            <div className=\"card-\">\n              <div className=\"card-body login-card-body\">\n                {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                <br />\n                <Form onSubmit={this.handleRegister} ref={c => { this.form = c; }} className=\"form\" id=\"\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* text input */}\n                      <div className=\"form-group\">\n                        <label>First Name</label>\n                        <Input type=\"text\" id=\"firstname\" className=\"form-control\" placeholder=\"first name\" value={this.state.first_name}\n                          onChange={this.onChangeFirstName}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Last Name</label>\n                        <Input type=\"text\" id=\"lastname\" className=\"form-control\" placeholder=\"last name\" value={this.state.last_name}\n                          onChange={this.onChangeLastName}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* textarea */}\n                      <div className=\"form-group\">\n                        <label>Email</label>\n                        <Input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email}\n                          onChange={this.onChangeEmail}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Phone Number</label>\n                        <Input type=\"tel\" id=\"phonenumber\" className=\"form-control\" placeholder=\"Phone number\" value={this.state.phone_number}\n                          onChange={this.onChangePhoneNumber}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div className=\"row\"> */}\n\n                  {/* <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Staff Number</label>\n                        <Input type=\"number\" id=\"staffnumber\" className=\"form-control\" \n                        placeholder=\"Staff number\" value={this.state.staff_number}\n                          onChange={this.onChangeStaffNumber}\n                          validations={[required]} />\n                      </div>\n                    </div> */}\n\n\n                  {/* <div className=\"row\"> */}\n                  {/* <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Address</label>\n                        <Textarea type=\"text\" id=\"address\" className=\"form-control\"\n                          placeholder=\"Address\" value={this.state.address}\n                          onChange={this.onChangeAddress} validations={[required]} />\n                      </div>\n                    </div> */}\n                  {/* <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n\n                        <label>Date of birth</label>\n\n                        <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                          value={this.state.dob}\n                          onChange={this.onChangeDob}\n                          validations={[required]}\n\n                        />\n                      </div>\n                    </div> */}\n                  {/* </div> */}\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n\n                      <div className=\"form-group\">\n                        <label>User Type</label>\n                        <Select\n                          className=\"form-control\"\n                          id=\"exampleFormControlSelect9\"\n                          validations={[required]}\n                          onChange={this.onChangeuser_type}\n                          value={this.state.user_type}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"sg_user\">SG</option>\n\n                          <option value=\"lg_user\">LG</option>\n\n                        </Select>\n\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-6\">\n\n                      <div className=\"form-group\">\n                        <label>Designation</label>\n\n                        <Select\n                          className=\"form-control\"\n                          id=\"exampleFormControlSelect9\"\n                          validations={[required]}\n                          onChange={this.onChangeDesignation}\n                          value={this.state.designation_pk}\n                        >\n                          <option value=\"\">--select--</option>\n                          {this.state.DesignationList && this.state.DesignationList.map(Designation => (\n                            <option value={Designation.pk}>{Designation.title}</option>\n                          ))}\n                        </Select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    {statesGov && (\n                      <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                          <label>State</label>\n                          <Select value={this.state.states}\n                            onChange={this.onChangeState}\n                            validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n                            <option value>Select</option>\n                            {this.state.List_Of_State && this.state.List_Of_State.map(state => (\n\n                              <option value={state.pk}>{state.title}</option>\n\n                            ))}\n\n                          </Select>\n                        </div>\n                      </div>\n                    )}\n                    {lgasGov && (\n\n                      <div className=\"row\">\n                      <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>State</label>\n                        <Select value={this.state.states}\n                          onChange={this.onChangeState}\n                          validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n                          <option value>Select</option>\n                          {this.state.List_Of_State && this.state.List_Of_State.map(state => (\n\n                            <option value={state.pk}>{state.title}</option>\n\n                          ))}\n\n                        </Select>\n                      </div>\n                    </div>\n                      <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                          <label>Lga</label>\n                          {this.state.Lgaloading && (\n                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                          )}\n                          <Select value={this.state.lga}\n                            onChange={this.onChangeLG}\n                            validations={[required]} type=\"text\" id=\"state\" className=\"form-control\">\n\n                            <option > Select  </option>\n                            {this.state.List_Of_Lga && this.state.List_Of_Lga.map(lga => (\n                              <option value={lga.pk}>{lga.title}</option>\n                            ))}\n                          </Select>\n\n\n                        </div>\n                        </div>\n                        </div>\n                    )}\n                  </div>\n                  <div className=\"row\">\n                    {/* <div className=\"col-sm-6\">\n\n                  <div className=\"form-group\">\n                  <label>Branch</label>\n\n                  <Select\n                    className=\"form-control\"\n                    id=\"exampleFormControlSelect9\"\n                    validations={[required]}\n                    onChange={this.onChangeBranch}\n                    value={this.state.branch_pk}\n                  >\n                    <option value=\"\">--select--</option>\n\n                    {this.state.BranchList && this.state.BranchList.map(branch => (\n\n                      <option value={branch.pk}>{branch.name}</option>\n\n                    ))}\n\n                  </Select>\n                  </div>\n                  </div> */}\n\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Username</label>\n                        <Input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Username\"\n                          value={this.state.username}\n                          onChange={this.onChangeUsername}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"form-group\">\n                        <label>Password</label>\n                        <Input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"password\" value={this.state.password}\n                          onChange={this.onChangePassword}\n                          validations={[required]} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <button\n                      className=\"btn btn-primary btn-lg float-right\"\n                      disabled={this.state.loading}\n                    >\n                      {this.state.loading && (\n                        <span className=\"spinner-border spinner-border-sm\"></span>\n                      )}\n                      <span>Register</span>\n                    </button>\n                  </div>\n                  <center>\n                    {this.state.message && (\n                      <div className=\"form-group\">\n                        <div\n                          className={\n                            this.state.successful\n                              ? \"alert alert-success\"\n                              : \"alert alert-danger\"\n                          }\n                          role=\"alert\"\n                        >\n                          {this.state.message}\n                        </div>\n                      </div>\n                    )}\n                  </center>\n                  <CheckButton\n                    style={{ display: \"none\" }}\n                    ref={c => {\n                      this.checkBtn = c;\n                    }}\n                  />\n\n                </Form>\n\n              </div>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n\n\n    );\n  }\n}","import React from 'react'\nimport TextInput from './FormElements/TextInput'\nimport SelectOption from './FormElements/SelectOption'\nimport { useState } from 'react';\nimport axios from 'axios'\n\n\nconst AddField = (props) => {\n\n\n  \n  const [inputList, setInputList] = useState([{ name: \"\", economic_code: \"\" }]);\n\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // handle input change\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = index => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputList([...inputList, { name: \"\", economic_code: \"\" }]);\n  };\n\n  const handleSave = () => {\n\n    //login user token\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n\n    // Existing template from localStorage\n    const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n    const ExtractTemplatePk = ExtractTemplate.pk;\n\n    //his  fields from template\n    const twist_result = [];\n    for (let i = 0; i < ExtractTemplate.form.length; i++) {\n      twist_result.push(ExtractTemplate.form[i]);\n    }\n\n    localStorage.setItem(\"result\", JSON.stringify(twist_result));\n\n    // console.log(inputList)\n    // my custom fields\n    const fieldsList = [];\n    for (let i = 0; i < inputList.length; i++) {\n      fieldsList.push(inputList[i]);\n    }\n\n    // console.log(props.MyCategoryName)\n\n    // newly fields added to selected category from user\n    const MyCategoryName = props.MyCategoryName;\n    const result = twist_result.find(({ name }) => name === MyCategoryName);\n\n\n    const modifiedObj = twist_result.filter(item => item.name !== MyCategoryName);\n\n\n\n    const fieldsObj = modifiedObj.concat(result);\n    // console.log(\"fieldsObj:\", fieldsObj);\n    const last_element = fieldsObj[fieldsObj.length - 1];\n    // console.log(\"last_element:\", last_element);\n    const final = last_element.fields\n    const name = last_element.name;\n    const economic_code = last_element.economic_code;\n    const heading = last_element.heading;\n    const type = last_element.type;\n    const finalup = final.concat(inputList);\n\n\n    const my_category = {\n      name,\n      economic_code,\n      heading,\n      type,\n      fields:\n        finalup,\n\n    }\n    // console.log(\"my_category:\", my_category);\n\n    const form = modifiedObj.concat(my_category)\n    // console.log(\"twist_result:\", twist_result);\n\n   const survey_pk= props.ApprovedSurveyToUser\n    // final result to  be send to the endpoint\n    const body =\n    {\n      survey_template_pk: ExtractTemplatePk,\n      survey_pk: survey_pk[0].pk,\n      form,\n\n\n    }\n    console.log(body)\n\n    axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n    {\n      headers:\n      {\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n      },\n  }\n    )\n      .then(res => {\n        // window.location = \"/ViewSurvey\"\n        // if (res.data) {\n        //   localStorage.setItem(\"AddedField\", JSON.stringify(res.data));\n        // }\n        setMessage(res.data.detail);\n        setSuccessful(true);\n      },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data.detail &&\n              error.response.data.detail) ||\n            error.message.message ||\n            error.toString();\n\n          setSuccessful(false);\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n\n\n\n  };\n\n  return (\n    <div >\n\n\n      {inputList.map((x, i) => {\n        return (\n          <div >\n            <hr/>\n            <h6>Add field (optional)</h6>\n            <div className=\"row\">\n\n              <div className=\"col-4\">\n\n                <input\n                  className=\"form-control\"\n                  name=\"name\"\n                  placeholder=\"Enter Field Name\"\n                  value={x.name}\n                  onChange={e => handleInputChange(e, i)}\n                />\n\n              </div>\n              <div className=\"col-4\">\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  name=\"economic_code\"\n                  placeholder=\"Enter economic code\"\n                  value={x.economic_code}\n                  onChange={e => handleInputChange(e, i)}\n                   />\n              </div>\n\n            </div>\n\n               &nbsp;\n            <div className=\"btn-box\">\n              {inputList.length !== 1 && <button\n\n                className=\"btn btn-danger\"\n                onClick={() => handleRemoveClick(i)}>\n                -\n                   </button>\n              }\n                   &nbsp;&nbsp;\n                 {inputList.length - 1 === i &&\n                <button\n                  className=\"btn btn-primary\"\n\n                  onClick={handleAddClick}>Add more &nbsp;+\n                 </button>\n              }\n                 &nbsp;&nbsp;\n                 {inputList.length - 1 === i &&\n                <button\n                  className=\"btn btn-success\"\n\n                  onClick={handleSave}>Append&nbsp;✓\n                 </button>\n                 }\n\n              {message && (\n                <div className=\"form-group\">\n                  <div\n                    className={\n                      successful ? \"alert alert-success\" : \"alert alert-danger\"\n                    }\n                    role=\"alert\"\n                  >\n\n                    {message}\n                  </div>\n                </div>\n\n              )}\n            </div>\n          </div>\n        );\n      })}\n\n\n      {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\n\n    </div>\n\n  );\n\n\n\n\n  //      const [formValues, setFormValues] = useState([{ name: \"\", email : \"\"}])\n\n  //     let handleChange = (i, e) => {\n  //         let newFormValues = [...formValues];\n  //         newFormValues[i][e.target.name] = e.target.value;\n  //         setFormValues(newFormValues);\n  //       }\n\n  //     let addFormFields = () => {\n  //         setFormValues([...formValues, { name: \"\", email: \"\" }])\n  //       }\n\n  //     let removeFormFields = (i) => {\n  //         let newFormValues = [...formValues];\n  //         newFormValues.splice(i, 1);\n  //         setFormValues(newFormValues)\n  //     }\n\n  //     let handleSubmit = (event) => {\n  //         event.preventDefault();\n  //         alert(JSON.stringify(formValues));\n  //     }\n\n  //     return (\n  //         <form  onSubmit={handleSubmit}>\n  //           {formValues.map((element, index) => (\n  //             <div className=\"form-inline\" key={index}>\n  //               <label>Name</label>\n  //               <input type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => handleChange(index, e)} />\n  //               <label>Email</label>\n  //               <input type=\"text\" name=\"email\" value={element.email || \"\"} onChange={e => handleChange(index, e)} />\n  //               {\n  //                 index ? \n  //                   <button type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</button> \n  //                 : null\n  //               }\n  //             </div>\n  //           ))}\n  //           <div className=\"button-section\">\n  //               <button className=\"button add\" type=\"button\" onClick={() => addFormFields()}>Add</button>\n  //               <button className=\"button submit\" type=\"submit\">Submit</button>\n  //           </div>\n  //       </form>\n  //     )\n\n\n}\n\nexport default AddField\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport AddField from \"./AddField\";\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\nexport default class EditTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n        this.onChangeSurvey = this.onChangeSurvey.bind(this);\n\n        this.state = {\n            loading: false,\n            message: \"\",\n            myloading: false,\n            ApproveSurveymessage: \"\",\n            ApproveSurveysuccessful: false,\n            ApproveSurveyloading: false,\n            survey:\"\",\n\n\n        };\n        \n    }\n    \n    \n    onChangeSurvey(e) {\n        this.setState({\n            survey: e.target.value\n        });\n      }\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            ApproveSurveymessage: \"\",\n            ApproveSurveysuccessful: false,\n            ApproveSurveyloading: true\n        });\n        \n            //check auth user\n            const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n            const token = mytoken.token;\n\n            //get template details\n            const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n            const ExtractTemplatePk = ExtractTemplate.pk;\n\n            //loop through the json\n            const formList = [];\n            for (let i = 0; i < ExtractTemplate.form.length; i++) {\n                formList.push(ExtractTemplate.form[i]);\n            }\n             // newly created json\n            const body =\n            {\n                survey_template_pk:ExtractTemplatePk,\n                survey_pk: this.state.survey,\n                form: formList,\n                \n            } \n            // console.log(body);\n            this.form.validateAll();\n            if (this.checkBtn.context._errors.length === 0) {\n    \n            axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        ApproveSurveymessage: res.data.detail,\n                        ApproveSurveysuccessful: true,\n                    });\n                    window.location = \"/ViewSurvey\"\n                    if (res.data) {\n                        localStorage.setItem(\"AdoptedSurvey\", JSON.stringify(res.data));\n                    }\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data.detail &&\n                            error.response.data.detail) ||\n                        error.ApproveSurveyloading ||\n                        error.toString();\n\n                    this.setState({\n                        ApproveSurveyloading: false,\n                        message: resMessage\n                    });\n                    }\n                );\n        } else {\n            this.setState({\n                ApproveSurveyloading: false\n            });\n        }\n    }\n\n    \n\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurveyToUser\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    ApprovedSurveyToUser: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n    }\n\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const SingleTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n        const SingleTemplateCategories = SingleTemplate.form;\n        const TemplateTitle= SingleTemplate.title;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                               \n                                    <center>\n                                        {this.state.ApproveSurveymessage && (\n                                            <div className=\"pb-5\" >\n                                                <div\n                                                    className={\n                                                        this.state.ApproveSurveysuccessful\n                                                            ? \"alert alert-success\"\n                                                            : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                >\n                                                    <h3 > {this.state.ApproveSurveymessage}</h3>\n                                                </div>\n                                            </div>\n                                        )}</center>\n                                                     \n                                <center><h4>{TemplateTitle}</h4></center>\n\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {SingleTemplateCategories&&SingleTemplateCategories.map( (Templatefields ,i) => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.economic_code}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>{Templatefields.name}</b>\n                                                </h3>\n                                                {/* <h6 className=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{Templatefields.type}</h6> */}\n                                                <h6 className=\"\"style={{ fontStyle: 'italic'}}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{Templatefields.heading}</h6>\n\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.economic_code}</h6> */}\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <h6 className=\"\">{SubCategoryfields.economic_code}</h6>\n                                                                    <h6 className=\"\">{SubCategoryfields.type}</h6>\n                                                                    <h6 className=\"\">{SubCategoryfields.heading}</h6>\n\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n\n                                                        </div>\n                                                       \n                                                    </div>\n                                                ))}\n                                                <hr/>\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map((fields,i) => (\n\n                                                 <div className=\"col-4\">\n                                                <h6 className=\"\">{fields.economic_code}</h6>\n                                                <h6 className=\"\">{fields.type}</h6>\n                                                <h6 className=\"\">{fields.heading}</h6>\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n\n                                              </div>\n                                                       \n                                                                                                          \n                                                    ))}\n                                                </div>\n                                                <AddField key={i} field={Templatefields} MyCategoryName={Templatefields.name} ApprovedSurveyToUser={this.state.ApprovedSurveyToUser} />   \n   \n                                            </div>\n                                            {/* /.card-body */}\n                                        </div>\n                                    ))}\n                                     \n                                    {/* /.card */}\n                                    {SingleTemplateCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                        \n                                        <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} > \n                                        {!this.state.ApproveSurveysuccessful && (\n                                                       <div>\n                                                    <div className=\"form-group\">\n                                                        <Select\n                                                            className=\"form-control\"\n                                                            id=\"exampleFormControlSelect9\"\n                                                              validations={[required]}\n                                                            onChange={this.onChangeSurvey}\n                                                            value={this.state.survey}\n                                                        >\n                                                        <option value=\"\">--select--</option>\n\n                                                            {this.state.ApprovedSurveyToUser && this.state.ApprovedSurveyToUser.map(survey => (\n\n                                                                <option value={survey.pk}>{survey.title}</option>\n\n                                                            ))}\n\n                                                        </Select>\n                                                    </div>\n                                       \n                                        <center>\n                                                \n\n                                        {/* <AddField />    */}\n\n                                                  <button\n                                                      disabled={this.state.ApproveSurveyloading}\n                                                      className=\"btn btn-success btn-lg \"\n                                                      onClick={this.props.saveField}\n                                                  >\n\n                                                      {this.state.ApproveSurveyloading && (\n                                                          <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                      )}\n                                             {/* <AddField  />    */}\n\n                                                      <span>Develop Template</span>\n                                                  </button>\n                                                  </center>\n\n                                                  <center>\n                                        {this.state.ApproveSurveymessage && (\n                                            <div className=\"pb-5\" >\n                                                <div\n                                                    className={\n                                                        this.state.ApproveSurveysuccessful\n                                                            ? \"alert alert-success\"\n                                                            : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                >\n                                                    <h3 > {this.state.ApproveSurveymessage}</h3>\n                                                </div>\n                                            </div>\n                                        )}</center>\n               \n                                                 \n\n                                             \n\n                                          <CheckButton\n                                              style={{ display: \"none\" }}\n                                              ref={c => {\n                                                  this.checkBtn = c;\n                                              }}\n                                          />\n                                    </div>\n                                        )}\n                                      </Form> \n                                        \n                                          \n                                       \n                                        \n                                        </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class Surveys extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    // EditTemplate(Surveys) {\n\n    //     //\n    //     const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    //     const token = mytoken.token;\n    //     const survey_pk = Surveys.survey_pk;\n    //     // console.log(Surveys.survey_pk)\n\n       \n    //     axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n    //         {\n    //             headers:\n    //             {\n    //                 'Content-Type': 'application/json',\n    //                 'Authorization': `Token ${token}`,\n    //                 'Access-Control-Allow-Origin': '*',\n    //                 'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n    //                 'Access-Control-Allow-Credentials': true\n    //             },\n    //             params:{\n    //                 survey_pk:survey_pk\n    //             }\n\n    //         })\n    //         .then(res => {\n    //             if (res.data) {\n    //                 localStorage.setItem(\"ResponsesTable\", JSON.stringify(res.data));\n    //             }\n    //             console.log(res.data)\n    //             // window.location = \"/CompleteSurvey\"\n\n    //         })\n\n\n    // }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               {/* <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th> */}\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                {/* <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th> */}\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    {/* <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td> */}\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        {/* <Link className=\"btn btn-primary btn-sm\" to=\"/\">\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     More\n                                                    </Link>&nbsp;&nbsp; */}\n \n                                                  </td>\n\n                                                </tr>\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\n\nexport default class AvailableSurvey extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n            loadingModal: false,\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          \n            \n        const mytoken = AuthService.getCurrentUser();\n        const token = mytoken.token;\n       \n        //call the States and LGAS at the first \n        const states = \"Ahmad loophole\";\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: states\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: states\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n            });\n    }\n\n    componentWillMount() {\n\n    const Check=JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = Check.token\n\n            const user_type=Check.profile.user_type\n            const lga =Check.profile.lga\n            const state =Check.profile.state\n            const Hq = state && lga\n\n            switch (user_type) {\n                case 'sg_user':\n                    return   axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&states=${state}`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n             \n                case 'lg_user':\n                    return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open&lgas=${lga}`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n                    case 'hq_user':\n                    return  axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes&status=open`,\n                    {\n                        headers:\n                        {\n                            'Authorization': `Token ${token}`,\n                            'Access-Control-Allow-Origin': '*',\n                            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                            'Access-Control-Allow-Credentials': true\n                        },\n                    })\n                    .then(res => {\n                        this.setState({\n                            Surveys: res.data,\n                            myloading: false,\n                            warningLoad: true,\n                        });\n                    })\n        \n                default:\n                    return null;\n            }\n        \n        }\n    Fill_Survey(Surveys) {\n        // localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const singleSurveyPk = Surveys.pk;\n        // console.log(Surveys.pk)\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n        \n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                \n                // console.log(res.data)\n                window.location = \"/CompleteSurvey\"\n\n            })\n    }\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n         \n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\">\n                    {/* Default box */}\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <div className=\"card card-solid\">\n                        <div className=\"card-body pb-0\">\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div>\n                                {this.state.Surveys.length?\n                                <div className=\"row\">\n                                    {this.state.Surveys.map(surveys => (\n\n                                        <div className=\"col-md-4\">\n                                            {/* Widget: user widget style 1 */}\n                                            <div className=\"card card-widget widget-user\">\n                                                {/* Add the bg color to the header using any of the bg-* classes */}\n                                                <div className=\"widget-user-header \" style={{ borderRadius: '0.25em', textAlign: 'center', color: 'green', border: '1px solid green', padding: '0.5em' }}>\n                                                    {this.state.warningLoad ? (\n                                                        <>\n\n                                                            <div className=\"widget-user float-left\">\n                                                                <i className=\"fas fa-bullhorn\" />\n\n                                                                <center>\n\n                                                                    <Spinner\n                                                                        as=\"span\"\n                                                                        animation=\"grow\"\n                                                                        size=\"lg\"\n                                                                        role=\"status\"\n                                                                        aria-hidden=\"true\"\n                                                                        variant=\"warning\"\n                                                                    />\n                                                                </center>\n                                                            </div>\n                                                        </>\n                                                    ) : (\n                                                        <h2 className=\"lead\"><b></b></h2>\n\n                                                    )}\n\n                                                    <Link\n                                                        //  to=\"/EditTemplate\"\n                                                        onClick={this.Fill_Survey.bind(this, surveys)}\n                                                        className=\"btn btn float-right\"\n                                                        disabled={this.state.loading}\n                                                        style={{ borderRadius: '0.25em', textAlign: 'center', color: 'blue', border: '1px solid blue', padding: '0.5em' }}\n\n                                                    >\n                                                        Fill Survey &nbsp;&nbsp;\n                                                                   {/* <i className=\"fas fa-check\" /> */}\n\n                                                    </Link>\n                                                    <br />\n                                                    <h5 className=\"widget-user-title\" >{surveys.title}</h5>\n                                                    <hr />\n                                                    <h5 className=\"widget-user-image\">{surveys.survey_type}</h5>\n                                                </div>\n\n                                                <div className=\"card-footer\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-4 border-right\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.status}</h5>\n                                                                <span className=\"description-text\">Status</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                        <div className=\"col-sm-4 border-right\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.start_date}</h5>\n                                                                <span className=\"description-text\">Start Date</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                        <div className=\"col-sm-4\">\n                                                            <div className=\"description-block\">\n                                                                <h5 className=\"description-header\">{surveys.due_date}</h5>\n                                                                <span className=\"description-text\">Due Date</span>\n                                                            </div>\n                                                            {/* /.description-block */}\n                                                        </div>\n                                                        {/* /.col */}\n                                                    </div>\n                                                    {/* /.row */}\n                                                </div>\n                                            </div>\n                                            {/* /.widget-user */}\n                                        </div>\n\n\n                                    ))}\n                                </div>\n                                            : <center><h2>No  Survey  Available For You at The Moment! </h2></center>\n                                        }\n                              </div>\n                            )}\n                        </div>\n                        {/* /.card-body */}\n                        <div className=\"card-footer\">\n                            <nav aria-label=\"Contacts Page Navigation\">\n                                <ul className=\"pagination justify-content-center m-0\">\n                                    {/* <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">1</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">4</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">5</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">6</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">7</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">8</a></li> */}\n                                </ul>\n                            </nav>\n                        </div>\n                        {/* /.card-footer */}\n                    </div>\n                    {/* /.card */}\n                </section>\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","\nimport React from 'react';\nimport { ReactFormGenerator, ElementStore } from 'react-form-builder2';\nimport axios from \"axios\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { Redirect } from 'react-router-dom';\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Select from \"react-validation/build/select\";\n\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Demobar extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.onChangeSurvey = this.onChangeSurvey.bind(this);\n    \n    // _onSubmit\n\n    this.state = {\n      data: [],\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false,\n      category: \"\",\n\n      loading: false,\n      message: \"\",\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false\n    };\n\n    const update = this._onChange.bind(this);\n    ElementStore.subscribe(state => update(state.data));\n  }\n\n  onChangeSurvey(e) {\n    this.setState({\n      survey: e.target.value\n    });\n  }\n \n\n\n\n\n  showPreview() {\n\n\n    this.setState({\n\n      previewVisible: true,\n    });\n  }\n\n  showShortPreview() {\n    this.setState({\n      shortPreviewVisible: true,\n    });\n  }\n\n  showRoPreview() {\n    this.setState({\n      roPreviewVisible: true,\n    });\n  }\n\n  closePreview() {\n    this.setState({\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false,\n    });\n  }\n\n  _onChange(data) {\n    this.setState({\n      data,\n    });\n  }\n\n  _onSubmit = (data) => {\n\n\n    this.setState({\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: true\n    });\n\n    //login user token\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n\n    // Existing template from localStorage\n    const ExtractTemplate = JSON.parse(localStorage.getItem('Templatedetails'));\n    const ExtractTemplatePk = ExtractTemplate.pk;\n\n    //his  fields from template\n    const twist_result = [];\n    for (let i = 0; i < ExtractTemplate.form.length; i++) {\n      twist_result.push(ExtractTemplate.form[i]);\n    }\n\n    localStorage.setItem(\"result\", JSON.stringify(twist_result));\n\n\n    // my custom fields from formbuilder\n    const fieldsList = [];\n    for (let i = 0; i < data.length; i++) {\n      fieldsList.push(data[i]);\n    }\n\n    // newly fields added to selected category from user\n    const MyCategoryName = JSON.parse(localStorage.getItem('MyCategoryName'));\n    const result = twist_result.find(({ name }) => name === MyCategoryName);\n\n    // const myFields = result.fields;\n    // const fields = myFields.concat(fieldsList);\n    // console.log(\"fields:\", fields);\n    // console.log(\"result:\", result);\n    // modified Array objects from template\n    const modifiedObj = twist_result.filter(item => item.name !== MyCategoryName);\n    // console.log(\"modifiedObj:\", modifiedObj);\n\n\n\n    const fieldsObj = modifiedObj.concat(result);\n    // console.log(\"fieldsObj:\", fieldsObj);\n    const last_element = fieldsObj[fieldsObj.length - 1];\n    // console.log(\"last_element:\", last_element);\n    const final = last_element.fields;\n    const name = last_element.name;\n    const economic_code = last_element.economic_code;\n    const heading = last_element.heading;\n    const type = last_element.type;\n    const finalup = final.concat(data);\n    // console.log(\"final:\", finalup);\n    // console.log(\"name:\", name);\n\n    \n    const my_category = {\n      name,\n      economic_code,\n      heading,\n      type,\n      fields:\n        finalup,\n\n    }\n    // console.log(\"my_category:\", my_category);\n\n    const form = modifiedObj.concat(my_category)\n    // console.log(\"twist_result:\", twist_result);\n\n\n    // final result to  be send to the endpoint\n    const body =\n    {\n      survey_template_pk: ExtractTemplatePk,\n      survey_pk: this.state.survey,\n      form,\n      \n\n    }\n\n    console.log(body);\n\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/adopt/survey/\", body,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n          this.setState({\n            AdoptSurveymessage: res.data.detail,\n            AdoptSurveysuccessful: true,\n\n          });\n\n          if (res.data) {\n            localStorage.setItem(\"AdopteSurveyField\", JSON.stringify(res.data));\n          }\n\n        },\n          error => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.AdoptSurveyloading ||\n              error.toString();\n\n            this.setState({\n              AdoptSurveyloading: false,\n              message: resMessage\n            });\n          }\n        );\n    } else {\n      this.setState({\n        AdoptSurveyloading: false\n      });\n    }\n  }\n  componentDidMount() {\n\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes\",\n      {\n        headers:\n        {\n          'Authorization': `Token ${token}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n          'Access-Control-Allow-Credentials': true\n        },\n      })\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"ApprovedSurveyToUser\", JSON.stringify(res.data));\n        }\n        // (res);\n        // (res.data);\n        this.setState({\n          ApprovedSurveyToUser: res.data,\n          myloading: false,\n          warningLoad: true,\n        });\n      })\n\n\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n\n  // }\n  render() {\n\n    let modalClass = 'modal fade';\n    if (this.state.previewVisible) {\n      modalClass += ' show d-block';\n    }\n\n    let shortModalClass = 'modal short-modal';\n    if (this.state.shortPreviewVisible) {\n      shortModalClass += ' show d-block';\n    }\n\n    let roModalClass = 'modal ro-modal';\n    if (this.state.roPreviewVisible) {\n      roModalClass += ' show d-block';\n    }\n\n    return (\n\n      <div className=\"clearfix\" style={{ margin: '10px', width: '70%' }}>\n        {/* <h4 className=\"float-left\">Preview</h4> */}\n\n        <section className=\"content-header\">\n\n          <div className=\"container-fluid\">\n            {/* general form elements disabled */}\n\n            {/* /.card */}\n\n            <br />\n            <button className=\"btn btn-primary btn-lg float-right\" style={{ marginRight: '10px' }} onClick={this.showPreview.bind(this)}>Preview & Deploy </button>\n            <br />\n            {this.state.previewVisible &&\n              <div className={modalClass} id=\"modal-xl\">\n                <div className=\"modal-dialog modal-xl\">\n                  <div className=\"modal-content\">\n                    \n                    <div className=\"row\">\n\n                      <div className=\"col-md-6\">\n                        <div className=\"card card\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">Select Survey</h3>\n                          </div>\n                          {/* /.card-header */}\n                          <div className=\"card-body\">\n                            <Form onSubmit={this._onSubmit} ref={c => { this.form = c; }} >\n\n                              <div className=\"form-group\">\n                                <Select\n                                  className=\"form-control\"\n                                  id=\"exampleFormControlSelect9\"\n                                  validations={[required]}\n                                  onChange={this.onChangeSurvey}\n                                  value={this.state.survey}\n                                >\n                                  <option value=\"\">--select--</option>\n\n                                  {this.state.ApprovedSurveyToUser && this.state.ApprovedSurveyToUser.map(survey => (\n\n                                    <option value={survey.pk}>{survey.title}</option>\n\n                                  ))}\n\n                                </Select>\n                              </div>\n                              \n                             \n\n                              <center>\n                                {this.state.AdoptSurveymessage && (\n                                  <div className=\"pb-5\" >\n                                    <div\n                                      className={\n                                        this.state.AdoptSurveysuccessful\n                                        ? \"alert alert-success\"\n                                        : \"alert alert-danger\"\n                                    }\n                                      role=\"alert\"\n                                    >\n                                      <h3 > {this.state.AdoptSurveymessage}</h3>\n                                    </div>\n                                  </div>\n                                )}\n                              </center>\n\n                              <CheckButton\n                                style={{ display: \"none\" }}\n                                ref={c => {\n                                  this.checkBtn = c;\n                                }}\n                              />\n\n                            </Form>\n\n\n                          </div>\n                          {/* /.card-body */}\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <ReactFormGenerator\n                          download_path=\"\"\n                          back_action=\"/\"\n                          back_name=\"Back\"\n                          answer_data={{}}\n                          action_name=\"Save\"\n                          form_action=\"https://gfso.chinikiguard.com/survey/api/add/survey/fields/\"\n                          form_method=\"POST\"\n                          onSubmit={this._onSubmit}\n                          variables={this.props.variables}\n                          data={this.state.data} />\n\n                      </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n\n            {this.state.roPreviewVisible &&\n              <div className={roModalClass}>\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <ReactFormGenerator\n                      download_path=\"\"\n                      back_action=\"/\"\n                      back_name=\"Back\"\n                      answer_data={{}}\n                      action_name=\"Save\"\n                      form_action=\"/\"\n                      form_method=\"POST\"\n                      read_only={true}\n                      variables={this.props.variables}\n                      hide_actions={true} data={this.state.data} />\n\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n\n            {this.state.shortPreviewVisible &&\n              <div className={shortModalClass}>\n                <div className=\"modal-dialog\">\n                  <div className=\"modal-content\">\n                    <ReactFormGenerator\n                      download_path=\"\"\n                      back_action=\"\"\n                      answer_data={{}}\n                      form_action=\"/\"\n                      form_method=\"POST\"\n                      data={this.state.data}\n                      display_short={true}\n                      variables={this.props.variables}\n                      hide_actions={false} />\n\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" onClick={this.closePreview.bind(this)}>Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </section>\n      </div>\n\n    );\n  }\n}","export const JOHN =  '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'\r\n","import 'react-form-builder2/dist/app.css';\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Menu from \"./Menu\";\nimport { ReactFormBuilder } from 'react-form-builder2';\nimport Demobar from \"./Demobar\";\nimport * as variables from './variables';\n\n\nexport default class CategoryView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n     \n\n        this.state = {\n            loading: false,\n            message: \"\",\n\n        };\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false,\n            loading: true,\n            meloading: true\n\n        });\n\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n\n        const responses = JSON.parse(localStorage.getItem('SingleResponse'));\n        const response_data = responses.data;\n        const get_form = response_data.get_form;\n        // console.log(response_data);\n        const value = this.state.title;\n\n\n        \n\n        const body =\n        {\n            survey_response_pk: response_data.pk,\n            form:\n\n                [\n                    {\n                        get_form,\n                        value: value\n                    }\n\n                ]\n\n\n        }\n\n        console.log(body);\n\n        axios.post(\"https://gfso.chinikiguard.com/survey/api/add/response/entry/\", body,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"SuccessSurvey\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    message: res.data.detail,\n                    successful: true,\n                    loading: false,\n                    meloading: false\n                });\n\n                console.log(res);\n                console.log(res.data.detail);\n                // window.location = \"/dashboard\"\n            },\n\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data.detail &&\n                            error.response.data.detail) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage,\n                        loading: false,\n                        meloading: false\n                    });\n                })\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        const singleCategory = JSON.parse(localStorage.getItem('Category_to_AddField'));\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {/* left column */}\n                            <div className=\"col-md-6\">\n\n                                {/* general form elements disabled */}\n                                <div className=\"card card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\">{singleCategory.name}</h3>\n                                    </div>\n                                    {/* /.card-header */}\n\n                                    <div className=\"card-body\">\n                                        <br />\n\n                                        <form>\n                                            <div className=\"row\">\n                                                {singleCategory.fields.map(fields => (\n\n                                                    <div className=\"col-4\">\n                                                        <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled id=\"inputSuccess\" />                                                <br />\n                                                    </div>\n                                                ))}\n\n                                            </div>\n                                            {singleCategory.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                            {/* input states */}\n                                        </form>\n                                        <br />\n\n\n                                    </div>\n\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                                \n\n                            </div>\n                            {/*/.col (left) */}\n\n\n                            {/* right column */}\n                            <div className=\"col-md-6\">\n\n                                {/* general form elements disabled */}\n                                <div className=\"card card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\"> </h3>\n                                    </div>\n                                    {/* /.card-header */}\n\n                                    <div className=\"card-body\">\n                                        <br />\n\n                                            <ReactFormBuilder />                \n                                            <Demobar variables={variables} />\n\n\n\n                                            {/* input states */}\n                                        <br />\n\n\n                                    </div>\n\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            <br />\n                           \n\n\n\n\n                            </div>\n                            {/*/.col (right) */}\n                        </div>\n                    </div>\n                </section>\n                <Footer />\n            </div>\n\n        );\n    }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\n\n\n\nexport default class ListResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePageClick = this.handlePageClick.bind(this);\n\n        this.state = {\n            offset: 0,\n            tableData: [],\n            orgtableData: [],\n            perPage: 10,\n            currentPage: 0,\n            myloading: true\n        };\n    }\n\n    //pagination\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n    //pagination\n    loadMoreData() {\n        const data = this.state.orgtableData;\n\n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n        this.setState({\n            pageCount: Math.ceil(data.length / this.state.perPage),\n            tableData: slice\n        })\n\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        // const scriptdashboard = document.createElement(\"script\");\n        // scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n        // scriptdashboard.async = true;\n        // document.body.appendChild(scriptdashboard);\n    \n       \n\n        this.Get_State_Data();\n\n    }\n\n    Get_State_Data() {\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/response/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Responses\", JSON.stringify(res.data));\n                }\n                const tdata = res.data;\n                // console.log(res.data.data)   \n\n                const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                this.setState({\n                    pageCount: Math.ceil(tdata.length / this.state.perPage),\n                    orgtableData: tdata,\n                    tableDataForState: slice,\n                    myloading: false\n                })\n            });\n        // console.log(res.data)   \n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                <br />     \n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                        \n                            <div className=\"row\">\n                           \n                                <div className=\"col-12\">\n                                {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Filled Surveys</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                        <div className=\"card-body\">\n                                            <div id=\"example1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\"><div className=\"row\"><div className=\"col-sm-12 col-md-6\">\n                                           </div>\n                                             </div><div className=\"row\"><div className=\"col-sm-12\"><table id=\"example1\" className=\"table table-bordered table-striped dataTable dtr-inline\" role=\"grid\" aria-describedby=\"example1_info\">\n                                                <thead>\n                                                    <tr role=\"row\">\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Browser: activate to sort column ascending\"> Title</th>\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Platform(s): activate to sort column ascending\">Filled by</th>\n                                                    <th className=\"sorting\" tabIndex={0} aria-controls=\"example1\" rowSpan={1} colSpan={1} aria-label=\"Engine version: activate to sort column ascending\">Categories</th>\n                                                    <th className=\"sorting sorting_asc\" tabIndex={0} aria-controls=\"example1\">Action</th>\n\n                                                   </tr>\n                                                </thead>\n                                                <tbody className=\"table-body\">\n                                                    {this.state.tableDataForState && this.state.tableDataForState.map(survey => (\n\n                                                        <tr>\n                                                            <td>{survey.survey_title}</td>\n                                                            <td>\n                                                            {survey.filled_by}\n\n                                                            </td>\n                                                            \n                                                            <td>\n                                                                {survey.get_entries.map(category => (\n                                                                 <td>\n                                                                 {category.name}\n                                                                </td>\n                              \n                                                               ))}\n                                                            </td>\n                                                            <td className=\"project-actions text-right\">\n                                            <Link className=\"btn btn-success btn-sm\" to=\"#\">\n                                                <i className=\"fas fa-folder\">\n                                                </i>\n                View\n              </Link>&nbsp;&nbsp;\n                             \n                                        </td>\n                                                          \n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n                                                <tfoot>\n                                                    \n                                                </tfoot>\n                                               \n                                            </table>\n                                            <ReactPaginate\n                                                    previousLabel={\"prev\"}\n                                                    nextLabel={\"next\"}\n                                                    breakLabel={\"...\"}\n                                                    breakClassName={\"break-me\"}\n                                                    pageCount={this.state.pageCount}\n                                                    marginPagesDisplayed={2}\n                                                    pageRangeDisplayed={5}\n                                                    onPageChange={this.handlePageClick}\n                                                    containerClassName={\"pagination\"}\n                                                    subContainerClassName={\"pages pagination\"}\n                                                    activeClassName={\"active\"} />\n                                            </div>\n                                            </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    )}\n                                </div>\n\n                                 \n                            </div>\n                                                      \n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class ResponseTable extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Response:[]\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('ResponseData'));\n          this.setState({\n            \n            Response: Response.data,\n        })\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Response Table</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                        <div className=\"card-body\">\n\n                                            <table id=\"emp\" class=\"table\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>Section</th>\n                                                        <th>Item</th>                                                            <br />\n\n                                                        <th>Q1 2019</th>\n                                                   \n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.Response && this.state.Response.map(category => (\n\n                                                        <tr>\n                                                            <td>\n                                                                {/* {category.economic_code} */}\n                                                                <b> {category?category.economic_code!='None':\"\"}</b>\n\n                                                                {category.fields.map(economic => (\n                                                                    <div>\n                                                                <hr/>\n\n                                                                    {economic?economic.economic_code!='None':\"\"}\n                                                                    </div>\n                                                                ))}\n                                                            </td>\n\n                                                            <td>\n                                                                <b>{category.name}\n                                                                </b>\n                                                                <br/>\n                                                                {category.fields.map(field => (\n                                                          <div style={{ fontWeight: 'lighter'}}>\n\n                                                                 <hr/>\n                                                                    { field.name }\n                                                                    </div>\n\n                                                                ))}\n\n                                                            </td>\n\n                                                            <br />\n                                                            <td>\n                                                            <br />\n\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             <hr/>\n\n                                                                        {number.field_total_sum}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                                \n                                                            </td>\n\n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"ReportSurvey\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\n\nimport { Link, Redirect } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\n\n\n\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n\nexport default class UserProfile extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleRegister = this.handleRegister.bind(this);\n          this.onChangeFirstName = this.onChangeFirstName.bind(this);\n          this.onChangeLastName = this.onChangeLastName.bind(this);\n          this.onChangeAddress = this.onChangeAddress.bind(this);\n          this.onChangeLG = this.onChangeLG.bind(this);\n          this.onChangeState = this.onChangeState.bind(this);\n          this.onChangeUsername = this.onChangeUsername.bind(this);\n          this.onChangeEmail = this.onChangeEmail.bind(this);\n          this.onChangePassword = this.onChangePassword.bind(this);\n          this.onChangeDob = this.onChangeDob.bind(this);\n          this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n\n\n\n          this.state = {\n               username: \"\",\n               password: \"\",\n               first_name: \"\",\n               last_name: \"\",\n               address: \"\",\n               lga: \"\",\n               state: \"\",\n               dob: \"\",\n               email: \"\",\n               phone_number: \"\",\n               successful: false,\n               message: \"\",\n               loading: false\n\n          };\n     }\n\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n     }\n\n\n     onChangeFirstName(e) {\n          this.setState({\n               first_name: e.target.value\n          });\n     }\n     onChangeLastName(e) {\n          this.setState({\n               last_name: e.target.value\n          });\n     }\n     onChangeAddress(e) {\n          this.setState({\n               address: e.target.value\n          });\n     }\n     onChangeLG(e) {\n          this.setState({\n               lga: e.target.value\n          });\n     }\n     onChangeState(e) {\n          this.setState({\n               state: e.target.value\n          });\n     }\n\n     onChangeUsername(e) {\n          this.setState({\n               username: e.target.value\n          });\n     }\n\n     onChangeEmail(e) {\n          this.setState({\n               email: e.target.value\n          });\n     }\n\n     onChangePassword(e) {\n          this.setState({\n               password: e.target.value\n          });\n     }\n     onChangeDob(e) {\n          this.setState({\n               dob: e.target.value\n          });\n     }\n     onChangePhoneNumber(e) {\n          this.setState({\n               phone_number: e.target.value\n          });\n     }\n\n     handleRegister(e) {\n          e.preventDefault();\n          this.setState({\n               message: \"\",\n               successful: false,\n               loading: true\n          });\n          this.form.validateAll();\n          if (this.checkBtn.context._errors.length === 0) {\n               AuthService.createNewUser(\n                    this.state.username,\n                    this.state.password,\n                    this.state.first_name,\n                    this.state.last_name,\n                    this.state.address,\n                    this.state.lga,\n                    this.state.state,\n                    this.state.dob,\n                    this.state.email,\n                    this.state.phone_number,\n\n               ).then(\n                    response => {\n                         this.setState({\n                              message: response.data.message,\n                              successful: true\n                         });\n                    },\n                    error => {\n                         const resMessage =\n                              (error.response &&\n                                   error.response.data.detail &&\n                                   error.response.data.detail) ||\n                              error.message ||\n                              error.toString();\n\n                         this.setState({\n                              successful: false,\n                              message: resMessage\n                         });\n                    }\n               );\n          }\n     }\n     render() {\n\n          // const { loading } = this.state;\n\n\n          return (\n               <div>\n                    <Header />\n\n                    <div className=\"content-wrapper\" >\n                         <Menu />\n                         <br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-md-3\">\n                                             {/* Profile Image */}\n                                             <div className=\"card card-success card-outline\">\n                                                  <div className=\"card-body box-profile\">\n                                                       <div className=\"text-center\">\n                                                            <img className=\"profile-user-img img-fluid img-circle\" src=\"../../dist/img/user4-128x128.jpg\" alt=\"\" />\n                                                       </div>\n                                                       <h3 className=\"profile-username text-center\">Abdulhakim Bashir</h3>\n                                                       <p className=\"text-muted text-center\">Software Engineer</p>\n\n                                                       <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Education</strong><p className=\"text-muted\">B.S. in Computer Science from the University of Tennessee at Knoxville</p><hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> Location</strong><p className=\"text-muted\">Malibu, California</p><hr /><strong><i className=\"fas fa-pencil-alt mr-1\" /> Skills</strong><p className=\"text-muted\"><span className=\"tag tag-danger\">UI Design</span><span className=\"tag tag-success\">Coding</span><span className=\"tag tag-info\">Javascript</span><span className=\"tag tag-warning\">PHP</span><span className=\"tag tag-primary\">Node.js</span></p><hr />\n                                                            <strong><i className=\"far fa-file-alt mr-1\" /> Notes</strong>\n                                                            <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p>\n                                                       </div>\n                                                  </div>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                            \n                                        </div>\n                                        {/* /.col */}\n                                        <div className=\"col-md-9\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header p-2\">\n                                                       <ul className=\"nav nav-pills\">\n                                                            <li className=\"nav-item\"><Link className=\"nav-link active bg-success\" href=\"#activity\" data-toggle=\"tab\">Activity</Link></li>\n                                                            <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                            <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                       </ul>\n                                                  </div>{/* /.card-header */}\n                                                  <div className=\"card-body\">\n                                                       <div className=\"tab-content\">\n                                                            <div className=\"active tab-pane\" id=\"activity\">\n                                                                 {/* Post */}\n                                                                 <div className=\"post\">\n                                                                      \n                                                                      {/* /.user-block */}\n                                                                      <p>\n                                                                           Lorem ipsum represents a long-held tradition for designers,\n                                                                           typographers and the like. Some people hate it and argue for\n                                                                           its demise, but others ignore the hate as they create awesome\n                                                                           tools to help create filler text for everyone from bacon lovers\n                                                                           to Charlie Sheen fans.   Lorem ipsum represents a long-held tradition for designers,\n                                                                           typographers and the like. Some people hate it and argue for\n                                                                           its demise, but others ignore the hate as they create awesome\n                                                                           tools to help create filler text for everyone from bacon lovers\n                                                        \n                  </p>\n                                                                      \n                                                                 </div>\n                                                                 {/* /.post */}\n                                                                 {/* Post */}\n                                                                 <div className=\"post clearfix\">\n                                                                    \n                                                                      {/* /.user-block */}\n                                                                    \n                                                                 </div>\n                                                                 {/* /.post */}\n\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                            <div className=\"tab-pane\" id=\"timeline\">\n                                                                 {/* The timeline */}\n                                                                 <div className=\"timeline timeline-inverse\">\n                                                                      {/* timeline time label */}\n                                                                      <div className=\"time-label\">\n                                                                           <span className=\"bg-danger\">\n                                                                                10 Feb. 2014\n                    </span>\n                                                                      </div>\n                                                                      {/* /.timeline-label */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-envelope bg-success\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 12:05</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Support Team</Link> sent you an email</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     Etsy doostang zoodles disqus groupon greplin oooj voxy zoodles,\n                                                                                     weebly ning heekya handango imeem plugg dopplr jibjab, movity\n                                                                                     jajah plickers sifteo edmodo ifttt zimbra. Babblely odeo kaboodle\n                                                                                     quora plaxo ideeli hulu weebly balihoo...\n                      </div>\n                                                                                <div className=\"timeline-footer\">\n                                                                                     <Link href=\"#\" className=\"btn btn-success btn-sm\">Read more</Link>\n                                                                                     <Link href=\"#\" className=\"btn btn-danger btn-sm\">Delete</Link>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-user bg-info\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 5 mins ago</span>\n                                                                                <h3 className=\"timeline-header border-0\"><Link href=\"#\">Sarah Young</Link> accepted your friend request\n                      </h3>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-comments bg-warning\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 27 mins ago</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Jay White</Link> commented on your post</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     Take me to your leader!\n                                                                                     Switzerland is small and neutral!\n                                                                                     We are more like Germany, ambitious and misunderstood!\n                      </div>\n                                                                                <div className=\"timeline-footer\">\n                                                                                     <Link href=\"#\" className=\"btn btn-warning btn-flat btn-sm\">View comment</Link>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      {/* timeline time label */}\n                                                                      <div className=\"time-label\">\n                                                                           <span className=\"bg-success\">\n                                                                                3 Jan. 2014\n                    </span>\n                                                                      </div>\n                                                                      {/* /.timeline-label */}\n                                                                      {/* timeline item */}\n                                                                      <div>\n                                                                           <i className=\"fas fa-camera bg-purple\" />\n                                                                           <div className=\"timeline-item\">\n                                                                                <span className=\"time\"><i className=\"far fa-clock\" /> 2 days ago</span>\n                                                                                <h3 className=\"timeline-header\"><Link href=\"#\">Mina Lee</Link> uploaded new photos</h3>\n                                                                                <div className=\"timeline-body\">\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                     <img src=\"https://placehold.it/150x100\" alt=\"...\" />\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      {/* END timeline item */}\n                                                                      <div>\n                                                                           <i className=\"far fa-clock bg-gray\" />\n                                                                      </div>\n                                                                 </div>\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                            <div className=\"tab-pane\" id=\"settings\">\n                                                                 <form className=\"form-horizontal\">\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputName\" className=\"col-sm-2 col-form-label\">Name</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"email\" className=\"form-control\" id=\"inputName\" placeholder=\"Name\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputEmail\" className=\"col-sm-2 col-form-label\">Email</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputName2\" className=\"col-sm-2 col-form-label\">Name</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"text\" className=\"form-control\" id=\"inputName2\" placeholder=\"Name\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputExperience\" className=\"col-sm-2 col-form-label\">Experience</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <textarea className=\"form-control\" id=\"inputExperience\" placeholder=\"Experience\" defaultValue={\"\"} />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <label htmlFor=\"inputSkills\" className=\"col-sm-2 col-form-label\">Skills</label>\n                                                                           <div className=\"col-sm-10\">\n                                                                                <input type=\"text\" className=\"form-control\" id=\"inputSkills\" placeholder=\"Skills\" />\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <div className=\"offset-sm-2 col-sm-10\">\n                                                                                <div className=\"checkbox\">\n                                                                                     <label>\n                                                                                          <input type=\"checkbox\" /> I agree to the <Link href=\"#\">terms and conditions</Link>\n                                                                                     </label>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                      <div className=\"form-group row\">\n                                                                           <div className=\"offset-sm-2 col-sm-10\">\n                                                                                <button type=\"submit\" className=\"btn btn-danger\">Submit</button>\n                                                                           </div>\n                                                                      </div>\n                                                                 </form>\n                                                            </div>\n                                                            {/* /.tab-pane */}\n                                                       </div>\n                                                       {/* /.tab-content */}\n                                                  </div>{/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                        {/* /.col */}\n                                   </div>\n                                   {/* /.row */}\n                              </div>{/* /.container-fluid */}\n                         </section>\n\n\n                    </div>\n                    <Footer />\n\n               </div>\n\n\n          );\n     }\n}","import axios from 'axios'\nimport React, { Component } from \"react\";\nimport {  Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\n// import ReactPaginate from 'react-paginate';\n\n\n\nexport default class ResponseByUser extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handlePageClick = this.handlePageClick.bind(this);\n\n          this.state = {\n               offset: 0,\n               tableData: [],\n               orgtableData: [],\n               perPage: 10,\n               currentPage: 0,\n               myloading: true\n          };\n     }\n\n     //pagination\n     handlePageClick = (e) => {\n          const selectedPage = e.selected;\n          const offset = selectedPage * this.state.perPage;\n          this.setState({\n               currentPage: selectedPage,\n               offset: offset\n          }, () => {\n               this.loadMoreData()\n          });\n\n     };\n     //pagination\n     loadMoreData() {\n          const data = this.state.orgtableData;\n\n          const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n          this.setState({\n               pageCount: Math.ceil(data.length / this.state.perPage),\n               tableData: slice\n          })\n\n     }\n\n     componentDidMount() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const scriptdashboard = document.createElement(\"script\");\n          scriptdashboard.src = \"./plugins/datatables-buttons/js/dataTables.buttons.min.js\";\n          scriptdashboard.async = true;\n          document.body.appendChild(scriptdashboard);\n\n         \n          this.Get_State_Data();\n\n     }\n\n     Get_State_Data() {\n          const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n          const token = mytoken.token;\n          // const Response_by_user = mytoken.user\n          axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    // params:{\n                    //      survey_type=\n                    // },\n\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"List_Of_Responses_By_User\", JSON.stringify(res.data));\n                    }\n                    const tdata = res.data;\n                    // console.log(res.data.data)   \n\n                    const slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\n                    this.setState({\n                         pageCount: Math.ceil(tdata.length / this.state.perPage),\n                         orgtableData: tdata,\n                         ResponseByUser: slice,\n                         myloading: false\n                    })\n               });\n          // console.log(res.data)   \n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Responses</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           <div className=\"input-group input-group-sm\" style={{ width: 150 }}>\n                                                                                <input type=\"text\" name=\"table_search\" className=\"form-control float-right\" placeholder=\"Search\" />\n                                                                                <div className=\"input-group-append\">\n                                                                                     <button type=\"submit\" className=\"btn btn-default\">\n                                                                                          <i className=\"fas fa-search\" />\n                                                                                     </button>\n                                                                                </div>\n                                                                           </div>\n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                                     <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n                    </div>\n\n                    <Footer />\n               </div>\n\n          );\n     }\n}\n\n\n","\nimport React, { Component } from \"react\";\nimport { Redirect ,Link} from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\nimport authService from '../services/auth.service';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import Swal from 'sweetalert2'\n// import withReactContent from 'sweetalert2-react-content'\n\n// const MySwal = withReactContent(Swal)\n\n// MySwal.fire({\n//   title: <p>Hello World</p>,\n//   footer: 'Copyright 2018',\n//   didOpen: () => {\n//     // `MySwal` is a subclass of `Swal`\n//     //   with all the same instance & static methods\n//     MySwal.clickConfirm()\n//   }\n// }).then(() => {\n//   return MySwal.fire(<p>Shorthand works too</p>)\n// })\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\nconst lookup = {\n    \"Annual\": [\n        { id: '', text: '--select--' },\n        { id: 'q1', text: 'Q1' },\n        { id: 'q2', text: 'Q2' },\n        { id: 'q3', text: 'Q3' },\n        { id: 'q4', text: 'Q4' },\n    ],\n    \"Halfyear\": [\n        { id: '', text: '--select--' },\n        { id: 'hyq1', text: 'HYQ1' },\n        { id: 'hyq2', text: 'HYQ2' },\n    ]\n}\nexport default class Deploy extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n        this.onChangehalfyear = this.onChangehalfyear.bind(this);\n\n        this.state = {\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            loading: false,\n            message: \"\",\n            states: \"\",\n            lgas: \"\",\n            myloading: false,\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: false,\n            dataValue: 'Halfyear'\n\n        };\n    }\n\n\n    onChange = ({ target: { value } }) => {\n        this.setState({ dataValue: value });\n    }\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n    onChangehalfyear(e) {\n        this.setState({\n            halfyear: e.target.value\n        });\n    }\n\n\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: true\n        });\n\n\n        //check auth user\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n\n\n        //convert the string to number from the [go] array i save to  localStorage for State\n        const stop_here_for_state = localStorage.getItem('Checked_State');\n        const jasus_for_state = stop_here_for_state\n\n        //convert the string to number from the [go] array i save to localStorage for LGA\n        const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n        const jasus_for_lga = stop_here_for_lga\n\n\n        let formData = new FormData();\n        formData.append('title', this.state.title);\n        formData.append('quarter', this.state.quarter);\n        formData.append('year', this.state.year);\n        formData.append('survey_type', this.state.survey_type);\n        formData.append('start_date', this.state.start_date);\n        formData.append('due_date', this.state.due_date);\n        formData.append('states', jasus_for_state);\n        formData.append('lgas', jasus_for_lga);\n\n        this.form.validateAll();\n        if (this.checkBtn.context._errors.length === 0) {\n\n            axios.post(\"https://gfso.chinikiguard.com/survey/api/create/survey/\",\n                formData,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        message: res.data.detail,\n                        AdoptSurveysuccessful: true,\n                    });\n                    // console.log(res.data);\n\n                    // window.location = \"/Deploy\"\n                    if (res.data) {\n                        localStorage.setItem(\"CreatedSurvey\", JSON.stringify(res.data));\n                    }\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.detail &&\n                                error.response.data.detail) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n\n\n    componentDidMount() {\n\n        const sweetalert2 = document.createElement(\"script\");\n        sweetalert2.src = \"./plugins/sweetalert2/sweetalert2.min.js\";\n\n        sweetalert2.async = true;\n        document.body.appendChild(sweetalert2);\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        //reset to default state\n        const Checked_LGA = 1\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        //call the States and LGAS at the first \n        const state = \"Ahmad loophole\";\n        const user = authService.getCurrentUser();\n\n        const token = user.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n\n            });\n\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/combo/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"StatesList\", JSON.stringify(res.data));\n                }\n\n            });\n        // console.log(res.data)   \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = 1\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        const StatesList = JSON.parse(localStorage.getItem('StatesList'));\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov } = this.state;\n\n        //   const { dataValue } = this.state;\n        const options = lookup[this.state.dataValue];\n\n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {/* {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">\n                                    <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                    <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                    )} */}\n\n\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n\n\n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Create Survey</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n                                            <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} >\n                                                {!this.state.AdoptSurveysuccessful && (\n                                                    <div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"form-group\">\n                                                                    <label> Name of Survey</label>\n                                                                    <Input type=\"text\" className=\"form-control \" placeholder\n                                                                        value={this.state.title}\n                                                                        onChange={this.onChangeTitle}\n                                                                        validations={[required]}\n                                                                    />\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"col-sm-3\">\n                                                                <div className=\"form-group\">\n                                                                    <label> Period</label>\n                                                                    <Select className=\"form-control \" placeholder\n                                                                        value={this.state.dataValue}\n                                                                        onChange={this.onChange}\n                                                                        validations={[required]}\n                                                                    >\n                                                                        <option value=\"Halfyear\">Half-Year</option>\n                                                                        <option value=\"Annual\">Annual</option>\n\n\n                                                                    </Select>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"col-sm-3\">\n                                                                <div className=\"form-group\">\n                                                                    <label> Quarter</label>\n\n                                                                    <Select className=\"form-control\"\n                                                                        value={this.state.quarter}\n                                                                        onChange={this.onChangeQuarter}\n                                                                        validations={[required]}\n\n\n\n                                                                    >\n                                                                        {/* <option value=\"\">--Select--</option> */}\n\n                                                                        {options.map(o => <option key={o.id} value={o.id}>{o.text}</option>)}\n                                                                    </Select>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"form-group\">\n                                                                    {/* text input */}\n                                                                    <label> Year</label>\n                                                                    <Input type=\"number\" className=\"form-control \" placeholder\n                                                                        value={this.state.year}\n                                                                        onChange={this.onChangeYear}\n                                                                        validations={[required]}\n                                                                        min=\"2011\"\n                                                                        max=\"9999\"\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-6\">\n                                                                    {/* text input */}\n                                                                    <div className=\"form-group\">\n                                                                        <label> Start date</label>\n                                                                        <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                            value={this.state.start_date}\n                                                                            onChange={this.onChangeStartDate}\n                                                                            validations={[required]}\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"col-sm-6\">\n                                                                    <div className=\"form-group\">\n                                                                        <label> End Date</label>\n                                                                        <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                            value={this.state.due_date}\n                                                                            onChange={this.onChangeDueDate}\n                                                                            validations={[required]}\n                                                                        />\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"form-group\">\n                                                                    <label> Survey Type</label>\n                                                                    <Select type=\"text\" className=\"form-control \" placeholder\n                                                                        validations={[required]}\n                                                                        value={this.state.survey_type}\n                                                                        onChange={this.onChangeSurveyType}\n                                                                    >\n                                                                        <option value=\"\">Select</option>\n                                                                        <option value=\"sg\">SG</option>\n                                                                        <option value=\"lg\">LG</option>\n                                                                        <option value=\"other\">OTHER</option>\n                                                                    </Select>\n                                                                </div>\n                                                            </div>\n                                                            \n                                                        </div>\n\n                                                        {statesGov && (\n                                                            <div className=\"table-container\">\n                                                                <table className=\"table\">\n                                                                    <thead>\n\n                                                                        <tr>\n                                                                            <th>STATE</th>\n\n                                                                            <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                                    checkboxes=\".table .select-checkbox\"\n                                                                                    sync=\".table .row\"\n                                                                                    onNotAllChecked={(selectedMap) => {\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                        // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                    }}\n                                                                                    onAllChecked={(selectedMap) => {\n                                                                                        // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                    }}\n                                                                                    onAllUnchecked={(selectedMap) => {\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.replace(/\\d+/g,\"\")\n\n                                                                                        localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                        // console.log(\" me Checked_State\",fieldsList);\n                                                                                        // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                    }}\n\n                                                                                />\n                                                                            </th>\n                                                                        </tr>\n\n                                                                    </thead>\n                                                                    <tbody className=\"table-body\">\n                                                                        {List_Of_States.map((state, i) => (\n\n                                                                            <tr>\n                                                                                <td>{state.title}</td>\n                                                                                <td>\n                                                                                    <input\n                                                                                        type=\"checkbox\"\n                                                                                        className=\"select-checkbox\"\n                                                                                        value={`${state.pk}`}\n                                                                                        // onChange={this.onChangeState}\n                                                                                        validations={[required]}\n                                                                                    />\n                                                                                </td>\n                                                                            </tr>\n                                                                        ))}\n\n                                                                    </tbody>\n\n                                                                </table>\n                                                            </div>\n                                                        )}\n\n                                                        {lgasGov && (\n                                                            <div className=\"table-container\">\n                                                                <table className=\"table\">\n                                                                    <thead>\n                                                                        <tr>\n                                                                            <th>LGA</th>\n\n                                                                            <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                                    checkboxes=\".table .select-checkbox\"\n                                                                                    sync=\".table .row\"\n                                                                                    onNotAllChecked={(selectedMap) => {\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                        // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                    }}\n                                                                                    onAllChecked={(selectedMap) => {\n                                                                                        // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                    }}\n                                                                                    onAllUnchecked={(selectedMap) => {\n                                                                                        const fieldsList = [];\n                                                                                        for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                            fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                        }\n                                                                                        //    const go = fieldsList.join()\n                                                                                        localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                        // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                        // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                    }}\n\n                                                                                />\n                                                                            </th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody className=\"table-body\">\n                                                                        {StatesList && StatesList.map(lga => (\n\n                                                                            <tr>\n                                                                                <td style={{ color: 'green', fontWeight: 'bold' }}>{lga.title} </td>\n                                                                                <br />\n                                                                                {lga.get_lgas && lga.get_lgas.map(lgas => (\n                                                                                    <tr>\n                                                                                        <td>{lgas.title}</td>\n                                                                                        <td>\n                                                                                            <input\n                                                                                                type=\"checkbox\"\n                                                                                                className=\"select-checkbox\"\n                                                                                                value={`${lgas.pk}`}\n                                                                                                validations={[required]}\n                                                                                            />\n                                                                                        </td>\n                                                                                    </tr>\n                                                                                ))}\n\n\n                                                                                {/* <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${lga.pk}`}\n                                                                                // onChange={this.onChangeLgas}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td> */}\n                                                                            </tr>\n                                                                        ))}\n\n                                                                    </tbody>\n                                                                </table>\n                                                            </div>\n                                                        )}\n                                                                <div className=\"row\">\n                                                                <center>\n\n                                                                    <button\n                                                                        disabled={this.state.AdoptSurveyloading}\n                                                                        className=\"btn btn-primary float-bottom\"\n\n                                                                    >\n\n                                                                        {this.state.AdoptSurveyloading && (\n                                                                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                                        )}\n                                                            Create Survey\n                                                        </button>\n                                                        </center>\n\n                                                                </div>\n                                                    </div>\n\n\n                                                )}\n                                                <center>\n                                                    {this.state.message && (\n                                                        <div className=\"form-group\">\n                                                            <div\n                                                                className={\n                                                                    this.state.AdoptSurveysuccessful ? \"alert alert-success\" : \"alert alert-danger\"\n                                                                }\n                                                                role=\"alert\"\n                                                            >\n\n                                                                {this.state.message}\n                                                            </div>\n                                                            {this.state.AdoptSurveysuccessful &&\n                                                            <Link\n                                                                className=\"btn btn-primary\"\n                                                               to = \"/ApproveThisSurvey\"\n                                                                \n                                                            >\n\n\n                                                                continue\n                                                        </Link>\n                                                        }\n                                                        </div>\n\n                                                    )}\n                                                </center>\n\n\n\n\n\n\n\n\n\n                                                {/* <div className=\"modal fade\" id=\"modal-sm\" >\n                                                            <div className=\"modal-dialog modal-sm\">\n                                                                <div className=\"modal-content\">\n                                                                    <div className=\"modal-header\">\n                                                                        <h4 className=\"modal-title\">Small Modal</h4>\n                                                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                            <span aria-hidden=\"true\">×</span>\n                                                                        </button>\n                                                                    </div>\n                                                                    <div className=\"modal-body\">\n                                                                        <p><center>\n                                                                            {this.state.message && (\n                                                                                <div className=\"form-group\">\n                                                                                    <div\n                                                                                        className={\n                                                                                            this.state.AdoptSurveysuccessful ? \"alert alert-success\" : \"alert alert-danger\"\n                                                                                        }\n                                                                                        role=\"alert\"\n                                                                                    >\n\n                                                                                        {this.state.message}\n                                                                                    </div>\n                                                                                </div>\n\n                                                                            )}\n                                                                        </center></p>\n                                                                    </div>\n                                                                    <div className=\"modal-footer justify-content-between\">\n                                                                        <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                                                                        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div> */}\n\n\n\n                                                {/* <div id=\"toastsContainerTopRight\" className=\"toasts-top-right fixed\"><div className=\"toast bg-warning fade \" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"><div className=\"toast-header\"><strong className=\"mr-auto\">Toast Title</strong><small>Subtitle</small><button data-dismiss=\"toast\" type=\"button\" className=\"ml-2 mb-1 close\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\n                                               </div><div className=\"toast-body\">{this.state.message}</div></div></div> */}\n\n                                                <CheckButton\n                                                    style={{ display: \"none\" }}\n                                                    ref={c => {\n                                                        this.checkBtn = c;\n                                                    }}\n                                                />\n\n                                            </Form>\n\n                                        </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ReviewRespondent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditTemplate(Surveys) {\n\n        //\n        localStorage.setItem(\"SingleSurvey\", JSON.stringify(Surveys));\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        const singleSurveyPk = Surveys.pk;\n        console.log(Surveys.pk)\n\n        // const body =\n        // {\n        // survey: SurveyList.pk,\n        // }\n\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/template/${singleSurveyPk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"Surveydetails\", JSON.stringify(res.data));\n                }\n                console.log(res.data)\n                // window.location = \"/CompleteSurvey\"\n\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">List of Respondent</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>ID</th>\n                                                                                     <th>User</th>\n                                                                                     <th>Date</th>\n                                                                                     <th>Status</th>\n                                                                                     <th>Reason</th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>183</td>\n                                                                                     <td>John Doe</td>\n                                                                                     <td>11-7-2014</td>\n                                                                                     <td><span className=\"tag tag-success\">Approved</span></td>\n                                                                        <td className=\"\">\n                                                                            <Link className=\"btn btn-lg btn-success \" to=\"/\">\n\n                                                                                Approve\n                                                   </Link>&nbsp;&nbsp;\n\n                                                    <Link className=\"btn btn-lg btn-danger \" to=\"/\">\n                                                                                Delete\n                                                    </Link>&nbsp;&nbsp;\n\n                                                  </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                      </table>\n                                                                 </div>\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ListToApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                                <Menu />\n\n                <Header />\n\n                <div className=\"content-wrapper\">\n\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     {/* <th>Created by</th> */}\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     {/* <td><span className=\"tag tag-success\">{survey.created_by}</span></td> */}\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\n\nexport default class ApproveTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.handleApprove = this.handleApprove.bind(this);\n        this.onChangestatus = this.onChangestatus.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            status: \"\",\n            remark: \"\",\n            SingleTemplate: []\n        };\n    }\n\n   \n\n    \n\n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n\n    }\n    onChangestatus(e) {\n        this.setState({\n          status: e.target.value\n        });\n   }\n   onChangeRemark(e) {\n        this.setState({\n             remark: e.target.value\n        });\n   }\n   handleApprove(e) {\n\n    e.preventDefault();\n\n    const SingleTemplate = JSON.parse(localStorage.getItem('ApproveTemplateInfo'));\n\n    const templatepk=SingleTemplate.pk\n\n    this.setState({\n         message: \"\",\n         successful: true,\n         loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n\n     let formData = new FormData();\n     formData.append('status', this.state.status);\n     formData.append('survey', SingleTemplate.pk);\n     formData.append('remark', this.state.remark);\n         console.log(formData) \n\n         const mytoken = AuthService.getCurrentUser();\n         const token = mytoken.token;\n         axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n              {\n                   headers:\n                   {\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                   },\n              }).then(\n\n                   response => {\n\n                        this.setState({\n                             message: response.data.detail,\n                             successful: true\n                        });\n                        window.location = \"/ApproveThisTemplate\"\n                   },\n                   error => {\n                        const resMessage =\n                             (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data) ||\n                             error.message ||\n                             error.toString();\n\n                        this.setState({\n                             loading: false,\n                             message: resMessage,\n                             ViewTemplateloading: false,\n\n                        });\n                   }\n              );\n    } else {\n         this.setState({\n              loading: false\n         });\n    }\n}\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const SingleTemplate = JSON.parse(localStorage.getItem('ApproveTemplateInfo'));\n        const SingleTemplateCategories = SingleTemplate.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {SingleTemplateCategories&&SingleTemplateCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                \n                                            </div>\n                                            {/* /.card-body */}\n\n                                        </div>\n                                    ))}\n                                    <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{SingleTemplate.title}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                               \n                                                <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {SingleTemplate.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {SingleTemplate.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {SingleTemplate.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {SingleTemplate.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {SingleTemplate.get_states&&SingleTemplate.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                    {/* {SurveyInfo.get_lgas} */}\n                                                                    {SingleTemplate.get_lgas && SingleTemplate.get_lgas.map(states => (\n                                                                         <span> {states.title}</span>\n                                                                    ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                 \n                                                   \n                                                \n                                            </div>\n                                            {/* /.card-body */}\n                                            \n                                        </div>\n                                    {/* /.card */}\n                                    {SingleTemplateCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n\n                                        <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                \n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangestatus}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_template\">Approve</option>\n                                                                      <option value=\"rejected_template\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                               \n                                        \n                                          \n                                       \n                                        \n                                          </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                \n                                </div>\n                               \n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ValidateResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            loading: false,\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/response/?status=---\",\n            { \n                headers:\n                \n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"PendingResponses\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditResponse(Surveys) {\n\n        this.setState({\n            loading: true,\n  \n          });       \n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        const survey_pk = Surveys.pk;\n        console.log(Surveys.pk)\n\n\n       \n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/response/${survey_pk}/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n               \n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ResponseEDit\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)\n                window.location = \"/ResponseEdit\"\n                this.setState({\n                    // loading: false,\n                   \n                });\n            })\n            // axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/document/${survey_pk}/`,\n            // {\n            //     headers:\n            //     {\n            //         'Content-Type': 'application/json',\n            //         'Authorization': `Token ${token}`,\n            //         'Access-Control-Allow-Origin': '*',\n            //         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            //         'Access-Control-Allow-Credentials': true\n            //     },\n               \n\n            // })\n            // .then(res => {\n            //     if (res.data) {\n            //         localStorage.setItem(\"ResponseDocuments\", JSON.stringify(res.data));\n            //     }\n            //     // console.log(res.data)                \n            // })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay\"><i className=\"fas fa-2x fa-sync-alt fa-spin\" /></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content-wrapper\" >\n                \n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Responses</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        \n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               filled by \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               State \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    LGA\n                                               </th>\n                                               <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                               \n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 \n                                                 <th style={{ width: '0%' }}>\n                                                  Year\n                                                 </th>\n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                                {/* <th>\n                                                    Survey Progress\n                                                   </th> */}\n                                                \n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                        {survey.filled_by}\n\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        \n                                                    </td>\n\n                                                    <td>\n                                                        <Link>\n                                                        {survey.state_title}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.lga_title}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td> \n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                      \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    \n\n                                                  \n                                                    <td className=\"project-actions text-right\">\n                                                        <Link\n                                                         className=\"btn btn-primary btn-sm\" \n                                                         onClick={this.EditResponse.bind(this, survey)}\n\n                                                        >\n                                                            \n                                                     Approve\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n\n\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class ValidateResponses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            loading: false,\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?deployed=yes\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    EditResponse(Surveys) {\n\n        this.setState({\n            loading: true,\n  \n          });       \n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        const survey_pk = Surveys.pk;\n        // console.log(Surveys.pk)\n\n       \n        axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:{\n                    survey_pk:survey_pk\n                }\n\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ResponseData\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)\n                window.location = \"/ResponseTable\"\n                this.setState({\n                    loading: false,\n                   \n                });\n            })\n\n\n    }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay\"><i className=\"fas fa-2x fa-sync-alt fa-spin\" />loading ...</div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content-wrapper\" >\n                \n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        \n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        <Link\n                                                         className=\"btn btn-primary btn-sm\" \n                                                         onClick={this.EditResponse.bind(this, survey)}\n\n                                                        >\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     View\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n\n\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport {  Redirect,Link } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class RespondentList extends Component {\n\n  constructor(props) {\n    super(props);\n   \n\n    this.state = {\n      \n      Users:[],\n      successful: false,\n      message: \"\",\n      loading: true,\n      loadingModal:false\n    };\n  }\n\n\n  componentWillMount(){\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n     const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n     const token = mytoken.token;\n     axios.get(\"https://gfso.chinikiguard.com/accounts/api/list/profile/?active=yes\",\n     {\n       headers:\n       {\n         'Authorization': `Token ${token}`,\n         'Access-Control-Allow-Origin': '*',\n         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n         'Access-Control-Allow-Credentials': true\n       },\n     })\n     .then(res => {\n       if (res.data) {\n         localStorage.setItem(\"Users\", JSON.stringify(res.data));\n       }\n       this.setState({\n         Users: res.data,\n         loading:false\n     });\n       // (res);\n       console.log(res.data);\n\n     })\n\n   \n\n\n  }\n\n  ApproveResponder(users){\n\n    const userId = users.pk\n    console.log(users.pk)\n    const mytoken = AuthService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/details/profile/${userId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ApproveResponder\"\n\n            if (res.data) {\n                localStorage.setItem(\"ReviewResponderList\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ReviewResponder: res.data,\n              // loadingModal: false,\n            });\n\n          })\n\n  }\n\n  \n \n  \n  render() {\n\n    \n    // console.log(list_of_lga);\n    const Users = JSON.parse(localStorage.getItem('Users'))\n\n\n\n\n    return (\n      <div>\n        <Header />\n\n        <div className=\"content-wrapper\" >\n        {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n          <Menu />\n          <div className=\"col-md-12\" >\n            <br />\n            {this.state.loading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">List of Respondents</h3>\n                    <div className=\"card-tools\">\n\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n\n                  <div className=\"card-body table-responsive p-0\">\n\n                    <table className=\"table table-hover text-nowrap\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Phone</th>\n                          <th>State</th>\n                          <th>LGA</th>\n                          <th>Registered on</th>\n                          <th>designation</th>\n                          <th>Branch</th>\n                          <th>Action</th>\n                          \n                        </tr>\n                      </thead>\n                      {this.state.Users && this.state.Users.map(users => (\n\n                        <tbody>\n                          <tr>\n                            <td>{users.username}&nbsp;</td>\n                            <td>{users.phone_number}</td>\n                            <td>{users.state_title}</td>\n                            <td>{users.lga_title}</td>\n                            <td>{users.date_joined}</td>\n                            <td>{users.designation_title}</td>\n                            <td>{users.branch_name}</td>\n                                     <td className=\"\">\n                                          <Link \n                                          className=\"btn btn-lg btn-success \"\n                                           disabled={this.state.loading}\n                                          onClick={this.ApproveResponder.bind(this, users)}\n\n                                           >\n\n                                               Approve\n                                                   </Link>&nbsp;&nbsp;\n\n                                                   \n                                                  </td>\n\n                          </tr>\n\n                        </tbody>\n                      ))}\n                    </table>\n                  </div>\n\n\n                  {/* /.card-body */}\n                </div>\n                {/* /.card */}\n              </div>\n            </div>\n          </section>\n\n          )}\n        </div>\n                               \n        </div>\n        <Footer />\n\n        </div>\n\n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApproveSurvey extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleApprove = this.handleApprove.bind(this);\n          this.onChangeApprove = this.onChangeApprove.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeApprove(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n\n     }\n\n     handleApprove(e) {\n\n          e.preventDefault();\n          const Surveypk = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n          const SurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'));\n\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('status', this.state.status);\n               formData.append('survey', SurveyInfo.pk);\n               formData.append('remark', this.state.remark);\n\n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`,formData, \n               \n               \n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              \n                              window.location = \"/ListToApprove\"\n                                             // console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const SurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'));\n\n          \n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         {/* {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )} */}\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-12\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header\">\n                                                       <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                       <div className=\"card-tools\">\n                                                       </div>\n                                                  </div>\n                                                  <div className=\"card-body\">\n                                                       {/* /.card-header */}\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Title</label>:&nbsp;\n                                                                                      {SurveyInfo.title}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Quarter</label>:&nbsp;\n                                                                                      {SurveyInfo.quarter}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {SurveyInfo.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {SurveyInfo.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {SurveyInfo.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {SurveyInfo.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {SurveyInfo.get_states&&SurveyInfo.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_lgas} */}\n                                                                                          {SurveyInfo.get_lgas&&SurveyInfo.get_lgas.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Action</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeApprove}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_creation\" className=\"text-success\">Approve</option>\n                                                                      <option value=\"rejected_creation\" className=\"text-danger\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                   </div>\n\n\n\n                              </div>\n\n\n                         </section>\n\n                    </div>\n                    <Footer />\n\n               </div>\n          );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateToApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"TemplateToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveTemplate(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveTemplate\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApproveTemplateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveTemplate.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApprovedSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApprovedTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n    \n    componentDidMount() {\n\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no`,\n\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class RejectedTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&rejected=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\n\n\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\nexport default class RejectedSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.UpdateSurvey = this.UpdateSurvey.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,  \n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            approve: \"\",\n            remark: \"\",\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            states: \"\",\n            lgas: \"\",\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n        };\n    }\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n\n\n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n    }\n    onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        this.Get_State_Data();\n        this.Get_LGA_Data();\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?rejected=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = [1, 1, 1]\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = [1, 1, 1]\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n     \n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            // console.log(e);\n        }\n    }\n\n    handleUpdate(e) {\n\n        e.preventDefault();\n        const SurveyId = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n    \n        this.setState({\n          message: \"\",\n          successful: false,\n          loading: true\n        });\n        this.form.validateAll();\n    \n        if (this.checkBtn.context._errors.length === 0) {\n          \n          const ApprovSurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'))\n          \n\n\n            //convert the string to number from the [go] array i save to  localStorage for State\n            const stop_here_for_state = localStorage.getItem('Checked_State');\n            const jasus_for_state = stop_here_for_state\n\n            //convert the string to number from the [go] array i save to localStorage for LGA\n            const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n            const jasus_for_lga = stop_here_for_lga\n\n            //set the states user selected\n            const states =\n                jasus_for_state.match(/\\d+/g).map(Number)\n\n            // set the LGAs user selected\n            const lgas =\n                jasus_for_lga.match(/\\d+/g).map(Number)\n\n\n\n\n            // newly created json\n            const body =\n            {\n                survey_pk:ApprovSurveyInfo.pk,\n                title: this.state.title||ApprovSurveyInfo.title,\n                quarter: this.state.quarter||ApprovSurveyInfo.quarter,\n                year: this.state.year||ApprovSurveyInfo.year,\n                survey_type: this.state.survey_type||ApprovSurveyInfo.survey_type,\n                start_date: this.state.start_date||ApprovSurveyInfo.start_date,\n                due_date: this.state.due_date||ApprovSurveyInfo.due_date,\n                rejected: 'false',\n                survey_type:this.state.survey_type||ApprovSurveyInfo.survey_type,\n                states_pk: states ||ApprovSurveyInfo.states,\n                lgas_pk:lgas||ApprovSurveyInfo.lgas,\n            }\n\n            console.log(body);\n          const mytoken = authService.getCurrentUser();\n          const token = mytoken.token;\n    \n          axios.post(`https://gfso.chinikiguard.com/survey/api/update/survey/respondents/`, body,\n          {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        },\n          \n          ).then(\n    \n            response => {\n    \n              this.setState({\n                message: \"Survey Updated Successefully\",\n                successful: true\n              });\n              window.location = \"/RejectedSurvey\"\n            },\n            error => {\n              const resMessage =\n                (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n                error.message ||\n                error.toString();\n    \n              this.setState({\n                loading: false,\n                message: resMessage\n              });\n            }\n          );\n        } else {\n          this.setState({\n            // loading: false\n          });\n        }\n    \n      }\n\n    UpdateSurvey(survey) {\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n        });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/SurveyToUpdate\"\n\n                if (res.data) {\n                    localStorage.setItem(\"SurveyToUpdateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    ApproveThisSurvey: res.data,\n                    // loadingModal: false,\n                });\n\n            })\n\n    }\n    Get_LGA_Data() {\n        const state = \"Ahmad loophole\";\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n                \n            });\n        // console.log(res.data)   \n    }\n    Get_State_Data() {\n        const state = \"Ahmad loophole\";\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                \n            });\n        // console.log(res.data)   \n    }\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n      \n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">\n                                    <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                    <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                    )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n                                    {this.state.myloading ? (\n                                        <>\n                                            <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                        </>\n                                    ) : (\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-header\">\n                                                        <h3 className=\"card-title\">Update Surveys</h3>\n                                                        <div className=\"card-tools\">\n\n                                                        </div>\n                                                    </div>\n                                                    {/* /.card-header */}\n                                                    {this.state.myloading ? (\n                                                        <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                    ) : (\n                                                        <div className=\"card-body table-responsive p-0\">\n                                                            <table className=\"table table-hover text-nowrap\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th>Title</th>\n                                                                        <th>Type</th>\n                                                                        <th>Year</th>\n                                                                        <th>Quarter</th>\n                                                                        <th>Created by</th>\n                                                                        <th>Remark </th>\n                                                                        <th>Action </th>\n                                                                    </tr>\n                                                                </thead>\n                                                                {this.state.Surveys.map(survey => (\n\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <td>{survey.title}</td>\n                                                                            <td>{survey.survey_type}</td>\n                                                                            <td>{survey.year}</td>\n                                                                            <td>{survey.quarter}</td>\n                                                                            <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                            <td>{survey.get_latest_history?survey.get_latest_history.remark:\"no remark\"}</td>\n\n                                                                            \n                                                                            <td className=\"\">\n                                                                                <button\n                                                                                    className=\"btn btn-info btn-lg\"\n                                                                                    disabled={this.state.loading}\n                                                                                    \n                                                                                   onClick={this.UpdateSurvey.bind(this, survey)}\n\n                                                                                >Update\n                                                                               </button>\n                                                                                \n                                                                            </td>\n\n\n                                                                        </tr>\n\n                                                                    </tbody>\n                                                                ))}\n                                                            </table>\n                                                        </div>\n                                                    )}\n                                                    {/* /.card-body */}\n                                                </div>\n                                                {/* /.card */}\n                                            </div>\n                                        </div>\n\n                                    )}\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n\n                </div>\n                <Footer />\n\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport {  Redirect,Link } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class RespondentInfo extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      \n      Users:[],\n      ApproveResponder:[],\n      successful: false,\n      message: \"\",\n      loading: true\n    };\n  }\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n\n      return (<Redirect to={'/login'} />)\n    }\n    \n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    axios.get(\"https://gfso.chinikiguard.com/accounts/api/list/profile/?approved=no&active=no\",\n    {\n      headers:\n      {\n        'Authorization': `Token ${token}`,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n        'Access-Control-Allow-Credentials': true\n      },\n    })\n    .then(res => {\n      if (res.data) {\n        localStorage.setItem(\"Users\", JSON.stringify(res.data));\n      }\n      this.setState({\n        Users: res.data,\n        loading:false\n    });\n      // (res);\n      // console.log(res.data);\n\n    })\n\n  \n     \n\n  }\n\n  ApproveResponder(users){\n\n    const userId = users.pk\n    // console.log(users.pk)\n    const mytoken = AuthService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n    axios.get(`https://gfso.chinikiguard.com/accounts/api/details/profile/${userId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ReviewResponder\"\n\n            if (res.data) {\n                localStorage.setItem(\"ReviewResponderInfo\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ReviewResponder: res.data,\n              // loadingModal: false,\n            });\n\n          })\n\n  }\n\n  \n \n  \n  render() {\n\n    \n    // console.log(list_of_lga);\n    const Users = JSON.parse(localStorage.getItem('Users'))\n\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n\n        return (<Redirect to={'/login'} />)\n      }\n\n\n    return (\n      <div>\n        <Header />\n\n        <div className=\"content-wrapper\" >\n          <Menu />\n\n          {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n          <div className=\"col-md-12\" >\n            <br />\n            {this.state.loading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                                ) : (\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">List of Respondents</h3>\n                    <div className=\"card-tools\">\n\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n\n                  <div className=\"card-body table-responsive p-0\">\n\n                    <table className=\"table table-hover text-nowrap\">\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th>Phone</th>\n                          <th>State</th>\n                          <th>LGA</th>\n                          <th>Registered on</th>\n                          <th>designation</th>\n                          <th>Branch</th>\n                          <th>Action</th>\n                          \n                        </tr>\n                      </thead>\n                      {this.state.Users && this.state.Users.map(users => (\n\n                        <tbody>\n                          <tr>\n                            <td>{users.username}&nbsp;</td>\n                            <td>{users.phone_number}</td>\n                            <td>{users.state_title}</td>\n                            <td>{users.lga_title}</td>\n                            <td>{users.date_joined}</td>\n                            <td>{users.designation_title}</td>\n                            <td>{users.branch_name}</td>\n                                     <td className=\"\">\n                                          <button className=\"btn btn-lg btn-info \"\n                                          disabled={this.state.loading}\n                                          onClick={this.ApproveResponder.bind(this, users)}\n\n                                          >\n\n                                               Update\n                                                   </button>&nbsp;&nbsp;\n\n                                                   \n                                                  </td>\n\n                          </tr>\n\n                        </tbody>\n                      ))}\n                    </table>\n                  </div>\n\n\n                  {/* /.card-body */}\n                </div>\n                {/* /.card */}\n              </div>\n            </div>\n          </section>\n\n          )}\n        </div>\n                               \n        </div>\n        <Footer />\n\n        </div>\n\n\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Notifications extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: \"\",\n      loading: true,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false,\n      survey: \"\",\n      true:\"False\"\n\n    };\n  }\n\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/?read=no',\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\n        }\n        this.setState({\n          notification: res.data.length,\n          message: res.data,\n          loading: false,\n\n        });\n        // console.log(res.data)                  \n\n      })\n\n  }\n\n  ViewNotification(message){\n\n    this.state.true= \"True\"\n\n    const notifyId = message.pk\n    // console.log(message.pk)\n    // console.log(this.state.true)\n    localStorage.setItem(\"notify_Update_ID\", JSON.stringify(message.pk));\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n\n    this.setState({\n        loadingModal: true,\n      });\n\n    axios.get(`https://gfso.chinikiguard.com/core/api/user/notification/details/${notifyId}/`,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            window.location = \"/ViewNotification\"\n\n            if (res.data) {\n                localStorage.setItem(\"ApproveNotifications\", JSON.stringify(res.data));\n            }\n\n            this.setState({\n              ApproveThisSurvey: res.data,\n              loadingModal: false,\n            });\n\n          })\n\n          let formData = new FormData();\n          formData.append('read', this.state.true);\n          axios.patch(`https://gfso.chinikiguard.com/core/api/user/notification/update/${notifyId}/`,formData,\n        {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        })\n        .then(res => {\n            if (res.data) {\n                localStorage.setItem(\"Read\", JSON.stringify(res.data));\n            }\n\n          })\n\n  }\n\n\n  render() {\n\n    //check for user to access the page\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n    //get the template details\n    // const ApproveNotifications = JSON.parse(localStorage.getItem('ApproveNotifications'));\n\n\n    return (\n      <div>\n        <Header />\n        <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n          <Menu /><br />\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <Link className=\"btn btn-success btn-block mb-3\">Messages</Link>\n               \n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Folders</h3>\n                    <div className=\"card-tools\">\n                      <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\n                        <i className=\"fas fa-minus\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-0\">\n                    <ul className=\"nav nav-pills flex-column\">\n                      <li className=\"nav-item active\">\n                        <Link to=\"/Notifications\" className=\"nav-link\">\n                          <i className=\"fas fa-inbox\" /> Inbox\n                <span className=\"badge bg-primary float-right\">{this.state.notification}</span>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-envelope\" /> Read\n              </a>\n                      </li>\n                    \n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-trash-alt\" /> Trash\n              </a>\n                      </li>\n                    </ul>\n                  </div>\n                  {/* /.card-body */}\n                </div>\n               \n              </div>\n              {/* /.col */}\n              <div className=\"col-md-9\">\n                <div className=\"card card-success card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Inbox</h3>\n                    <div className=\"card-tools\">\n                      <div className=\"input-group input-group-sm\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Search Mail\" />\n                        <div className=\"input-group-append\">\n                          <div className=\"btn btn-primary\">\n                            <i className=\"fas fa-search\" />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* /.card-tools */}\n                  </div>\n                  {/* /.card-header */}\n                  <div className=\"card-body p-0\">\n                    <div className=\"mailbox-controls\">\n                      {/* Check all button */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm checkbox-toggle\"><i className=\"far fa-square\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"far fa-trash-alt\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-reply\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-share\" />\n                        </button>\n                      </div>\n                      {/* /.btn-group */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm\">\n                        <i className=\"fas fa-sync-alt\" />\n                      </button>\n                      <div className=\"float-right\">\n                        {this.state.notification}\n              <div className=\"btn-group\">\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-left\" />\n                          </button>\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-right\" />\n                          </button>\n                        </div>\n                        {/* /.btn-group */}\n                      </div>\n                      {/* /.float-right */}\n                    </div>\n                    <div className=\"table-responsive mailbox-messages\">\n                      {this.state.loading ? (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span> \n                        ) : (\n                      <table className=\"table table-hover table-striped\">\n                        <tbody>\n                        {this.state.message && this.state.message.map(message => (\n                          <tr>\n                            <td>\n                              <div className=\"icheck-primary\">\n                                <input type=\"checkbox\" defaultValue id=\"check1\" />\n                                <label htmlFor=\"check1\" />\n                              </div>\n                            </td>\n                            <td className=\"mailbox-star\"><a href=\"#\"><i className=\"fas fa-star text-warning\" /></a></td>\n                            <td className=\"mailbox-name\">\n                            <Link\n                            onClick={this.ViewNotification.bind(this, message)}\n                            >{message.api_message}</Link></td>\n                            <td className=\"mailbox-subject\"><b>{message.subject}</b> -         </td>\n                            <td className=\"mailbox-attachment\" />\n                            <td className=\"mailbox-date\">{message.created}</td>\n                          </tr>\n                        ))}\n                           </tbody>\n                      </table>\n                        )}\n                    </div>\n                    {/* /.mail-box-messages */}\n                  </div>\n                  {/* /.card-body */}\n                  <div className=\"card-footer p-0\">\n                    <div className=\"mailbox-controls\">\n                      {/* Check all button */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm checkbox-toggle\">\n                        <i className=\"far fa-square\" />\n                      </button>\n                      <div className=\"btn-group\">\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"far fa-trash-alt\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-reply\" />\n                        </button>\n                        <button type=\"button\" className=\"btn btn-default btn-sm\">\n                          <i className=\"fas fa-share\" />\n                        </button>\n                      </div>\n                      {/* /.btn-group */}\n                      <button type=\"button\" className=\"btn btn-default btn-sm\">\n                        <i className=\"fas fa-sync-alt\" />\n                      </button>\n                      <div className=\"float-right\">\n                        1-50/200\n              <div className=\"btn-group\">\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-left\" />\n                          </button>\n                          <button type=\"button\" className=\"btn btn-default btn-sm\">\n                            <i className=\"fas fa-chevron-right\" />\n                          </button>\n                        </div>\n                        {/* /.btn-group */}\n                      </div>\n                      {/* /.float-right */}\n                    </div>\n                  </div>\n                </div>\n                {/* /.card */}\n              </div>\n              {/* /.col */}\n            </div>\n            {/* /.row */}\n          </section>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyToDeploy extends Component {\n\n    constructor(props) {\n         \n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved=yes&approved_template=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"SurveyToDeploy\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveTemplate(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/DeploySurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"DeployTemplateInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveTemplate.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\n\n\nexport default class DeploySurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.handleApprove = this.handleApprove.bind(this);\n        this.onChangestatus = this.onChangestatus.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            status: \"\",\n            remark: \"\",\n            DeploySingleSurvey: []\n        };\n    }\n\n   \n\n    \n\n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n    }\n    onChangestatus(e) {\n        this.setState({\n          status: e.target.value\n        });\n   }\n   onChangeRemark(e) {\n        this.setState({\n             remark: e.target.value\n        });\n   }\n   handleApprove(e) {\n\n    e.preventDefault();\n\n    const DeploySingleSurvey = JSON.parse(localStorage.getItem('DeployTemplateInfo'));\n\n    const pk=DeploySingleSurvey.pk\n\n    this.setState({\n         message: \"\",\n         successful: true,\n         loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n\n     let formData = new FormData();\n     formData.append('status', this.state.status);\n     formData.append('survey',  pk);\n     formData.append('remark', this.state.remark);\n         console.log(formData) \n\n         const mytoken = AuthService.getCurrentUser();\n         const token = mytoken.token;\n         axios.post(`https://gfso.chinikiguard.com/survey/api/history/survey/create/`, formData,\n\n              {\n                   headers:\n                   {\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                   },\n              }).then(\n\n                   response => {\n\n                        this.setState({\n                             message: response.data.detail,\n                             successful: true\n                        });\n                        window.location = \"/SurveyToDeploy\"\n                   },\n                   error => {\n                        const resMessage =\n                             (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data) ||\n                             error.message ||\n                             error.toString();\n\n                        this.setState({\n                             loading: false,\n                             message: resMessage,\n                             ViewTemplateloading: false,\n\n                        });\n                   }\n              );\n    } else {\n         this.setState({\n              loading: false\n         });\n    }\n}\n    \n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //get the template details\n        const DeploySingleSurvey = JSON.parse(localStorage.getItem('DeployTemplateInfo'));\n        const DeploySingleSurveyCategories = DeploySingleSurvey.form;\n        \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                    {/* right column/ hannun dama */}\n                                    {/* /.card */}\n                                    {DeploySingleSurveyCategories&&DeploySingleSurveyCategories.map(Templatefields => (\n                                        <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{Templatefields.name}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                                <div className=\"row\">\n                                                    {Templatefields.fields.map(fields => (\n\n                                                        <div className=\"col-4\">\n                                                            <input type=\"text\" className=\"form-control is-valid\" placeholder={fields.name} disabled  />                                                <br />\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                                {Templatefields.sub_categories.map(subCategory => (\n                                                    <div>\n                                                        <h6 className=\"\">{subCategory.name}</h6>\n                                                        <div className=\"row\">\n                                                            {subCategory.fields.map(SubCategoryfields => (\n                                                                <div className=\"col-4\">\n                                                                    <input type=\"text\" className=\"form-control is-valid\" placeholder={SubCategoryfields.name} disabled  />                                                <br />\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                                \n                                            </div>\n                                            {/* /.card-body */}\n\n                                        </div>\n                                    ))}\n                                    <div className=\"card card-\">\n                                            <div className=\"card-header\">\n                                                <h3 className=\"card-title\">{DeploySingleSurvey.title}</h3>\n                                            </div>\n                                            <div className=\"card-body\">\n                                                {/* <h6 className=\"\">{Templatefields.type}</h6> */}\n\n                                               \n                                                <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {DeploySingleSurvey.year}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 {/* text input */}\n                                                                 <div className=\"form-group\">\n                                                                      <label> Start date</label>:&nbsp;\n                                                                                       {DeploySingleSurvey.start_date}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Due Date</label>:&nbsp;\n                                                                                         {DeploySingleSurvey.due_date}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Survey Type</label>:&nbsp;\n                                                                                          {DeploySingleSurvey.survey_type}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> States</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          {DeploySingleSurvey.get_states&&DeploySingleSurvey.get_states.map(states => (\n                                                                                          <span> {states.title}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> LGAs</label>:&nbsp;\n                                                                    {/* {SurveyInfo.get_lgas} */}\n                                                                    {DeploySingleSurvey.get_lgas && DeploySingleSurvey.get_lgas.map(states => (\n                                                                         <span> {states.title}</span>\n                                                                    ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                 \n                                                   \n                                                \n                                            </div>\n                                            {/* /.card-body */}\n                                            \n                                        </div>\n                                    {/* /.card */}\n                                    {DeploySingleSurveyCategories.length ? \n\n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Action</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n\n                                        <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                \n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangestatus}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved_deploy\">Approve</option>\n                                                                      <option value=\"rejected_deploy\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                               \n                                        \n                                          \n                                       \n                                        \n                                          </div>\n                                                                                \n                                    </div>\n                                    : <center><h2>No Template Available</h2></center>\n                                        \n                                }\n                                    {/* /.card-body */}\n                                \n                                </div>\n                               \n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyRejected extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n           \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n   \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class SurveyApproved extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n   \n    componentDidMount() {\n\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=yes&deployed=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n   \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateApproved extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n           \n        };\n    }\n \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=yes&deployed=no`,\n\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class TemplateRejected extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            \n        };\n    }\n    \n    \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&rejected_template=yes&deployed=no&rejected=yes`,\n\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedTemplate\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-danger\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Rejected\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApproveThisTemplate extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Templates: [],\n           \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?has_template=yes&approved_template=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"TemplateToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Templates: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Templates to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                     <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Templates.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                     <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApproveThisSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n          \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?approved=no&deployed=no&rejected=no\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class ViewNotification extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: \"\",\n      loading: true,\n      AdoptSurveymessage: \"\",\n      AdoptSurveysuccessful: false,\n      AdoptSurveyloading: false,\n      survey: \"\"\n\n    };\n  }\n\n\n\n  componentDidMount() {\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const mytoken = authService.getCurrentUser();\n    const token = mytoken.token;\n    axios.get('https://gfso.chinikiguard.com/core/api/user/notification/list/',\n      {\n        headers:\n        {\n          'Content-Type': 'application/json',\n          'Authorization': `Token ${token}`,\n        },\n\n      },\n    )\n      .then(res => {\n        if (res.data) {\n          localStorage.setItem(\"notification\", JSON.stringify(res.data));\n        }\n        this.setState({\n          notification: res.data.length,\n          message: res.data,\n          loading: false,\n\n        });\n        // console.log(res.data)                  \n\n      })\n\n  }\n\n\n\n\n  render() {\n\n    //check for user to access the page\n    if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n      return (<Redirect to={'/login'} />)\n    }\n    const ApproveNotifications = JSON.parse(localStorage.getItem('ApproveNotifications'));\n    const MyNotification = ApproveNotifications.message.slice(37, -670)\n    const MyNotificationdear = ApproveNotifications.message.slice(0, -670)\n    // console.log(MyNotification)\n    return (\n      <div>\n        <Header />\n        <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n          <Menu /><br />\n          <section className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <Link className=\"btn btn-success btn-block mb-3\">Messages</Link>\n\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Folders</h3>\n                    <div className=\"card-tools\">\n                      <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\n                        <i className=\"fas fa-minus\" />\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-0\">\n                    <ul className=\"nav nav-pills flex-column\">\n                      <li className=\"nav-item active\">\n                        <Link to=\"/Notifications\" className=\"nav-link\">\n                          <i className=\"fas fa-inbox\" /> Inbox\n                <span className=\"badge bg-primary float-right\">{this.state.notification}</span>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-envelope\" /> Read\n              </a>\n                      </li>\n\n                      <li className=\"nav-item\">\n                        <a href=\"#\" className=\"nav-link\">\n                          <i className=\"far fa-trash-alt\" /> Trash\n              </a>\n                      </li>\n                    </ul>\n                  </div>\n                  {/* /.card-body */}\n                </div>\n\n              </div>\n              {/* /.col */}\n              <div className=\"col-md-9\">\n                <div className=\"card card-success card-outline\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Read Notification</h3>\n                    <div className=\"card-tools\">\n                      <a href=\"#\" className=\"btn btn-tool\" title=\"Previous\"><i className=\"fas fa-chevron-left\" /></a>\n                      <a href=\"#\" className=\"btn btn-tool\" title=\"Next\"><i className=\"fas fa-chevron-right\" /></a>\n                    </div>\n                  </div>\n                  {/* /.card-header */}\n                  <div className=\"card-body p-0\">\n                    <div className=\"mailbox-read-info\">\n                      <h5>{ApproveNotifications.subject}</h5>\n                      <h6>From: support@cbn.gov.ng.\n          <span className=\"mailbox-read-time float-right\">{ApproveNotifications.created}</span></h6>\n                    </div>\n\n                    <div className=\"mailbox-read-message\">\n                      <p>{MyNotificationdear.slice(0, 37)}</p>\n\n                      <div style={{ whiteSpace: \"pre-wrap\" }}>{MyNotification}</div>\n\n                      <p>Thanks,<br />{MyNotificationdear.slice(0, 37)}</p>\n                    </div>\n                    {/* /.mailbox-read-message */}\n                  </div>\n\n                  <div className=\"card-footer\">\n                    <div className=\"float-right\">\n                      <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-reply\" /> Reply</button>\n                      <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-share\" /> Forward</button>\n                    </div>\n                    <button type=\"button\" className=\"btn btn-default\"><i className=\"far fa-trash-alt\" /> Delete</button>\n                    <button type=\"button\" className=\"btn btn-default\"><i className=\"fas fa-print\" /> Print</button>\n                  </div>\n                  {/* /.card-footer */}\n                </div>\n                {/* /.card */}\n              </div>\n\n              {/* /.col */}\n            </div>\n            {/* /.row */}\n          </section>\n\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\n","\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\nimport authService from '../services/auth.service';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class UploadSupporting extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        // this.AdoptSurvey = this.AdoptSurvey.bind(this);\n\n        this.state = {\n           \n            loading: false,\n            uploadPercentage: 0,\n            uploadFilePercentage: 0,\n            Filetitle: '',\n            FileInfo: '',\n            file: null,\n            loadingFile: false,\n            selectedFile: null,\n            loaded: 0\n        };\n    }\n\n //My new Smart Upload  \n handleFileTitleChangeSmart = (e) => {\n    this.setState({\n        Filetitle: e.target.value\n    })\n};\n\nhandleInfoChangeSmart = (e) => {\n    this.setState({\n        FileInfo: e.target.value\n    })\n};\ncheckMimeType = (event) => {\n    //getting file object\n    let files = event.target.files\n    //define message container\n    let err = []\n    // list allow mime type\n    const types = ['application/pdf', 'application/doc','application/docx','file/pdf', 'file/doc','file/docx','image/png', 'image/jpeg', 'image/gif']\n    // loop access array\n    for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n            // create error message and assign to container   \n            err[x] = files[x].type + ' is not a supported format\\n';\n        }\n    };\n    for (var z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nmaxSelectFile = (event) => {\n    let files = event.target.files\n    if (files.length > 3) {\n        const msg = 'Only 3 images can be uploaded at a time'\n        event.target.value = null\n        toast.warn(msg)\n        return false;\n    }\n    return true;\n}\ncheckFileSize = (event) => {\n    let files = event.target.files\n    let size = 5000000\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n            err[x] = files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n    };\n    for (var z = 0; z < err.length; z++) {// if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n    return true;\n}\nonChangeHandler = event => {\n    var files = event.target.files\n    if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        // if return true allow to setState\n        this.setState({\n            selectedFile: files,\n            loaded: 0\n        })\n    }\n}\nonClickHandler = () => {\n\n    const user = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token= user.token \n\n    const Formdata = new FormData()\n\n    for (var x = 0; x < this.state.selectedFile.length; x++) {\n        Formdata.append('document', this.state.selectedFile[x])\n        Formdata.append('title', this.state.Filetitle);\n        Formdata.append('info', this.state.FileInfo);\n    }\n    axios.post(\"https://gfso.chinikiguard.com/accounts/api/registration/supporting-docs/add/\", Formdata, {\n        headers: {\n            'content-type': 'multipart/form-data',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n        },\n        onUploadProgress: ProgressEvent => {\n            this.setState({\n                loaded: (ProgressEvent.loaded / ProgressEvent.total * 100),\n            })\n        },\n    })\n        .then(res => {\n            // then print response status\n            console.log(res)\n            toast.success('File successfully uploaded')\n            window.location = \"/UserUploads\"\n\n        })\n        .catch(err => {\n            // then print response status\n            toast.error('Failed to Upload the File')\n        })\n}\n\n//end file upload\n\n   \n\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        \n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Upload Supporting Document</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <Form>\n                                                                    <ToastContainer />\n                                                                    <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded, 2)}%</Progress>\n                                                                    <br />\n                                                                    <div className=\"form-group\">\n                                                                    <div className=\"col-4\">\n\n                                                                        <label > Title</label>\n                                                                        <input type=\"text\" className=\"form-control\" onChange={this.handleFileTitleChangeSmart} \n                                                                            required />\n                                                                        </div>\n                                                                        <div className=\"col-4\">\n\n                                                                        <label >Info</label>\n                                                                        <input type=\"text\" className=\"form-control\" onChange={this.handleInfoChangeSmart} \n                                                                        required />\n                                                                        </div>\n\n                                                                        <br/>\n                                                                        <div className=\"col-4\">\n\n                                                                        <input type=\"file\" class=\"form-control\" onChange={this.onChangeHandler} value={this.state.file}  />\n                                                                        \n                                                                        </div>\n                                                                        </div>\n                                                                    <button type=\"button\" class=\"btn btn-success\" onClick={this.onClickHandler} >Upload</button>\n\n                                                                    </Form> \n                                                                    </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport { noConflict } from \"jquery\";\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ReviewResponder extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleActivate = this.handleActivate.bind(this);\n          this.onChangeActive = this.onChangeActive.bind(this);\n         \n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               active:'',\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeActive(e) {\n          this.setState({\n               active: e.target.value\n          });\n     }\n     \n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const script = document.createElement(\"script\");\n          script.src = \"./plugins/filterizr/jquery.filterizr.min.js\";\n          script.async = true;\n          document.body.appendChild(script);\n     }\n\n     handleActivate(e) {\n\n          e.preventDefault();\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderInfo'));\n          const pk =ReviewResponderInfo.pk\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('active', this.state.active);\n              \n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.patch(`https://gfso.chinikiguard.com/accounts/api/update/profile/${pk}/`,formData, \n               \n               \n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: \"User Activated successefully\",\n                                   successful: true\n                              });\n                              window.location = \"/RespondentInfo\"\n                                             // console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderInfo'));\n\n          const link='https://gfso.chinikiguard.com'\n\n          return (\n\n               <div>\n               <Header />\n\n               <div className=\"content-wrapper\" >\n                    <Menu />\n                    <br />\n                    <section className=\"content\">\n                         <div className=\"container-fluid\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-3\">\n                                        {/* Profile Image */}\n                                        <div className=\"card card-success card-outline\">\n                                             <div className=\"card-body box-profile\">\n                                                  \n                                                  <h3 className=\"profile-username text-center\">{ReviewResponderInfo.fullname}</h3>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.staff_number}</p>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.active}</p>\n\n                                                  <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Designation</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.designation_title}</p><hr />\n                                                  {/* <strong>\n                                                  <i className=\"fas fa-home mr-1\" /> Branch</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.branch_name}</p>\n                                                   */}\n                                                  <hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> State</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.state_title}</p><hr />\n                                                       <strong><i className=\"fas fa-map-marker-alt mr-1\" /> LGA</strong>\n                                                       <p className=\"text-muted\">{ReviewResponderInfo.lga_title}</p>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleActivate}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Change Status</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeActive}\n                                                                      value={this.state.active}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"yes\" className=\"text-success\">Activate</option>\n                                                                      <option value=\"no\" className=\"text-danger\">DeActivate</option>\n\n                                                                 </Select>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-sm\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                          \n                                             </div>\n                                             {/* /.card-body */}\n                                        </div>\n                                        {/* /.card */}\n                                       \n                                   </div>\n\n                                   <div className=\"col-md-9\">\n                                        <div className=\"card\">\n\n                                             <div className=\"card-header p-2\">\n                                                  <Form>\n                                                  <ul className=\"nav nav-pills\">\n                                                  <li className=\"nav-item\"><Link className=\"nav-link  \" onChange={this.onChangeActive} value={this.state.active} data-toggle=\"tab\">document</Link></li>\n                                                       {/* <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                       <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                  */}\n                                                  </ul>\n                                                  </Form>\n                                             </div>{/* /.card-header */}\n                                             \n                                             {ReviewResponderInfo.get_registration_documents.length?\n\n                                             <div className=\"card-body\">\n                                                  <div className=\"tab-content\">\n                                                       <div className=\"active tab-pane\" id=\"activity\">\n                                                       \n                                                                                     <div className=\"card-footer bg-white\">\n                                                                                          <ul className=\"mailbox-attachments d-flex align-items-stretch clearfix\">\n                                                                                          {ReviewResponderInfo.get_registration_documents.map(document => (\n\n                                                                                               <li>\n                                                                                                    <span className=\"mailbox-attachment-icon\"><i className=\"far fa-file-pdf\" /></span>\n                                                                                                    <div className=\"mailbox-attachment-info\">\n                                                                                                         <a href={link+document.document} className=\"mailbox-attachment-name\" download><i className=\"fas fa-paperclip\" /> {document.info}</a>\n                                                                                                         <span className=\"mailbox-attachment-size clearfix mt-1\">\n                                                                                                              <span>{document.title}</span>\n                                                                                                              <a href={link+document.document}className=\"btn btn-default btn-sm float-right\" download={link+document.document}><i className=\"fas fa-cloud-download-alt\" /></a>\n                                                                                                         </span>\n                                                                                                    </div>\n                                                                                               </li>\n                                                                                                                                                       ))}\n\n                                                                                               \n                                                                                               \n                                                                                          </ul>\n                                                                                     </div>\n\n                                                            {/* /.post */}\n                                                            {/* Post */}\n                                                            <div className=\"post clearfix\">\n                                                               \n                                                                 {/* /.user-block */}\n                                                               \n                                                            </div>\n                                                            {/* /.post */}\n\n                                                       </div>\n                                                      \n                                                  </div>\n                                                  {/* /.tab-content */}\n                                             </div>\n : <center> \n <h6>Sorry there is no document attached by this user</h6></center>\n}\n                                             \n                                        </div>\n                                   \n                                        {/* /.card */}\n                                   </div>\n                                   \n                                    </div>\n                         \n                              {/* /.row */}\n                         </div>{/* /.container-fluid */}\n                    </section>\n\n\n               </div>\n               <Footer />\n\n          </div>\n\n\n                );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport { noConflict } from \"jquery\";\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApproveResponder extends Component {\n\n     constructor(props) {\n          super(props);\n          this.onChangeUser_pk = this.onChangeUser_pk.bind(this);\n          this.onChangeGroup_pk= this.onChangeGroup_pk.bind(this);\n          this.handleActivate= this.handleActivate.bind(this);\n          \n\n          this.state = {\n               myloading: true,\n               loading: false,\n               message: \"\",\n               user_pk:\"\",\n               group_pk:\"\"\n          };\n     }\n\n\n    \n     \n     onChangeUser_pk(e) {\n          this.setState({\n               user_pk: e.target.value\n          });\n     } \n     onChangeGroup_pk(e) {\n          this.setState({\n               group_pk: e.target.value\n          });\n     }\n     \n     \n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n          const script = document.createElement(\"script\");\n          script.src = \"./plugins/filterizr/jquery.filterizr.min.js\";\n          script.async = true;\n          document.body.appendChild(script);\n     }\n\n     handleActivate(e) {\n\n          e.preventDefault();\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               let formData = new FormData();\n               formData.append('user_pk', this.state.user_pk);\n               formData.append('group_pk', this.state.group_pk);\n             \n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/accounts/api/group/add/user/`,formData, \n               \n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              window.location = \"/RespondentList\"\n                                             console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const ReviewResponderInfo = JSON.parse(localStorage.getItem('ReviewResponderList'));\n\n          const link='https://gfso.chinikiguard.com'\n\n          return (\n\n               <div>\n               <Header />\n\n               <div className=\"content-wrapper\" >\n                    <Menu />\n                    <br />\n                    <section className=\"content\">\n                         <div className=\"container-fluid\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-3\">\n                                        {/* Profile Image */}\n                                        <div className=\"card card-success card-outline\">\n                                             <div className=\"card-body box-profile\">\n                                                  \n                                                  <h3 className=\"profile-username text-center\">{ReviewResponderInfo.fullname}</h3>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.staff_number}</p>\n                                                  <p className=\"text-muted text-center\">{ReviewResponderInfo.active}</p>\n\n                                                  <div className=\"card-body\"><strong><i className=\"fas fa-book mr-1\" /> Designation</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.designation_title}</p><hr /><strong>\n                                                  <i className=\"fas fa-home mr-1\" /> Branch</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.branch_name}</p>\n                                                  \n                                                  <hr /><strong><i className=\"fas fa-map-marker-alt mr-1\" /> State</strong>\n                                                  <p className=\"text-muted\">{ReviewResponderInfo.state_title}</p><hr />\n                                                       <strong><i className=\"fas fa-map-marker-alt mr-1\" /> LGA</strong>\n                                                       <p className=\"text-muted\">{ReviewResponderInfo.lga_title}</p>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleActivate}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n\n                                                       <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">User</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeUser_pk}\n                                                                      value={this.state.user_pk}\n                                                                 >\n                                                                       <option>--select--</option>\n\n                                                                      <option value={ReviewResponderInfo.user} className=\"text-success\" >{ReviewResponderInfo.username}</option>\n\n                                                                 </Select>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Group</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeGroup_pk}\n                                                                      value={this.state.group_pk}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value={1} className=\"text-success\" >Respondent</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-sm\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                          \n                                             </div>\n                                             {/* /.card-body */}\n                                        </div>\n                                        {/* /.card */}\n                                       \n                                   </div>\n                                   {/* /.col */}\n                                   <div className=\"col-md-9\">\n                                        <div className=\"card\">\n                                             <div className=\"card-header p-2\">\n                                                  <Form>\n                                                  <ul className=\"nav nav-pills\">\n                                                  <li className=\"nav-item\"><Link className=\"nav-link  \" onChange={this.onChangeActive} value={this.state.active} data-toggle=\"tab\">document</Link></li>\n                                                       {/* <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#timeline\" data-toggle=\"tab\">Timeline</Link></li>\n                                                       <li className=\"nav-item\"><Link className=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">Settings</Link></li>\n                                                  */}\n                                                  </ul>\n                                                  </Form>\n                                             </div>{/* /.card-header */}\n                                             {ReviewResponderInfo.get_registration_documents.map(document => (\n\n                                             <div className=\"card-body\">\n                                                  <div className=\"tab-content\">\n                                                       <div className=\"active tab-pane\" id=\"activity\">\n                                                       \n                                                                                     <div className=\"card-footer bg-white\">\n                                                                                          <ul className=\"mailbox-attachments d-flex align-items-stretch clearfix\">\n                                                                                               <li>\n                                                                                                    <span className=\"mailbox-attachment-icon\"><i className=\"far fa-file-pdf\" /></span>\n                                                                                                    <div className=\"mailbox-attachment-info\">\n                                                                                                         <a href={link+document.document} className=\"mailbox-attachment-name\" download><i className=\"fas fa-paperclip\" /> {document.info}</a>\n                                                                                                         <span className=\"mailbox-attachment-size clearfix mt-1\">\n                                                                                                              <span>{document.title}</span>\n                                                                                                              <a href={link+document.document}className=\"btn btn-default btn-sm float-right\" download={link+document.document}><i className=\"fas fa-cloud-download-alt\" /></a>\n                                                                                                         </span>\n                                                                                                    </div>\n                                                                                               </li>\n                                                                                               \n                                                                                               \n                                                                                               \n                                                                                          </ul>\n                                                                                     </div>\n\n                                                            {/* /.post */}\n                                                            {/* Post */}\n                                                            <div className=\"post clearfix\">\n                                                               \n                                                                 {/* /.user-block */}\n                                                               \n                                                            </div>\n                                                            {/* /.post */}\n\n                                                       </div>\n                                                      \n                                                  </div>\n                                                  {/* /.tab-content */}\n                                             </div>\n                                                        ))}\n                                        </div>\n                                        {/* /.card */}\n                                   </div>\n                                   {/* /.col */}\n                              </div>\n                              {/* /.row */}\n                         </div>{/* /.container-fluid */}\n                    </section>\n\n\n               </div>\n               <Footer />\n\n          </div>\n\n\n                );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchRecurrent extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n              \n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/by-year/?year=${this.state.year}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                        console.log(res.data);\n  \n                      window.location = \"/RecurrentCapitalExpenditure\"\n                      if (res.data) {\n                          localStorage.setItem(\"RecurrentCapitalExpenditure\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                             <div className=\"col-7\">\n\n                                                       <div className=\"form-group\">\n                                                            <label>Year</label>\n\n                                                            <Select\n                                                                 className=\"form-control\"\n                                                                 id=\"exampleFormControlSelect9\"\n                                                                 validations={[required]}\n                                                                 onChange={this.onChangeYear}\n                                                                 value={this.state.year}\n                                                            >\n                                                                 <option value=\"\">--select--</option>\n                                                                 <option value=\"2011\">2011</option>\n                                                                 <option value=\"2012\">2012</option>\n                                                                 <option value=\"2013\">2013</option>\n                                                                 <option value=\"2014\">2014</option>\n                                                                 <option value=\"2015\">2015</option>\n                                                                 <option value=\"2016\">2016</option>\n                                                                 <option value=\"2017\">2017</option>\n                                                                 <option value=\"2018\">2018</option>\n                                                                 <option value=\"2019\">2019</option>\n                                                                 <option value=\"2020\">2020</option>\n                                                                 <option value=\"2021\">2021</option>\n\n                                                            </Select>\n                                                            </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class RecurrentCapitalExpenditure extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          RecurrentCapitalExpenditure:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('RecurrentCapitalExpenditure'));\n          this.setState({\n            \n            RecurrentCapitalExpenditure: Response.data,\n            year:Response.year\n        })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.RecurrentCapitalExpenditure)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Recurrent & Capital Expenditure </h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body\">\n\n                                            <table id=\"emp\" class=\"table\">\n                                            \n                                                <thead>\n\n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> Economic Classification of State Government Recurrent and Capital Expenditure <br/> (Naira Billion)</div></center>\n                                                <hr/>\n                                                 \n                                                    <tr style={{ backgroundColor: '#29d050'}}>\n                                                        <th>Section</th>\n                                                        <th>Item</th>                                                          \n                                                          {/* <br /> */}\n\n                                                        <th>{this.state.year} HYQ1</th>\n                                                        <th>{this.state.year}HYQ2</th>\n                                                        <th>Q1{this.state.year}</th>\n                                                        <th>Q2{this.state.year}</th>\n                                                        <th>Q3{this.state.year}</th>\n                                                        <th>Q4{this.state.year}</th>\n                                                   \n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n\n                                                    {this.state.RecurrentCapitalExpenditure && this.state.RecurrentCapitalExpenditure.map(category => (\n\n                                                        <tr>\n                                                            <td>\n                                                                {/* {category.economic_code} */}\n                                                                <b> {category?category.economic_code!='None':\"\"}</b>\n\n                                                                {category.fields.map(economic => (\n                                                                    <div>\n                                                                {/* <hr/> */}\n\n                                                                    {economic?economic.economic_code!='None':\"\"}\n                                                                    </div>\n                                                                ))}\n                                                            </td>\n\n                                                            <td>\n\n                                                                <b>{category.name}\n                                                                </b>\n                                                                <br/>\n                                                            <br/>                                                                {category.fields.map(field => (\n                                                          <div style={{ fontWeight: 'lighter'}}>\n\n                                                                 {/* <hr/> */}\n                                                                    { field.name }\n                                                                    </div>\n\n                                                                ))}\n\n                                                            </td>\n\n                                                            {/* <br /> */}\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.hyq1}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.hyq2}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.q1}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.q2}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                            <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.q3}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                             <td>\n                                                             <br/>\n                                                            <br/>\n                                                                {category.fields.map(number => (\n                                                                    <div>\n                                                             {/* <hr/> */}\n\n                                                                        {number.q4}\n                                                                        </div>\n                                                                ))}\n                                                            </td>\n                                                            <td>\n                                                                \n                                                            </td>\n\n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"RecurrentCapitalExpenditure\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class COFOGreport extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          COFOGreport:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('COFOGreport'));\n          this.setState({\n            \n               COFOGreport: Response.data,\n            year:Response.year\n        })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.COFOGreport)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">COFOG Recurrent & Capital Expenditure </h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body table-responsive p-0\">\n                                         <table id=\"emp\"className=\"table table-hover text-nowrap\">\n                                                                                         \n                                                <thead>\n                                                \n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> Classification  Functions of  Government (COFOG)  Recurrent and Capital Expenditure <br/> (Naira Billion)</div></center>\n                                                <hr/>\n\n                                                               <tr>\n                                                                    \n                                                                    <th></th>\n                                                                    <th style={{ textAlign: 'buttom' }}>1st  Quarter</th>\n                                                                    <th></th>\n                                                                    <th></th>\n\n                                                                    <th>2nd Quarter</th>\n                                                                    <th></th>\n                                                                    <th></th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}>1st Half Quarter {this.state.year}</th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}></th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}></th>\n                                                                    <th>3rd Quarter</th>\n                                                                    <th></th>\n                                                                    <th></th>\n                                                                    <th>4th Quarter</th>\n                                                                    <th></th>\n                                                                    <th></th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}>Annual {this.state.year} </th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}></th>\n                                                                    <th style={{ backgroundColor: '#29d050' }}></th>\n                                                                   \n                                                               </tr>\n\n                                                    <tr >\n                                                    <th style={{ backgroundColor: '#29d050'}}>COFOG</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Recurrent</th>\n                                                    <th>Capital</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th>\n                                                    <th>Annual</th>\n\n                                                    </tr>\n                                                    \n                                                    \n                                                </thead>\n                                                <tbody>\n\n                                                    {this.state.COFOGreport && this.state.COFOGreport.map(category => (\n                                                        <tr>\n                                                        <td>\n                                                            <b>{category.category}\n                                                                </b>                                                                    \n                                                            </td>\n\n\n                                                            <td>\n                                                            {category.hyq1_capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.hyq1_recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.hyq1_total}\n\n                                                            </td>\n\n\n                                                            <td>\n                                                            {category.hyq2_capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.hyq2_recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.hyq2_total}\n\n                                                            </td>\n\n                                                            <td>\n                                                            {category.q1_capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.q1_recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.q1_total}\n\n                                                            </td>\n                                                                 \n                                                            \n                                                            <td>\n                                                            {category.q2_capital}\n\n                                                            </td>\n                                                             <td>\n                                                            {category.q2_recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.q2_total}\n\n                                                            </td>\n\n\n\n                                                           <td>\n                                                            {category.q3_capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.q3_recurrent}\n\n                                                            </td> \n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.q3_total}\n\n                                                            </td>\n                                                           \n                                                            <td>\n                                                            {category.q4_capital}\n\n                                                            </td> \n                                                            <td>\n                                                            {category.q4_recurrent}\n\n                                                            </td> \n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.q4_total}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.annual}\n\n                                                            </td>\n\n                                                            </tr>\n                                                            \n                                                            \n      \n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"COFOGreport\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchCOFOG extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n              \n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/report/cofog/?year=${this.state.year}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                        console.log(res.data);\n  \n                      window.location = \"/COFOGreport\"\n                      if (res.data) {\n                          localStorage.setItem(\"COFOGreport\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                             <div className=\"col-7\">\n\n                                                       <div className=\"form-group\">\n                                                            <label>Year</label>\n\n                                                            <Select\n                                                                 className=\"form-control\"\n                                                                 id=\"exampleFormControlSelect9\"\n                                                                 validations={[required]}\n                                                                 onChange={this.onChangeYear}\n                                                                 value={this.state.year}\n                                                            >\n                                                                 <option value=\"\">--select--</option>\n                                                                 <option value=\"2011\">2011</option>\n                                                                 <option value=\"2012\">2012</option>\n                                                                 <option value=\"2013\">2013</option>\n                                                                 <option value=\"2014\">2014</option>\n                                                                 <option value=\"2015\">2015</option>\n                                                                 <option value=\"2016\">2016</option>\n                                                                 <option value=\"2017\">2017</option>\n                                                                 <option value=\"2018\">2018</option>\n                                                                 <option value=\"2019\">2019</option>\n                                                                 <option value=\"2020\">2020</option>\n                                                                 <option value=\"2021\">2021</option>\n\n                                                            </Select>\n                                                            </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchSSGFF extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n              \n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/report/ssgff/?year=${this.state.year}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                        console.log(res.data);\n  \n                      window.location = \"/SSGFFreport\"\n                      if (res.data) {\n                          localStorage.setItem(\"SSGFFreport\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                             <div className=\"col-7\">\n\n                                                       <div className=\"form-group\">\n                                                            <label>Year</label>\n\n                                                            <Select\n                                                                 className=\"form-control\"\n                                                                 id=\"exampleFormControlSelect9\"\n                                                                 validations={[required]}\n                                                                 onChange={this.onChangeYear}\n                                                                 value={this.state.year}\n                                                            >\n                                                                 <option value=\"\">--select--</option>\n                                                                 <option value=\"2011\">2011</option>\n                                                                 <option value=\"2012\">2012</option>\n                                                                 <option value=\"2013\">2013</option>\n                                                                 <option value=\"2014\">2014</option>\n                                                                 <option value=\"2015\">2015</option>\n                                                                 <option value=\"2016\">2016</option>\n                                                                 <option value=\"2017\">2017</option>\n                                                                 <option value=\"2018\">2018</option>\n                                                                 <option value=\"2019\">2019</option>\n                                                                 <option value=\"2020\">2020</option>\n                                                                 <option value=\"2021\">2021</option>\n\n                                                            </Select>\n                                                            </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class SSGFFreport extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          SSGFFreport:[],\n          SSGFFreportTitle:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const ax = axios.create({\n            baseURL: './data'\n        })\n        ax.get('response.json')\n            .then(res => {\n                // if (res.data) {\n                //     localStorage.setItem(\"SSGFFreport\", JSON.stringify(res.data));\n                // }\n\n                this.setState({\n            \n                    SSGFFreport: res.data.data,\n                    SSGFFreportTitle:res.data.data,\n                    year:res.data.year\n                    \n             })\n            })\n            \n\n        //   const Response = JSON.parse(localStorage.getItem('SSGFFreport'));\n        //   this.setState({\n            \n        //        SSGFFreport: Response.data,\n        //        SSGFFreportTitle:Response.data.data,\n        //        year:Response.year\n        // })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.SSGFFreport)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Summary of SG an FCT Finances: State-By-State</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body\">\n\n                                            <table id=\"emp\" class=\"table\">\n                                            \n                                                <thead>\n\n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> Summary of State Government and FCT Finances: State-By-State <br/> (Naira Billion)</div></center>\n                                                <hr/>\n                                                \n                                                <tr style={{ backgroundColor: '#29d050'}}>\n                                                        <th>S/N</th>\n                                                        <th>STATES</th> \n                                                        {/* {this.state.SSGFFreportTitle && this.state.SSGFFreportTitle.map(categoryTitle => (\n                                                         \n                                                        <th>{categoryTitle.fields}</th>\n\n                                                         ))} */}\n                                                    </tr>\n                                                    \n                                                     </thead>\n                                                <tbody>\n\n                                                    {this.state.SSGFFreport && this.state.SSGFFreport.map(category => (\n\n                                                        <tr>\n                                                            <td>\n                                                                 {category.Sno}\n\n                                                            </td>\n                                                            <td>\n                                                                 {category.state}\n\n                                                            </td>\n                                                            <td>\n                                                                 {category.state}\n\n                                                            </td>\n                                                            \n                                                                 {category.data.map(total=> (\n                                                                 <td>{total.grand_total}</td>\n                                                                 \n                                                                 ))}\n\n                                                           \n\n                                                            {/* <td>\n\n                                                                                                                               \n                                                            {category.sub_categories.map(Subcategories => (\n                                                          <div style={{ fontWeight: 'lighter'}}>\n\n                                                                    { Subcategories.name }\n                                                                    </div>\n\n                                                                ))}\n\n                                                            </td> */}\n\n                                                           \n                                                            \n                                                            \n                                                            \n                                                        </tr>\n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"RecurrentCapitalExpenditure\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchPensiondeduction extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n          this.onChangeSurvey_type = this.onChangeSurvey_type.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n               survey_type:\"\"\n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     } \n     onChangeSurvey_type(e) {\n          this.setState({\n               survey_type: e.target.value\n          });\n     }\n     \n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/total/by-year/?year=${this.state.year}&survey_type=${this.state.survey_type}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                    //     console.log(res.data);\n  \n                      window.location = \"/PensiondeductionReport\"\n                      if (res.data) {\n                          localStorage.setItem(\"PensiondeductionReport\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                        <div className=\"col-7\">\n\n                                                                 <div className=\"form-group\">\n                                                                      <label>Survey Type</label>\n\n                                                                      <Select\n                                                                           className=\"form-control\"\n                                                                           id=\"exampleFormControlSelect9\"\n                                                                           validations={[required]}\n                                                                           onChange={this.onChangeSurvey_type}\n                                                                           value={this.state.survey_type}\n                                                                      >\n                                                                           <option value=\"\">--select--</option>\n                                                                           <option value=\"sg\">SG</option>\n                                                                           <option value=\"lg\">LG</option>\n                                             \n                                                                      </Select>\n                                                                 </div>\n                                                            </div><div className=\"col-7\">\n\n                                                                 <div className=\"form-group\">\n                                                                      <label>Year</label>\n\n                                                                      <Select\n                                                                           className=\"form-control\"\n                                                                           id=\"exampleFormControlSelect9\"\n                                                                           validations={[required]}\n                                                                           onChange={this.onChangeYear}\n                                                                           value={this.state.year}\n                                                                      >\n                                                                           <option value=\"\">--select--</option>\n                                                                           <option value=\"2011\">2011</option>\n                                                                           <option value=\"2012\">2012</option>\n                                                                           <option value=\"2013\">2013</option>\n                                                                           <option value=\"2014\">2014</option>\n                                                                           <option value=\"2015\">2015</option>\n                                                                           <option value=\"2016\">2016</option>\n                                                                           <option value=\"2017\">2017</option>\n                                                                           <option value=\"2018\">2018</option>\n                                                                           <option value=\"2019\">2019</option>\n                                                                           <option value=\"2020\">2020</option>\n                                                                           <option value=\"2021\">2021</option>\n\n                                                                      </Select>\n                                                                 </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class PensiondeductionReport extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          PensiondeductionReport:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('PensiondeductionReport'));\n          this.setState({\n            \n               PensiondeductionReport: Response.data,\n               year:Response.year,\n               Survey_type:Response.survey_type\n          })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.PensiondeductionReport)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Pension & Deduction </h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body table-responsive p-0\">\n                                         <table id=\"emp\"className=\"table table-hover text-nowrap\">\n                                                                                         \n                                                <thead>\n                                                \n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> Pension & Deduction For {this.state.Survey_type} <br/> </div></center>\n                                                <hr/>\n\n                              \n                                                    <tr >\n                                                    {/* {this.state.Survey_type?this.state.Survey_type==='sg'&&\n                                                    <th >\n                                                    STATE\n                                               </th>\n                                                    :\"\"}\n                                                    {this.state.Survey_type?this.state.Survey_type==='lg' &&\n                                                    <th>LGA</th>\n                                                    :\n                                                    \n                                                    \"\"} */}\n\n                                                                    <th>STATE</th>\n                                                                    <th>LGA</th>\n                                                                    <th>HYQ1</th>\n                                                                    <th>HYQ2</th>\n\n                                                                    <th>Annual</th>\n\n                                                    </tr>\n                                                    \n                                                    \n                                                </thead>\n                                                <tbody>\n\n                                                    {this.state.PensiondeductionReport && this.state.PensiondeductionReport.map(category => (\n                                                        <tr>\n                                                        <td>\n                                                            <b>{category.state}\n                                                                </b>                                                                    \n                                                            </td>\n                                                            <td>\n                                                            <b>{category.lga}\n                                                                </b>                                                                    \n                                                            </td>\n\n\n                                                            <td>\n                                                            {category.hyq1}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.hyq2}\n\n                                                            </td>\n                                                            \n\n                                                                  \n                                                            \n                                                            <td>\n                                                            {category.annual}\n\n                                                            </td>\n\n                                                            </tr>\n                                                            \n                                                            \n      \n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"PensiondeductionReport\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import axios from 'axios'\nimport React, { Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport ReactPaginate from 'react-paginate';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\n\n\n export default class LGEONSPWReport extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          LGEONSPWReport:[],\n          myloading: true,\n         \n\n           \n        };\n    }\n\n  \n   \n\n    componentDidMount() {\n             if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n          const Response = JSON.parse(localStorage.getItem('LGEONSPWReport'));\n          this.setState({\n            \n               LGEONSPWReport: Response.data,\n               year:Response.year,\n          })\n\n                 \n    }\n\n    render() {\n \n        console.log(this.state.year)   \n        console.log(this.state.LGEONSPWReport)   \n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">LGAs Expenditure </h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                       \n                                        <div className=\"card-body table-responsive p-0\">\n                                         <table id=\"emp\"className=\"table table-hover text-nowrap\">\n                                                                                         \n                                                <thead>\n                                                \n                                                <center><div style={{ textAlign: 'center' ,fontWeight:'bold'}}> LGAs Expenditure <br/> </div></center>\n                                                <hr/>\n\n                                      \n                                                               <tr >\n                                                               <th style={{ backgroundColor: '#29d050'}}>Category</th>   \n                                                    <th>Capital</th>\n                                                    <th>Recurrent</th>\n                                                    <th style={{ backgroundColor: '#29d050'}}>Total</th> \n\n                                                   \n\n                                                    </tr>\n                                                   \n                                                    \n                                                </thead>\n                                                <tbody>\n\n                                                    {this.state.LGEONSPWReport && this.state.LGEONSPWReport.map(category => (\n                                                        <tr>\n                                                        <td>\n                                                            <b>{category.category}\n                                                                </b>                                                                    \n                                                            </td>\n\n\n                                                            <td>\n                                                            {category.capital}\n\n                                                            </td>\n                                                            <td>\n                                                            {category.recurrent}\n\n                                                            </td>\n                                                            <td style={{ backgroundColor: '#29d050'}}>\n                                                            {category.total}\n\n                                                            </td>\n\n\n                                                            </tr>\n                                                            \n                                                            \n      \n\n                                                    ))}\n\n                                                </tbody>\n\n                                            </table>\n                                            <div>\n                                                <ReactHTMLTableToExcel\n                                                    className=\"btn btn-info\"\n                                                    table=\"emp\"\n                                                    filename=\"PensiondeductionReport\"\n                                                    sheet=\"Sheet\"\n                                                    buttonText=\"Export excel\" />\n                                            </div>\n                                            {/* */}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n                </div>\n\n                <Footer />\n            </div>\n\n        );\n    }\n}\n\n\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\n// import { isEmail } from \"validator\";\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from \"../services/auth.service\";\n// import Spinner from 'react-bootstrap/Spinner'\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Footer from \"./Footer\";\nimport axios from 'axios'\nimport Logo from '../cbn.png'\n\n\n\n\n\nconst required = value => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\n\n\n\nexport default class SearchLGEONSPW extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n       \n          this.state = {\n               year: \"\",\n               successful: false,\n               message: \"\",\n               loading: false,\n              \n\n          };\n     }\n\n\n    \n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     \n     handleGenerate(e) {\n          e.preventDefault();\n  \n          this.setState({\n               message: \"\",\n              successful: false,\n              loading: true\n          });\n  \n          \n              //check auth user\n              const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n              const token = mytoken.token;\n  \n          \n              this.form.validateAll();\n              if (this.checkBtn.context._errors.length === 0) {\n      \n              axios.get(`https://gfso.chinikiguard.com/survey/api/survey/report/lge-on-spw/?year=${this.state.year}`, \n             \n                  {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                   \n                  })\n                  .then(res => {\n                      this.setState({\n                          message: res.data.message,\n                          successful: true,\n                      });\n                        console.log(res.data);\n  \n                      window.location = \"/LGEONSPWReport\"\n                      if (res.data) {\n                          localStorage.setItem(\"LGEONSPWReport\", JSON.stringify(res.data));\n                      }\n                  },\n                      error => {\n                          const resMessage =\n                              (error.response &&\n                                  error.response.data.detail &&\n                                  error.response.data.detail) ||\n                              error.AdoptSurveyloading ||\n                              error.toString();\n  \n                          this.setState({\n                              loading: false,\n                              message: resMessage\n                          });\n                      }\n                  );\n          } else {\n              this.setState({\n                  loading: false\n              });\n          }\n      }\n  \n\n\n\n     render() {\n\n          return (\n               <div>\n               <Header/>\n                    <Menu/>\n                    <div className=\"content-wrapper\">\n                    <br />\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Generate Report</h3>\n                                        </div>\n                                        {/* /.card-header */}\n                                                                              {/* <p className=\"login-box-msg\">Sign in to start your session</p> */}\n                                        <br />\n                                        <Form onSubmit={this.handleGenerate} ref={c => { this.form = c; }} className=\"form\" id=\"\">                          \n                                        <center>\n                                             <div className=\"col-7\">\n\n                                                       <div className=\"form-group\">\n                                                            <label>Year</label>\n\n                                                            <Select\n                                                                 className=\"form-control\"\n                                                                 id=\"exampleFormControlSelect9\"\n                                                                 validations={[required]}\n                                                                 onChange={this.onChangeYear}\n                                                                 value={this.state.year}\n                                                            >\n                                                                 <option value=\"\">--select--</option>\n                                                                 <option value=\"2011\">2011</option>\n                                                                 <option value=\"2012\">2012</option>\n                                                                 <option value=\"2013\">2013</option>\n                                                                 <option value=\"2014\">2014</option>\n                                                                 <option value=\"2015\">2015</option>\n                                                                 <option value=\"2016\">2016</option>\n                                                                 <option value=\"2017\">2017</option>\n                                                                 <option value=\"2018\">2018</option>\n                                                                 <option value=\"2019\">2019</option>\n                                                                 <option value=\"2020\">2020</option>\n                                                                 <option value=\"2021\">2021</option>\n\n                                                            </Select>\n                                                            </div>\n                                                            </div>\n                                             \n                              <br/>\n                                            \n                                             \n                                             <div className=\"form-group\">\n                                                  <button\n                                                       className=\"btn btn-primary btn-lg\"\n                                                       disabled={this.state.loading}\n                                                  >\n                                                       \n                                                       <span>Generate</span>&nbsp;&nbsp;\n                                                       {this.state.loading && (\n                                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                       )}\n                                                  </button>\n                                             </div>\n                                             <center>\n                                                  {this.state.message && (\n                                                       <div className=\"form-group\">\n                                                            <div\n                                                                 className={\n                                                                      this.state.successful\n                                                                           ? \"alert alert-success\"\n                                                                           : \"alert alert-danger\"\n                                                                 }\n                                                                 role=\"alert\"\n                                                            >\n                                                                 {this.state.message}\n                                                            </div>\n                                                       </div>\n                                                  )}\n                                             </center>\n                                             <CheckButton\n                                                  style={{ display: \"none\" }}\n                                                  ref={c => {\n                                                       this.checkBtn = c;\n                                                  }}\n                                             />\n                                                  </center>\n\n                                        </Form>\n                                                  \n                                   </div>\n\n                              </div>\n                              </div>\n                              </div>\n                    </section>\n                    </div>\n\n               </div>\n\n\n          );\n     }\n}","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\n\n\nexport default class Allsurveys extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            message: \"\",\n            Surveys: [],\n        };\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"AllSurveys\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n    // EditTemplate(Surveys) {\n\n    //     //\n    //     const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    //     const token = mytoken.token;\n    //     const survey_pk = Surveys.survey_pk;\n    //     // console.log(Surveys.survey_pk)\n\n       \n    //     axios.get(`https://gfso.chinikiguard.com/survey/api/survey/analysis/`,\n    //         {\n    //             headers:\n    //             {\n    //                 'Content-Type': 'application/json',\n    //                 'Authorization': `Token ${token}`,\n    //                 'Access-Control-Allow-Origin': '*',\n    //                 'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n    //                 'Access-Control-Allow-Credentials': true\n    //             },\n    //             params:{\n    //                 survey_pk:survey_pk\n    //             }\n\n    //         })\n    //         .then(res => {\n    //             if (res.data) {\n    //                 localStorage.setItem(\"ResponsesTable\", JSON.stringify(res.data));\n    //             }\n    //             console.log(res.data)\n    //             // window.location = \"/CompleteSurvey\"\n\n    //         })\n\n\n    // }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n\n                <section className=\"content-wrapper\" >\n                    <br />\n                    <div className=\"container-fluid\">\n\n                        {/* Default box */}\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n\n                                <h3 className=\"card-title\">Surveys</h3>\n                                <div className=\"card-tools\">\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" title=\"Collapse\">\n                                        <i className=\"fas fa-minus\" />\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" title=\"Remove\">\n                                        <i className=\"fas fa-times\" />\n                                    </button>\n                                </div>\n                            </div>\n                            {this.state.myloading ? (\n                                <>\n                                    <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                </>\n                            ) : (\n                                <div className=\"card-body p-0\">\n\n                                    <table className=\"table table-striped projects\">\n                                        <thead>\n                                            <tr>\n                                                \n                                            <th style={{ width: '0%' }}>\n                                                    Survey Name\n                                               </th>\n                                               {/* <th style={{ width: '0%' }}>\n                                               Approved Templates \n                                               </th> */}\n                                               <th style={{ width: '0%' }}>\n                                                    Responses\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                    Year\n                                               </th>\n                                               <th style={{ width: '0%' }}>\n                                                      Quarter\n                                                 </th> \n                                                 <th style={{ width: '0%' }}>\n                                                  Type\n                                                 </th>\n                                              \n                                                <th>\n                                                    Survey Progress\n                                                   </th>\n                                                <th style={{ width: '0%' }} className=\"text-center\">\n                                                    Status\n                                              </th>\n                                                <th style={{ width: '0%' }}>\n                                                    Action\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        {this.state.Surveys.map(survey => (\n\n                                            <tbody>\n                                                <tr>\n                                                    \n                                                    <td>\n                                                        <Link>\n                                                            {survey.title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.created}\n\n                                                        </small>\n                                                    </td>\n                                                    {/* <td>\n                                                        <Link>\n                                                            {survey.template_title}\n                                                        </Link>\n                                                        \n                                                        <br />\n                                                        <small>\n                                                            Created   {survey.approved_template_timestamp}\n\n                                                        </small>\n                                                    </td> */}\n                                                    <td>\n                                                        <Link>\n                                                            {survey.get_response_count}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.year}\n                                                        </Link>\n\n                                                    </td>\n                                                    <td>\n                                                        <Link>\n                                                            {survey.quarter}\n                                                        </Link>\n\n                                                    </td>   \n                                                    <td>\n                                                        <Link>\n                                                            {survey.survey_type}\n                                                        </Link>\n\n                                                    </td>\n                                                    \n\n\n                                                    <td className=\"project_progress\">\n                                                        <div className=\"progress progress-sm\">\n                                                            <div className=\"progress-bar bg-green\" role=\"progressbar\" aria-valuenow={25} aria-valuemin={0} aria-valuemax={50} style={{ width: `${survey.progress+'%'} `}}>\n                                                            </div>\n                                                        </div>\n                                                        <small>\n                                                            {survey.progress+'%'}\n                                                    </small>\n                                                    </td>\n\n                                                    <td className=\"project-state\">\n                                                        <span className=\"badge badge-success\">open</span>\n                                                    </td>\n                                                    <td className=\"project-actions text-right\">\n                                                        <Link className=\"btn btn-primary btn-sm\" to=\"/\">\n                                                            <i className=\"fas fa-folder\">\n                                                            </i>\n                                                     More\n                                                    </Link>&nbsp;&nbsp;\n \n                                                  </td>\n\n                                                </tr>\n\n                                            </tbody>\n                                        ))}\n\n                                    </table>\n                                </div>\n\n                            )}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.card */}\n                    </div>\n\n                </section>\n\n\n                <Footer />\n\n            </div>\n        );\n    }\n}","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n\n  \n \nconst InputRes = ({ input_type, pk, name, field_value ,value}) => {\n    // console.log(field_value)\n    const  {handleChange}  = useContext(FormContext)\n    \n    return (\n\n        <div className=\"col-4\">\n\n           {name} : <label style={{ color: 'blue'}}>&nbsp;&nbsp;{value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} </label>\n         <input\n         onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n         type=\"number\" \n         step=\"any\"\n         className=\"form-control\"\n         min={0}  \n        //  placeholder={value}\n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default InputRes\n","import React, { useContext }  from 'react';\nimport { FormContext } from '../FormContext';\n\n  \n \nconst InputResAccounting = ({ input_type, pk, name, field_value ,value}) => {\n    // console.log(field_value)\n    const  {handleChange}  = useContext(FormContext)\n    return (\n\n        <div className=\"col-4\">\n\n           {name} : <label style={{ color: 'blue'}}>&nbsp;&nbsp;{value} </label>\n         <input\n         onKeyDown={(evt) => [\"e\", \"E\", \"+\"].includes(evt.key) && evt.preventDefault()}\n         type=\"number\" \n         step=\"any\"\n         className=\"form-control\"  \n        //  placeholder={value}\n         onChange={event => handleChange(pk, event)} \n         value={field_value}\n         /> \n\n        <br />\n         </div>\n         \n                             \n                  \n\n    )\n}\n\nexport default InputResAccounting\n","import React from 'react'\nimport InputRes from './FormElements/InputRes'\nimport InputResAccounting from './FormElements/InputResAccounting'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElementRes = ({ field: { input_type, pk, name, value }}) => {\n  \n    switch (input_type) {\n        case 'number':\n            return (<InputRes\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n            case 'accounting':\n            return (<InputResAccounting\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'text_input_':\n            return (<SelectOption\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n       \n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElementRes\n","import React from 'react'\nimport InputRes from './FormElements/InputRes'\nimport InputResAccounting from './FormElements/InputResAccounting'\nimport SelectOption from './FormElements/SelectOption'\n\nconst FormElementCatRes = ({ field_cat: { input_type, pk, name, value }}) => {\n  \n    switch (input_type) {\n        case 'number':\n            return (<InputRes\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n\n            />)\n        case 'text_input_':\n            return (<InputResAccounting\n                pk={pk}\n                name={name}\n                input_type={input_type}\n                value={value}\n            />)\n       \n\n        default:\n            return null;\n    }\n\n\n}\n\nexport default FormElementCatRes\n","\nimport { useState, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FormElementRes from './FormElementRes';\nimport FormElementCatRes from './FormElementCatRes';\nimport { FormContext } from './FormContext';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport axios from 'axios'\nimport CheckSurveyTypeResponse from './CheckSurveyTypeResponse';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport SurveyAttachment from './SurveyAttachment';\n\n\n\n//hey i will use react hook here\nconst ResponseEdit = (props) => {\n\n  \n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [Get_Survey_Details, Set_Survey_Details] = useState({});\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n\n  // Call_Survey_Details form localStorage\n  const ResponseEDit = JSON.parse(localStorage.getItem('ResponseEDit'));\n  const Call_Survey_Details = ResponseEDit.get_entries;\n\n\n  \n  useEffect(() => {\n    // Call_Survey_Details form localStorage\n    const ResponseEDit = JSON.parse(localStorage.getItem('ResponseEDit'));\n    const Call_Survey_Details = ResponseEDit.get_entries;\n    Set_Survey_Details(Call_Survey_Details)\n       \n\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    setMessage(\"\");\n    setLoading(true);\n\n\n    form.current.validateAll();\n\n    //get the user from the localstorage\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    // const state= mytoken\n\n    //get single survey details\n    const ResponseEDit = JSON.parse(localStorage.getItem('ResponseEDit'));\n\n    //get the survey Pk  to send as require survey_pk\n    const ResponseEDitPk = ResponseEDit.pk\n    const state_pk = ResponseEDit.state\n    const lga_pk = ResponseEDit.LGA\n    const responseForm=ResponseEDit.form;\n    //Save all user responses of the survey  to LocalStorage\n    const to_Send = JSON.parse(localStorage.getItem('Response_to_Send'))\n\n    // returns an array of a given object's own enumerable property values\n    const I_to_Send = Object.values(to_Send);\n    const checkUser= JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const checkUserpk=checkUser.profile\n    \n    //Response Body to send to Mallam Ahmad\n    const Responsebody =\n    {\n      response_pk: ResponseEDitPk,\n      lga_pk: lga_pk,\n      state_pk: state_pk,\n      form: I_to_Send || responseForm\n    }\n\n    if (checkBtn.current.context._errors.length === 0) {\n\n      // console.log(Responsebody);\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/edit/response/\", Responsebody,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n\n          if (res.data) {\n            localStorage.setItem(\"Response_Approve\", JSON.stringify(res.data));\n          }\n          setMessage(res.data.detail);\n          setSuccessful(true);\n        },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.survey_title ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      // console.log(Get_Survey_Details)\n    }\n  }\n\n  //this handle the change user typing\n  const handleChange = (id, event) => {\n\n    const newElements = { ...Get_Survey_Details }\n    const arr = [...Get_Survey_Details];\n\n\n    //convert the categories objects to array\n    for (let n = 0; n < newElements.length; n++) {\n      arr.push(newElements[n]);\n    }\n\n    //first array to loop through the categories\n    for (let i = 0; i < arr.length; i++) {\n      const category = arr[i];\n\n      //second array to loop through the field\n      for (let j = 0; j < category.fields.length; j++) {\n        const field = category.fields[j];\n\n        //check the pk for each field\n        const { pk } = field;\n        if (id === pk) {\n          field['value'] = event.target.value;\n        }\n      }\n\n      //first array to loop through the SubCategories\n      for (let h = 0; h < category.sub_categories? category.sub_categories.length:0; h++) {\n        const SubCategory = category.sub_categories[h];\n\n        //second array to loop through the fields of SubCategory\n        for (let j = 0; j < SubCategory.fields? SubCategory.fields.length:0; j++) {\n          const FormElementCategory = SubCategory.fields[j];\n          // console.log(FormElementCategory)\n\n         \n          //check the pk for each field\n          const { pk } = FormElementCategory;\n          if (id === pk) {\n            FormElementCategory['value'] = event.target.value;\n          }\n        }\n      }\n    }\n    //sub_categories\n\n    //Save the result to the localStorage\n    localStorage.setItem(\"Response_to_Send\", JSON.stringify(Get_Survey_Details));\n  }\n\n  if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n    return (<Redirect to={'/login'} />)\n  }\n  const checkUser= JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\nconst link=\"https://gfso.chinikiguard.com\"\n  return (\n\n    <FormContext.Provider value={{ handleChange }}>\n      <Header />\n      <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n        <Menu /><br />\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {/* <div className=\"card card-\"> */}\n              {/* left column */}\n              \n\n              <div className=\"col-md-12\">\n                <Form onSubmit={handleSubmit} ref={form}>\n                  {!successful && (\n                    <div>\n                      <center><h1 class=\"mt-4 mb-2\">{ResponseEDit.title}</h1></center>\n                      <center><p class=\"mt-4 mb-2\"><b>Survey Type: &nbsp;</b>{ResponseEDit.survey_type.toUpperCase()}&nbsp; <b>Period: &nbsp;</b>{ResponseEDit.quarter.toUpperCase()}&nbsp; <b>Year: &nbsp;</b>{ResponseEDit.year}</p></center>\n                      <center><p class=\"mt-4 mb-2\"><b>Filled By: &nbsp;</b>{ResponseEDit.filled_by.toUpperCase()}<b>Period: &nbsp;</b>{ResponseEDit.quarter.toUpperCase()}&nbsp; <b>Phone Number: &nbsp;</b>{ResponseEDit.filled_by_phone}</p></center>\n                        \n                      {/* <CheckSurveyTypeResponse /> */}\n                      {Call_Survey_Details.map(myfield => (\n                        <div className=\"card card-\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">{myfield.name}</h3>\n                          </div>\n                          <div className=\"card-body\">\n                            {/* <h6 className=\"\">{myfield.type}</h6> */}\n                            <div className=\"row\">\n                              {\n                                myfield ? myfield.fields.map((field, i) => <FormElementRes key={i} field={field} />)\n                                  : null\n                              }\n                            </div>\n                          </div>\n                          {myfield.sub_categories.map(subCategory => (\n                            <div>\n                              <h6 className=\"\">{subCategory.name}</h6>\n                              <div className=\"col-12\">\n                                <div className=\"row\">\n                                  {\n                                    subCategory.fields && subCategory.fields.map((field_cat, i) => <FormElementCatRes  key={i} field_cat={field_cat} />)\n                                     \n                                  }\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n\n                        <div className=\"card-body\">\n                        {ResponseEDit.supporting_documents?ResponseEDit.supporting_documents.length &&\n\n                          <div className=\"tab-content\">\n                            <div className=\"active tab-pane\" id=\"activity\">\n\n                              <div className=\"card-footer bg-white\">\n                                <ul className=\"mailbox-attachments d-flex align-items-stretch clearfix\">\n                                {ResponseEDit.supporting_documents.map(document => (\n\n                                  <li>\n                                    <span className=\"mailbox-attachment-icon\"><i className=\"far fa-file-pdf\" /></span>\n                                    <div className=\"mailbox-attachment-info\">\n                                      <a href={link + document.document} className=\"mailbox-attachment-name\" download><i className=\"fas fa-paperclip\" /> {document.info}</a>\n                                      <span className=\"mailbox-attachment-size clearfix mt-1\">\n                                        <span>{document.title}</span>\n                                        <a href={link + document.document} className=\"btn btn-default btn-sm float-right\" download={link + document.document}><i className=\"fas fa-cloud-download-alt\" /></a>\n                                      </span>\n                                    </div>\n                                  </li>\n                      ))}\n\n\n\n                                </ul>\n                              </div>\n\n                              {/* /.post */}\n                              {/* Post */}\n                              <div className=\"post clearfix\">\n\n                                {/* /.user-block */}\n\n                              </div>\n                              {/* /.post */}\n\n                            </div>\n\n                          </div>\n\n : <center> <i className=\"nav-icon fas fa-warning text-warning text-lg\"></i><h6 style={{ color: 'red'}}>Sorry there is no any Supporting document attached to this Survey</h6></center>\n}\n                        </div>\n                      <div className=\"form-group\">\n                        {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\n                        <center> <button className=\"btn btn-success btn-lg \" disabled={loading}>\n                          {loading && (\n                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                          )}\n                          <span>Approve</span>\n                        </button>\n                        </center>\n                      </div>\n                    </div>\n                  )}\n                  <h3>\n                    <center>\n                      {message && (\n                        <div className=\"form-group\">\n                          <div\n                            className={\n                              successful ? \"alert alert-success\" : \"alert alert-danger\"\n                            }\n                            role=\"alert\"\n                          >\n                            {message}\n                          </div>\n                        </div>\n                      )}\n                    </center>\n\n                  </h3>\n\n                  <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n              </div>\n\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </FormContext.Provider>\n  );\n}\n\nexport default ResponseEdit;\n\n","import React, { Component } from \"react\";\n\n\nexport default class test extends Component {\n\n     constructor() {\n          super()\n      \n          this.state = {\n            data: [{\n              \"name\": \"bin\"\n            }, {\n              \"name\": \"lu\"\n            }\n            ]\n          }\n        }\n      \n        onChange = (e, idx) => {\n          this.setState({\n            data: this.state.data.map((o,i) => {\n              if(i === idx){\n                return e.target.value\n              }\n              return o\n            })\n          })\n        }\n      \n        getAllStates = () => console.log(JSON.parse(this.state))\n      \n        render() {\n          return(\n            <div>{this.state.data.map((o,i)=>{\n              return <div><br />\n               <textarea onChange={e => this.onChange(e, i)}>\n                {JSON.stringify(o)}\n               </textarea>\n               </div>\n            })}\n            \n            <br />\n            <button onClick={this.getAllStates}>Save JSON</button>\n      \n            </div>\n          )\n        }\n      }\n","\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Select from \"react-validation/build/select\";\nimport CheckButton from \"react-validation/build/button\";\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport axios from 'axios'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\nimport Logo from '../cbn.png'\nimport authService from '../services/auth.service';\n\n\n\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\nconst lookup = {\n    \"Annual\": [\n        { id: '', text: '--select--' },\n        { id: 'q1', text: 'Q1' },\n        { id: 'q2', text: 'Q2' },\n      { id: 'q3', text: 'Q3' },\n      { id: 'q4', text: 'Q4' },\n    ],\n    \"Halfyear\": [\n        { id: '', text: '--select--' },\n      { id: 'hyq1', text: 'HYQ1' },\n      { id: 'hyq2', text: 'HYQ2' },\n    ]\n  }\nexport default class PensionSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangecategory = this.onChangecategory.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.AdoptSurvey = this.AdoptSurvey.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangehalfyear = this.onChangehalfyear.bind(this);\n        \n        this.state = {\n            category: \"\",\n            quarter: \"\",\n            year: \"\",\n            \n            loading: false,\n            message: \"\",\n            survey_type:\"\",\n            myloading: false,\n            statesGov: false,\n            othersGov: false,\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: false,\n            dataValue: 'Halfyear'\n\n        };\n    }\n          \n      \n        onChange = ({ target: { value } }) => {\n          this.setState({ dataValue: value });\n        }\n      \n    \n    onChangecategory(e) {\n        this.setState({\n            category: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n   \n    onChangehalfyear(e) {\n        this.setState({\n            halfyear: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n    \n\n\n    AdoptSurvey(e) {\n        e.preventDefault();\n\n        this.setState({\n            AdoptSurveymessage: \"\",\n            AdoptSurveysuccessful: false,\n            AdoptSurveyloading: true\n        });\n\n        \n            //check auth user\n            const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n            const token = mytoken.token;\n\n           //convert the string to number from the [go] array i save to  localStorage for State\n           const stop_here_for_state = localStorage.getItem('Checked_State');\n           const jasus_for_state = stop_here_for_state\n         \n           \n            let formData = new FormData();\n            formData.append('category', this.state.category);\n            formData.append('quarter', this.state.quarter);\n            formData.append('year', this.state.year);\n            \n           \n\n            this.form.validateAll();\n            if (this.checkBtn.context._errors.length === 0) {\n    \n            axios.post(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/create/\", \n            formData,\n                {\n                    headers:\n                    {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`,\n                        'Access-Control-Allow-Origin': '*',\n                        'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                        'Access-Control-Allow-Credentials': true\n                    },\n                })\n                .then(res => {\n                    this.setState({\n                        AdoptSurveymessage: res.data.detail,\n                        AdoptSurveysuccessful: true,\n                    });\n                      console.log(res.data);\n\n                    window.location = \"/Deploy\"\n                    if (res.data) {\n                        localStorage.setItem(\"PensionsDeDuction\", JSON.stringify(res.data));\n                    }\n                },\n                    error => {\n                        const resMessage =\n                            (error.response &&\n                                error.response.data.message &&\n                                error.response.data.message) ||\n                            error.AdoptSurveyloading ||\n                            error.toString();\n\n                        this.setState({\n                            AdoptSurveyloading: false,\n                            message: resMessage\n                        });\n                    }\n                );\n        } else {\n            this.setState({\n                AdoptSurveyloading: false\n            });\n        }\n    }\n\n    // AddField(Filter_with_name) {\n\n     \n    //     //select Target category\n    //     localStorage.setItem(\"Category_to_AddField\", JSON.stringify(Filter_with_name));\n    //     localStorage.setItem(\"MyCategoryName\", JSON.stringify(Filter_with_name.name));\n    //     window.location = \"/CategoryView\"\n    // }\n\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        //reset to default state\n        const Checked_LGA = 1\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        //call the States and LGAS at the first \n        const state = \"Ahmad loophole\";\n        const user = authService.getCurrentUser();\n\n        const token = user.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                // console.log(res.data)                  \n\n            })\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n\n            });\n\n            axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/combo/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"StatesList\", JSON.stringify(res.data));\n                }\n\n            });\n        // console.log(res.data)   \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = 1\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = 1 \n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            console.log(e);\n        }\n    }\n\n\n    render() {\n\n        //check for user to access the page\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        const StatesList = JSON.parse(localStorage.getItem('StatesList'));\n        //for checking the right selection either SG or LG\n        const { statesGov, othersGov } = this.state;\n\n        //   const { dataValue } = this.state;\n          const options = lookup[this.state.dataValue];\n         \n\n        return (\n            <div>\n                <Header />\n                <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n                    <Menu /><br />\n                    {this.state.AdoptSurveyloading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {/* left column */}\n                                <div className=\"col-md-12\">\n                                   \n                                <center>\n                                                    {this.state.AdoptSurveymessage && (\n                                                        <div className=\"pb-5\" >\n                                                            <div\n                                                                className={\n                                                                    this.state.AdoptSurveysuccessful\n                                                                    ? \"alert alert-success\"\n                                                                    : \"alert alert-danger\"\n                                                                }\n                                                                role=\"alert\"\n                                                            >\n                                                                <h3 > {this.state.AdoptSurveymessage}</h3>\n                                                            </div>\n                                                        </div>\n                                                    )}</center>\n                                               \n                                    <div className=\"card card-\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">Create Pension & deduction Survey</h3>\n                                        </div>\n                                        <div className=\"card-body\">\n\n                                            <Form onSubmit={this.AdoptSurvey} ref={c => { this.form = c; }} >\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            <label> Survey Category</label>\n                                                            \n                                                            <Select className=\"form-control \" placeholder\n                                                                value={this.state.category}\n                                                                onChange={this.onChangecategory}\n                                                                validations={[required]}\n                                                            >\n                                                              <option value=\"\">--select--</option>\n\n                                                            <option value=\"deductions\">deductions</option>\n                                                            <option value=\"pensions\">pensions</option>\n                                                            <option value=\"deductions_and_pensions\">deductions & pensions</option>\n                                                             </Select>\n                                                        </div>\n                                                    </div>\n                                                  \n                                                    <div className=\"col-sm-3\">\n                                                        <div className=\"form-group\">\n                                                            <label> Period</label>\n                                                            <Select  className=\"form-control \" placeholder\n                                                                value={this.state.dataValue}\n                                                                onChange={this.onChange}\n                                                                validations={[required]}\n                                                            >\n                                                             <option value=\"Halfyear\">Half-Year</option>\n                                                             <option value=\"Annual\">Annual</option>\n\n                                                                \n                                                            </Select>\n                                                        </div>\n                                                    </div>\n                                                \n                                                    <div className=\"col-sm-3\">\n                                                        <div className=\"form-group\">\n                                                        <label> Quarter</label>\n\n                                                            <Select className=\"form-control\"\n                                                             value={this.state.quarter}\n                                                             onChange={this.onChangeQuarter}\n                                                             validations={[required]}\n\n                                                             \n\n                                                            >\n                                                            {/* <option value=\"\">--Select--</option> */}\n\n                                                                {options.map(o => <option key={o.id} value={o.id}>{o.text}</option>)}\n                                                            </Select>\n                                                        </div>\n                                                    </div>\n                                                \n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div className=\"form-group\">\n                                                            {/* text input */}\n                                                            <label> Year</label>\n                                                            <Input type=\"number\" className=\"form-control \" placeholder\n                                                                value={this.state.year}\n                                                                onChange={this.onChangeYear}\n                                                                validations={[required]}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                   \n                                                </div>\n                                                {statesGov && (\n                                                    <div className=\"table-container\">\n                                                        <table className=\"table\">\n                                                            <thead>\n\n                                                                <tr>\n                                                                    <th>STATE</th>\n\n                                                                    <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                            checkboxes=\".table .select-checkbox\"\n                                                                            sync=\".table .row\"\n                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                            }}\n                                                                            onAllChecked={(selectedMap) => {\n                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                            }}\n                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.replace(/\\d+/g,\"\")\n                                                                                   \n                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                            }}\n\n                                                                        />\n                                                                    </th>\n                                                                </tr>\n\n                                                            </thead>\n                                                            <tbody className=\"table-body\">\n                                                                {List_Of_States.map((state, i) => (\n\n                                                                    <tr>\n                                                                        <td>{state.title}</td>\n                                                                        <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${state.pk}`}\n                                                                                // onChange={this.onChangeState}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td>\n                                                                    </tr>\n                                                                ))}\n\n                                                            </tbody>\n\n                                                        </table>\n                                                    </div>\n                                                )}\n                                                \n                                               {othersGov && (\n                                                    <div className=\"table-container\">\n                                                        <table className=\"table\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th>LGA</th>\n\n                                                                    <th> Check all\n                                                                     <MultiselectCheckbox\n                                                                            checkboxes=\".table .select-checkbox\"\n                                                                            sync=\".table .row\"\n                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                            }}\n                                                                            onAllChecked={(selectedMap) => {\n                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                            }}\n                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                const fieldsList = [];\n                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                }\n                                                                                //    const go = fieldsList.join()\n                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                            }}\n\n                                                                        />\n                                                                    </th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody className=\"table-body\">\n                                                                {StatesList && StatesList.map(lga => (\n                                                                    \n                                                                    <tr>\n                                                                        <td style={{ color: 'green', fontWeight:'bold'}}>{lga.title} </td>\n                                                                        <br/>\n                                                                        {lga.get_lgas && lga.get_lgas.map(lgas => (\n                                                                        <tr>\n                                                                    <td>{lgas.title}</td>\n                                                                    <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${lgas.pk}`}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td>\n                                                                        </tr>\n                                                                        ))}\n                                                                       \n\n                                                                        {/* <td>\n                                                                            <input\n                                                                                type=\"checkbox\"\n                                                                                className=\"select-checkbox\"\n                                                                                value={`${lga.pk}`}\n                                                                                // onChange={this.onChangeLgas}\n                                                                                validations={[required]}\n                                                                            />\n                                                                        </td> */}\n                                                                    </tr>\n                                                                ))}\n\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                               )}\n                                                <center>\n                                                    <div className=\"row\">\n                                                        <button\n                                                            disabled={this.state.AdoptSurveyloading}\n                                                            className=\"btn btn-success btn-lg float-right\"\n                                                        >\n\n                                                            {this.state.AdoptSurveyloading && (\n                                                                <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                            )}\n                                                            Create Survey\n                                                        </button>\n                                                    </div>\n                                                </center>\n                                                <CheckButton\n                                                    style={{ display: \"none\" }}\n                                                    ref={c => {\n                                                        this.checkBtn = c;\n                                                    }}\n                                                />\n                                                \n                                            </Form>\n                                       \n                                        </div>\n                                    </div>\n                                    {/* /.card-body */}\n                                </div>\n                                {/* /.card */}\n                            </div>\n                            {/*/.col (right) */}\n                            {/* /.row */}\n                        </div>{/* /.container-fluid */}\n                    </section>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class PensiondeductionSurveyList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/list/\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"deductionPension\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    PensiondeductionResponse(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n          \n        axios.get(`https://gfso.chinikiguard.com/survey/api/deduction-pension/detail/?survey_pk=${surveyId}`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/CompletePensiondeduction\"\n\n                if (res.data) {\n                    localStorage.setItem(\"PensiondeductionInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                                <Menu />\n\n                <Header />\n\n                <div className=\"content-wrapper\">\n\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Category</th>\n                                                                                     {/* <th>Type</th> */}\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     {/* <th>Created by</th> */}\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.category}</td>\n                                                                                     {/* <td>{survey.survey_type}</td> */}\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     {/* <td><span className=\"tag tag-success\">{survey.created_by}</span></td> */}\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.PensiondeductionResponse.bind(this, survey)}\n\n                                                                                           >Fill \n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","\nimport { useState, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport FormElement from './FormElement';\nimport FormElementCategory from './FormElementCategory';\nimport { FormContext } from './FormContext';\nimport Header from './Header';\nimport Footer from './Footer'\nimport Menu from \"./Menu\";\nimport axios from 'axios'\nimport CheckSurveyTypeResponse from './CheckSurveyTypeResponse';\nimport Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport SurveyAttachment from './SurveyAttachment';\n\n\n\n//hey i will use react hook here\nconst CompletePensiondeduction = (props) => {\n\n  \n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [Get_Survey_Details_Pension, Set_Survey_Details_pension] = useState({});\n  const [successful, setSuccessful] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n\n  const onChangeTitle = (e) => {\n    const title = e.target.value;\n    setTitle(title);\n};\n  // Call_Survey_Details form localStorage\n  const Surveydetails = JSON.parse(localStorage.getItem('PensiondeductionInfo'));\n  const Call_Survey_Details = Surveydetails.form;\n\n\n  \n  useEffect(() => {\n    // Call_Survey_Details form localStorage\n    const Surveydetails = JSON.parse(localStorage.getItem('PensiondeductionInfo'));\n    const Call_Survey_Details = Surveydetails;\n    Set_Survey_Details_pension(Call_Survey_Details)\n    // console.log(Call_Survey_Details)\n\n\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    setMessage(\"\");\n    setLoading(true);\n\n\n    form.current.validateAll();\n\n    //get the user from the localstorage\n    const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const token = mytoken.token;\n    // const state= mytoken\n\n    //get single survey details\n    const Surveydetails = JSON.parse(localStorage.getItem('PensiondeductionInfo'));\n\n    //get the survey Pk  to send as require survey_pk\n    const SurveydetailsPk = Surveydetails.pk\n\n    //Save all user responses of the survey  to LocalStorage\n    const to_Send = JSON.parse(localStorage.getItem('Response_to_Send_Pension'))\n\n    // returns an array of a given object's own enumerable property values\n\n    const checkUser= JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n    const checkUserpk=checkUser.profile\n    //user state_pk\n    const state_pk = checkUserpk.state\n    const lga_pk = checkUserpk.lga\n\n    //Response Body to send to Mallam Ahmad\n    const Responsebody =\n    {\n      title: title,\n      survey_pk: to_Send.survey_pk,\n      state_pk: state_pk,\n      form: to_Send.form\n    }\n \n    console.log(Responsebody)\n    if (checkBtn.current.context._errors.length === 0) {\n\n      // console.log(Responsebody);\n      axios.post(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/add/\", Responsebody,\n        {\n          headers:\n          {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n            'Access-Control-Allow-Credentials': true\n          },\n        })\n        .then(res => {\n\n          if (res.data) {\n            localStorage.setItem(\"Response_Success\", JSON.stringify(res.data));\n          }\n          setMessage(res.data.detail);\n          setSuccessful(true);\n          // window.location = \"/AvailableSurvey\"\n\n        },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data.detail &&\n                error.response.data.detail) ||\n              error.survey_title ||\n              error.toString();\n\n            setMessage(resMessage);\n            setSuccessful(false);\n          }\n        );\n      // console.log(Get_Survey_Details_Pension)\n    }\n  }\n\n  //this handle the change user typing\n  const handleChange = (id, event) => {\n\n    const newElements = { ...Get_Survey_Details_Pension }\n      // console.log(newElements.form)\n\n      //second array to loop through the field\n      for (let j = 0; j < newElements.form.length; j++) {\n        const field = newElements.form[j];\n        // console.log(field)\n\n        //check the pk for each field\n        const { pk } = field;\n        if (id === pk) {\n          field['amount'] = event.target.value;\n        }\n        \n        \n      }\n    //Save the result to the localStorage\n    localStorage.setItem(\"Response_to_Send_Pension\", JSON.stringify(Get_Survey_Details_Pension));\n  }\n\n  if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n    return (<Redirect to={'/login'} />)\n  }\n  const checkUser= JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n\n  return (\n\n    <FormContext.Provider value={{ handleChange }}>\n      <Header />\n      <div className=\"content-wrapper\" style={{ minHeight: 1602 }}>\n        <Menu /><br />\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              {/* <div className=\"card card-\"> */}\n              {/* left column */}\n              \n              {Surveydetails.form.length ? \n\n              <div className=\"col-md-12\">\n                <Form onSubmit={handleSubmit} ref={form}>\n                  {!successful && (\n                    <div>\n                      <center><h1 class=\"mt-4 mb-2\">{Surveydetails.category}</h1></center>\n                      <center><h3 class=\"mt-4 mb-2\">{Surveydetails.quarter}</h3></center>\n                      <center><h4 class=\"mt-4 mb-2\">{Surveydetails.year}</h4></center>\n                      <center><h5 class=\"mt-4 mb-2\">Make sure you are filling this survey from {checkUser.profile.state_title} state </h5></center>\n                      {/* <CheckSurveyTypeResponse /> */}\n                      <div className=\"form-group\">\n                              <label >Title</label>\n                              \n                              <input  type=\"text\"\n                                className=\"form-control\"\n                                value={title}\n                                onChange={onChangeTitle}\n                                required\n                                placeholder=\"Enter Survey Title\"  />  \n                        </div>\n                    <br/>\n                      {Call_Survey_Details.map ((myValue, i) => (\n                        <div className=\"card card-\">\n                          <div className=\"card-header\">\n                            <h3 className=\"card-title\">{myValue.title}\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{myValue.LGA_ID}</h3>\n                            <h6 className=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{myValue.heading}</h6>\n\n                          </div>\n                          <div className=\"card-body\">\n                            {/* <h6 className=\"\">{myfield.type}</h6> */}\n                            <div className=\"row\">\n                                  <FormElement key={i} field={myValue} />\n                    \n                            </div>\n                          </div>\n                         \n                           \n                        </div>\n                      ))}\n\n                      <div className=\"form-group\">\n                        {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\n                        <center> <button className=\"btn btn-primary btn-lg \" disabled={loading}>\n                          {loading && (\n                            <span className=\"spinner-grow spinner-grow-sm\"></span>\n                          )}\n                          <span>Submit</span>\n                        </button>\n                        </center>\n                      </div>\n                    </div>\n                  )}\n                  <h3>\n                    <center>\n                      {message && (\n                        <div className=\"form-group\">\n                          <div\n                            className={\n                              successful ? \"alert alert-success\" : \"alert alert-danger\"\n                            }\n                            role=\"alert\"\n                          >\n                            {message}\n                            {/* <SurveyAttachment /> */}\n\n                          </div>\n                        </div>\n                      )}\n                    </center>\n\n                  </h3>\n\n                  <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n              </div>\n: <center><h2>No  Survey Template Available</h2></center>\n                                        \n}\n            </div>\n            {/* </div> */}\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </FormContext.Provider>\n  );\n}\n\nexport default CompletePensiondeduction;\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class PensionPending extends Component {\n\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            PensionPending: [],\n          \n        };\n    }\n    \n   \n    componentDidMount() {\n     if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n          return (<Redirect to={'/login'} />)\n        }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/list/?status=---\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"PensionPending\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    PensionPending: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.PensionPending.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-warning\"\n                                                                                               disabled={this.state.loading}\n\n                                                                                           >Pending\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ApprovedPension extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/list/?status=approved\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"ApprovedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApproveSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                  loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  <>\n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                  </>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Approved Surveys</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     <th>Type</th>\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     <th>Created by</th>\n                                                                                     <th>Status </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     <td>{survey.survey_type}</td>\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-success\"\n                                                                                               disabled={this.state.loading}\n                                                                                            //    onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >Approved\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\n\n\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\nexport default class RejectedPension extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeQuarter = this.onChangeQuarter.bind(this);\n        this.onChangeStatus = this.onChangeStatus.bind(this);\n        this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeDueDate = this.onChangeDueDate.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeLgas = this.onChangeLgas.bind(this);\n        this.UpdateSurvey = this.UpdateSurvey.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n        \n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading: false,  \n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey: [],\n            approve: \"\",\n            remark: \"\",\n            title: \"\",\n            quarter: \"\",\n            status: \"\",\n            year: \"\",\n            survey_type: \"\",\n            start_date: \"\",\n            due_date: \"\",\n            states: \"\",\n            lgas: \"\",\n            statesGov: false,\n            lgasGov: false,\n            othersGov: false,\n        };\n    }\n\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeQuarter(e) {\n        this.setState({\n            quarter: e.target.value\n        });\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            year: e.target.value\n        });\n    }\n    onChangeStartDate(e) {\n        this.setState({\n            start_date: e.target.value\n        });\n    }\n    onChangeDueDate(e) {\n        this.setState({\n            due_date: e.target.value\n        });\n    }\n    onChangeSurveyType(e) {\n        this.setState({\n            survey_type: e.target.value\n        });\n    }\n\n    onChangeStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangeState(e) {\n        this.setState({\n            states: e.target.value\n        });\n    }\n    onChangeLgas(e) {\n        this.setState({\n            lgas: e.target.value\n        });\n    }\n\n\n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n    }\n    onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n    }\n    componentDidMount() {\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n        }\n        this.Get_State_Data();\n        this.Get_LGA_Data();\n\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/list/?status=rejected\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"RejectedSurvey\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        //reset to default state\n        const Checked_State = [1, 1, 1]\n        localStorage.setItem(\"Checked_State\", Checked_State);\n        const Checked_LGA = [1, 1, 1]\n        localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n     \n        // check for the value selected and show the related content\n        try {\n            if (prevState.survey_type !== this.state.survey_type) {\n                const state = this.state.survey_type\n                if (state) {\n                    this.setState({\n                        statesGov: state.includes(\"sg\"),\n                        lgasGov: state.includes(\"lg\"),\n                        othersGov: state.includes(\"other\"),\n                    });\n                }\n            }\n\n        } catch (e) {\n\n            // console.log(e);\n        }\n    }\n\n    handleUpdate(e) {\n\n        e.preventDefault();\n        const SurveyId = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n    \n        this.setState({\n          message: \"\",\n          successful: false,\n          loading: true\n        });\n        this.form.validateAll();\n    \n        if (this.checkBtn.context._errors.length === 0) {\n          \n          const ApprovSurveyInfo = JSON.parse(localStorage.getItem('ApprovSurveyInfo'))\n          \n\n\n            //convert the string to number from the [go] array i save to  localStorage for State\n            const stop_here_for_state = localStorage.getItem('Checked_State');\n            const jasus_for_state = stop_here_for_state\n\n            //convert the string to number from the [go] array i save to localStorage for LGA\n            const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n            const jasus_for_lga = stop_here_for_lga\n\n            //set the states user selected\n            const states =\n                jasus_for_state.match(/\\d+/g).map(Number)\n\n            // set the LGAs user selected\n            const lgas =\n                jasus_for_lga.match(/\\d+/g).map(Number)\n\n\n\n\n            // newly created json\n            const body =\n            {\n                survey_pk:ApprovSurveyInfo.pk,\n                title: this.state.title||ApprovSurveyInfo.title,\n                quarter: this.state.quarter||ApprovSurveyInfo.quarter,\n                year: this.state.year||ApprovSurveyInfo.year,\n                survey_type: this.state.survey_type||ApprovSurveyInfo.survey_type,\n                start_date: this.state.start_date||ApprovSurveyInfo.start_date,\n                due_date: this.state.due_date||ApprovSurveyInfo.due_date,\n                rejected: 'false',\n                survey_type:this.state.survey_type||ApprovSurveyInfo.survey_type,\n                states_pk: states ||ApprovSurveyInfo.states,\n                lgas_pk:lgas||ApprovSurveyInfo.lgas,\n            }\n\n            console.log(body);\n          const mytoken = authService.getCurrentUser();\n          const token = mytoken.token;\n    \n          axios.post(`https://gfso.chinikiguard.com/survey/api/update/survey/respondents/`, body,\n          {\n            headers:\n            {\n                'Authorization': `Token ${token}`,\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                'Access-Control-Allow-Credentials': true\n            },\n        },\n          \n          ).then(\n    \n            response => {\n    \n              this.setState({\n                message: \"Survey Updated Successefully\",\n                successful: true\n              });\n              window.location = \"/RejectedSurvey\"\n            },\n            error => {\n              const resMessage =\n                (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n                error.message ||\n                error.toString();\n    \n              this.setState({\n                loading: false,\n                message: resMessage\n              });\n            }\n          );\n        } else {\n          this.setState({\n            // loading: false\n          });\n        }\n    \n      }\n\n    UpdateSurvey(survey) {\n\n        const surveyId = survey.pk\n        console.log(survey.pk)\n        localStorage.setItem(\"Survey_Update_ID\", JSON.stringify(survey.pk));\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n        });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n\n                if (res.data) {\n                    localStorage.setItem(\"ApprovSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                    ApproveThisSurvey: res.data,\n                    loadingModal: false,\n                });\n\n            })\n\n    }\n    Get_LGA_Data() {\n        const state = \"Ahmad loophole\";\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                }\n                \n            });\n        // console.log(res.data)   \n    }\n    Get_State_Data() {\n        const state = \"Ahmad loophole\";\n        const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n        const token = mytoken.token;\n        axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n                params:\n                {\n                    state: state\n                }\n            },\n        )\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                }\n                \n            });\n        // console.log(res.data)   \n    }\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n        const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n        const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n        //for checking the right selection either SG or LG\n        const { statesGov, lgasGov } = this.state;\n\n\n        return (\n            <div>\n                <Header />\n                <Menu />\n                <div className=\"content-wrapper\">\n                    <br />\n                    {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">\n                                    <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                    <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                    )}\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n\n                                <div className=\"col-12\">\n                                    {this.state.myloading ? (\n                                        <>\n                                            <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                        </>\n                                    ) : (\n\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-header\">\n                                                        <h3 className=\"card-title\">Update Surveys</h3>\n                                                        <div className=\"card-tools\">\n\n                                                        </div>\n                                                    </div>\n                                                    {/* /.card-header */}\n                                                    {this.state.myloading ? (\n                                                        <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                    ) : (\n                                                        <div className=\"card-body table-responsive p-0\">\n                                                            <table className=\"table table-hover text-nowrap\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th>Title</th>\n                                                                        <th>Type</th>\n                                                                        <th>Year</th>\n                                                                        <th>Quarter</th>\n                                                                        <th>Created by</th>\n                                                                        <th>Remark </th>\n                                                                        <th>Action </th>\n                                                                    </tr>\n                                                                </thead>\n                                                                {this.state.Surveys.map(survey => (\n\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <td>{survey.title}</td>\n                                                                            <td>{survey.survey_type}</td>\n                                                                            <td>{survey.year}</td>\n                                                                            <td>{survey.quarter}</td>\n                                                                            <td><span className=\"tag tag-success\">{survey.created_by}</span></td>\n                                                                            <td>{survey.get_latest_history?survey.get_latest_history.remark:\"no remark\"}</td>\n\n                                                                            \n                                                                            <td className=\"\">\n                                                                                <button\n                                                                                    className=\"btn btn-info btn-lg\"\n                                                                                    disabled={this.state.loading}\n                                                                                    data-toggle=\"modal\"\n                                                                                    data-target=\"#modal-lg\"\n                                                                                   onClick={this.UpdateSurvey.bind(this, survey)}\n\n                                                                                >Update\n                                                                               </button>\n                                                                                 <div className=\"modal fade\" id=\"modal-lg\"  aria-modal=\"true\" role=\"dialog\">\n                                                                                    <div className=\"modal-dialog modal-lg\">\n                                                                                        <div className=\"modal-content\">\n                                                                                            <div className=\"modal-header\">\n                                                                                                <h4 className=\"modal-title\">Update Survey</h4>\n                                                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                                                    <span aria-hidden=\"true\">×</span>\n                                                                                                </button>\n                                                                                            </div>\n                                                                                            {this.state.loadingModal ? (\n                                                                                                <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                                            ) : (\n                                                                                                <div>\n                                                                                                    <div className=\"modal-body\">\n\n                                                                                                            <Form onSubmit={this.handleUpdate} ref={c => { this.form = c; }} >\n                                                                                                                <div className=\"row\">\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Title</label>\n                                                                                                                            <Input type=\"text\" className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.title}\n                                                                                                                                onChange={this.onChangeTitle}\n                                                                                                                                // validations={[required]}\n                                                                                                                            />\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Quarter:{this.state.ApproveThisSurvey.quarter}</label>\n                                                                                                                            <Select className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.quarter}\n                                                                                                                                onChange={this.onChangeQuarter}\n                                                                                                                                // validations={[required]}\n                                                                                                                            >\n                                                                                                                                <option value=\"\">Select</option>\n                                                                                                                                <option value=\"q1\">Q1</option>\n                                                                                                                                <option value=\"q2\">Q2</option>\n                                                                                                                                <option value=\"q3\">Q3</option>\n                                                                                                                                <option value=\"q4\">Q4</option>\n                                                                                                                            </Select>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                </div>\n                                                                                                                <div className=\"row\">\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            {/* text input */}\n                                                                                                                            <label> Year</label>\n                                                                                                                            <Input type=\"number\" className=\"form-control \" placeholder\n                                                                                                                                value={this.state.ApproveThisSurvey.year}\n                                                                                                                                onChange={this.onChangeYear}\n                                                                                                                                // validations={[required]}\n                                                                                                                            />\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"row\">\n                                                                                                                        <div className=\"col-sm-6\">\n                                                                                                                            {/* text input */}\n                                                                                                                            <div className=\"form-group\">\n                                                                                                                                <label> Start date</label>\n                                                                                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                                                    value={this.state.ApproveThisSurvey.start_date}\n                                                                                                                                    onChange={this.onChangeStartDate}\n                                                                                                                                    // validations={[required]}\n                                                                                                                                />\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"col-sm-6\">\n                                                                                                                            <div className=\"form-group\">\n                                                                                                                                <label> Due Date</label>\n                                                                                                                                <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                                                    value={this.state.ApproveThisSurvey.due_date}\n                                                                                                                                    onChange={this.onChangeDueDate}\n                                                                                                                                    // validations={[required]}\n                                                                                                                                />\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                    <div className=\"col-sm-6\">\n                                                                                                                        <div className=\"form-group\">\n                                                                                                                            <label> Survey Type</label>\n                                                                                                                            <Select type=\"text\" className=\"form-control \" placeholder\n                                                                                                                                // validations={[required]}\n                                                                                                                                value={this.state.survey_type}\n                                                                                                                                onChange={this.onChangeSurveyType}\n                                                                                                                            >\n                                                                                                                                <option value=\"\">Select</option>\n                                                                                                                                <option value=\"sg\">SG</option>\n                                                                                                                                <option value=\"lg\">LG</option>\n                                                                                                                                <option value=\"other\">OTHER</option>\n                                                                                                                            </Select>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                                </div>\n                                                                                                                {statesGov && (\n                                                                                                                    <div className=\"table-container\">\n                                                                                                                        <table className=\"table\">\n                                                                                                                            <thead>\n\n                                                                                                                                <tr>\n                                                                                                                                    <th>STATE</th>\n\n                                                                                                                                    <th> Check all\n                                                                                                                                         <MultiselectCheckbox\n                                                                                                                                            checkboxes=\".table .select-checkbox\"\n                                                                                                                                            sync=\".table .row\"\n                                                                                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                                                            }}\n                                                                                                                                            onAllChecked={(selectedMap) => {\n                                                                                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                            }}\n                                                                                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.replace(/\\d+/g,\"\")\n\n                                                                                                                                                localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                                                            }}\n\n                                                                                                                                        />\n                                                                                                                                    </th>\n                                                                                                                                </tr>\n\n                                                                                                                            </thead>\n                                                                                                                            <tbody className=\"table-body\">\n                                                                                                                                {List_Of_States.map((state, i) => (\n\n                                                                                                                                    <tr>\n                                                                                                                                        <td>{state.title}</td>\n                                                                                                                                        <td>\n                                                                                                                                            <input\n                                                                                                                                                type=\"checkbox\"\n                                                                                                                                                className=\"select-checkbox\"\n                                                                                                                                                value={`${state.pk}`}\n                                                                                                                                                // onChange={this.onChangeState}\n                                                                                                                                                // validations={[required]}\n                                                                                                                                            />\n                                                                                                                                        </td>\n                                                                                                                                    </tr>\n                                                                                                                                ))}\n\n                                                                                                                            </tbody>\n\n                                                                                                                        </table>\n                                                                                                                    </div>\n                                                                                                                )}\n                                                                                                                {lgasGov && (\n                                                                                                                    <div className=\"table-container\">\n                                                                                                                        <table className=\"table\">\n                                                                                                                            <thead>\n                                                                                                                                <tr>\n                                                                                                                                    <th>LGA</th>\n\n                                                                                                                                    <th> Check all\n                                                                                                                                          <MultiselectCheckbox\n                                                                                                                                            checkboxes=\".table .select-checkbox\"\n                                                                                                                                            sync=\".table .row\"\n                                                                                                                                            onNotAllChecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                                // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                                                            }}\n                                                                                                                                            onAllChecked={(selectedMap) => {\n                                                                                                                                                // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                            }}\n                                                                                                                                            onAllUnchecked={(selectedMap) => {\n                                                                                                                                                const fieldsList = [];\n                                                                                                                                                for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                                                    fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                                                }\n                                                                                                                                                //    const go = fieldsList.join()\n                                                                                                                                                localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                                                // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                                                // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                                                            }}\n\n                                                                                                                                        />\n                                                                                                                                    </th>\n                                                                                                                                </tr>\n                                                                                                                            </thead>\n                                                                                                                            <tbody className=\"table-body\">\n                                                                                                                                {List_Of_lgas && List_Of_lgas.map(lga => (\n                                                                                                                                    <tr>\n                                                                                                                                        <td>{lga.title}</td>\n                                                                                                                                        <td>\n                                                                                                                                            <input\n                                                                                                                                                type=\"checkbox\"\n                                                                                                                                                className=\"select-checkbox\"\n                                                                                                                                                value={`${lga.pk}`}\n                                                                                                                                                // onChange={this.onChangeLgas}\n                                                                                                                                                // validations={[required]}\n                                                                                                                                            />\n                                                                                                                                        </td>\n                                                                                                                                    </tr>\n                                                                                                                                ))}\n\n                                                                                                                            </tbody>\n                                                                                                                        </table>\n                                                                                                                    </div>\n                                                                                                                )}\n                                                                                                                <center>\n                                                                                                                    {this.state.message && (\n                                                                                                                        <div className=\"pb-5\" >\n                                                                                                                            <div\n                                                                                                                                className={\n                                                                                                                                    this.state.successful\n                                                                                                                                        ? \"alert alert-success\"\n                                                                                                                                        : \"alert alert-danger\"\n                                                                                                                                }\n                                                                                                                                role=\"alert\"\n                                                                                                                            >\n                                                                                                                                <h3 > {this.state.message}</h3>\n                                                                                                                            </div>\n                                                                                                                        </div>\n                                                                                                                    )}</center>\n                                                                                                                <center>\n                 \n                                                                                                                        <div className=\"modal-footer justify-content-between\">\n                                                                                                                            <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                                                                                                                            <button\n                                                                                                                            disabled={this.state.AdoptSurveyloading}\n                                                                                                                            className=\"btn btn-primary btn-sm float-right\"\n                                                                                                                        >\n\n                                                                                                                            {this.state.AdoptSurveyloading && (\n                                                                                                                                <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                                                                                            )}\n                                                                                                                     Update Survey\n                                                                                                                     </button>                                                                                                                        </div>\n\n                                                                                                                </center>\n                                                                                                                <CheckButton\n                                                                                                                    style={{ display: \"none\" }}\n                                                                                                                    ref={c => {\n                                                                                                                        this.checkBtn = c;\n                                                                                                                    }}\n                                                                                                                />\n\n                                                                                                            </Form>\n\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            )}\n                                                                                        </div>\n                                                                                        {/* /.modal-content */}\n                                                                                    </div>\n                                                                                </div>\n                                                                                {/* /.modal-dialog */}\n\n                                                                            </td>\n\n\n                                                                        </tr>\n\n                                                                    </tbody>\n                                                                ))}\n                                                            </table>\n                                                        </div>\n                                                    )}\n                                                    {/* /.card-body */}\n                                                </div>\n                                                {/* /.card */}\n                                            </div>\n                                        </div>\n\n                                    )}\n                                </div>\n\n\n                            </div>\n\n\n                        </div>\n\n\n                    </section>\n\n                </div>\n                <Footer />\n\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport AuthService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class ApprovePensionSurvey extends Component {\n\n     constructor(props) {\n          super(props);\n          this.handleApprove = this.handleApprove.bind(this);\n          this.onChangeApprove = this.onChangeApprove.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               SurveyInfo: []\n          };\n     }\n\n\n     onChangeApprove(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n             }\n\n     }\n\n     handleApprove(e) {\n\n          e.preventDefault();\n          const PensionSurveyInfo = JSON.parse(localStorage.getItem('PensionSurveyInfo'));\n\n\n          this.setState({\n               message: \"\",\n               successful: true,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n              \n               // console.log(body) \n               // let formData = new FormData();\n               // formData.append('status', this.state.status);\n               // formData.append('survey_pk', PensionSurveyInfo.pk);\n               // formData.append('remark', this.state.remark);\n\n               const body={\n                    survey_pk: PensionSurveyInfo.pk,\n                     status: this.state.status,\n                    remark: this.state.remark\n                 }\n                 \n\n\n\n               const mytoken = AuthService.getCurrentUser();\n               const token = mytoken.token;\n               axios.post(`https://gfso.chinikiguard.com/survey/api/deduction-pension/cycle/`,body, \n               \n               \n\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    }).then(\n\n                         response => {\n\n                              this.setState({\n                                   message: response.data.detail,\n                                   successful: true\n                              });\n                              \n                              window.location = \"/ListToApprovePension\"\n                                             // console.log(response.data) \n\n                         },\n                         error => {\n                              const resMessage =\n                                   (error.response &&\n                                        error.response.data.detail &&\n                                        error.response.data) ||\n                                   error.message ||\n                                   error.toString();\n\n                              this.setState({\n                                   loading: false,\n                                   message: resMessage,\n                                   ViewTemplateloading: false,\n\n                              });\n                         }\n                    );\n          } else {\n               this.setState({\n                    loading: false\n               });\n          }\n     }\n\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n          const PensionSurveyInfo = JSON.parse(localStorage.getItem('PensionSurveyInfo'));\n\n          \n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         {/* {this.state.loading && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )} */}\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n                                   <div className=\"row\">\n                                        <div className=\"col-12\">\n                                             <div className=\"card\">\n                                                  <div className=\"card-header\">\n                                                       <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                       <div className=\"card-tools\">\n                                                       </div>\n                                                  </div>\n                                                  <div className=\"card-body\">\n                                                       {/* /.card-header */}\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Category</label>:&nbsp;\n                                                                                      {PensionSurveyInfo.category}\n\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> Quarter</label>:&nbsp;\n                                                                                      {PensionSurveyInfo.quarter}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                       <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      {/* text input */}\n                                                                      <label> Year</label>:&nbsp;\n                                                                                      {PensionSurveyInfo.year}\n                                                                 </div>\n                                                            </div>\n                                                            \n                                                            \n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                      <label> State</label>:&nbsp;\n                                                                                          {/* {SurveyInfo.get_states.map} */}\n                                                                                          <span> {PensionSurveyInfo.state_title}</span>\n                                                                 </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                 <div className=\"form-group\">\n                                                                 {PensionSurveyInfo.get_entries&&PensionSurveyInfo.get_entries.map(states => (\n\n                                                                      <label> {states.lga} :&nbsp;</label>&&\n                                                                                          <span> {states.value}</span>\n                                                                                          ))}\n                                                                 </div>\n                                                            </div>\n                                                       </div>\n                                                  </div>\n                                                  <Form\n                                                       onSubmit={this.handleApprove}\n                                                       ref={c => {\n                                                            this.form = c;\n                                                       }}\n                                                  >\n                                                       \n                                                       <div className=\"card-body\">\n                                                       \n                                                            <div className=\"form-group\">\n                                                                 <label htmlFor=\"exampleFormControlSelect9\">Action</label>\n                                                                 <Select\n                                                                      className=\"form-control\"\n                                                                      id=\"exampleFormControlSelect9\"\n                                                                      validations={[required]}\n                                                                      onChange={this.onChangeApprove}\n                                                                      value={this.state.status}\n                                                                 >\n                                                                      <option>--select--</option>\n                                                                      <option value=\"approved\" className=\"text-success\">Approve</option>\n                                                                      <option value=\"rejected\" className=\"text-danger\">Reject</option>\n\n                                                                 </Select>\n                                                            </div>\n\n                                                            <div className=\"form-group\">\n                                                                 <Textarea type=\"remark\" name=\"remark\" className=\"form-control\" placeholder=\"Remark\" value={this.state.remark}\n                                                                      onChange={this.onChangeRemark}\n                                                                      validations={[required]} />\n\n                                                            </div>\n                                                            <br />\n\n\n                                                            <div className=\"form-group\">\n                                                                 <button\n                                                                      className=\"btn btn-primary btn-lg\"\n                                                                      disabled={this.state.loading}\n                                                                 >\n                                                                      {/* {this.state.loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )} */}\n                                                                      <span>Submit</span>\n                                                                 </button>\n                                                            </div>\n                                                            <center>\n                                              {this.state.message && (\n                                                <div className=\"form-group\">\n                                                  <div\n                                                    className={\n                                                      this.state.successful\n                                                        ? \"alert alert-success\"\n                                                        : \"alert alert-danger\"\n                                                    }\n                                                    role=\"alert\"\n                                                  >\n                                                    {this.state.message}\n                                                  </div>\n                                                </div>\n                                              )}\n\n                                            </center>\n                                                            <CheckButton\n                                                                 style={{ display: \"none\" }}\n                                                                 ref={c => {\n                                                                      this.checkBtn = c;\n                                                                 }}\n                                                            />\n\n                                                       </div>\n                                                       \n                                                  </Form>\n                                                  {/* /.card-body */}\n                                             </div>\n                                             {/* /.card */}\n                                        </div>\n                                   </div>\n\n\n\n                              </div>\n\n\n                         </section>\n\n                    </div>\n                    <Footer />\n\n               </div>\n          );\n     }\n}\n\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\n\n\n\nconst required = (value) => {\n    if (!value) {\n         return (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                   This field is required!\n              </div>\n         );\n    }\n};\nexport default class ListToApprovePension extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeApprove = this.onChangeApprove.bind(this);\n        this.onChangeRemark = this.onChangeRemark.bind(this);\n\n        this.state = {\n            warningLoad: false,\n            myloading: true,\n            loading:false,\n            message: \"\",\n            Surveys: [],\n            ApproveThisSurvey:[],\n            approve:\"\",\n            remark:\"\"\n        };\n    }\n    \n    onChangeApprove(e) {\n        this.setState({\n            approve: e.target.value\n        });\n      }\n       onChangeRemark(e) {\n        this.setState({\n            remark: e.target.value\n        });\n      }\n    componentDidMount() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/login'} />)\n          }\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n        // /history/survey/\n        axios.get(\"https://gfso.chinikiguard.com/survey/api/deduction-pension/response/list/?status=---\",\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                if (res.data) {\n                    localStorage.setItem(\"PensionToApprove\", JSON.stringify(res.data));\n                }\n                // (res);\n                // (res.data);\n                this.setState({\n                    Surveys: res.data,\n                    myloading: false,\n                    warningLoad: true,\n                });\n            })\n\n    }\n\n  \n    ApproveSurvey(survey){\n\n        const surveyId = survey.pk\n        // console.log(survey.pk)\n        const mytoken = authService.getCurrentUser();\n        const token = mytoken.token;\n\n        this.setState({\n            loadingModal: true,\n          });\n        axios.get(`https://gfso.chinikiguard.com/survey/api/deduction-pension/response/details/${surveyId}/`,\n            {\n                headers:\n                {\n                    'Authorization': `Token ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                    'Access-Control-Allow-Credentials': true\n                },\n            })\n            .then(res => {\n                window.location = \"/ApprovePensionSurvey\"\n\n                if (res.data) {\n                    localStorage.setItem(\"PensionSurveyInfo\", JSON.stringify(res.data));\n                }\n\n                this.setState({\n                  ApproveThisSurvey: res.data,\n                //   loadingModal: false,\n                });\n\n              })\n    \n      }\n\n    render() {\n\n        if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n            return (<Redirect to={'/'} />)\n        }\n\n\n        return (\n            <div>\n                                <Menu />\n\n                <Header />\n\n                <div className=\"content-wrapper\">\n\n                         <br />\n                         {this.state.loadingModal && (\n                        <span className=\"\">\n                            <div className=\"overlay-wrapper\">\n                                <div className=\"overlay \">         \n                      <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                            </div>\n\n                        </span>\n                     )}\n                <section className=\"content\">\n\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             {this.state.myloading ? (\n                                                  \n                                                       <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                             ) : (\n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Surveys to Approve</h3>\n                                                                      <div className=\"card-tools\">\n                                                                           \n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n                                                                 {this.state.myloading ? (\n                                                                 <center><Spinner animation=\"border\" variant=\"success\" /></center>\n                                                                  ) : (\n                                                                 <div className=\"card-body table-responsive p-0\">\n                                                                      <table className=\"table table-hover text-nowrap\">\n                                                                           <thead>\n                                                                                <tr>\n                                                                                <th>Title</th>\n                                                                                     {/* <th>Type</th> */}\n                                                                                     <th>Year</th>\n                                                                                     <th>Quarter</th>\n                                                                                     {/* <th>Created by</th> */}\n                                                                                     <th>Action </th>\n                                                                                </tr>\n                                                                           </thead>\n                                                                           {this.state.Surveys.map(survey => (\n\n                                                                           <tbody>\n                                                                                <tr>\n                                                                                <td>{survey.title}</td>\n                                                                                     {/* <td>{survey.survey_type}</td> */}\n                                                                                     <td>{survey.year}</td>\n                                                                                     <td>{survey.quarter}</td>\n                                                                                     {/* <td><span className=\"tag tag-success\">{survey.created_by}</span></td> */}\n                                                                                     <td className=\"\">\n                                                                                           <button\n                                                                                               className=\"btn btn-primary\"\n                                                                                               disabled={this.state.loading}\n                                                                                               onClick={this.ApproveSurvey.bind(this, survey)}\n\n                                                                                           >View\n                                                                                         </button>\n                                                                                           \n                                                                                         \n                                                                                         </td>\n                                             \n\n                                                                                </tr>\n                                                                               \n                                                                           </tbody>\n                                                                           ))}\n                                                                      </table>\n                                                                 </div>\n                                                                )}\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             )}\n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                </div>\n                <Footer />\n\n                </div>\n        );\n    }\n}\n\n             ","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport Header from './Header';\nimport Footer from './Footer'\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Menu from \"./Menu\";\nimport authService from \"../services/auth.service\";\nimport Logo from '../cbn.png'\nimport MultiselectCheckbox from \"react-multiselect-checkbox\";\n\n\n\n\nconst required = (value) => {\n     if (!value) {\n          return (\n               <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n               </div>\n          );\n     }\n};\nexport default class SurveyToUpdate extends Component {\n\n     constructor(props) {\n          super(props);\n          this.onChangeApprove = this.onChangeApprove.bind(this);\n          this.onChangeRemark = this.onChangeRemark.bind(this);\n          this.onChangeTitle = this.onChangeTitle.bind(this);\n          this.onChangeQuarter = this.onChangeQuarter.bind(this);\n          this.onChangeStatus = this.onChangeStatus.bind(this);\n          this.onChangeSurveyType = this.onChangeSurveyType.bind(this);\n          this.onChangeStartDate = this.onChangeStartDate.bind(this);\n          this.onChangeDueDate = this.onChangeDueDate.bind(this);\n          this.onChangeYear = this.onChangeYear.bind(this);\n          this.onChangeState = this.onChangeState.bind(this);\n          this.onChangeLgas = this.onChangeLgas.bind(this);\n          this.handleUpdate = this.handleUpdate.bind(this);\n\n          this.state = {\n               warningLoad: false,\n               myloading: true,\n               loading: false,\n               message: \"\",\n               Surveys: [],\n               ApproveThisSurvey: [],\n               approve: \"\",\n               remark: \"\",\n               title: \"\",\n               quarter: \"\",\n               status: \"\",\n               year: \"\",\n               survey_type: \"\",\n               start_date: \"\",\n               due_date: \"\",\n               states: \"\",\n               lgas: \"\",\n               statesGov: false,\n               lgasGov: false,\n               othersGov: false,\n          };\n     }\n\n\n     onChangeTitle(e) {\n          this.setState({\n               title: e.target.value\n          });\n     }\n\n     onChangeQuarter(e) {\n          this.setState({\n               quarter: e.target.value\n          });\n     }\n\n     onChangeYear(e) {\n          this.setState({\n               year: e.target.value\n          });\n     }\n     onChangeStartDate(e) {\n          this.setState({\n               start_date: e.target.value\n          });\n     }\n     onChangeDueDate(e) {\n          this.setState({\n               due_date: e.target.value\n          });\n     }\n     onChangeSurveyType(e) {\n          this.setState({\n               survey_type: e.target.value\n          });\n     }\n\n     onChangeStatus(e) {\n          this.setState({\n               status: e.target.value\n          });\n     }\n\n     onChangeState(e) {\n          this.setState({\n               states: e.target.value\n          });\n     }\n     onChangeLgas(e) {\n          this.setState({\n               lgas: e.target.value\n          });\n     }\n\n\n     onChangeApprove(e) {\n          this.setState({\n               approve: e.target.value\n          });\n     }\n     onChangeRemark(e) {\n          this.setState({\n               remark: e.target.value\n          });\n     }\n\n\n     componentDidMount() {\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/login'} />)\n          }\n          this.Get_State_Data();\n          this.Get_LGA_Data();\n\n          const mytoken = authService.getCurrentUser();\n          const token = mytoken.token;\n          axios.get(\"https://gfso.chinikiguard.com/survey/api/list/survey/?rejected=yes&deployed=no\",\n               {\n                    headers:\n                    {\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n               })\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"RejectedSurvey\", JSON.stringify(res.data));\n                    }\n                    // (res);\n                    // (res.data);\n                    this.setState({\n                         Surveys: res.data,\n                         myloading: false,\n                         warningLoad: true,\n                    });\n               })\n\n     }\n     componentDidUpdate(prevProps, prevState) {\n          //reset to default state\n          const Checked_State = [1, 1, 1]\n          localStorage.setItem(\"Checked_State\", Checked_State);\n          const Checked_LGA = [1, 1, 1]\n          localStorage.setItem(\"Checked_LGA\", Checked_LGA);\n\n          // check for the value selected and show the related content\n          try {\n               if (prevState.survey_type !== this.state.survey_type) {\n                    const state = this.state.survey_type\n                    if (state) {\n                         this.setState({\n                              statesGov: state.includes(\"sg\"),\n                              lgasGov: state.includes(\"lg\"),\n                              othersGov: state.includes(\"other\"),\n                         });\n                    }\n               }\n\n          } catch (e) {\n\n               // console.log(e);\n          }\n     }\n\n     handleUpdate(e) {\n\n          e.preventDefault();\n          const SurveyId = JSON.parse(localStorage.getItem('Survey_Update_ID'))\n\n          this.setState({\n               message: \"\",\n               successful: false,\n               loading: true\n          });\n          this.form.validateAll();\n\n          if (this.checkBtn.context._errors.length === 0) {\n\n               const SurveyToUpdateInfo = JSON.parse(localStorage.getItem('SurveyToUpdateInfo'))\n\n\n\n               //convert the string to number from the [go] array i save to  localStorage for State\n               const stop_here_for_state = localStorage.getItem('Checked_State');\n               const jasus_for_state = stop_here_for_state\n\n               //convert the string to number from the [go] array i save to localStorage for LGA\n               const stop_here_for_lga = localStorage.getItem('Checked_LGA');\n               const jasus_for_lga = stop_here_for_lga\n\n               //set the states user selected\n               const states =\n                    jasus_for_state.match(/\\d+/g).map(Number)\n\n               // set the LGAs user selected\n               const lgas =\n                    jasus_for_lga.match(/\\d+/g).map(Number)\n\n\n\n\n               // newly created json\n               const body =\n               {\n                    survey_pk: SurveyToUpdateInfo.pk,\n                    title: this.state.title || SurveyToUpdateInfo.title,\n                    quarter: this.state.quarter || SurveyToUpdateInfo.quarter,\n                    year: this.state.year || SurveyToUpdateInfo.year,\n                    survey_type: this.state.survey_type || SurveyToUpdateInfo.survey_type,\n                    start_date: this.state.start_date || SurveyToUpdateInfo.start_date,\n                    due_date: this.state.due_date || SurveyToUpdateInfo.due_date,\n                    rejected: 'false',\n                    survey_type: this.state.survey_type || SurveyToUpdateInfo.survey_type,\n                    states_pk: states || SurveyToUpdateInfo.states,\n                    lgas_pk: lgas || SurveyToUpdateInfo.lgas,\n               }\n\n               // console.log(body);\n               const mytoken = authService.getCurrentUser();\n               const token = mytoken.token;\n\n               axios.post(`https://gfso.chinikiguard.com/survey/api/update/survey/respondents/`, body,\n                    {\n                         headers:\n                         {\n                              'Authorization': `Token ${token}`,\n                              'Access-Control-Allow-Origin': '*',\n                              'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                              'Access-Control-Allow-Credentials': true\n                         },\n                    },\n\n               ).then(\n\n                    response => {\n\n                         this.setState({\n                              message: \"Survey Updated Successefully\",\n                              successful: true\n                         });\n                         window.location = \"/RejectedSurvey\"\n                    },\n                    error => {\n                         const resMessage =\n                              (error.response &&\n                                   error.response.data &&\n                                   error.response.data.message) ||\n                              error.message ||\n                              error.toString();\n\n                         this.setState({\n                              loading: false,\n                              message: resMessage\n                         });\n                    }\n               );\n          } else {\n               this.setState({\n                    // loading: false\n               });\n          }\n\n     }\n\n   \n     Get_LGA_Data() {\n          const state = \"Ahmad loophole\";\n          const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n          const token = mytoken.token;\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/lga/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    params:\n                    {\n                         state: state\n                    }\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"List_Of_Lga\", JSON.stringify(res.data));\n                    }\n\n               });\n          // console.log(res.data)   \n     }\n     Get_State_Data() {\n          const state = \"Ahmad loophole\";\n          const mytoken = JSON.parse(localStorage.getItem('_WannanGfsoCbnUserNe'));\n          const token = mytoken.token;\n          axios.get(`https://gfso.chinikiguard.com/locations/api/list/state/`,\n               {\n                    headers:\n                    {\n                         'Content-Type': 'application/json',\n                         'Authorization': `Token ${token}`,\n                         'Access-Control-Allow-Origin': '*',\n                         'Access-Control-Allow-Methods': 'GET,POST,HEAD,OPTIONS',\n                         'Access-Control-Allow-Credentials': true\n                    },\n                    params:\n                    {\n                         state: state\n                    }\n               },\n          )\n               .then(res => {\n                    if (res.data) {\n                         localStorage.setItem(\"List_Of_State\", JSON.stringify(res.data));\n                    }\n\n               });\n          // console.log(res.data)   \n     }\n     render() {\n\n          if (!localStorage.getItem('_WannanGfsoCbnUserNe')) {\n               return (<Redirect to={'/'} />)\n          }\n\n          const SurveyToUpdateInfo = JSON.parse(localStorage.getItem('SurveyToUpdateInfo'));\n          const List_Of_States = JSON.parse(localStorage.getItem('List_Of_State'));\n          const List_Of_lgas = JSON.parse(localStorage.getItem('List_Of_Lga'));\n          //for checking the right selection either SG or LG\n          const { statesGov, lgasGov } = this.state;\n\n\n          return (\n               <div>\n                    <Header />\n                    <Menu />\n                    <div className=\"content-wrapper\">\n                         <br />\n                         {this.state.loadingModal && (\n                              <span className=\"\">\n                                   <div className=\"overlay-wrapper\">\n                                        <div className=\"overlay \">\n                                             <center> <img src={Logo} height=\"50px\" alt=\"\" /></center><br />\n                                             <div className=\"text-bold pt-2\"> &nbsp;&nbsp;Please wait ...</div></div>\n                                   </div>\n\n                              </span>\n                         )}\n                         <section className=\"content\">\n                              <div className=\"container-fluid\">\n\n                                   <div className=\"row\">\n\n                                        <div className=\"col-12\">\n                                             \n\n                                                  <div className=\"row\">\n                                                       <div className=\"col-12\">\n                                                            <div className=\"card\">\n                                                                 <div className=\"card-header\">\n                                                                      <h3 className=\"card-title\">Update Surveys</h3>\n                                                                      <div className=\"card-tools\">\n\n                                                                      </div>\n                                                                 </div>\n                                                                 {/* /.card-header */}\n\n\n                                                                 <div className=\"card-body\">\n\n                                                                      <Form onSubmit={this.handleUpdate} ref={c => { this.form = c; }} >\n                                                                           <div className=\"row\">\n                                                                                <div className=\"col-sm-6\">\n                                                                                     <div className=\"form-group\">\n                                                                                          <label> Title</label>\n                                                                                          <Input type=\"text\" className=\"form-control \" placeholder\n                                                                                               value={SurveyToUpdateInfo.title}\n                                                                                               onChange={this.onChangeTitle}\n                                                                                          // validations={[required]}\n                                                                                          />\n                                                                                     </div>\n                                                                                </div>\n                                                                                <div className=\"col-sm-6\">\n                                                                                     <div className=\"form-group\">\n                                                                                          <label> Quarter:{SurveyToUpdateInfo.quarter}</label>\n                                                                                          <Select className=\"form-control \" placeholder\n                                                                                               value={SurveyToUpdateInfo.quarter}\n                                                                                               onChange={this.onChangeQuarter}\n                                                                                          // validations={[required]}\n                                                                                          >\n                                                                                               <option value=\"\">Select</option>\n                                                                                               <option value=\"q1\">Q1</option>\n                                                                                               <option value=\"q2\">Q2</option>\n                                                                                               <option value=\"q3\">Q3</option>\n                                                                                               <option value=\"q4\">Q4</option>\n                                                                                          </Select>\n                                                                                     </div>\n                                                                                </div>\n                                                                           </div>\n                                                                           <div className=\"row\">\n                                                                                <div className=\"col-sm-6\">\n                                                                                     <div className=\"form-group\">\n                                                                                          {/* text input */}\n                                                                                          <label> Year</label>\n                                                                                          <Input type=\"number\" className=\"form-control \" placeholder\n                                                                                               value={SurveyToUpdateInfo.year}\n                                                                                               onChange={this.onChangeYear}\n                                                                                          // validations={[required]}\n                                                                                          />\n                                                                                     </div>\n                                                                                </div>\n                                                                                <div className=\"row\">\n                                                                                     <div className=\"col-sm-6\">\n                                                                                          {/* text input */}\n                                                                                          <div className=\"form-group\">\n                                                                                               <label> Start date</label>\n                                                                                               <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                    value={SurveyToUpdateInfo.start_date}\n                                                                                                    onChange={this.onChangeStartDate}\n                                                                                               // validations={[required]}\n                                                                                               />\n                                                                                          </div>\n                                                                                     </div>\n                                                                                     <div className=\"col-sm-6\">\n                                                                                          <div className=\"form-group\">\n                                                                                               <label> Due Date</label>\n                                                                                               <Input type=\"date\" format=\"YYYY-MM-DD\" className=\"form-control \" placeholder\n                                                                                                    value={SurveyToUpdateInfo.due_date}\n                                                                                                    onChange={this.onChangeDueDate}\n                                                                                               // validations={[required]}\n                                                                                               />\n                                                                                          </div>\n                                                                                     </div>\n                                                                                </div>\n                                                                                <div className=\"col-sm-6\">\n                                                                                     <div className=\"form-group\">\n                                                                                          <label> Survey Type</label>\n                                                                                          <Select type=\"text\" className=\"form-control \" placeholder\n                                                                                               // validations={[required]}\n                                                                                               value={this.state.survey_type}\n                                                                                               onChange={this.onChangeSurveyType}\n                                                                                          >\n                                                                                               <option value=\"\">Select</option>\n                                                                                               <option value=\"sg\">SG</option>\n                                                                                               <option value=\"lg\">LG</option>\n                                                                                               <option value=\"other\">OTHER</option>\n                                                                                          </Select>\n                                                                                     </div>\n                                                                                </div>\n                                                                           </div>\n                                                                           {statesGov && (\n                                                                                <div className=\"table-container\">\n                                                                                     <table className=\"table\">\n                                                                                          <thead>\n\n                                                                                               <tr>\n                                                                                                    <th>STATE</th>\n\n                                                                                                    <th> Check all\n                                                                                                                                         <MultiselectCheckbox\n                                                                                                              checkboxes=\".table .select-checkbox\"\n                                                                                                              sync=\".table .row\"\n                                                                                                              onNotAllChecked={(selectedMap) => {\n                                                                                                                   const fieldsList = [];\n                                                                                                                   for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                        fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                   }\n                                                                                                                   //    const go = fieldsList.join()\n                                                                                                                   localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                   // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                   // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                              }}\n                                                                                                              onAllChecked={(selectedMap) => {\n                                                                                                                   // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                   const fieldsList = [];\n                                                                                                                   for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                        fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                   }\n                                                                                                                   //    const go = fieldsList.join()\n                                                                                                                   localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                   // console.log(\" me Checked_State\",fieldsList);\n                                                                                                              }}\n                                                                                                              onAllUnchecked={(selectedMap) => {\n                                                                                                                   const fieldsList = [];\n                                                                                                                   for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                        fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                   }\n                                                                                                                   //    const go = fieldsList.replace(/\\d+/g,\"\")\n\n                                                                                                                   localStorage.setItem(\"Checked_State\", fieldsList);\n                                                                                                                   // console.log(\" me Checked_State\",fieldsList);\n                                                                                                                   // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                              }}\n\n                                                                                                         />\n                                                                                                    </th>\n                                                                                               </tr>\n\n                                                                                          </thead>\n                                                                                          <tbody className=\"table-body\">\n                                                                                               {List_Of_States.map((state, i) => (\n\n                                                                                                    <tr>\n                                                                                                         <td>{state.title}</td>\n                                                                                                         <td>\n                                                                                                              <input\n                                                                                                                   type=\"checkbox\"\n                                                                                                                   className=\"select-checkbox\"\n                                                                                                                   value={`${state.pk}`}\n                                                                                                              // onChange={this.onChangeState}\n                                                                                                              // validations={[required]}\n                                                                                                              />\n                                                                                                         </td>\n                                                                                                    </tr>\n                                                                                               ))}\n\n                                                                                          </tbody>\n\n                                                                                     </table>\n                                                                                </div>\n                                                                           )}\n                                                                           {lgasGov && (\n                                                                                <div className=\"table-container\">\n                                                                                     <table className=\"table\">\n                                                                                          <thead>\n                                                                                               <tr>\n                                                                                                    <th>LGA</th>\n\n                                                                                                    <th> Check all\n                                                                                                                                          <MultiselectCheckbox\n                                                                                                              checkboxes=\".table .select-checkbox\"\n                                                                                                              sync=\".table .row\"\n                                                                                                              onNotAllChecked={(selectedMap) => {\n                                                                                                                   const fieldsList = [];\n                                                                                                                   for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                        fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                   }\n                                                                                                                   //    const go = fieldsList.join()\n                                                                                                                   localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                   // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                   // console.log(\"Not all checked\", selectedMap.orderedByI());  \n\n                                                                                                              }}\n                                                                                                              onAllChecked={(selectedMap) => {\n                                                                                                                   // console.log(\"All checked\", selectedMap.orderedByI());\n                                                                                                                   const fieldsList = [];\n                                                                                                                   for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                        fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                   }\n                                                                                                                   //    const go = fieldsList.join()\n                                                                                                                   localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                   // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                              }}\n                                                                                                              onAllUnchecked={(selectedMap) => {\n                                                                                                                   const fieldsList = [];\n                                                                                                                   for (let i = 0; i < selectedMap.orderedByI().length; i++) {\n                                                                                                                        fieldsList.push(selectedMap.orderedByI()[i].value);\n                                                                                                                   }\n                                                                                                                   //    const go = fieldsList.join()\n                                                                                                                   localStorage.setItem(\"Checked_LGA\", fieldsList);\n                                                                                                                   // console.log(\" me Checked_LGA\",fieldsList);\n                                                                                                                   // console.log(\"All unchecked\", selectedMap.orderedByI());\n\n                                                                                                              }}\n\n                                                                                                         />\n                                                                                                    </th>\n                                                                                               </tr>\n                                                                                          </thead>\n                                                                                          <tbody className=\"table-body\">\n                                                                                               {List_Of_lgas && List_Of_lgas.map(lga => (\n                                                                                                    <tr>\n                                                                                                         <td>{lga.title}</td>\n                                                                                                         <td>\n                                                                                                              <input\n                                                                                                                   type=\"checkbox\"\n                                                                                                                   className=\"select-checkbox\"\n                                                                                                                   value={`${lga.pk}`}\n                                                                                                              // onChange={this.onChangeLgas}\n                                                                                                              // validations={[required]}\n                                                                                                              />\n                                                                                                         </td>\n                                                                                                    </tr>\n                                                                                               ))}\n\n                                                                                          </tbody>\n                                                                                     </table>\n                                                                                </div>\n                                                                           )}\n                                                                           <center>\n                                                                                {this.state.message && (\n                                                                                     <div className=\"pb-5\" >\n                                                                                          <div\n                                                                                               className={\n                                                                                                    this.state.successful\n                                                                                                         ? \"alert alert-success\"\n                                                                                                         : \"alert alert-danger\"\n                                                                                               }\n                                                                                               role=\"alert\"\n                                                                                          >\n                                                                                               <h3 > {this.state.message}</h3>\n                                                                                          </div>\n                                                                                     </div>\n                                                                                )}</center>\n                                                                           <center>\n\n                                                                                     \n                                                                                     <button\n                                                                                          disabled={this.state.AdoptSurveyloading}\n                                                                                          className=\"btn btn-info btn-lg float-right\"\n                                                                                     >\n\n                                                                                          {this.state.AdoptSurveyloading && (\n                                                                                               <span className=\"spinner-grow spinner-grow-sm\"></span>\n                                                                                          )}\n                                                                                                                     Update \n                                                                                                                     </button>\n\n                                                                           </center>\n                                                                           <CheckButton\n                                                                                style={{ display: \"none\" }}\n                                                                                ref={c => {\n                                                                                     this.checkBtn = c;\n                                                                                }}\n                                                                           />\n\n                                                                      </Form>\n\n                                                                 </div>\n\n                                                                 {/* /.card-body */}\n                                                            </div>\n                                                            {/* /.card */}\n                                                       </div>\n                                                  </div>\n\n                                             \n                                        </div>\n\n\n                                   </div>\n\n\n                              </div>\n\n\n                         </section>\n\n                    </div>\n                    <Footer />\n\n               </div>\n          );\n     }\n}\n\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\nimport Landing from './Landing';\r\n// import { FormBuilder } from './FormBuilder';\r\nimport ViewSurvey from './ViewSurvey';\r\nimport CompleteSurvey from './CompleteSurvey';\r\nimport CreateNewUser from './CreateNewUser';\r\nimport EditTemplate from './EditTemplate';\r\nimport Surveys from './Surveys';\r\nimport AvailableSurvey from './AvailableSurvey';\r\nimport CategoryView from './CategoryView';\r\nimport ListResponses from './ListResponses';\r\nimport ResponseTable from './ResponseTable';\r\nimport UserProfile from './UserProfile';\r\nimport ResponseByUser from './ResponseByUser';\r\nimport Deploy from './Deploy';\r\nimport ReviewRespondent from './ReviewRespondent';\r\nimport ListToApprove from './ListToApprove';\r\nimport ApproveTemplate from './ApproveTemplate';\r\nimport ApproveResponse from './ApproveResponse';\r\nimport ValidateResponse from './ValidateResponse';\r\nimport RespondentList from './RespondentList';\r\nimport ApproveSurvey from './ApproveSurvey';\r\nimport TemplateToApprove from './TemplateToApprove';\r\nimport ApprovedSurvey from './ApprovedSurvey';\r\nimport ApprovedTemplate from './ApprovedTemplate';\r\nimport RejectedTemplate from './RejectedTemplate';\r\nimport RejectedSurvey from './RejectedSurvey';\r\nimport RespondentInfo from './RespondentInfo';\r\nimport Notifications from './Notifications';\r\nimport SurveyToDeploy from './SurveyToDeploy';\r\nimport DeploySurvey from './DeploySurvey';\r\nimport SurveyRejected from './SurveyRejected';\r\nimport SurveyApproved from './SurveyApproved';\r\nimport TemplateApproved from './TemplateApproved';\r\nimport TemplateRejected from './TemplateRejected';\r\nimport ApproveThisTemplate from './ApproveThisTemplate';\r\nimport ApproveThisSurvey from './ApproveThisSurvey';\r\nimport ViewNotification from './ViewNotification';\r\nimport UploadSupporting from './UploadSupporting';\r\nimport ReviewResponder from './ReviewResponder';\r\nimport ApproveResponder from './ApproveResponder';\r\nimport SearchRecurrent from './SearchRecurrent';\r\nimport RecurrentCapitalExpenditure from './RecurrentCapitalExpenditure';\r\nimport COFOGreport from './COFOGreport';\r\nimport SearchCOFOG from './SearchCOFOG';\r\nimport SearchSSGFF from './SearchSSGFF';\r\nimport SSGFFreport from './SSGFFreport';\r\nimport SearchPensiondeduction from './SearchPensiondeduction';\r\nimport PensiondeductionReport from './PensiondeductionReport';\r\nimport LGEONSPWReport from './LGEONSPWReport';\r\nimport SearchLGEONSPW from './SearchLGEONSPW';\r\nimport SurveyAttachment from './SurveyAttachment';\r\nimport Allsurveys from './Allsurveys';\r\nimport ResponseEdit from './ResponseEdit';\r\nimport test from './test';\r\nimport PensionSurvey from './PensionSurvey';\r\nimport PensiondeductionSurveyList from './PensiondeductionSurveyList';\r\nimport CompletePensiondeduction from './CompletePensiondeduction';\r\nimport PensionPending from './PensionPending';\r\nimport ApprovedPension from './ApprovedPension';\r\nimport RejectedPension from './RejectedPension';\r\nimport ApprovePensionSurvey from './ApprovePensionSurvey';\r\nimport ListToApprovePension from './ListToApprovePension';\r\nimport SurveyToUpdate from './SurveyToUpdate';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst  Content = () => {\r\n    return (\r\n       <Switch>\r\n           <Route exact path=\"/\" component={Landing}/>\r\n           <Route  path=\"/landing\" component={Landing}/>\r\n\r\n\r\n           <Route exact path=\"/\" component={Login}/>\r\n           <Route  path=\"/login\" component={Login}/>\r\n\r\n \r\n           <Route exact path=\"/\" component={Dashboard}/>\r\n           <Route  path=\"/dashboard\" component={Dashboard}/>\r\n\r\n          \r\n           {/* <Route exact path=\"/\" component={FormBuilder}/>\r\n           <Route  path=\"/FormBuilder\" component={FormBuilder}/>\r\n\r\n           */}\r\n           <Route exact path=\"/\" component={ViewSurvey}/>\r\n           <Route  path=\"/ViewSurvey\" component={ViewSurvey}/>\r\n           \r\n           <Route exact path=\"/\" component={CompleteSurvey}/>\r\n           <Route  path=\"/CompleteSurvey\" component={CompleteSurvey}/>\r\n           \r\n           <Route exact path=\"/\" component={CreateNewUser}/>\r\n           <Route  path=\"/Register\" component={CreateNewUser}/>\r\n\r\n          <Route exact path=\"/\" component={EditTemplate}/>\r\n           <Route  path=\"/EditTemplate\" component={EditTemplate}/>\r\n           \r\n           <Route exact path=\"/\" component={Surveys}/>\r\n           <Route  path=\"/Surveys\" component={Surveys}/>\r\n           \r\n           <Route exact path=\"/\" component={AvailableSurvey}/>\r\n           <Route  path=\"/AvailableSurvey\" component={AvailableSurvey}/>\r\n\r\n           \r\n           <Route exact path=\"/\" component={CategoryView}/>\r\n           <Route  path=\"/CategoryView\" component={CategoryView}/>\r\n\r\n           <Route exact path=\"/\" component={ListResponses}/>\r\n           <Route  path=\"/ListResponses\" component={ListResponses}/>\r\n           \r\n           <Route exact path=\"/\" component={ResponseTable}/>\r\n           <Route  path=\"/ResponseTable\" component={ResponseTable}/>\r\n\r\n           <Route exact path=\"/\" component={UserProfile}/>\r\n           <Route  path=\"/Profile\" component={UserProfile}/>\r\n\r\n           <Route exact path=\"/\" component={ResponseByUser}/>\r\n           <Route  path=\"/ResponseByUser\" component={ResponseByUser}/>\r\n\r\n           <Route exact path=\"/\" component={Deploy}/>\r\n           <Route  path=\"/Deploy\" component={Deploy}/>\r\n\r\n           <Route exact path=\"/\" component={ReviewRespondent}/>\r\n           <Route  path=\"/ReviewRespondent\" component={ReviewRespondent}/>\r\n\r\n           <Route exact path=\"/\" component={ListToApprove}/>\r\n           <Route  path=\"/ListToApprove\" component={ListToApprove}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveTemplate}/>\r\n           <Route  path=\"/ApproveTemplate\" component={ApproveTemplate}/>\r\n\r\n         \r\n           <Route exact path=\"/\" component={ApproveResponse}/>\r\n           <Route  path=\"/ApproveResponse\" component={ApproveResponse}/>\r\n\r\n           <Route exact path=\"/\" component={ValidateResponse}/>\r\n           <Route  path=\"/ValidateResponse\" component={ValidateResponse}/>\r\n\r\n           <Route exact path=\"/\" component={RespondentList}/>\r\n           <Route  path=\"/RespondentList\" component={RespondentList}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveSurvey}/>\r\n           <Route  path=\"/ApproveSurvey\" component={ApproveSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={TemplateToApprove}/>\r\n           <Route  path=\"/TemplateToApprove\" component={TemplateToApprove}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedSurvey}/>\r\n           <Route  path=\"/ApprovedSurvey\" component={ApprovedSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedTemplate}/>\r\n           <Route  path=\"/ApprovedTemplate\" component={ApprovedTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedTemplate}/>\r\n           <Route  path=\"/RejectedTemplate\" component={RejectedTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedSurvey}/>\r\n           <Route  path=\"/RejectedSurvey\" component={RejectedSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={RespondentInfo}/>\r\n           <Route  path=\"/RespondentInfo\" component={RespondentInfo}/>\r\n\r\n           <Route exact path=\"/\" component={Notifications}/>\r\n           <Route  path=\"/Notifications\" component={Notifications}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyToDeploy}/>\r\n           <Route  path=\"/SurveyToDeploy\" component={SurveyToDeploy}/>\r\n\r\n           <Route exact path=\"/\" component={DeploySurvey}/>\r\n           <Route  path=\"/DeploySurvey\" component={DeploySurvey}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyRejected}/>\r\n           <Route  path=\"/SurveyRejected\" component={SurveyRejected}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyApproved}/>\r\n           <Route  path=\"/SurveyApproved\" component={SurveyApproved}/>\r\n           \r\n           <Route exact path=\"/\" component={TemplateApproved}/>\r\n           <Route  path=\"/TemplateApproved\" component={TemplateApproved}/>\r\n \r\n           <Route exact path=\"/\" component={TemplateRejected}/>\r\n           <Route  path=\"/TemplateRejected\" component={TemplateRejected}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveThisTemplate}/>\r\n           <Route  path=\"/ApproveThisTemplate\" component={ApproveThisTemplate}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveThisSurvey}/>\r\n           <Route  path=\"/ApproveThisSurvey\" component={ApproveThisSurvey}/>\r\n\r\n           <Route exact path=\"/\" component={ViewNotification}/>\r\n           <Route  path=\"/ViewNotification\" component={ViewNotification}/>\r\n\r\n           <Route exact path=\"/\" component={UploadSupporting}/>\r\n           <Route  path=\"/UserUploads\" component={UploadSupporting}/>\r\n\r\n           <Route exact path=\"/\" component={ReviewResponder}/>\r\n           <Route  path=\"/ReviewResponder\" component={ReviewResponder}/>\r\n\r\n           <Route exact path=\"/\" component={ApproveResponder}/>\r\n           <Route  path=\"/ApproveResponder\" component={ApproveResponder}/>\r\n\r\n           <Route exact path=\"/\" component={SearchRecurrent}/>\r\n           <Route  path=\"/GenerateRecurrent\" component={SearchRecurrent}/>\r\n\r\n           <Route exact path=\"/\" component={RecurrentCapitalExpenditure}/>\r\n           <Route  path=\"/RecurrentCapitalExpenditure\" component={RecurrentCapitalExpenditure}/>\r\n\r\n           <Route exact path=\"/\" component={COFOGreport}/>\r\n           <Route  path=\"/COFOGreport\" component={COFOGreport}/>\r\n\r\n           <Route exact path=\"/\" component={SearchCOFOG}/>\r\n           <Route  path=\"/SearchCOFOG\" component={SearchCOFOG}/>\r\n\r\n           <Route exact path=\"/\" component={SearchSSGFF}/>\r\n           <Route  path=\"/SearchSSGFF\" component={SearchSSGFF}/>\r\n\r\n           <Route exact path=\"/\" component={SSGFFreport}/>\r\n           <Route  path=\"/SSGFFreport\" component={SSGFFreport}/>\r\n\r\n           <Route exact path=\"/\" component={SearchPensiondeduction}/>\r\n           <Route  path=\"/SearchPensiondeduction\" component={SearchPensiondeduction}/>\r\n\r\n           <Route exact path=\"/\" component={PensiondeductionReport}/>\r\n           <Route  path=\"/PensiondeductionReport\" component={PensiondeductionReport}/>\r\n\r\n           <Route exact path=\"/\" component={LGEONSPWReport}/>\r\n           <Route  path=\"/LGEONSPWReport\" component={LGEONSPWReport}/>\r\n\r\n           <Route exact path=\"/\" component={SearchLGEONSPW}/>\r\n           <Route  path=\"/SearchLGEONSPW\" component={SearchLGEONSPW}/>\r\n\r\n           \r\n           <Route exact path=\"/\" component={SurveyAttachment}/>\r\n           <Route  path=\"/SurveyAttachment\" component={SurveyAttachment}/>\r\n\r\n           <Route exact path=\"/\" component={Allsurveys}/>\r\n           <Route  path=\"/Allsurveys\" component={Allsurveys}/>\r\n\r\n           <Route exact path=\"/\" component={ResponseEdit}/>\r\n           <Route  path=\"/ResponseEdit\" component={ResponseEdit}/>\r\n\r\n           <Route exact path=\"/\" component={test}/>\r\n           <Route  path=\"/test\" component={test}/>\r\n\r\n           <Route exact path=\"/\" component={PensionSurvey}/>\r\n           <Route  path=\"/PensionSurvey\" component={PensionSurvey}/>\r\n\r\n           \r\n           <Route exact path=\"/\" component={PensiondeductionSurveyList}/>\r\n           <Route  path=\"/PensiondeductionSurveyList\" component={PensiondeductionSurveyList}/>\r\n\r\n            \r\n           <Route exact path=\"/\" component={CompletePensiondeduction}/>\r\n           <Route  path=\"/CompletePensiondeduction\" component={CompletePensiondeduction}/>\r\n\r\n           <Route exact path=\"/\" component={PensionPending}/>\r\n           <Route  path=\"/PensionPending\" component={PensionPending}/>\r\n\r\n           <Route exact path=\"/\" component={PensionPending}/>\r\n           <Route  path=\"/PensionPending\" component={PensionPending}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovedPension}/>\r\n           <Route  path=\"/ApprovedPension\" component={ApprovedPension}/>\r\n\r\n           <Route exact path=\"/\" component={RejectedPension}/>\r\n           <Route  path=\"/RejectedPension\" component={RejectedPension}/>\r\n\r\n           <Route exact path=\"/\" component={ApprovePensionSurvey}/>\r\n           <Route  path=\"/ApprovePensionSurvey\" component={ApprovePensionSurvey}/>\r\n\r\n\r\n           <Route exact path=\"/\" component={ListToApprovePension}/>\r\n           <Route  path=\"/ListToApprovePension\" component={ListToApprovePension}/>\r\n\r\n           <Route exact path=\"/\" component={SurveyToUpdate}/>\r\n           <Route  path=\"/SurveyToUpdate\" component={SurveyToUpdate}/>\r\n\r\n\r\n           \r\n           \r\n       </Switch>\r\n\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default Content;\r\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom';\nimport Content from './components/Content'\n\n\nexport default function App() {\n    \n  return (\n    <div>\n      <BrowserRouter>\n    \n      <Content />\n\n      </BrowserRouter>\n\n    </div>\n    \n  ) \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-form-builder2/dist/app.css';\nimport App from './app';\n// import DemoBar from './components/demobar';\nimport * as serviceWorker from './serviceWorker';\n// import * as variables from './components/variables';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <App />,\n  document.getElementById('form-builder'),\n);\n\n// ReactDOM.render(\n//   <DemoBar variables={variables} />,\n//   document.getElementById('demo-bar'),\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}